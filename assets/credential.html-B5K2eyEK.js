import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-Dl67cLp_.js";const e={},p=t(`<h2 id="what-is-credential" tabindex="-1"><a class="header-anchor" href="#what-is-credential"><span>What is Credential</span></a></h2><p>在Web开发中，凭证（Credential）是指用于验证用户身份的信息。这通常包括用户名和密码，但也可以是其他形式的身份验证数据，如OAuth令牌或公钥。</p><ol><li><p>凭证（Credential）：</p><ul><li>用于用户身份验证的基本信息。</li><li>通常在用户登录时由用户输入（如用户名和密码）。</li><li>可以通过Credential Management API进行存储和管理，以便简化后续的登录流程。</li></ul></li><li><p>会话（Session）：</p><ul><li>是服务器端用于跟踪用户状态的机制。</li><li>当用户成功登录后，服务器会创建一个会话，并分配一个唯一的会话ID给用户。</li><li>这个会话ID通常存储在服务器的内存或数据库中。</li><li>会话在用户关闭浏览器或会话超时后会失效。</li></ul></li><li><p>Cookie：</p><ul><li>是存储在用户浏览器中的小型数据文件。</li><li>可以用来持久化会话ID，从而在用户关闭浏览器后仍然可以保持登录状态（通过持久化cookie）。</li><li>也可以存储一些不敏感的数据，如用户偏好设置。</li><li>HTTP请求时，浏览器会自动将相关的Cookie发送到服务器，以维持会话状态。</li></ul></li></ol><h2 id="credential-management-api" tabindex="-1"><a class="header-anchor" href="#credential-management-api"><span>Credential Management API</span></a></h2><p>是一组用于处理用户凭证（例如密码和身份验证信息）的Web API。它允许Web应用程序简化用户登录流程，通过提供统一的方法来存储、检索和删除用户凭证，从而改善用户体验。</p><blockquote><p>需要注意的是，Credential Management API在不同浏览器中的支持情况可能有所不同，使用前请确保目标浏览器支持此API。</p></blockquote><h3 id="存储凭证" tabindex="-1"><a class="header-anchor" href="#存储凭证"><span>存储凭证</span></a></h3><p>假设用户登录成功后，我们想要将用户的凭证保存下来，以便下次用户访问时可以自动填充登录表单。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 假设我们有用户的凭证</span>
<span class="token keyword">const</span> cred <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PasswordCredential</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;user@example.com&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 用户名或电子邮件</span>
  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&quot;password123&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 用户密码</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 可选：用户全名</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用 navigator.credentials.store() 方法来存储凭证</span>
navigator<span class="token punctuation">.</span>credentials
  <span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span>cred<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;凭证已存储&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;存储凭证时发生错误:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检索凭证" tabindex="-1"><a class="header-anchor" href="#检索凭证"><span>检索凭证</span></a></h3><p>当用户再次访问页面时，我们可以使用 navigator.credentials.get() 方法来检索之前存储的凭证，并自动填充登录表单。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>navigator<span class="token punctuation">.</span>credentials
  <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 指定要检索密码凭证</span>
    <span class="token literal-property property">mediation</span><span class="token operator">:</span> <span class="token string">&quot;required&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 强制用户选择凭证，而不是自动使用</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cred</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cred<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 将凭证填充到登录表单中</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> cred<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> cred<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;凭证已检索&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;没有检索到凭证&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;检索凭证时发生错误:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除凭证" tabindex="-1"><a class="header-anchor" href="#删除凭证"><span>删除凭证</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>navigator<span class="token punctuation">.</span>credentials
  <span class="token punctuation">.</span><span class="token function">preventSilentAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;凭证已删除&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;删除凭证时发生错误:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),o=[p];function i(c,l){return a(),s("div",null,o)}const d=n(e,[["render",i],["__file","credential.html.vue"]]),k=JSON.parse(`{"path":"/cs-basics/network/authentication/credential.html","title":"网页凭证","lang":"zh-CN","frontmatter":{"title":"网页凭证","category":"network","tag":["credential"],"description":"What is Credential 在Web开发中，凭证（Credential）是指用于验证用户身份的信息。这通常包括用户名和密码，但也可以是其他形式的身份验证数据，如OAuth令牌或公钥。 凭证（Credential）： 用于用户身份验证的基本信息。 通常在用户登录时由用户输入（如用户名和密码）。 可以通过Credential Management...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/learning/cs-basics/network/authentication/credential.html"}],["meta",{"property":"og:site_name","content":"Mua'dib Guide "}],["meta",{"property":"og:title","content":"网页凭证"}],["meta",{"property":"og:description","content":"What is Credential 在Web开发中，凭证（Credential）是指用于验证用户身份的信息。这通常包括用户名和密码，但也可以是其他形式的身份验证数据，如OAuth令牌或公钥。 凭证（Credential）： 用于用户身份验证的基本信息。 通常在用户登录时由用户输入（如用户名和密码）。 可以通过Credential Management..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-20T14:49:15.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:tag","content":"credential"}],["meta",{"property":"article:modified_time","content":"2024-05-20T14:49:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网页凭证\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-20T14:49:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"What is Credential","slug":"what-is-credential","link":"#what-is-credential","children":[]},{"level":2,"title":"Credential Management API","slug":"credential-management-api","link":"#credential-management-api","children":[{"level":3,"title":"存储凭证","slug":"存储凭证","link":"#存储凭证","children":[]},{"level":3,"title":"检索凭证","slug":"检索凭证","link":"#检索凭证","children":[]},{"level":3,"title":"删除凭证","slug":"删除凭证","link":"#删除凭证","children":[]}]}],"git":{"createdTime":1716216555000,"updatedTime":1716216555000,"contributors":[{"name":"Tony Gong","email":"a280880907@163.com","commits":1}]},"readingTime":{"minutes":2.39,"words":718},"filePathRelative":"cs-basics/network/authentication/credential.md","localizedDate":"2024年5月20日","excerpt":"<h2>What is Credential</h2>\\n<p>在Web开发中，凭证（Credential）是指用于验证用户身份的信息。这通常包括用户名和密码，但也可以是其他形式的身份验证数据，如OAuth令牌或公钥。</p>\\n<ol>\\n<li>\\n<p>凭证（Credential）：</p>\\n<ul>\\n<li>用于用户身份验证的基本信息。</li>\\n<li>通常在用户登录时由用户输入（如用户名和密码）。</li>\\n<li>可以通过Credential Management API进行存储和管理，以便简化后续的登录流程。</li>\\n</ul>\\n</li>\\n<li>\\n<p>会话（Session）：</p>\\n<ul>\\n<li>是服务器端用于跟踪用户状态的机制。</li>\\n<li>当用户成功登录后，服务器会创建一个会话，并分配一个唯一的会话ID给用户。</li>\\n<li>这个会话ID通常存储在服务器的内存或数据库中。</li>\\n<li>会话在用户关闭浏览器或会话超时后会失效。</li>\\n</ul>\\n</li>\\n<li>\\n<p>Cookie：</p>\\n<ul>\\n<li>是存储在用户浏览器中的小型数据文件。</li>\\n<li>可以用来持久化会话ID，从而在用户关闭浏览器后仍然可以保持登录状态（通过持久化cookie）。</li>\\n<li>也可以存储一些不敏感的数据，如用户偏好设置。</li>\\n<li>HTTP请求时，浏览器会自动将相关的Cookie发送到服务器，以维持会话状态。</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}`);export{d as comp,k as data};
