import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as t,e as l}from"./app-D0cmWqTO.js";const o="/learning/assets/delphi-BKIZFtIS.jpg",n="/learning/assets/cocomo-formula-BGJD603L.png",a={},c=l('<h2 id="基本内容" tabindex="-1"><a class="header-anchor" href="#基本内容"><span>基本内容</span></a></h2><p>在项目实施之前，在计划过程中完成</p><ul><li>规模估算</li><li>工作量估算</li><li>进度估算</li><li>风险估算</li><li>其他估算</li></ul><h2 id="基本估算方法" tabindex="-1"><a class="header-anchor" href="#基本估算方法"><span>基本估算方法</span></a></h2><h2 id="软件规模估算" tabindex="-1"><a class="header-anchor" href="#软件规模估算"><span>软件规模估算</span></a></h2><h3 id="德尔菲法" tabindex="-1"><a class="header-anchor" href="#德尔菲法"><span>德尔菲法</span></a></h3><figure><img src="'+o+'" alt="" tabindex="0"><figcaption></figcaption></figure><h3 id="代码行估算法" tabindex="-1"><a class="header-anchor" href="#代码行估算法"><span>代码行估算法</span></a></h3><p>LOC指所有可执行的源代码行数，包括控制语句、数据定义、数据类型声明、等价声明、格式声明等</p><ul><li>SLOC (single line of code)</li><li>KLOC (thousand lines of code)</li><li>LLOC (logical line of code)</li><li>PLOC (physical line of code)</li><li>NCLOC (non-commented line of code)</li><li>DSI (delivered source instruction)</li></ul><h2 id="工作量估算" tabindex="-1"><a class="header-anchor" href="#工作量估算"><span>工作量估算</span></a></h2><h3 id="cocomo模型" tabindex="-1"><a class="header-anchor" href="#cocomo模型"><span>COCOMO模型</span></a></h3><p>构造性成本模型(COCOMO：constructive cost model)是一种精确、易于使用的基于模型的成本估算方法：</p><ol><li>基本COCOMO模型，静态单变量模型，用 <strong>已估算出来的源代码行数(LOC)</strong> 为自变量的函数来计算软件开发工作量。</li><li>中间COCOMO模型，在用LOC为自变量的函数计算软件开发工作量的基础上，再用涉及产品、硬件、人员、项目等方面属性的影响因素来调整工作量的估算。</li><li>详细COCOMO模型，包括中间COCOMO模型的所有特性，但用上述各种影响因素调整工作量估算时，还要考虑对软件工程过程中分析、设计等各步骤的影响。</li></ol><h3 id="cocomo基本变量" tabindex="-1"><a class="header-anchor" href="#cocomo基本变量"><span>COCOMO基本变量</span></a></h3><ol><li>DSI(源指令条数)，定义为代码行数，包括除注释行以外的全部代码。若一行有两个语句，则算做一条指令。KDSI即为千代码行数。</li><li>MM(估算单位为人月)表示开发工作量。</li><li>TDEV(估算单位为月)表示开发进度，由工作量决定。</li></ol><h3 id="cocomo计算公式" tabindex="-1"><a class="header-anchor" href="#cocomo计算公式"><span>COCOMO计算公式</span></a></h3><figure><img src="'+n+'" alt="" tabindex="0"><figcaption></figcaption></figure>',18),r=[c];function s(d,p){return i(),t("div",null,r)}const g=e(a,[["render",s],["__file","project-estimate.html.vue"]]),O=JSON.parse(`{"path":"/software-project/project-management/project-estimate.html","title":"项目估算","lang":"zh-CN","frontmatter":{"title":"项目估算","description":"基本内容 在项目实施之前，在计划过程中完成 规模估算 工作量估算 进度估算 风险估算 其他估算 基本估算方法 软件规模估算 德尔菲法 代码行估算法 LOC指所有可执行的源代码行数，包括控制语句、数据定义、数据类型声明、等价声明、格式声明等 SLOC (single line of code) KLOC (thousand lines of code) ...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/learning/software-project/project-management/project-estimate.html"}],["meta",{"property":"og:site_name","content":"Mua'dib Guide "}],["meta",{"property":"og:title","content":"项目估算"}],["meta",{"property":"og:description","content":"基本内容 在项目实施之前，在计划过程中完成 规模估算 工作量估算 进度估算 风险估算 其他估算 基本估算方法 软件规模估算 德尔菲法 代码行估算法 LOC指所有可执行的源代码行数，包括控制语句、数据定义、数据类型声明、等价声明、格式声明等 SLOC (single line of code) KLOC (thousand lines of code) ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-02T14:29:03.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-09-02T14:29:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目估算\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-02T14:29:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"基本内容","slug":"基本内容","link":"#基本内容","children":[]},{"level":2,"title":"基本估算方法","slug":"基本估算方法","link":"#基本估算方法","children":[]},{"level":2,"title":"软件规模估算","slug":"软件规模估算","link":"#软件规模估算","children":[{"level":3,"title":"德尔菲法","slug":"德尔菲法","link":"#德尔菲法","children":[]},{"level":3,"title":"代码行估算法","slug":"代码行估算法","link":"#代码行估算法","children":[]}]},{"level":2,"title":"工作量估算","slug":"工作量估算","link":"#工作量估算","children":[{"level":3,"title":"COCOMO模型","slug":"cocomo模型","link":"#cocomo模型","children":[]},{"level":3,"title":"COCOMO基本变量","slug":"cocomo基本变量","link":"#cocomo基本变量","children":[]},{"level":3,"title":"COCOMO计算公式","slug":"cocomo计算公式","link":"#cocomo计算公式","children":[]}]}],"git":{"createdTime":1725287343000,"updatedTime":1725287343000,"contributors":[{"name":"tonygong","email":"280880907@163.com","commits":1}]},"readingTime":{"minutes":1.45,"words":436},"filePathRelative":"software-project/project-management/project-estimate.md","localizedDate":"2024年9月2日","excerpt":"<h2>基本内容</h2>\\n<p>在项目实施之前，在计划过程中完成</p>\\n<ul>\\n<li>规模估算</li>\\n<li>工作量估算</li>\\n<li>进度估算</li>\\n<li>风险估算</li>\\n<li>其他估算</li>\\n</ul>\\n<h2>基本估算方法</h2>\\n<h2>软件规模估算</h2>\\n<h3>德尔菲法</h3>\\n<figure><figcaption></figcaption></figure>\\n<h3>代码行估算法</h3>\\n<p>LOC指所有可执行的源代码行数，包括控制语句、数据定义、数据类型声明、等价声明、格式声明等</p>\\n<ul>\\n<li>SLOC (single line of code)</li>\\n<li>KLOC (thousand lines of code)</li>\\n<li>LLOC (logical line of code)</li>\\n<li>PLOC (physical line of code)</li>\\n<li>NCLOC (non-commented line of code)</li>\\n<li>DSI (delivered source instruction)</li>\\n</ul>","autoDesc":true}`);export{g as comp,O as data};
