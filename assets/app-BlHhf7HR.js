function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/home.html-Dw6bhkfZ.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/index.html-CzKwfPYn.js","assets/basis.html-QMrimd-S.js","assets/dog-that-copies-other-people-essay.html-C1nXc2KH.js","assets/feelings-after-one-month-of-induction-training.html-Beufeq7r.js","assets/feelings-of-half-a-year-from-graduation-to-entry.html-BLbZymN8.js","assets/internet-addiction-teenager.html-CcIlc45l.js","assets/javaguide-100k-star.html-DlBiZdWd.js","assets/my-article-was-stolen-and-made-into-video-and-it-became-popular.html-BcFUcGeV.js","assets/my-college-life.html-OSJbGrEW.js","assets/index.html-BHLjbOUR.js","assets/writing-technology-blog-six-years.html-CY2nSsqd.js","assets/zhishixingqiu-two-years.html-Br2OixXn.js","assets/cs-basics.html-B8_l2GP9.js","assets/database.html-CpJSt7uZ.js","assets/distributed-system.html-CenH7dR_.js","assets/java.html-BeWdZKRw.js","assets/index.html-D-ThHWda.js","assets/search-engine.html-60rkLFqT.js","assets/software-quality.html-D6k4zRYo.js","assets/array.html-CMgeJTux.js","assets/function.html-BJ1sbst7.js","assets/headFile.html-ZxvCCQut.js","assets/stream.html-BrhYkKVV.js","assets/basis.html-DxW8KzJv.js","assets/character-set.html-Ce4pcbX1.js","assets/nosql.html-nrkJNPwJ.js","assets/api-gateway.html-D8FL_RjX.js","assets/distributed-configuration-center.html-C2V2XrYB.js","assets/distributed-id-design.html-CyTAjfKd.js","assets/distributed-id.html-BRQnPvuV.js","assets/distributed-lock-implementations.html-HapHCR2B.js","assets/distributed-lock.html-DIYIFCHI.js","assets/distributed-transaction.html-tbuwnonm.js","assets/spring-cloud-gateway-questions.html-RYfuIEC-.js","assets/fallback-and-circuit-breaker.html-CTPHee9Y.js","assets/high-availability-system-design.html-D_SREUHA.js","assets/limit-request.html-CJOv1FYa.js","assets/performance-test.html-DZLUy0XS.js","assets/redundancy.html-N6WHihMF.js","assets/timeout-and-retry.html-mfcs4q5Q.js","assets/cdn.html-BBaA5A4e.js","assets/data-cold-hot-separation.html-67TbMuWk.js","assets/deep-pagination-optimization.html-DbfLL4rf.js","assets/load-balancing.html-DMCyFVvy.js","assets/read-and-write-separation-and-library-subtable.html-BEYoiCDs.js","assets/sql-optimization.html-D2WNE4IV.js","assets/index.html-Dq-IcwNn.js","assets/interview-experience.html-C9xF4hGO.js","assets/key-points-of-interview.html-lwPJ6A5W.js","assets/project-experience-guide.html-C3B6q_IC.js","assets/resume-guide.html-tlut6ON3.js","assets/self-test-of-common-interview-questions.html-SNxlkiy6.js","assets/teach-you-how-to-prepare-for-the-interview-hand-in-hand.html-CiQhFVGs.js","assets/contribution-guideline.html-BLwLzSV0.js","assets/faq.html-Nw3Wos70.js","assets/history.html-BTMrIb4r.js","assets/intro.html-BgWImNW7.js","assets/use-suggestion.html-CScHCY1_.js","assets/index.html-cQx8Fnsb.js","assets/bash.html-C64PONNr.js","assets/basis.html-kW_LTPU7.js","assets/daemon.html-C4YCF3dp.js","assets/nginx.html-BSHhpKAg.js","assets/rpm.html-C8A1pw0_.js","assets/usergroup.html-CR64iqiB.js","assets/basis.html-0sJQPI6v.js","assets/basis.html-Dq_7EgBS.js","assets/paper-related.html-_3Exe2x4.js","assets/package-manager.html-D6bQeSpa.js","assets/big-data.html-DDMKKLdc.js","assets/machine-learning.html-DsVjIl4B.js","assets/practical-project.html-CNfeIW-e.js","assets/index.html-BzinSwV1.js","assets/system-design.html-Ct-dhxls.js","assets/tool-library.html-Da_VO7GK.js","assets/tools.html-BkAogtD1.js","assets/tutorial.html-BJ_zV91d.js","assets/WebAPI.html-D2ZJKTGg.js","assets/general-projects.html-BiHjEUG-.js","assets/index.html-BmNVKYOy.js","assets/basis.html-DadKWyid.js","assets/J2EE基础知识.html-CVSyFKVk.js","assets/design-pattern.html-BGelByW8.js","assets/schedule-task.html-DQbhxDBI.js","assets/system-design-questions.html-Cn1zuSlD.js","assets/web-real-time-message-push.html-rXEOg32l.js","assets/git.html-aUNbHnEo.js","assets/webrtc.html-CwSaAYP6.js","assets/back-end-interview-high-frequency-system-design-and-scenario-questions.html-CLWFU9NC.js","assets/handwritten-rpc-framework.html-Cz7nMrKl.js","assets/java-mian-shi-zhi-bei.html-AnZmfncS.js","assets/index.html-9TVFDCL-.js","assets/source-code-reading.html-B4-pkzXq.js","assets/MQTT.html-DoFrBEvv.js","assets/10-classical-sorting-algorithms.html-BYtk__Go.js","assets/Practice.html-CIj7yo96.js","assets/classical-algorithm-problems-recommendations.html-CApHBnYU.js","assets/common-data-structures-leetcode-recommendations.html-B513FJDy.js","assets/lanqiao.html-DJjf-L9d.js","assets/linkedlist-algorithm-problems.html-DZsyM9IS.js","assets/string-algorithm-problems.html-Iez2zfgj.js","assets/the-sword-refers-to-offer.html--LX83phg.js","assets/bloom-filter.html-CLeEfKxv.js","assets/graph.html-Bg05qX6h.js","assets/heap.html-CoVTjKVY.js","assets/linear-data-structure.html-BgvCVB95.js","assets/red-black-tree.html-DnrUazuz.js","assets/tree.html-D6krl-oQ.js","assets/application-layer-protocol.html-DTzc16va.js","assets/arp.html-ZGPGFvn4.js","assets/2008410143049281-9cZcvPqg.js","assets/computer-network-xiexiren-summary.html-8ZWUhonQ.js","assets/dns.html-BSrPKllf.js","assets/http-status-codes.html-aQ2cFY3Z.js","assets/http-vs-https.html-DfefwFGi.js","assets/http1.0-vs-http1.1.html-BqGsKoFX.js","assets/nat.html-ArLF-Mas.js","assets/network-attack-means.html-DjWiqaTM.js","assets/osi-and-tcp-ip-model.html-BKML4vkM.js","assets/nerwork-layer-protocol-C6cnQxR7.js","assets/other-network-questions.html-C4fH7KRz.js","assets/other-network-questions2.html-Dw3WAb37.js","assets/tcp-basis.html-19nLLY3e.js","assets/tcp-connection-and-disconnection.html-DbFcjdiX.js","assets/tcp-reliability-guarantee.html-BTQR93u_.js","assets/the-whole-process-of-accessing-web-pages.html-B-wtxj0d.js","assets/linux-intro.html-C27D9QBK.js","assets/operating-system-basic-questions-01.html-DxaLCUBM.js","assets/operating-system-basic-questions-02.html-gulVeI1G.js","assets/shell-intro.html-BZdO8DTA.js","assets/elasticsearch-questions-01.html-CXlLZrQV.js","assets/mongodb-questions-01.html-CVvvRqzm.js","assets/mongodb-questions-02.html-Ca5yjoKG.js","assets/a-thousand-lines-of-mysql-study-notes.html-Dod4mMh1.js","assets/how-sql-executed-in-mysql.html-CdknHDDV.js","assets/index-invalidation-caused-by-implicit-conversion.html-CY193TI6.js","assets/innodb-implementation-of-mvcc.html-CkJEEDrj.js","assets/mysql-auto-increment-primary-key-continuous.html-BfV1pekX.js","assets/mysql-high-performance-optimization-specification-recommendations.html-Dpx-4h-2.js","assets/mysql-index.html-CQctvbCx.js","assets/mysql-logs.html-CoKgRHeH.js","assets/mysql-query-cache.html-BTjAJ6Ag.js","assets/mysql-query-execution-plan.html-CNeEqWn4.js","assets/mysql-questions-01.html-Cfv5oyKu.js","assets/some-thoughts-on-database-storage-time.html-ntG6c0lv.js","assets/transaction-isolation-level.html-fsfW_WqX.js","assets/3-commonly-used-cache-read-and-write-strategies.html-D1Gi7Txp.js","assets/cache-basics.html-CpED1rRT.js","assets/redis-basis.html-BjyfW_Ks.js","assets/redis-cluster.html-DTNZXnhG.js","assets/redis-common-blocking-problems-summary.html-CoZJbS59.js","assets/redis-data-structures-01.html-D8gJt7Ii.js","assets/redis-data-structures-02.html-NjxX4uW5.js","assets/redis-delayed-task.html-S60XuGos.js","assets/redis-memory-fragmentation.html-YE_-d6Y-.js","assets/redis-persistence.html-Yj4f7q5R.js","assets/redis-questions-01.html-BUUnzCTn.js","assets/redis-questions-02.html-DLxK24U4.js","assets/redis-skiplist.html-B45q0wuL.js","assets/sql-questions-01.html-DgEQstxU.js","assets/sql-questions-02.html-CaKn_AIm.js","assets/sql-questions-03.html-KYmC394_.js","assets/sql-questions-04.html-CTRRsk_3.js","assets/sql-questions-05.html-EzEDLy67.js","assets/sql-syntax-summary.html-Cp2B7r7V.js","assets/cap-and-base-theorem.html-B_bVDW0i.js","assets/gossip-protocl.html-CK5hbMx_.js","assets/paxos-algorithm.html-DDq3Y6rK.js","assets/raft-algorithm.html-tSPkh2kj.js","assets/dubbo.html-Dks0AnYz.js","assets/http_rpc.html-CPnSIJhX.js","assets/rpc-intro.html-B33U9obO.js","assets/disruptor-questions.html-Ogo0vF8Y.js","assets/kafka-questions-01.html-BQV3aNq6.js","assets/message-queue.html-Cu2e6mYa.js","assets/rabbitmq-questions.html-C8yyqYks.js","assets/rocketmq-questions.html-BjAJlj1z.js","assets/20-bad-habits-of-bad-programmers.html-DYL62IxC.js","assets/meituan-three-year-summary-lesson-10.html-CNR7x9x9.js","assets/programmer-quickly-learn-new-technology.html-DPLa6on_.js","assets/seven-tips-for-becoming-an-advanced-programmer.html-DQQx5qvz.js","assets/ten-years-of-dachang-growth-road.html-DNBJYGBF.js","assets/the-growth-strategy-of-the-technological-giant.html-oW5D2t8U.js","assets/thinking-about-technology-and-business-after-five-years-of-work.html-DD9wArFO.js","assets/how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology.html-nd5Mxako.js","assets/my-personal-experience-in-2021.html-D2mjj_jS.js","assets/screen-candidates-for-packaging.html-iW1nY-na.js","assets/some-secrets-about-alibaba-interview.html-Bs99E7La.js","assets/summary-of-spring-recruitment.html-B9DVxhE_.js","assets/technical-preliminary-preparation.html-Cap6Gjt5.js","assets/the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer.html-qmHFxgCc.js","assets/the-experience-of-get-offer-from-over-20-big-companies.html-CazrXkII.js","assets/8-years-programmer-work-summary.html-CO9aZKEz.js","assets/four-year-work-in-tencent-summary.html-CjKBssFl.js","assets/huawei-od-275-days.html-BqCc8M8b.js","assets/two-years-of-back-end-develop--experience-in-didi-and-toutiao.html-YL_zifHz.js","assets/efficient-book-publishing-and-practice-guide.html-CNLAix9f.js","assets/how-do-programmers-publish-a-technical-book.html-yKjYaoIq.js","assets/32-tips-improving-career.html-CPeb7Fft.js","assets/employee-performance.html-F8xcHnHI.js","assets/get-into-work-mode-quickly-when-you-join-a-company.html-CJGAcxfF.js","assets/bigdecimal.html-C9HZ0d-l.js","assets/generics-and-wildcards.html-BQ1vp1dw.js","assets/java-basic-questions-01.html-DNWV2wzR.js","assets/java-basic-questions-02.html-BNt_Be2z.js","assets/java-basic-questions-03.html-CektmcqC.js","assets/java-keyword-summary.html-DChHrfBl.js","assets/proxy.html-B7WzqVEh.js","assets/reflection.html-DP8SlLUg.js","assets/serialization.html-BlUp_Vrs.js","assets/spi.html-BPW52pSn.js","assets/syntactic-sugar.html-Bhf9Moa3.js","assets/syntax.html-D74r1nuu.js","assets/unsafe.html-CEYNkbzP.js","assets/why-there-only-value-passing-in-java.html-DEsAr-O8.js","assets/arrayblockingqueue-source-code.html-DzAGCoDl.js","assets/arraylist-source-code.html-IiY0bevV.js","assets/concurrent-hash-map-source-code.html-BnpXyKJF.js","assets/copyonwritearraylist-source-code.html-Cv6MbIbX.js","assets/delayqueue-source-code.html-CvNhZ6zS.js","assets/hashmap-source-code.html-DZKVoDLh.js","assets/java-collection-precautions-for-use.html-SsPgVxv2.js","assets/java-collection-questions-01.html-DehKSmze.js","assets/java-collection-questions-02.html-DXfxDruY.js","assets/linkedhashmap-source-code.html-zrz_eiRf.js","assets/linkedlist-source-code.html-CIBylTDt.js","assets/priorityqueue-source-code.html-CpesoFXu.js","assets/aqs.html-BDmJHgqM.js","assets/atomic-classes.html-lm3d8f-q.js","assets/completablefuture-intro.html-CP_vnwG6.js","assets/java-concurrent-collections.html-Bc-7E_XJ.js","assets/java-concurrent-questions-01.html-DA4EZTjR.js","assets/java-concurrent-questions-02.html-s7zflcq2.js","assets/java-concurrent-questions-03.html-BZqv46GE.js","assets/threadpoolexecutor构造函数-Bf2PpaJ1.js","assets/java-thread-point.html-CaUOlBZm.js","assets/java-thread-pool-best-practices.html-D33Bbydj.js","assets/java-thread-pool-summary.html-CzSmVpDi.js","assets/jmm.html-BVoOibON.js","assets/optimistic-lock-and-pessimistic-lock.html-Cj20RrFM.js","assets/reentrantlock.html-C1CMXeSU.js","assets/threadlocal.html-B_wIuHjs.js","assets/virtual-thread.html-C_VBcF3E.js","assets/io-basis.html-DAoWDLSc.js","assets/io-design-patterns.html-C2tyrFE0.js","assets/io-model.html-csBA7Rbo.js","assets/nio-basis.html-DNkNjabL.js","assets/class-file-structure.html-CkF26Z6-.js","assets/class-loading-process.html-R53dRvGV.js","assets/classloader.html-DtL5axM6.js","assets/jdk-monitoring-and-troubleshooting-tools.html-BFl41Bvz.js","assets/jvm-garbage-collection.html-vXlxaVCV.js","assets/jvm-in-action.html-Ce96rpyW.js","assets/jvm-intro.html-C_1niK4c.js","assets/jvm-parameters-intro.html-DC9rr7bY.js","assets/memory-area.html-uH1TwqO7.js","assets/tcp.html-B7sW6WtK.js","assets/udp.html-OxL2J8N3.js","assets/java10.html-C_jCk5FB.js","assets/java11.html-Tlt9BY5P.js","assets/java12-13.html-CO9_6QvR.js","assets/java14-15.html-DVxNgSxl.js","assets/java16.html-Crm3xLQP.js","assets/java17.html-CcQ7j99K.js","assets/java18.html-3liOhuOJ.js","assets/java19.html-CiKba4Yx.js","assets/java20.html-BCFdMVeY.js","assets/java21.html-DwBIrh6v.js","assets/java8-common-new-features.html-CFS1Heqy.js","assets/java8-tutorial-translate.html-oZljLzhN.js","assets/java9.html-Dmb48abY.js","assets/basis.html-NsUYDRD1.js","assets/curve.html-NtUFnYs8.js","assets/basis.html-BY2iEdKH.js","assets/delegate.html-B16mnFu9.js","assets/task.html-Cmtz3GnQ.js","assets/basis.html-lD0kXux4.js","assets/encoder.html-DwYcfuHL.js","assets/markdownit.html-StZHdWIO.js","assets/intro.html-DyK0u0PU.js","assets/project-estimate.html-CIqoQVL7.js","assets/project-process-and-cost-management.html-D1Zv1D6k.js","assets/RESTfulAPI.html-B3yuZgD8.js","assets/naming.html-De3oR2Aq.js","assets/refactoring.html-1wfaXtvE.js","assets/software-engineering.html-BEzDnkt-.js","assets/unit-test.html-CUuP0h-a.js","assets/reactorDesign.html-DVbSnozK.js","assets/netty.html-yZU4nOtd.js","assets/advantages-and-disadvantages-of-jwt.html-eiB8BtiX.js","assets/basis-of-authority-certification.html-D75WR13v.js","assets/data-desensitization.html-DqJtW3ec.js","assets/design-of-authority-system.html-bXJqDtJd.js","assets/encryption-algorithms.html-BzEdK7_c.js","assets/jwt-intro.html-C_Ku4Lug.js","assets/sentive-words-filter.html-DeLT8-bB.js","assets/sso-intro.html-DRNuu_v5.js","assets/docker-in-action.html-BFpZ-8Ud.js","assets/docker-intro.html-BODsufqK.js","assets/basis.html-Cg_9nAIb.js","assets/practice.html-Bai1YEec.js","assets/git-intro.html-D8rxStd2.js","assets/github-tips.html-rd2s6MPF.js","assets/gradle-core-concepts.html-CXEo58Z5.js","assets/maven-best-practices.html-BK9MuyD1.js","assets/maven-core-concepts.html-DaWXfBXY.js","assets/box-model.html-DDEJEGjq.js","assets/javascript-basis.html-3uE51Jhg.js","assets/javascript-extension.html-DS08C7C0.js","assets/acwing.html-_Z-tpzZP.js","assets/dp.html-DHFvMV66.js","assets/graph.html-gMrzkeNK.js","assets/greedy.html-PdFXrxq1.js","assets/math.html-CuZ0IiN_.js","assets/credential.html-BeMU6hcz.js","assets/federated-identity.html-DHqTWJTz.js","assets/mobile-device-authentication.html-Dgl62Lml.js","assets/zookeeper-in-action.html-BRYEmDPR.js","assets/zookeeper-intro.html-fBwE86vj.js","assets/zookeeper-plus.html-B20QLsUC.js","assets/mybatis-interview.html-BLwRxh_K.js","assets/ioc-and-aop.html-chx68xeb.js","assets/spring-boot-auto-assembly-principles.html-DFfi2iV7.js","assets/spring-common-annotations.html-U3O-r9SR.js","assets/spring-design-patterns-summary.html-PqUEHpOc.js","assets/spring-knowledge-and-questions-summary.html-DGkr4HYb.js","assets/spring-transaction.html-sHBmnCgD.js","assets/springboot-knowledge-and-questions-summary.html-BIiHGBob.js","assets/springboot-source-code.html-hmSqNuD9.js","assets/Single-File-Components.html-oJAEuRDL.js","assets/slot.html-ZEwoW9wN.js","assets/storage.html-BuKxeI3_.js","assets/typescript.html-6imQ1c6L.js","assets/404.html-Y0J7Q0Mr.js","assets/index.html-DsfFvjyz.js","assets/index.html-DK6XCzGS.js","assets/index.html-DumbJfxb.js","assets/index.html-fGjOfg7e.js","assets/index.html-Cw47iUcx.js","assets/index.html-CpYYzroK.js","assets/index.html-DkjYDj76.js","assets/index.html-Bn7KcV9z.js","assets/index.html-Deh314cn.js","assets/index.html-BKoQSMgJ.js","assets/index.html-CyfYOLlS.js","assets/index.html-oiALF0pG.js","assets/index.html-JQRYlJcv.js","assets/index.html-FhTwfWqj.js","assets/index.html-zLk2scEV.js","assets/index.html-BBQ9jIeW.js","assets/index.html-CG-AZXI-.js","assets/index.html-DVP8rsgg.js","assets/index.html-B0ceFXzf.js","assets/index.html-BDjCg7Ba.js","assets/index.html-DwnXhG2l.js","assets/index.html-CdkshY-8.js","assets/index.html-DnjsEVIW.js","assets/index.html-DBgTYHj0.js","assets/index.html-B7g0sDJy.js","assets/index.html-D2fsuSKo.js","assets/index.html-NHfLyCVn.js","assets/index.html-IUgePV-1.js","assets/index.html-DLphlezm.js","assets/index.html-m1n_YQ3Z.js","assets/index.html-DYGJQ_n1.js","assets/index.html-B_NYebJK.js","assets/index.html-B9OJyIW9.js","assets/index.html-pAb2IpZe.js","assets/index.html-CPLP-51u.js","assets/index.html-DSm2lPSO.js","assets/index.html-CFu1IeGV.js","assets/index.html-BFbbdKMq.js","assets/index.html-DMawg8e0.js","assets/index.html-Cc4dwPYj.js","assets/index.html-CkZnoFTE.js","assets/index.html-BAc6Zp2_.js","assets/index.html-D9DjKI5W.js","assets/index.html-C-ufd-u7.js","assets/index.html-C5KuZ271.js","assets/index.html-DJePGU9B.js","assets/index.html-DfwMBMka.js","assets/index.html-D4BiEttK.js","assets/index.html-BAqdOnjv.js","assets/index.html-CtYiT0WE.js","assets/index.html-CfVTZ7Vb.js","assets/index.html-W8tPxF7c.js","assets/index.html-Qsy_cshp.js","assets/index.html-Bn3CDPQ9.js","assets/index.html-EM0timow.js","assets/index.html-B5w3CFD6.js","assets/index.html-DKqHNxay.js","assets/index.html-BNzEoAn1.js","assets/index.html-DTHp4ZfZ.js","assets/index.html-CErDif_W.js","assets/index.html-BsGYGXCy.js","assets/index.html-DdrUTuWX.js","assets/index.html-Bc1or63p.js","assets/index.html-B0yfxYOk.js","assets/index.html-BGY50a-d.js","assets/index.html-u1NOho2R.js","assets/index.html-JMt4Fq3p.js","assets/index.html-gDgdZ8SR.js","assets/index.html-D_B3bcER.js","assets/index.html-BlGQQyrS.js","assets/index.html-CIwvinHJ.js","assets/index.html-DUSXRjND.js","assets/index.html-CpaIApNK.js","assets/index.html-VswafVV-.js","assets/index.html-DL3lhowx.js","assets/index.html-D0s66SOQ.js","assets/index.html-D3qxJiJ8.js","assets/index.html-DxslKpBn.js","assets/index.html-BCSBvc6n.js","assets/index.html-iSG7dP2s.js","assets/index.html-CFRlKPRW.js","assets/index.html-M9M1tt-o.js","assets/index.html-B7zHOkiC.js","assets/index.html-B-n00uVC.js","assets/index.html-BLS0D0ju.js","assets/index.html-D0qvOLz3.js","assets/index.html-qCT_yBUQ.js","assets/index.html-z23uZ5px.js","assets/index.html-Bjx0OkzB.js","assets/index.html-BIi1JLbp.js","assets/index.html-Dp2eonD0.js","assets/index.html-DGws2Wy8.js","assets/index.html-BUZamy60.js","assets/index.html-BPCFJtXB.js","assets/index.html-BXhH_wCo.js","assets/index.html-BbFRQBgL.js","assets/index.html-RFz-ytem.js","assets/index.html-DSA_9udl.js","assets/index.html-D2O0Hhg0.js","assets/index.html-CEqKovn3.js","assets/index.html-CUeKkc6z.js","assets/index.html-CJt8FPDd.js","assets/index.html-DUo5W6Fh.js","assets/index.html-BAwaYc7b.js","assets/index.html-D9DzOQqQ.js","assets/index.html-3T2P8Az2.js","assets/index.html-CzGW1Tut.js","assets/index.html-CCal6hLT.js","assets/index.html-BIuQz1ey.js","assets/index.html-Ch2E2h6l.js","assets/index.html-BRcitvTs.js","assets/index.html-DqCN6wHS.js","assets/index.html-D_JD15M7.js","assets/index.html-DPrTZMps.js","assets/index.html-BRT9Jimf.js","assets/index.html-DdWneCWJ.js","assets/index.html-C1hh3qmo.js","assets/index.html-BAUj70ij.js","assets/index.html-BJKn-LKY.js","assets/index.html-C3Q1KP8n.js","assets/index.html-D_Vz5Acy.js","assets/index.html-BKZVcxGY.js","assets/index.html-Cxmhbu4K.js","assets/index.html-7v3XWnqx.js","assets/index.html-CLy4qVVr.js","assets/index.html-3D8t4Nz9.js","assets/index.html-tHJITamP.js","assets/index.html-CoV53ddP.js","assets/index.html-BTyol5dF.js","assets/index.html-B94FTTdH.js","assets/index.html-D3j4fHRw.js","assets/index.html-k0eClRBl.js","assets/index.html-BN7kz6M6.js","assets/index.html-BV9GuRBc.js","assets/index.html-yK8QoZD8.js","assets/index.html-D_IfiyXn.js","assets/index.html-DdMf4PIz.js","assets/index.html-EmNkrxBF.js","assets/index.html-bG27zcs7.js","assets/index.html-BQEkuTg-.js","assets/index.html-Exdw0uGj.js","assets/index.html-CpZknRJ2.js","assets/index.html-Chgw0BnO.js","assets/index.html-bW07KkRx.js","assets/index.html-Djsw8tJA.js","assets/index.html-Bo9PNkPA.js","assets/index.html-yWEKbLP0.js","assets/index.html-D7Otfcsm.js","assets/index.html-BowrACRf.js","assets/index.html-iqU0IQQL.js","assets/index.html-CWCEd5ji.js","assets/index.html-DqeqTU6N.js","assets/index.html-C09WUhaY.js","assets/index.html-cbAiXywL.js","assets/index.html-DU3vYsd7.js","assets/index.html-9q5XiKwh.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
/**
* @vue/shared v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ci(e,l){const t=new Set(e.split(","));return l?n=>t.has(n.toLowerCase()):n=>t.has(n)}const be={},vt=[],Xe=()=>{},Lu=()=>!1,an=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),ui=e=>e.startsWith("onUpdate:"),Se=Object.assign,pi=(e,l)=>{const t=e.indexOf(l);t>-1&&e.splice(t,1)},ju=Object.prototype.hasOwnProperty,oe=(e,l)=>ju.call(e,l),X=Array.isArray,Ot=e=>la(e)==="[object Map]",Au=e=>la(e)==="[object Set]",te=e=>typeof e=="function",qe=e=>typeof e=="string",ea=e=>typeof e=="symbol",xe=e=>e!==null&&typeof e=="object",yr=e=>(xe(e)||te(e))&&te(e.then)&&te(e.catch),Su=Object.prototype.toString,la=e=>Su.call(e),Pu=e=>la(e).slice(8,-1),Tu=e=>la(e)==="[object Object]",di=e=>qe(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,kt=ci(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ta=e=>{const l=Object.create(null);return t=>l[t]||(l[t]=e(t))},Iu=/-(\w)/g,nl=ta(e=>e.replace(Iu,(l,t)=>t?t.toUpperCase():"")),qu=/\B([A-Z])/g,jt=ta(e=>e.replace(qu,"-$1").toLowerCase()),sn=ta(e=>e.charAt(0).toUpperCase()+e.slice(1)),fa=ta(e=>e?`on${sn(e)}`:""),Vl=(e,l)=>!Object.is(e,l),ba=(e,l)=>{for(let t=0;t<e.length;t++)e[t](l)},Gn=(e,l,t)=>{Object.defineProperty(e,l,{configurable:!0,enumerable:!1,value:t})},Du=e=>{const l=parseFloat(e);return isNaN(l)?e:l},Ru=e=>{const l=qe(e)?Number(e):NaN;return isNaN(l)?e:l};let ls;const wr=()=>ls||(ls=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function hi(e){if(X(e)){const l={};for(let t=0;t<e.length;t++){const n=e[t],a=qe(n)?Mu(n):hi(n);if(a)for(const i in a)l[i]=a[i]}return l}else if(qe(e)||xe(e))return e}const Cu=/;(?![^(]*\))/g,Ou=/:([^]+)/,Ju=/\/\*[^]*?\*\//g;function Mu(e){const l={};return e.replace(Ju,"").split(Cu).forEach(t=>{if(t){const n=t.split(Ou);n.length>1&&(l[n[0].trim()]=n[1].trim())}}),l}function gi(e){let l="";if(qe(e))l=e;else if(X(e))for(let t=0;t<e.length;t++){const n=gi(e[t]);n&&(l+=n+" ")}else if(xe(e))for(const t in e)e[t]&&(l+=t+" ");return l.trim()}const Fu="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Bu=ci(Fu);function Er(e){return!!e||e===""}/**
* @vue/reactivity v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Ke;class Vu{constructor(l=!1){this.detached=l,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Ke,!l&&Ke&&(this.index=(Ke.scopes||(Ke.scopes=[])).push(this)-1)}get active(){return this._active}run(l){if(this._active){const t=Ke;try{return Ke=this,l()}finally{Ke=t}}}on(){Ke=this}off(){Ke=this.parent}stop(l){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!l){const a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this._active=!1}}}function zu(e,l=Ke){l&&l.active&&l.effects.push(e)}function xr(){return Ke}function Nu(e){Ke&&Ke.cleanups.push(e)}let et;class vi{constructor(l,t,n,a){this.fn=l,this.trigger=t,this.scheduler=n,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,zu(this,a)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,at();for(let l=0;l<this._depsLength;l++){const t=this.deps[l];if(t.computed&&(Hu(t.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),it()}return this._dirtyLevel>=4}set dirty(l){this._dirtyLevel=l?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let l=Fl,t=et;try{return Fl=!0,et=this,this._runnings++,ts(this),this.fn()}finally{ns(this),this._runnings--,et=t,Fl=l}}stop(){var l;this.active&&(ts(this),ns(this),(l=this.onStop)==null||l.call(this),this.active=!1)}}function Hu(e){return e.value}function ts(e){e._trackId++,e._depsLength=0}function ns(e){if(e.deps.length>e._depsLength){for(let l=e._depsLength;l<e.deps.length;l++)Lr(e.deps[l],e);e.deps.length=e._depsLength}}function Lr(e,l){const t=e.get(l);t!==void 0&&l._trackId!==t&&(e.delete(l),e.size===0&&e.cleanup())}let Fl=!0,Ma=0;const jr=[];function at(){jr.push(Fl),Fl=!1}function it(){const e=jr.pop();Fl=e===void 0?!0:e}function ki(){Ma++}function mi(){for(Ma--;!Ma&&Fa.length;)Fa.shift()()}function Ar(e,l,t){if(l.get(e)!==e._trackId){l.set(e,e._trackId);const n=e.deps[e._depsLength];n!==l?(n&&Lr(n,e),e.deps[e._depsLength++]=l):e._depsLength++}}const Fa=[];function Sr(e,l,t){ki();for(const n of e.keys()){let a;n._dirtyLevel<l&&(a??(a=e.get(n)===n._trackId))&&(n._shouldSchedule||(n._shouldSchedule=n._dirtyLevel===0),n._dirtyLevel=l),n._shouldSchedule&&(a??(a=e.get(n)===n._trackId))&&(n.trigger(),(!n._runnings||n.allowRecurse)&&n._dirtyLevel!==2&&(n._shouldSchedule=!1,n.scheduler&&Fa.push(n.scheduler)))}mi()}const Pr=(e,l)=>{const t=new Map;return t.cleanup=e,t.computed=l,t},Qn=new WeakMap,lt=Symbol(""),Ba=Symbol("");function Qe(e,l,t){if(Fl&&et){let n=Qn.get(e);n||Qn.set(e,n=new Map);let a=n.get(t);a||n.set(t,a=Pr(()=>n.delete(t))),Ar(et,a)}}function El(e,l,t,n,a,i){const s=Qn.get(e);if(!s)return;let o=[];if(l==="clear")o=[...s.values()];else if(t==="length"&&X(e)){const c=Number(n);s.forEach((u,d)=>{(d==="length"||!ea(d)&&d>=c)&&o.push(u)})}else switch(t!==void 0&&o.push(s.get(t)),l){case"add":X(e)?di(t)&&o.push(s.get("length")):(o.push(s.get(lt)),Ot(e)&&o.push(s.get(Ba)));break;case"delete":X(e)||(o.push(s.get(lt)),Ot(e)&&o.push(s.get(Ba)));break;case"set":Ot(e)&&o.push(s.get(lt));break}ki();for(const c of o)c&&Sr(c,4);mi()}function Gu(e,l){var t;return(t=Qn.get(e))==null?void 0:t.get(l)}const Qu=ci("__proto__,__v_isRef,__isVue"),Tr=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(ea)),as=$u();function $u(){const e={};return["includes","indexOf","lastIndexOf"].forEach(l=>{e[l]=function(...t){const n=ie(this);for(let i=0,s=this.length;i<s;i++)Qe(n,"get",i+"");const a=n[l](...t);return a===-1||a===!1?n[l](...t.map(ie)):a}}),["push","pop","shift","unshift","splice"].forEach(l=>{e[l]=function(...t){at(),ki();const n=ie(this)[l].apply(this,t);return mi(),it(),n}}),e}function Ku(e){const l=ie(this);return Qe(l,"has",e),l.hasOwnProperty(e)}class Ir{constructor(l=!1,t=!1){this._isReadonly=l,this._isShallow=t}get(l,t,n){const a=this._isReadonly,i=this._isShallow;if(t==="__v_isReactive")return!a;if(t==="__v_isReadonly")return a;if(t==="__v_isShallow")return i;if(t==="__v_raw")return n===(a?i?rp:Cr:i?Rr:Dr).get(l)||Object.getPrototypeOf(l)===Object.getPrototypeOf(n)?l:void 0;const s=X(l);if(!a){if(s&&oe(as,t))return Reflect.get(as,t,n);if(t==="hasOwnProperty")return Ku}const o=Reflect.get(l,t,n);return(ea(t)?Tr.has(t):Qu(t))||(a||Qe(l,"get",t),i)?o:De(o)?s&&di(t)?o:o.value:xe(o)?a?Gl(o):rn(o):o}}class qr extends Ir{constructor(l=!1){super(!1,l)}set(l,t,n,a){let i=l[t];if(!this._isShallow){const c=_t(i);if(!$n(n)&&!_t(n)&&(i=ie(i),n=ie(n)),!X(l)&&De(i)&&!De(n))return c?!1:(i.value=n,!0)}const s=X(l)&&di(t)?Number(t)<l.length:oe(l,t),o=Reflect.set(l,t,n,a);return l===ie(a)&&(s?Vl(n,i)&&El(l,"set",t,n):El(l,"add",t,n)),o}deleteProperty(l,t){const n=oe(l,t);l[t];const a=Reflect.deleteProperty(l,t);return a&&n&&El(l,"delete",t,void 0),a}has(l,t){const n=Reflect.has(l,t);return(!ea(t)||!Tr.has(t))&&Qe(l,"has",t),n}ownKeys(l){return Qe(l,"iterate",X(l)?"length":lt),Reflect.ownKeys(l)}}class Uu extends Ir{constructor(l=!1){super(!0,l)}set(l,t){return!0}deleteProperty(l,t){return!0}}const Wu=new qr,Zu=new Uu,Yu=new qr(!0),fi=e=>e,na=e=>Reflect.getPrototypeOf(e);function An(e,l,t=!1,n=!1){e=e.__v_raw;const a=ie(e),i=ie(l);t||(Vl(l,i)&&Qe(a,"get",l),Qe(a,"get",i));const{has:s}=na(a),o=n?fi:t?yi:Gt;if(s.call(a,l))return o(e.get(l));if(s.call(a,i))return o(e.get(i));e!==a&&e.get(l)}function Sn(e,l=!1){const t=this.__v_raw,n=ie(t),a=ie(e);return l||(Vl(e,a)&&Qe(n,"has",e),Qe(n,"has",a)),e===a?t.has(e):t.has(e)||t.has(a)}function Pn(e,l=!1){return e=e.__v_raw,!l&&Qe(ie(e),"iterate",lt),Reflect.get(e,"size",e)}function is(e){e=ie(e);const l=ie(this);return na(l).has.call(l,e)||(l.add(e),El(l,"add",e,e)),this}function ss(e,l){l=ie(l);const t=ie(this),{has:n,get:a}=na(t);let i=n.call(t,e);i||(e=ie(e),i=n.call(t,e));const s=a.call(t,e);return t.set(e,l),i?Vl(l,s)&&El(t,"set",e,l):El(t,"add",e,l),this}function rs(e){const l=ie(this),{has:t,get:n}=na(l);let a=t.call(l,e);a||(e=ie(e),a=t.call(l,e)),n&&n.call(l,e);const i=l.delete(e);return a&&El(l,"delete",e,void 0),i}function os(){const e=ie(this),l=e.size!==0,t=e.clear();return l&&El(e,"clear",void 0,void 0),t}function Tn(e,l){return function(n,a){const i=this,s=i.__v_raw,o=ie(s),c=l?fi:e?yi:Gt;return!e&&Qe(o,"iterate",lt),s.forEach((u,d)=>n.call(a,c(u),c(d),i))}}function In(e,l,t){return function(...n){const a=this.__v_raw,i=ie(a),s=Ot(i),o=e==="entries"||e===Symbol.iterator&&s,c=e==="keys"&&s,u=a[e](...n),d=t?fi:l?yi:Gt;return!l&&Qe(i,"iterate",c?Ba:lt),{next(){const{value:h,done:g}=u.next();return g?{value:h,done:g}:{value:o?[d(h[0]),d(h[1])]:d(h),done:g}},[Symbol.iterator](){return this}}}}function Pl(e){return function(...l){return e==="delete"?!1:e==="clear"?void 0:this}}function Xu(){const e={get(i){return An(this,i)},get size(){return Pn(this)},has:Sn,add:is,set:ss,delete:rs,clear:os,forEach:Tn(!1,!1)},l={get(i){return An(this,i,!1,!0)},get size(){return Pn(this)},has:Sn,add:is,set:ss,delete:rs,clear:os,forEach:Tn(!1,!0)},t={get(i){return An(this,i,!0)},get size(){return Pn(this,!0)},has(i){return Sn.call(this,i,!0)},add:Pl("add"),set:Pl("set"),delete:Pl("delete"),clear:Pl("clear"),forEach:Tn(!0,!1)},n={get(i){return An(this,i,!0,!0)},get size(){return Pn(this,!0)},has(i){return Sn.call(this,i,!0)},add:Pl("add"),set:Pl("set"),delete:Pl("delete"),clear:Pl("clear"),forEach:Tn(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(i=>{e[i]=In(i,!1,!1),t[i]=In(i,!0,!1),l[i]=In(i,!1,!0),n[i]=In(i,!0,!0)}),[e,t,l,n]}const[ep,lp,tp,np]=Xu();function bi(e,l){const t=l?e?np:tp:e?lp:ep;return(n,a,i)=>a==="__v_isReactive"?!e:a==="__v_isReadonly"?e:a==="__v_raw"?n:Reflect.get(oe(t,a)&&a in n?t:n,a,i)}const ap={get:bi(!1,!1)},ip={get:bi(!1,!0)},sp={get:bi(!0,!1)},Dr=new WeakMap,Rr=new WeakMap,Cr=new WeakMap,rp=new WeakMap;function op(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function cp(e){return e.__v_skip||!Object.isExtensible(e)?0:op(Pu(e))}function rn(e){return _t(e)?e:_i(e,!1,Wu,ap,Dr)}function Or(e){return _i(e,!1,Yu,ip,Rr)}function Gl(e){return _i(e,!0,Zu,sp,Cr)}function _i(e,l,t,n,a){if(!xe(e)||e.__v_raw&&!(l&&e.__v_isReactive))return e;const i=a.get(e);if(i)return i;const s=cp(e);if(s===0)return e;const o=new Proxy(e,s===2?n:t);return a.set(e,o),o}function mt(e){return _t(e)?mt(e.__v_raw):!!(e&&e.__v_isReactive)}function _t(e){return!!(e&&e.__v_isReadonly)}function $n(e){return!!(e&&e.__v_isShallow)}function Jr(e){return mt(e)||_t(e)}function ie(e){const l=e&&e.__v_raw;return l?ie(l):e}function Mr(e){return Object.isExtensible(e)&&Gn(e,"__v_skip",!0),e}const Gt=e=>xe(e)?rn(e):e,yi=e=>xe(e)?Gl(e):e;class Fr{constructor(l,t,n,a){this.getter=l,this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new vi(()=>l(this._value),()=>Jt(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!a,this.__v_isReadonly=n}get value(){const l=ie(this);return(!l._cacheable||l.effect.dirty)&&Vl(l._value,l._value=l.effect.run())&&Jt(l,4),wi(l),l.effect._dirtyLevel>=2&&Jt(l,2),l._value}set value(l){this._setter(l)}get _dirty(){return this.effect.dirty}set _dirty(l){this.effect.dirty=l}}function up(e,l,t=!1){let n,a;const i=te(e);return i?(n=e,a=Xe):(n=e.get,a=e.set),new Fr(n,a,i||!a,t)}function wi(e){var l;Fl&&et&&(e=ie(e),Ar(et,(l=e.dep)!=null?l:e.dep=Pr(()=>e.dep=void 0,e instanceof Fr?e:void 0)))}function Jt(e,l=4,t){e=ie(e);const n=e.dep;n&&Sr(n,l)}function De(e){return!!(e&&e.__v_isRef===!0)}function Y(e){return Br(e,!1)}function Ce(e){return Br(e,!0)}function Br(e,l){return De(e)?e:new pp(e,l)}class pp{constructor(l,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?l:ie(l),this._value=t?l:Gt(l)}get value(){return wi(this),this._value}set value(l){const t=this.__v_isShallow||$n(l)||_t(l);l=t?l:ie(l),Vl(l,this._rawValue)&&(this._rawValue=l,this._value=t?l:Gt(l),Jt(this,4))}}function tt(e){return De(e)?e.value:e}const dp={get:(e,l,t)=>tt(Reflect.get(e,l,t)),set:(e,l,t,n)=>{const a=e[l];return De(a)&&!De(t)?(a.value=t,!0):Reflect.set(e,l,t,n)}};function Vr(e){return mt(e)?e:new Proxy(e,dp)}class hp{constructor(l){this.dep=void 0,this.__v_isRef=!0;const{get:t,set:n}=l(()=>wi(this),()=>Jt(this));this._get=t,this._set=n}get value(){return this._get()}set value(l){this._set(l)}}function Ei(e){return new hp(e)}function gp(e){const l=X(e)?new Array(e.length):{};for(const t in e)l[t]=zr(e,t);return l}class vp{constructor(l,t,n){this._object=l,this._key=t,this._defaultValue=n,this.__v_isRef=!0}get value(){const l=this._object[this._key];return l===void 0?this._defaultValue:l}set value(l){this._object[this._key]=l}get dep(){return Gu(ie(this._object),this._key)}}class kp{constructor(l){this._getter=l,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function At(e,l,t){return De(e)?e:te(e)?new kp(e):xe(e)&&arguments.length>1?zr(e,l,t):Y(e)}function zr(e,l,t){const n=e[l];return De(n)?n:new vp(e,l,t)}/**
* @vue/runtime-core v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Bl(e,l,t,n){try{return n?e(...n):e()}catch(a){on(a,l,t)}}function ll(e,l,t,n){if(te(e)){const i=Bl(e,l,t,n);return i&&yr(i)&&i.catch(s=>{on(s,l,t)}),i}const a=[];for(let i=0;i<e.length;i++)a.push(ll(e[i],l,t,n));return a}function on(e,l,t,n=!0){const a=l?l.vnode:null;if(l){let i=l.parent;const s=l.proxy,o=`https://vuejs.org/error-reference/#runtime-${t}`;for(;i;){const u=i.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](e,s,o)===!1)return}i=i.parent}const c=l.appContext.config.errorHandler;if(c){Bl(c,null,10,[e,s,o]);return}}mp(e,t,a,n)}function mp(e,l,t,n=!0){console.error(e)}let Qt=!1,Va=!1;const Je=[];let gl=0;const ft=[];let Rl=null,Zl=0;const Nr=Promise.resolve();let xi=null;function st(e){const l=xi||Nr;return e?l.then(this?e.bind(this):e):l}function fp(e){let l=gl+1,t=Je.length;for(;l<t;){const n=l+t>>>1,a=Je[n],i=$t(a);i<e||i===e&&a.pre?l=n+1:t=n}return l}function aa(e){(!Je.length||!Je.includes(e,Qt&&e.allowRecurse?gl+1:gl))&&(e.id==null?Je.push(e):Je.splice(fp(e.id),0,e),Hr())}function Hr(){!Qt&&!Va&&(Va=!0,xi=Nr.then(Gr))}function bp(e){const l=Je.indexOf(e);l>gl&&Je.splice(l,1)}function _p(e){X(e)?ft.push(...e):(!Rl||!Rl.includes(e,e.allowRecurse?Zl+1:Zl))&&ft.push(e),Hr()}function cs(e,l,t=Qt?gl+1:0){for(;t<Je.length;t++){const n=Je[t];if(n&&n.pre){if(e&&n.id!==e.uid)continue;Je.splice(t,1),t--,n()}}}function Kn(e){if(ft.length){const l=[...new Set(ft)].sort((t,n)=>$t(t)-$t(n));if(ft.length=0,Rl){Rl.push(...l);return}for(Rl=l,Zl=0;Zl<Rl.length;Zl++)Rl[Zl]();Rl=null,Zl=0}}const $t=e=>e.id==null?1/0:e.id,yp=(e,l)=>{const t=$t(e)-$t(l);if(t===0){if(e.pre&&!l.pre)return-1;if(l.pre&&!e.pre)return 1}return t};function Gr(e){Va=!1,Qt=!0,Je.sort(yp);try{for(gl=0;gl<Je.length;gl++){const l=Je[gl];l&&l.active!==!1&&Bl(l,null,14)}}finally{gl=0,Je.length=0,Kn(),Qt=!1,xi=null,(Je.length||ft.length)&&Gr()}}function wp(e,l,...t){if(e.isUnmounted)return;const n=e.vnode.props||be;let a=t;const i=l.startsWith("update:"),s=i&&l.slice(7);if(s&&s in n){const d=`${s==="modelValue"?"model":s}Modifiers`,{number:h,trim:g}=n[d]||be;g&&(a=t.map(v=>qe(v)?v.trim():v)),h&&(a=t.map(Du))}let o,c=n[o=fa(l)]||n[o=fa(nl(l))];!c&&i&&(c=n[o=fa(jt(l))]),c&&ll(c,e,6,a);const u=n[o+"Once"];if(u){if(!e.emitted)e.emitted={};else if(e.emitted[o])return;e.emitted[o]=!0,ll(u,e,6,a)}}function Qr(e,l,t=!1){const n=l.emitsCache,a=n.get(e);if(a!==void 0)return a;const i=e.emits;let s={},o=!1;if(!te(e)){const c=u=>{const d=Qr(u,l,!0);d&&(o=!0,Se(s,d))};!t&&l.mixins.length&&l.mixins.forEach(c),e.extends&&c(e.extends),e.mixins&&e.mixins.forEach(c)}return!i&&!o?(xe(e)&&n.set(e,null),null):(X(i)?i.forEach(c=>s[c]=null):Se(s,i),xe(e)&&n.set(e,s),s)}function ia(e,l){return!e||!an(l)?!1:(l=l.slice(2).replace(/Once$/,""),oe(e,l[0].toLowerCase()+l.slice(1))||oe(e,jt(l))||oe(e,l))}let el=null,$r=null;function Un(e){const l=el;return el=e,$r=e&&e.type.__scopeId||null,l}function Ep(e,l=el,t){if(!l||e._n)return e;const n=(...a)=>{n._d&&ys(-1);const i=Un(l);let s;try{s=e(...a)}finally{Un(i),n._d&&ys(1)}return s};return n._n=!0,n._c=!0,n._d=!0,n}function _a(e){const{type:l,vnode:t,proxy:n,withProxy:a,props:i,propsOptions:[s],slots:o,attrs:c,emit:u,render:d,renderCache:h,data:g,setupState:v,ctx:f,inheritAttrs:E}=e;let w,b;const L=Un(e);try{if(t.shapeFlag&4){const A=a||n,O=A;w=sl(d.call(O,A,h,i,v,g,f)),b=c}else{const A=l;w=sl(A.length>1?A(i,{attrs:c,slots:o,emit:u}):A(i,null)),b=l.props?c:xp(c)}}catch(A){zt.length=0,on(A,e,1),w=Pe(vl)}let _=w;if(b&&E!==!1){const A=Object.keys(b),{shapeFlag:O}=_;A.length&&O&7&&(s&&A.some(ui)&&(b=Lp(b,s)),_=zl(_,b))}return t.dirs&&(_=zl(_),_.dirs=_.dirs?_.dirs.concat(t.dirs):t.dirs),t.transition&&(_.transition=t.transition),w=_,Un(L),w}const xp=e=>{let l;for(const t in e)(t==="class"||t==="style"||an(t))&&((l||(l={}))[t]=e[t]);return l},Lp=(e,l)=>{const t={};for(const n in e)(!ui(n)||!(n.slice(9)in l))&&(t[n]=e[n]);return t};function jp(e,l,t){const{props:n,children:a,component:i}=e,{props:s,children:o,patchFlag:c}=l,u=i.emitsOptions;if(l.dirs||l.transition)return!0;if(t&&c>=0){if(c&1024)return!0;if(c&16)return n?us(n,s,u):!!s;if(c&8){const d=l.dynamicProps;for(let h=0;h<d.length;h++){const g=d[h];if(s[g]!==n[g]&&!ia(u,g))return!0}}}else return(a||o)&&(!o||!o.$stable)?!0:n===s?!1:n?s?us(n,s,u):!0:!!s;return!1}function us(e,l,t){const n=Object.keys(l);if(n.length!==Object.keys(e).length)return!0;for(let a=0;a<n.length;a++){const i=n[a];if(l[i]!==e[i]&&!ia(t,i))return!0}return!1}function Ap({vnode:e,parent:l},t){for(;l;){const n=l.subTree;if(n.suspense&&n.suspense.activeBranch===e&&(n.el=e.el),n===e)(e=l.vnode).el=t,l=l.parent;else break}}const Kr="components";function tl(e,l){return Pp(Kr,e,!0,l)||e}const Sp=Symbol.for("v-ndc");function Pp(e,l,t=!0,n=!1){const a=el||Ie;if(a){const i=a.type;if(e===Kr){const o=xd(i,!1);if(o&&(o===l||o===nl(l)||o===sn(nl(l))))return i}const s=ps(a[e]||i[e],l)||ps(a.appContext[e],l);return!s&&n?i:s}}function ps(e,l){return e&&(e[l]||e[nl(l)]||e[sn(nl(l))])}const Tp=e=>e.__isSuspense;function Ur(e,l){l&&l.pendingBranch?X(e)?l.effects.push(...e):l.effects.push(e):_p(e)}const Ip=Symbol.for("v-scx"),qp=()=>_e(Ip);function Li(e,l){return ji(e,null,l)}const qn={};function pe(e,l,t){return ji(e,l,t)}function ji(e,l,{immediate:t,deep:n,flush:a,once:i,onTrack:s,onTrigger:o}=be){if(l&&i){const j=l;l=(...H)=>{j(...H),O()}}const c=Ie,u=j=>n===!0?j:gt(j,n===!1?1:void 0);let d,h=!1,g=!1;if(De(e)?(d=()=>e.value,h=$n(e)):mt(e)?(d=()=>u(e),h=!0):X(e)?(g=!0,h=e.some(j=>mt(j)||$n(j)),d=()=>e.map(j=>{if(De(j))return j.value;if(mt(j))return u(j);if(te(j))return Bl(j,c,2)})):te(e)?l?d=()=>Bl(e,c,2):d=()=>(v&&v(),ll(e,c,3,[f])):d=Xe,l&&n){const j=d;d=()=>gt(j())}let v,f=j=>{v=_.onStop=()=>{Bl(j,c,4),v=_.onStop=void 0}},E;if(hn)if(f=Xe,l?t&&ll(l,c,3,[d(),g?[]:void 0,f]):d(),a==="sync"){const j=qp();E=j.__watcherHandles||(j.__watcherHandles=[])}else return Xe;let w=g?new Array(e.length).fill(qn):qn;const b=()=>{if(!(!_.active||!_.dirty))if(l){const j=_.run();(n||h||(g?j.some((H,M)=>Vl(H,w[M])):Vl(j,w)))&&(v&&v(),ll(l,c,3,[j,w===qn?void 0:g&&w[0]===qn?[]:w,f]),w=j)}else _.run()};b.allowRecurse=!!l;let L;a==="sync"?L=b:a==="post"?L=()=>ze(b,c&&c.suspense):(b.pre=!0,c&&(b.id=c.uid),L=()=>aa(b));const _=new vi(d,Xe,L),A=xr(),O=()=>{_.stop(),A&&pi(A.effects,_)};return l?t?b():w=_.run():a==="post"?ze(_.run.bind(_),c&&c.suspense):_.run(),E&&E.push(O),O}function Dp(e,l,t){const n=this.proxy,a=qe(e)?e.includes(".")?Wr(n,e):()=>n[e]:e.bind(n,n);let i;te(l)?i=l:(i=l.handler,t=l);const s=dn(this),o=ji(a,i.bind(n),t);return s(),o}function Wr(e,l){const t=l.split(".");return()=>{let n=e;for(let a=0;a<t.length&&n;a++)n=n[t[a]];return n}}function gt(e,l,t=0,n){if(!xe(e)||e.__v_skip)return e;if(l&&l>0){if(t>=l)return e;t++}if(n=n||new Set,n.has(e))return e;if(n.add(e),De(e))gt(e.value,l,t,n);else if(X(e))for(let a=0;a<e.length;a++)gt(e[a],l,t,n);else if(Au(e)||Ot(e))e.forEach(a=>{gt(a,l,t,n)});else if(Tu(e))for(const a in e)gt(e[a],l,t,n);return e}function hl(e,l,t,n){const a=e.dirs,i=l&&l.dirs;for(let s=0;s<a.length;s++){const o=a[s];i&&(o.oldValue=i[s].value);let c=o.dir[n];c&&(at(),ll(c,t,8,[e.el,o,e,l]),it())}}const Cl=Symbol("_leaveCb"),Dn=Symbol("_enterCb");function Zr(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return we(()=>{e.isMounted=!0}),Si(()=>{e.isUnmounting=!0}),e}const Ze=[Function,Array],Yr={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Ze,onEnter:Ze,onAfterEnter:Ze,onEnterCancelled:Ze,onBeforeLeave:Ze,onLeave:Ze,onAfterLeave:Ze,onLeaveCancelled:Ze,onBeforeAppear:Ze,onAppear:Ze,onAfterAppear:Ze,onAppearCancelled:Ze},Rp={name:"BaseTransition",props:Yr,setup(e,{slots:l}){const t=pn(),n=Zr();return()=>{const a=l.default&&Ai(l.default(),!0);if(!a||!a.length)return;let i=a[0];if(a.length>1){for(const g of a)if(g.type!==vl){i=g;break}}const s=ie(e),{mode:o}=s;if(n.isLeaving)return ya(i);const c=ds(i);if(!c)return ya(i);const u=Kt(c,s,n,t);Ut(c,u);const d=t.subTree,h=d&&ds(d);if(h&&h.type!==vl&&!Yl(c,h)){const g=Kt(h,s,n,t);if(Ut(h,g),o==="out-in")return n.isLeaving=!0,g.afterLeave=()=>{n.isLeaving=!1,t.update.active!==!1&&(t.effect.dirty=!0,t.update())},ya(i);o==="in-out"&&c.type!==vl&&(g.delayLeave=(v,f,E)=>{const w=Xr(n,h);w[String(h.key)]=h,v[Cl]=()=>{f(),v[Cl]=void 0,delete u.delayedLeave},u.delayedLeave=E})}return i}}},Cp=Rp;function Xr(e,l){const{leavingVNodes:t}=e;let n=t.get(l.type);return n||(n=Object.create(null),t.set(l.type,n)),n}function Kt(e,l,t,n){const{appear:a,mode:i,persisted:s=!1,onBeforeEnter:o,onEnter:c,onAfterEnter:u,onEnterCancelled:d,onBeforeLeave:h,onLeave:g,onAfterLeave:v,onLeaveCancelled:f,onBeforeAppear:E,onAppear:w,onAfterAppear:b,onAppearCancelled:L}=l,_=String(e.key),A=Xr(t,e),O=(M,U)=>{M&&ll(M,n,9,U)},j=(M,U)=>{const q=U[1];O(M,U),X(M)?M.every(W=>W.length<=1)&&q():M.length<=1&&q()},H={mode:i,persisted:s,beforeEnter(M){let U=o;if(!t.isMounted)if(a)U=E||o;else return;M[Cl]&&M[Cl](!0);const q=A[_];q&&Yl(e,q)&&q.el[Cl]&&q.el[Cl](),O(U,[M])},enter(M){let U=c,q=u,W=d;if(!t.isMounted)if(a)U=w||c,q=b||u,W=L||d;else return;let C=!1;const ee=M[Dn]=Le=>{C||(C=!0,Le?O(W,[M]):O(q,[M]),H.delayedLeave&&H.delayedLeave(),M[Dn]=void 0)};U?j(U,[M,ee]):ee()},leave(M,U){const q=String(e.key);if(M[Dn]&&M[Dn](!0),t.isUnmounting)return U();O(h,[M]);let W=!1;const C=M[Cl]=ee=>{W||(W=!0,U(),ee?O(f,[M]):O(v,[M]),M[Cl]=void 0,A[q]===e&&delete A[q])};A[q]=e,g?j(g,[M,C]):C()},clone(M){return Kt(M,l,t,n)}};return H}function ya(e){if(cn(e))return e=zl(e),e.children=null,e}function ds(e){return cn(e)?e.children?e.children[0]:void 0:e}function Ut(e,l){e.shapeFlag&6&&e.component?Ut(e.component.subTree,l):e.shapeFlag&128?(e.ssContent.transition=l.clone(e.ssContent),e.ssFallback.transition=l.clone(e.ssFallback)):e.transition=l}function Ai(e,l=!1,t){let n=[],a=0;for(let i=0;i<e.length;i++){let s=e[i];const o=t==null?s.key:String(t)+String(s.key!=null?s.key:i);s.type===Ue?(s.patchFlag&128&&a++,n=n.concat(Ai(s.children,l,o))):(l||s.type!==vl)&&n.push(o!=null?zl(s,{key:o}):s)}if(a>1)for(let i=0;i<n.length;i++)n[i].patchFlag=-2;return n}/*! #__NO_SIDE_EFFECTS__ */function F(e,l){return te(e)?Se({name:e.name},l,{setup:e}):e}const Mt=e=>!!e.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Op(e){te(e)&&(e={loader:e});const{loader:l,loadingComponent:t,errorComponent:n,delay:a=200,timeout:i,suspensible:s=!0,onError:o}=e;let c=null,u,d=0;const h=()=>(d++,c=null,g()),g=()=>{let v;return c||(v=c=l().catch(f=>{if(f=f instanceof Error?f:new Error(String(f)),o)return new Promise((E,w)=>{o(f,()=>E(h()),()=>w(f),d+1)});throw f}).then(f=>v!==c&&c?c:(f&&(f.__esModule||f[Symbol.toStringTag]==="Module")&&(f=f.default),u=f,f)))};return F({name:"AsyncComponentWrapper",__asyncLoader:g,get __asyncResolved(){return u},setup(){const v=Ie;if(u)return()=>wa(u,v);const f=L=>{c=null,on(L,v,13,!n)};if(s&&v.suspense||hn)return g().then(L=>()=>wa(L,v)).catch(L=>(f(L),()=>n?Pe(n,{error:L}):null));const E=Y(!1),w=Y(),b=Y(!!a);return a&&setTimeout(()=>{b.value=!1},a),i!=null&&setTimeout(()=>{if(!E.value&&!w.value){const L=new Error(`Async component timed out after ${i}ms.`);f(L),w.value=L}},i),g().then(()=>{E.value=!0,v.parent&&cn(v.parent.vnode)&&(v.parent.effect.dirty=!0,aa(v.parent.update))}).catch(L=>{f(L),w.value=L}),()=>{if(E.value&&u)return wa(u,v);if(w.value&&n)return Pe(n,{error:w.value});if(t&&!b.value)return Pe(t)}}})}function wa(e,l){const{ref:t,props:n,children:a,ce:i}=l.vnode,s=Pe(e,n,a);return s.ref=t,s.ce=i,delete l.vnode.ce,s}const cn=e=>e.type.__isKeepAlive;function Jp(e,l){eo(e,"a",l)}function Mp(e,l){eo(e,"da",l)}function eo(e,l,t=Ie){const n=e.__wdc||(e.__wdc=()=>{let a=t;for(;a;){if(a.isDeactivated)return;a=a.parent}return e()});if(sa(l,n,t),t){let a=t.parent;for(;a&&a.parent;)cn(a.parent.vnode)&&Fp(n,l,t,a),a=a.parent}}function Fp(e,l,t,n){const a=sa(l,e,n,!0);un(()=>{pi(n[l],a)},t)}function sa(e,l,t=Ie,n=!1){if(t){const a=t[e]||(t[e]=[]),i=l.__weh||(l.__weh=(...s)=>{if(t.isUnmounted)return;at();const o=dn(t),c=ll(l,t,e,s);return o(),it(),c});return n?a.unshift(i):a.push(i),i}}const Ll=e=>(l,t=Ie)=>(!hn||e==="sp")&&sa(e,(...n)=>l(...n),t),Bp=Ll("bm"),we=Ll("m"),Vp=Ll("bu"),lo=Ll("u"),Si=Ll("bum"),un=Ll("um"),zp=Ll("sp"),Np=Ll("rtg"),Hp=Ll("rtc");function Gp(e,l=Ie){sa("ec",e,l)}const za=e=>e?ko(e)?qi(e)||e.proxy:za(e.parent):null,Ft=Se(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>za(e.parent),$root:e=>za(e.root),$emit:e=>e.emit,$options:e=>Pi(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,aa(e.update)}),$nextTick:e=>e.n||(e.n=st.bind(e.proxy)),$watch:e=>Dp.bind(e)}),Ea=(e,l)=>e!==be&&!e.__isScriptSetup&&oe(e,l),Qp={get({_:e},l){const{ctx:t,setupState:n,data:a,props:i,accessCache:s,type:o,appContext:c}=e;let u;if(l[0]!=="$"){const v=s[l];if(v!==void 0)switch(v){case 1:return n[l];case 2:return a[l];case 4:return t[l];case 3:return i[l]}else{if(Ea(n,l))return s[l]=1,n[l];if(a!==be&&oe(a,l))return s[l]=2,a[l];if((u=e.propsOptions[0])&&oe(u,l))return s[l]=3,i[l];if(t!==be&&oe(t,l))return s[l]=4,t[l];Na&&(s[l]=0)}}const d=Ft[l];let h,g;if(d)return l==="$attrs"&&Qe(e,"get",l),d(e);if((h=o.__cssModules)&&(h=h[l]))return h;if(t!==be&&oe(t,l))return s[l]=4,t[l];if(g=c.config.globalProperties,oe(g,l))return g[l]},set({_:e},l,t){const{data:n,setupState:a,ctx:i}=e;return Ea(a,l)?(a[l]=t,!0):n!==be&&oe(n,l)?(n[l]=t,!0):oe(e.props,l)||l[0]==="$"&&l.slice(1)in e?!1:(i[l]=t,!0)},has({_:{data:e,setupState:l,accessCache:t,ctx:n,appContext:a,propsOptions:i}},s){let o;return!!t[s]||e!==be&&oe(e,s)||Ea(l,s)||(o=i[0])&&oe(o,s)||oe(n,s)||oe(Ft,s)||oe(a.config.globalProperties,s)},defineProperty(e,l,t){return t.get!=null?e._.accessCache[l]=0:oe(t,"value")&&this.set(e,l,t.value,null),Reflect.defineProperty(e,l,t)}};function hs(e){return X(e)?e.reduce((l,t)=>(l[t]=null,l),{}):e}let Na=!0;function $p(e){const l=Pi(e),t=e.proxy,n=e.ctx;Na=!1,l.beforeCreate&&gs(l.beforeCreate,e,"bc");const{data:a,computed:i,methods:s,watch:o,provide:c,inject:u,created:d,beforeMount:h,mounted:g,beforeUpdate:v,updated:f,activated:E,deactivated:w,beforeDestroy:b,beforeUnmount:L,destroyed:_,unmounted:A,render:O,renderTracked:j,renderTriggered:H,errorCaptured:M,serverPrefetch:U,expose:q,inheritAttrs:W,components:C,directives:ee,filters:Le}=l;if(u&&Kp(u,n,null),s)for(const ne in s){const Q=s[ne];te(Q)&&(n[ne]=Q.bind(t))}if(a){const ne=a.call(t,t);xe(ne)&&(e.data=rn(ne))}if(Na=!0,i)for(const ne in i){const Q=i[ne],al=te(Q)?Q.bind(t,t):te(Q.get)?Q.get.bind(t,t):Xe,Sl=!te(Q)&&te(Q.set)?Q.set.bind(t):Xe,pl=y({get:al,set:Sl});Object.defineProperty(n,ne,{enumerable:!0,configurable:!0,get:()=>pl.value,set:Ve=>pl.value=Ve})}if(o)for(const ne in o)to(o[ne],n,t,ne);if(c){const ne=te(c)?c.call(t):c;Reflect.ownKeys(ne).forEach(Q=>{ol(Q,ne[Q])})}d&&gs(d,e,"c");function $(ne,Q){X(Q)?Q.forEach(al=>ne(al.bind(t))):Q&&ne(Q.bind(t))}if($(Bp,h),$(we,g),$(Vp,v),$(lo,f),$(Jp,E),$(Mp,w),$(Gp,M),$(Hp,j),$(Np,H),$(Si,L),$(un,A),$(zp,U),X(q))if(q.length){const ne=e.exposed||(e.exposed={});q.forEach(Q=>{Object.defineProperty(ne,Q,{get:()=>t[Q],set:al=>t[Q]=al})})}else e.exposed||(e.exposed={});O&&e.render===Xe&&(e.render=O),W!=null&&(e.inheritAttrs=W),C&&(e.components=C),ee&&(e.directives=ee)}function Kp(e,l,t=Xe){X(e)&&(e=Ha(e));for(const n in e){const a=e[n];let i;xe(a)?"default"in a?i=_e(a.from||n,a.default,!0):i=_e(a.from||n):i=_e(a),De(i)?Object.defineProperty(l,n,{enumerable:!0,configurable:!0,get:()=>i.value,set:s=>i.value=s}):l[n]=i}}function gs(e,l,t){ll(X(e)?e.map(n=>n.bind(l.proxy)):e.bind(l.proxy),l,t)}function to(e,l,t,n){const a=n.includes(".")?Wr(t,n):()=>t[n];if(qe(e)){const i=l[e];te(i)&&pe(a,i)}else if(te(e))pe(a,e.bind(t));else if(xe(e))if(X(e))e.forEach(i=>to(i,l,t,n));else{const i=te(e.handler)?e.handler.bind(t):l[e.handler];te(i)&&pe(a,i,e)}}function Pi(e){const l=e.type,{mixins:t,extends:n}=l,{mixins:a,optionsCache:i,config:{optionMergeStrategies:s}}=e.appContext,o=i.get(l);let c;return o?c=o:!a.length&&!t&&!n?c=l:(c={},a.length&&a.forEach(u=>Wn(c,u,s,!0)),Wn(c,l,s)),xe(l)&&i.set(l,c),c}function Wn(e,l,t,n=!1){const{mixins:a,extends:i}=l;i&&Wn(e,i,t,!0),a&&a.forEach(s=>Wn(e,s,t,!0));for(const s in l)if(!(n&&s==="expose")){const o=Up[s]||t&&t[s];e[s]=o?o(e[s],l[s]):l[s]}return e}const Up={data:vs,props:ks,emits:ks,methods:Rt,computed:Rt,beforeCreate:Be,created:Be,beforeMount:Be,mounted:Be,beforeUpdate:Be,updated:Be,beforeDestroy:Be,beforeUnmount:Be,destroyed:Be,unmounted:Be,activated:Be,deactivated:Be,errorCaptured:Be,serverPrefetch:Be,components:Rt,directives:Rt,watch:Zp,provide:vs,inject:Wp};function vs(e,l){return l?e?function(){return Se(te(e)?e.call(this,this):e,te(l)?l.call(this,this):l)}:l:e}function Wp(e,l){return Rt(Ha(e),Ha(l))}function Ha(e){if(X(e)){const l={};for(let t=0;t<e.length;t++)l[e[t]]=e[t];return l}return e}function Be(e,l){return e?[...new Set([].concat(e,l))]:l}function Rt(e,l){return e?Se(Object.create(null),e,l):l}function ks(e,l){return e?X(e)&&X(l)?[...new Set([...e,...l])]:Se(Object.create(null),hs(e),hs(l??{})):l}function Zp(e,l){if(!e)return l;if(!l)return e;const t=Se(Object.create(null),e);for(const n in l)t[n]=Be(e[n],l[n]);return t}function no(){return{app:null,config:{isNativeTag:Lu,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Yp=0;function Xp(e,l){return function(n,a=null){te(n)||(n=Se({},n)),a!=null&&!xe(a)&&(a=null);const i=no(),s=new WeakSet;let o=!1;const c=i.app={_uid:Yp++,_component:n,_props:a,_container:null,_context:i,_instance:null,version:jd,get config(){return i.config},set config(u){},use(u,...d){return s.has(u)||(u&&te(u.install)?(s.add(u),u.install(c,...d)):te(u)&&(s.add(u),u(c,...d))),c},mixin(u){return i.mixins.includes(u)||i.mixins.push(u),c},component(u,d){return d?(i.components[u]=d,c):i.components[u]},directive(u,d){return d?(i.directives[u]=d,c):i.directives[u]},mount(u,d,h){if(!o){const g=Pe(n,a);return g.appContext=i,h===!0?h="svg":h===!1&&(h=void 0),d&&l?l(g,u):e(g,u,h),o=!0,c._container=u,u.__vue_app__=c,qi(g.component)||g.component.proxy}},unmount(){o&&(e(null,c._container),delete c._container.__vue_app__)},provide(u,d){return i.provides[u]=d,c},runWithContext(u){const d=Bt;Bt=c;try{return u()}finally{Bt=d}}};return c}}let Bt=null;function ol(e,l){if(Ie){let t=Ie.provides;const n=Ie.parent&&Ie.parent.provides;n===t&&(t=Ie.provides=Object.create(n)),t[e]=l}}function _e(e,l,t=!1){const n=Ie||el;if(n||Bt){const a=n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:Bt._context.provides;if(a&&e in a)return a[e];if(arguments.length>1)return t&&te(l)?l.call(n&&n.proxy):l}}function ed(e,l,t,n=!1){const a={},i={};Gn(i,ra,1),e.propsDefaults=Object.create(null),ao(e,l,a,i);for(const s in e.propsOptions[0])s in a||(a[s]=void 0);t?e.props=n?a:Or(a):e.type.props?e.props=a:e.props=i,e.attrs=i}function ld(e,l,t,n){const{props:a,attrs:i,vnode:{patchFlag:s}}=e,o=ie(a),[c]=e.propsOptions;let u=!1;if((n||s>0)&&!(s&16)){if(s&8){const d=e.vnode.dynamicProps;for(let h=0;h<d.length;h++){let g=d[h];if(ia(e.emitsOptions,g))continue;const v=l[g];if(c)if(oe(i,g))v!==i[g]&&(i[g]=v,u=!0);else{const f=nl(g);a[f]=Ga(c,o,f,v,e,!1)}else v!==i[g]&&(i[g]=v,u=!0)}}}else{ao(e,l,a,i)&&(u=!0);let d;for(const h in o)(!l||!oe(l,h)&&((d=jt(h))===h||!oe(l,d)))&&(c?t&&(t[h]!==void 0||t[d]!==void 0)&&(a[h]=Ga(c,o,h,void 0,e,!0)):delete a[h]);if(i!==o)for(const h in i)(!l||!oe(l,h))&&(delete i[h],u=!0)}u&&El(e,"set","$attrs")}function ao(e,l,t,n){const[a,i]=e.propsOptions;let s=!1,o;if(l)for(let c in l){if(kt(c))continue;const u=l[c];let d;a&&oe(a,d=nl(c))?!i||!i.includes(d)?t[d]=u:(o||(o={}))[d]=u:ia(e.emitsOptions,c)||(!(c in n)||u!==n[c])&&(n[c]=u,s=!0)}if(i){const c=ie(t),u=o||be;for(let d=0;d<i.length;d++){const h=i[d];t[h]=Ga(a,c,h,u[h],e,!oe(u,h))}}return s}function Ga(e,l,t,n,a,i){const s=e[t];if(s!=null){const o=oe(s,"default");if(o&&n===void 0){const c=s.default;if(s.type!==Function&&!s.skipFactory&&te(c)){const{propsDefaults:u}=a;if(t in u)n=u[t];else{const d=dn(a);n=u[t]=c.call(null,l),d()}}else n=c}s[0]&&(i&&!o?n=!1:s[1]&&(n===""||n===jt(t))&&(n=!0))}return n}function io(e,l,t=!1){const n=l.propsCache,a=n.get(e);if(a)return a;const i=e.props,s={},o=[];let c=!1;if(!te(e)){const d=h=>{c=!0;const[g,v]=io(h,l,!0);Se(s,g),v&&o.push(...v)};!t&&l.mixins.length&&l.mixins.forEach(d),e.extends&&d(e.extends),e.mixins&&e.mixins.forEach(d)}if(!i&&!c)return xe(e)&&n.set(e,vt),vt;if(X(i))for(let d=0;d<i.length;d++){const h=nl(i[d]);ms(h)&&(s[h]=be)}else if(i)for(const d in i){const h=nl(d);if(ms(h)){const g=i[d],v=s[h]=X(g)||te(g)?{type:g}:Se({},g);if(v){const f=_s(Boolean,v.type),E=_s(String,v.type);v[0]=f>-1,v[1]=E<0||f<E,(f>-1||oe(v,"default"))&&o.push(h)}}}const u=[s,o];return xe(e)&&n.set(e,u),u}function ms(e){return e[0]!=="$"&&!kt(e)}function fs(e){return e===null?"null":typeof e=="function"?e.name||"":typeof e=="object"&&e.constructor&&e.constructor.name||""}function bs(e,l){return fs(e)===fs(l)}function _s(e,l){return X(l)?l.findIndex(t=>bs(t,e)):te(l)&&bs(l,e)?0:-1}const so=e=>e[0]==="_"||e==="$stable",Ti=e=>X(e)?e.map(sl):[sl(e)],td=(e,l,t)=>{if(l._n)return l;const n=Ep((...a)=>Ti(l(...a)),t);return n._c=!1,n},ro=(e,l,t)=>{const n=e._ctx;for(const a in e){if(so(a))continue;const i=e[a];if(te(i))l[a]=td(a,i,n);else if(i!=null){const s=Ti(i);l[a]=()=>s}}},oo=(e,l)=>{const t=Ti(l);e.slots.default=()=>t},nd=(e,l)=>{if(e.vnode.shapeFlag&32){const t=l._;t?(e.slots=ie(l),Gn(l,"_",t)):ro(l,e.slots={})}else e.slots={},l&&oo(e,l);Gn(e.slots,ra,1)},ad=(e,l,t)=>{const{vnode:n,slots:a}=e;let i=!0,s=be;if(n.shapeFlag&32){const o=l._;o?t&&o===1?i=!1:(Se(a,l),!t&&o===1&&delete a._):(i=!l.$stable,ro(l,a)),s=l}else l&&(oo(e,l),s={default:1});if(i)for(const o in a)!so(o)&&s[o]==null&&delete a[o]};function Zn(e,l,t,n,a=!1){if(X(e)){e.forEach((g,v)=>Zn(g,l&&(X(l)?l[v]:l),t,n,a));return}if(Mt(n)&&!a)return;const i=n.shapeFlag&4?qi(n.component)||n.component.proxy:n.el,s=a?null:i,{i:o,r:c}=e,u=l&&l.r,d=o.refs===be?o.refs={}:o.refs,h=o.setupState;if(u!=null&&u!==c&&(qe(u)?(d[u]=null,oe(h,u)&&(h[u]=null)):De(u)&&(u.value=null)),te(c))Bl(c,o,12,[s,d]);else{const g=qe(c),v=De(c);if(g||v){const f=()=>{if(e.f){const E=g?oe(h,c)?h[c]:d[c]:c.value;a?X(E)&&pi(E,i):X(E)?E.includes(i)||E.push(i):g?(d[c]=[i],oe(h,c)&&(h[c]=d[c])):(c.value=[i],e.k&&(d[e.k]=c.value))}else g?(d[c]=s,oe(h,c)&&(h[c]=s)):v&&(c.value=s,e.k&&(d[e.k]=s))};s?(f.id=-1,ze(f,t)):f()}}}let Tl=!1;const id=e=>e.namespaceURI.includes("svg")&&e.tagName!=="foreignObject",sd=e=>e.namespaceURI.includes("MathML"),Rn=e=>{if(id(e))return"svg";if(sd(e))return"mathml"},Cn=e=>e.nodeType===8;function rd(e){const{mt:l,p:t,o:{patchProp:n,createText:a,nextSibling:i,parentNode:s,remove:o,insert:c,createComment:u}}=e,d=(_,A)=>{if(!A.hasChildNodes()){t(null,_,A),Kn(),A._vnode=_;return}Tl=!1,h(A.firstChild,_,null,null,null),Kn(),A._vnode=_,Tl&&console.error("Hydration completed but contains mismatches.")},h=(_,A,O,j,H,M=!1)=>{const U=Cn(_)&&_.data==="[",q=()=>E(_,A,O,j,H,U),{type:W,ref:C,shapeFlag:ee,patchFlag:Le}=A;let je=_.nodeType;A.el=_,Le===-2&&(M=!1,A.dynamicChildren=null);let $=null;switch(W){case yt:je!==3?A.children===""?(c(A.el=a(""),s(_),_),$=_):$=q():(_.data!==A.children&&(Tl=!0,_.data=A.children),$=i(_));break;case vl:L(_)?($=i(_),b(A.el=_.content.firstChild,_,O)):je!==8||U?$=q():$=i(_);break;case Vt:if(U&&(_=i(_),je=_.nodeType),je===1||je===3){$=_;const ne=!A.children.length;for(let Q=0;Q<A.staticCount;Q++)ne&&(A.children+=$.nodeType===1?$.outerHTML:$.data),Q===A.staticCount-1&&(A.anchor=$),$=i($);return U?i($):$}else q();break;case Ue:U?$=f(_,A,O,j,H,M):$=q();break;default:if(ee&1)(je!==1||A.type.toLowerCase()!==_.tagName.toLowerCase())&&!L(_)?$=q():$=g(_,A,O,j,H,M);else if(ee&6){A.slotScopeIds=H;const ne=s(_);if(U?$=w(_):Cn(_)&&_.data==="teleport start"?$=w(_,_.data,"teleport end"):$=i(_),l(A,ne,null,O,j,Rn(ne),M),Mt(A)){let Q;U?(Q=Pe(Ue),Q.anchor=$?$.previousSibling:ne.lastChild):Q=_.nodeType===3?vo(""):Pe("div"),Q.el=_,A.component.subTree=Q}}else ee&64?je!==8?$=q():$=A.type.hydrate(_,A,O,j,H,M,e,v):ee&128&&($=A.type.hydrate(_,A,O,j,Rn(s(_)),H,M,e,h))}return C!=null&&Zn(C,null,j,A),$},g=(_,A,O,j,H,M)=>{M=M||!!A.dynamicChildren;const{type:U,props:q,patchFlag:W,shapeFlag:C,dirs:ee,transition:Le}=A,je=U==="input"||U==="option";if(je||W!==-1){ee&&hl(A,null,O,"created");let $=!1;if(L(_)){$=co(j,Le)&&O&&O.vnode.props&&O.vnode.props.appear;const Q=_.content.firstChild;$&&Le.beforeEnter(Q),b(Q,_,O),A.el=_=Q}if(C&16&&!(q&&(q.innerHTML||q.textContent))){let Q=v(_.firstChild,A,_,O,j,H,M);for(;Q;){Tl=!0;const al=Q;Q=Q.nextSibling,o(al)}}else C&8&&_.textContent!==A.children&&(Tl=!0,_.textContent=A.children);if(q)if(je||!M||W&48)for(const Q in q)(je&&(Q.endsWith("value")||Q==="indeterminate")||an(Q)&&!kt(Q)||Q[0]===".")&&n(_,Q,null,q[Q],void 0,void 0,O);else q.onClick&&n(_,"onClick",null,q.onClick,void 0,void 0,O);let ne;(ne=q&&q.onVnodeBeforeMount)&&Ye(ne,O,A),ee&&hl(A,null,O,"beforeMount"),((ne=q&&q.onVnodeMounted)||ee||$)&&Ur(()=>{ne&&Ye(ne,O,A),$&&Le.enter(_),ee&&hl(A,null,O,"mounted")},j)}return _.nextSibling},v=(_,A,O,j,H,M,U)=>{U=U||!!A.dynamicChildren;const q=A.children,W=q.length;for(let C=0;C<W;C++){const ee=U?q[C]:q[C]=sl(q[C]);if(_)_=h(_,ee,j,H,M,U);else{if(ee.type===yt&&!ee.children)continue;Tl=!0,t(null,ee,O,null,j,H,Rn(O),M)}}return _},f=(_,A,O,j,H,M)=>{const{slotScopeIds:U}=A;U&&(H=H?H.concat(U):U);const q=s(_),W=v(i(_),A,q,O,j,H,M);return W&&Cn(W)&&W.data==="]"?i(A.anchor=W):(Tl=!0,c(A.anchor=u("]"),q,W),W)},E=(_,A,O,j,H,M)=>{if(Tl=!0,A.el=null,M){const W=w(_);for(;;){const C=i(_);if(C&&C!==W)o(C);else break}}const U=i(_),q=s(_);return o(_),t(null,A,q,U,O,j,Rn(q),H),U},w=(_,A="[",O="]")=>{let j=0;for(;_;)if(_=i(_),_&&Cn(_)&&(_.data===A&&j++,_.data===O)){if(j===0)return i(_);j--}return _},b=(_,A,O)=>{const j=A.parentNode;j&&j.replaceChild(_,A);let H=O;for(;H;)H.vnode.el===A&&(H.vnode.el=H.subTree.el=_),H=H.parent},L=_=>_.nodeType===1&&_.tagName.toLowerCase()==="template";return[d,h]}const ze=Ur;function od(e){return cd(e,rd)}function cd(e,l){const t=wr();t.__VUE__=!0;const{insert:n,remove:a,patchProp:i,createElement:s,createText:o,createComment:c,setText:u,setElementText:d,parentNode:h,nextSibling:g,setScopeId:v=Xe,insertStaticContent:f}=e,E=(k,m,x,T=null,S=null,R=null,V=void 0,D=null,J=!!m.dynamicChildren)=>{if(k===m)return;k&&!Yl(k,m)&&(T=P(k),Ve(k,S,R,!0),k=null),m.patchFlag===-2&&(J=!1,m.dynamicChildren=null);const{type:I,ref:N,shapeFlag:Z}=m;switch(I){case yt:w(k,m,x,T);break;case vl:b(k,m,x,T);break;case Vt:k==null&&L(m,x,T,V);break;case Ue:C(k,m,x,T,S,R,V,D,J);break;default:Z&1?O(k,m,x,T,S,R,V,D,J):Z&6?ee(k,m,x,T,S,R,V,D,J):(Z&64||Z&128)&&I.process(k,m,x,T,S,R,V,D,J,G)}N!=null&&S&&Zn(N,k&&k.ref,R,m||k,!m)},w=(k,m,x,T)=>{if(k==null)n(m.el=o(m.children),x,T);else{const S=m.el=k.el;m.children!==k.children&&u(S,m.children)}},b=(k,m,x,T)=>{k==null?n(m.el=c(m.children||""),x,T):m.el=k.el},L=(k,m,x,T)=>{[k.el,k.anchor]=f(k.children,m,x,T,k.el,k.anchor)},_=({el:k,anchor:m},x,T)=>{let S;for(;k&&k!==m;)S=g(k),n(k,x,T),k=S;n(m,x,T)},A=({el:k,anchor:m})=>{let x;for(;k&&k!==m;)x=g(k),a(k),k=x;a(m)},O=(k,m,x,T,S,R,V,D,J)=>{m.type==="svg"?V="svg":m.type==="math"&&(V="mathml"),k==null?j(m,x,T,S,R,V,D,J):U(k,m,S,R,V,D,J)},j=(k,m,x,T,S,R,V,D)=>{let J,I;const{props:N,shapeFlag:Z,transition:K,dirs:le}=k;if(J=k.el=s(k.type,R,N&&N.is,N),Z&8?d(J,k.children):Z&16&&M(k.children,J,null,T,S,xa(k,R),V,D),le&&hl(k,null,T,"created"),H(J,k,k.scopeId,V,T),N){for(const ge in N)ge!=="value"&&!kt(ge)&&i(J,ge,null,N[ge],R,k.children,T,S,Oe);"value"in N&&i(J,"value",null,N.value,R),(I=N.onVnodeBeforeMount)&&Ye(I,T,k)}le&&hl(k,null,T,"beforeMount");const ae=co(S,K);ae&&K.beforeEnter(J),n(J,m,x),((I=N&&N.onVnodeMounted)||ae||le)&&ze(()=>{I&&Ye(I,T,k),ae&&K.enter(J),le&&hl(k,null,T,"mounted")},S)},H=(k,m,x,T,S)=>{if(x&&v(k,x),T)for(let R=0;R<T.length;R++)v(k,T[R]);if(S){let R=S.subTree;if(m===R){const V=S.vnode;H(k,V,V.scopeId,V.slotScopeIds,S.parent)}}},M=(k,m,x,T,S,R,V,D,J=0)=>{for(let I=J;I<k.length;I++){const N=k[I]=D?Ol(k[I]):sl(k[I]);E(null,N,m,x,T,S,R,V,D)}},U=(k,m,x,T,S,R,V)=>{const D=m.el=k.el;let{patchFlag:J,dynamicChildren:I,dirs:N}=m;J|=k.patchFlag&16;const Z=k.props||be,K=m.props||be;let le;if(x&&Kl(x,!1),(le=K.onVnodeBeforeUpdate)&&Ye(le,x,m,k),N&&hl(m,k,x,"beforeUpdate"),x&&Kl(x,!0),I?q(k.dynamicChildren,I,D,x,T,xa(m,S),R):V||Q(k,m,D,null,x,T,xa(m,S),R,!1),J>0){if(J&16)W(D,m,Z,K,x,T,S);else if(J&2&&Z.class!==K.class&&i(D,"class",null,K.class,S),J&4&&i(D,"style",Z.style,K.style,S),J&8){const ae=m.dynamicProps;for(let ge=0;ge<ae.length;ge++){const fe=ae[ge],Te=Z[fe],il=K[fe];(il!==Te||fe==="value")&&i(D,fe,Te,il,S,k.children,x,T,Oe)}}J&1&&k.children!==m.children&&d(D,m.children)}else!V&&I==null&&W(D,m,Z,K,x,T,S);((le=K.onVnodeUpdated)||N)&&ze(()=>{le&&Ye(le,x,m,k),N&&hl(m,k,x,"updated")},T)},q=(k,m,x,T,S,R,V)=>{for(let D=0;D<m.length;D++){const J=k[D],I=m[D],N=J.el&&(J.type===Ue||!Yl(J,I)||J.shapeFlag&70)?h(J.el):x;E(J,I,N,null,T,S,R,V,!0)}},W=(k,m,x,T,S,R,V)=>{if(x!==T){if(x!==be)for(const D in x)!kt(D)&&!(D in T)&&i(k,D,x[D],null,V,m.children,S,R,Oe);for(const D in T){if(kt(D))continue;const J=T[D],I=x[D];J!==I&&D!=="value"&&i(k,D,I,J,V,m.children,S,R,Oe)}"value"in T&&i(k,"value",x.value,T.value,V)}},C=(k,m,x,T,S,R,V,D,J)=>{const I=m.el=k?k.el:o(""),N=m.anchor=k?k.anchor:o("");let{patchFlag:Z,dynamicChildren:K,slotScopeIds:le}=m;le&&(D=D?D.concat(le):le),k==null?(n(I,x,T),n(N,x,T),M(m.children||[],x,N,S,R,V,D,J)):Z>0&&Z&64&&K&&k.dynamicChildren?(q(k.dynamicChildren,K,x,S,R,V,D),(m.key!=null||S&&m===S.subTree)&&uo(k,m,!0)):Q(k,m,x,N,S,R,V,D,J)},ee=(k,m,x,T,S,R,V,D,J)=>{m.slotScopeIds=D,k==null?m.shapeFlag&512?S.ctx.activate(m,x,T,V,J):Le(m,x,T,S,R,V,J):je(k,m,J)},Le=(k,m,x,T,S,R,V)=>{const D=k.component=bd(k,T,S);if(cn(k)&&(D.ctx.renderer=G),_d(D),D.asyncDep){if(S&&S.registerDep(D,$),!k.el){const J=D.subTree=Pe(vl);b(null,J,m,x)}}else $(D,k,m,x,S,R,V)},je=(k,m,x)=>{const T=m.component=k.component;if(jp(k,m,x))if(T.asyncDep&&!T.asyncResolved){ne(T,m,x);return}else T.next=m,bp(T.update),T.effect.dirty=!0,T.update();else m.el=k.el,T.vnode=m},$=(k,m,x,T,S,R,V)=>{const D=()=>{if(k.isMounted){let{next:N,bu:Z,u:K,parent:le,vnode:ae}=k;{const dt=po(k);if(dt){N&&(N.el=ae.el,ne(k,N,V)),dt.asyncDep.then(()=>{k.isUnmounted||D()});return}}let ge=N,fe;Kl(k,!1),N?(N.el=ae.el,ne(k,N,V)):N=ae,Z&&ba(Z),(fe=N.props&&N.props.onVnodeBeforeUpdate)&&Ye(fe,le,N,ae),Kl(k,!0);const Te=_a(k),il=k.subTree;k.subTree=Te,E(il,Te,h(il.el),P(il),k,S,R),N.el=Te.el,ge===null&&Ap(k,Te.el),K&&ze(K,S),(fe=N.props&&N.props.onVnodeUpdated)&&ze(()=>Ye(fe,le,N,ae),S)}else{let N;const{el:Z,props:K}=m,{bm:le,m:ae,parent:ge}=k,fe=Mt(m);if(Kl(k,!1),le&&ba(le),!fe&&(N=K&&K.onVnodeBeforeMount)&&Ye(N,ge,m),Kl(k,!0),Z&&me){const Te=()=>{k.subTree=_a(k),me(Z,k.subTree,k,S,null)};fe?m.type.__asyncLoader().then(()=>!k.isUnmounted&&Te()):Te()}else{const Te=k.subTree=_a(k);E(null,Te,x,T,k,S,R),m.el=Te.el}if(ae&&ze(ae,S),!fe&&(N=K&&K.onVnodeMounted)){const Te=m;ze(()=>Ye(N,ge,Te),S)}(m.shapeFlag&256||ge&&Mt(ge.vnode)&&ge.vnode.shapeFlag&256)&&k.a&&ze(k.a,S),k.isMounted=!0,m=x=T=null}},J=k.effect=new vi(D,Xe,()=>aa(I),k.scope),I=k.update=()=>{J.dirty&&J.run()};I.id=k.uid,Kl(k,!0),I()},ne=(k,m,x)=>{m.component=k;const T=k.vnode.props;k.vnode=m,k.next=null,ld(k,m.props,T,x),ad(k,m.children,x),at(),cs(k),it()},Q=(k,m,x,T,S,R,V,D,J=!1)=>{const I=k&&k.children,N=k?k.shapeFlag:0,Z=m.children,{patchFlag:K,shapeFlag:le}=m;if(K>0){if(K&128){Sl(I,Z,x,T,S,R,V,D,J);return}else if(K&256){al(I,Z,x,T,S,R,V,D,J);return}}le&8?(N&16&&Oe(I,S,R),Z!==I&&d(x,Z)):N&16?le&16?Sl(I,Z,x,T,S,R,V,D,J):Oe(I,S,R,!0):(N&8&&d(x,""),le&16&&M(Z,x,T,S,R,V,D,J))},al=(k,m,x,T,S,R,V,D,J)=>{k=k||vt,m=m||vt;const I=k.length,N=m.length,Z=Math.min(I,N);let K;for(K=0;K<Z;K++){const le=m[K]=J?Ol(m[K]):sl(m[K]);E(k[K],le,x,null,S,R,V,D,J)}I>N?Oe(k,S,R,!0,!1,Z):M(m,x,T,S,R,V,D,J,Z)},Sl=(k,m,x,T,S,R,V,D,J)=>{let I=0;const N=m.length;let Z=k.length-1,K=N-1;for(;I<=Z&&I<=K;){const le=k[I],ae=m[I]=J?Ol(m[I]):sl(m[I]);if(Yl(le,ae))E(le,ae,x,null,S,R,V,D,J);else break;I++}for(;I<=Z&&I<=K;){const le=k[Z],ae=m[K]=J?Ol(m[K]):sl(m[K]);if(Yl(le,ae))E(le,ae,x,null,S,R,V,D,J);else break;Z--,K--}if(I>Z){if(I<=K){const le=K+1,ae=le<N?m[le].el:T;for(;I<=K;)E(null,m[I]=J?Ol(m[I]):sl(m[I]),x,ae,S,R,V,D,J),I++}}else if(I>K)for(;I<=Z;)Ve(k[I],S,R,!0),I++;else{const le=I,ae=I,ge=new Map;for(I=ae;I<=K;I++){const $e=m[I]=J?Ol(m[I]):sl(m[I]);$e.key!=null&&ge.set($e.key,I)}let fe,Te=0;const il=K-ae+1;let dt=!1,Yi=0;const Tt=new Array(il);for(I=0;I<il;I++)Tt[I]=0;for(I=le;I<=Z;I++){const $e=k[I];if(Te>=il){Ve($e,S,R,!0);continue}let dl;if($e.key!=null)dl=ge.get($e.key);else for(fe=ae;fe<=K;fe++)if(Tt[fe-ae]===0&&Yl($e,m[fe])){dl=fe;break}dl===void 0?Ve($e,S,R,!0):(Tt[dl-ae]=I+1,dl>=Yi?Yi=dl:dt=!0,E($e,m[dl],x,null,S,R,V,D,J),Te++)}const Xi=dt?ud(Tt):vt;for(fe=Xi.length-1,I=il-1;I>=0;I--){const $e=ae+I,dl=m[$e],es=$e+1<N?m[$e+1].el:T;Tt[I]===0?E(null,dl,x,es,S,R,V,D,J):dt&&(fe<0||I!==Xi[fe]?pl(dl,x,es,2):fe--)}}},pl=(k,m,x,T,S=null)=>{const{el:R,type:V,transition:D,children:J,shapeFlag:I}=k;if(I&6){pl(k.component.subTree,m,x,T);return}if(I&128){k.suspense.move(m,x,T);return}if(I&64){V.move(k,m,x,G);return}if(V===Ue){n(R,m,x);for(let Z=0;Z<J.length;Z++)pl(J[Z],m,x,T);n(k.anchor,m,x);return}if(V===Vt){_(k,m,x);return}if(T!==2&&I&1&&D)if(T===0)D.beforeEnter(R),n(R,m,x),ze(()=>D.enter(R),S);else{const{leave:Z,delayLeave:K,afterLeave:le}=D,ae=()=>n(R,m,x),ge=()=>{Z(R,()=>{ae(),le&&le()})};K?K(R,ae,ge):ge()}else n(R,m,x)},Ve=(k,m,x,T=!1,S=!1)=>{const{type:R,props:V,ref:D,children:J,dynamicChildren:I,shapeFlag:N,patchFlag:Z,dirs:K}=k;if(D!=null&&Zn(D,null,x,k,!0),N&256){m.ctx.deactivate(k);return}const le=N&1&&K,ae=!Mt(k);let ge;if(ae&&(ge=V&&V.onVnodeBeforeUnmount)&&Ye(ge,m,k),N&6)jn(k.component,x,T);else{if(N&128){k.suspense.unmount(x,T);return}le&&hl(k,null,m,"beforeUnmount"),N&64?k.type.remove(k,m,x,S,G,T):I&&(R!==Ue||Z>0&&Z&64)?Oe(I,m,x,!1,!0):(R===Ue&&Z&384||!S&&N&16)&&Oe(J,m,x),T&&ut(k)}(ae&&(ge=V&&V.onVnodeUnmounted)||le)&&ze(()=>{ge&&Ye(ge,m,k),le&&hl(k,null,m,"unmounted")},x)},ut=k=>{const{type:m,el:x,anchor:T,transition:S}=k;if(m===Ue){pt(x,T);return}if(m===Vt){A(k);return}const R=()=>{a(x),S&&!S.persisted&&S.afterLeave&&S.afterLeave()};if(k.shapeFlag&1&&S&&!S.persisted){const{leave:V,delayLeave:D}=S,J=()=>V(x,R);D?D(k.el,R,J):J()}else R()},pt=(k,m)=>{let x;for(;k!==m;)x=g(k),a(k),k=x;a(m)},jn=(k,m,x)=>{const{bum:T,scope:S,update:R,subTree:V,um:D}=k;T&&ba(T),S.stop(),R&&(R.active=!1,Ve(V,k,m,x)),D&&ze(D,m),ze(()=>{k.isUnmounted=!0},m),m&&m.pendingBranch&&!m.isUnmounted&&k.asyncDep&&!k.asyncResolved&&k.suspenseId===m.pendingId&&(m.deps--,m.deps===0&&m.resolve())},Oe=(k,m,x,T=!1,S=!1,R=0)=>{for(let V=R;V<k.length;V++)Ve(k[V],m,x,T,S)},P=k=>k.shapeFlag&6?P(k.component.subTree):k.shapeFlag&128?k.suspense.next():g(k.anchor||k.el);let z=!1;const B=(k,m,x)=>{k==null?m._vnode&&Ve(m._vnode,null,null,!0):E(m._vnode||null,k,m,null,null,null,x),z||(z=!0,cs(),Kn(),z=!1),m._vnode=k},G={p:E,um:Ve,m:pl,r:ut,mt:Le,mc:M,pc:Q,pbc:q,n:P,o:e};let de,me;return l&&([de,me]=l(G)),{render:B,hydrate:de,createApp:Xp(B,de)}}function xa({type:e,props:l},t){return t==="svg"&&e==="foreignObject"||t==="mathml"&&e==="annotation-xml"&&l&&l.encoding&&l.encoding.includes("html")?void 0:t}function Kl({effect:e,update:l},t){e.allowRecurse=l.allowRecurse=t}function co(e,l){return(!e||e&&!e.pendingBranch)&&l&&!l.persisted}function uo(e,l,t=!1){const n=e.children,a=l.children;if(X(n)&&X(a))for(let i=0;i<n.length;i++){const s=n[i];let o=a[i];o.shapeFlag&1&&!o.dynamicChildren&&((o.patchFlag<=0||o.patchFlag===32)&&(o=a[i]=Ol(a[i]),o.el=s.el),t||uo(s,o)),o.type===yt&&(o.el=s.el)}}function ud(e){const l=e.slice(),t=[0];let n,a,i,s,o;const c=e.length;for(n=0;n<c;n++){const u=e[n];if(u!==0){if(a=t[t.length-1],e[a]<u){l[n]=a,t.push(n);continue}for(i=0,s=t.length-1;i<s;)o=i+s>>1,e[t[o]]<u?i=o+1:s=o;u<e[t[i]]&&(i>0&&(l[n]=t[i-1]),t[i]=n)}}for(i=t.length,s=t[i-1];i-- >0;)t[i]=s,s=l[s];return t}function po(e){const l=e.subTree.component;if(l)return l.asyncDep&&!l.asyncResolved?l:po(l)}const pd=e=>e.__isTeleport,Ue=Symbol.for("v-fgt"),yt=Symbol.for("v-txt"),vl=Symbol.for("v-cmt"),Vt=Symbol.for("v-stc"),zt=[];let rl=null;function q2(e=!1){zt.push(rl=e?null:[])}function dd(){zt.pop(),rl=zt[zt.length-1]||null}let Wt=1;function ys(e){Wt+=e}function hd(e){return e.dynamicChildren=Wt>0?rl||vt:null,dd(),Wt>0&&rl&&rl.push(e),e}function D2(e,l,t,n,a,i){return hd(go(e,l,t,n,a,i,!0))}function Qa(e){return e?e.__v_isVNode===!0:!1}function Yl(e,l){return e.type===l.type&&e.key===l.key}const ra="__vInternal",ho=({key:e})=>e??null,Nn=({ref:e,ref_key:l,ref_for:t})=>(typeof e=="number"&&(e=""+e),e!=null?qe(e)||De(e)||te(e)?{i:el,r:e,k:l,f:!!t}:e:null);function go(e,l=null,t=null,n=0,a=null,i=e===Ue?0:1,s=!1,o=!1){const c={__v_isVNode:!0,__v_skip:!0,type:e,props:l,key:l&&ho(l),ref:l&&Nn(l),scopeId:$r,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:i,patchFlag:n,dynamicProps:a,dynamicChildren:null,appContext:null,ctx:el};return o?(Ii(c,t),i&128&&e.normalize(c)):t&&(c.shapeFlag|=qe(t)?8:16),Wt>0&&!s&&rl&&(c.patchFlag>0||i&6)&&c.patchFlag!==32&&rl.push(c),c}const Pe=gd;function gd(e,l=null,t=null,n=0,a=null,i=!1){if((!e||e===Sp)&&(e=vl),Qa(e)){const o=zl(e,l,!0);return t&&Ii(o,t),Wt>0&&!i&&rl&&(o.shapeFlag&6?rl[rl.indexOf(e)]=o:rl.push(o)),o.patchFlag|=-2,o}if(Ld(e)&&(e=e.__vccOpts),l){l=vd(l);let{class:o,style:c}=l;o&&!qe(o)&&(l.class=gi(o)),xe(c)&&(Jr(c)&&!X(c)&&(c=Se({},c)),l.style=hi(c))}const s=qe(e)?1:Tp(e)?128:pd(e)?64:xe(e)?4:te(e)?2:0;return go(e,l,t,n,a,s,i,!0)}function vd(e){return e?Jr(e)||ra in e?Se({},e):e:null}function zl(e,l,t=!1){const{props:n,ref:a,patchFlag:i,children:s}=e,o=l?kd(n||{},l):n;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:o,key:o&&ho(o),ref:l&&l.ref?t&&a?X(a)?a.concat(Nn(l)):[a,Nn(l)]:Nn(l):a,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:s,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:l&&e.type!==Ue?i===-1?16:i|16:i,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&zl(e.ssContent),ssFallback:e.ssFallback&&zl(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function vo(e=" ",l=0){return Pe(yt,null,e,l)}function R2(e,l){const t=Pe(Vt,null,e);return t.staticCount=l,t}function sl(e){return e==null||typeof e=="boolean"?Pe(vl):X(e)?Pe(Ue,null,e.slice()):typeof e=="object"?Ol(e):Pe(yt,null,String(e))}function Ol(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:zl(e)}function Ii(e,l){let t=0;const{shapeFlag:n}=e;if(l==null)l=null;else if(X(l))t=16;else if(typeof l=="object")if(n&65){const a=l.default;a&&(a._c&&(a._d=!1),Ii(e,a()),a._c&&(a._d=!0));return}else{t=32;const a=l._;!a&&!(ra in l)?l._ctx=el:a===3&&el&&(el.slots._===1?l._=1:(l._=2,e.patchFlag|=1024))}else te(l)?(l={default:l,_ctx:el},t=32):(l=String(l),n&64?(t=16,l=[vo(l)]):t=8);e.children=l,e.shapeFlag|=t}function kd(...e){const l={};for(let t=0;t<e.length;t++){const n=e[t];for(const a in n)if(a==="class")l.class!==n.class&&(l.class=gi([l.class,n.class]));else if(a==="style")l.style=hi([l.style,n.style]);else if(an(a)){const i=l[a],s=n[a];s&&i!==s&&!(X(i)&&i.includes(s))&&(l[a]=i?[].concat(i,s):s)}else a!==""&&(l[a]=n[a])}return l}function Ye(e,l,t,n=null){ll(e,l,7,[t,n])}const md=no();let fd=0;function bd(e,l,t){const n=e.type,a=(l?l.appContext:e.appContext)||md,i={uid:fd++,vnode:e,type:n,parent:l,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new Vu(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:io(n,a),emitsOptions:Qr(n,a),emit:null,emitted:null,propsDefaults:be,inheritAttrs:n.inheritAttrs,ctx:be,data:be,props:be,attrs:be,slots:be,refs:be,setupState:be,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return i.ctx={_:i},i.root=l?l.root:i,i.emit=wp.bind(null,i),e.ce&&e.ce(i),i}let Ie=null;const pn=()=>Ie||el;let Yn,$a;{const e=wr(),l=(t,n)=>{let a;return(a=e[t])||(a=e[t]=[]),a.push(n),i=>{a.length>1?a.forEach(s=>s(i)):a[0](i)}};Yn=l("__VUE_INSTANCE_SETTERS__",t=>Ie=t),$a=l("__VUE_SSR_SETTERS__",t=>hn=t)}const dn=e=>{const l=Ie;return Yn(e),e.scope.on(),()=>{e.scope.off(),Yn(l)}},ws=()=>{Ie&&Ie.scope.off(),Yn(null)};function ko(e){return e.vnode.shapeFlag&4}let hn=!1;function _d(e,l=!1){l&&$a(l);const{props:t,children:n}=e.vnode,a=ko(e);ed(e,t,a,l),nd(e,n);const i=a?yd(e,l):void 0;return l&&$a(!1),i}function yd(e,l){const t=e.type;e.accessCache=Object.create(null),e.proxy=Mr(new Proxy(e.ctx,Qp));const{setup:n}=t;if(n){const a=e.setupContext=n.length>1?Ed(e):null,i=dn(e);at();const s=Bl(n,e,0,[e.props,a]);if(it(),i(),yr(s)){if(s.then(ws,ws),l)return s.then(o=>{Es(e,o,l)}).catch(o=>{on(o,e,0)});e.asyncDep=s}else Es(e,s,l)}else mo(e,l)}function Es(e,l,t){te(l)?e.type.__ssrInlineRender?e.ssrRender=l:e.render=l:xe(l)&&(e.setupState=Vr(l)),mo(e,t)}let xs;function mo(e,l,t){const n=e.type;if(!e.render){if(!l&&xs&&!n.render){const a=n.template||Pi(e).template;if(a){const{isCustomElement:i,compilerOptions:s}=e.appContext.config,{delimiters:o,compilerOptions:c}=n,u=Se(Se({isCustomElement:i,delimiters:o},s),c);n.render=xs(a,u)}}e.render=n.render||Xe}{const a=dn(e);at();try{$p(e)}finally{it(),a()}}}function wd(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(l,t){return Qe(e,"get","$attrs"),l[t]}}))}function Ed(e){const l=t=>{e.exposed=t||{}};return{get attrs(){return wd(e)},slots:e.slots,emit:e.emit,expose:l}}function qi(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Vr(Mr(e.exposed)),{get(l,t){if(t in l)return l[t];if(t in Ft)return Ft[t](e)},has(l,t){return t in l||t in Ft}}))}function xd(e,l=!0){return te(e)?e.displayName||e.name:e.name||l&&e.__name}function Ld(e){return te(e)&&"__vccOpts"in e}const y=(e,l)=>up(e,l,hn);function r(e,l,t){const n=arguments.length;return n===2?xe(l)&&!X(l)?Qa(l)?Pe(e,null,[l]):Pe(e,l):Pe(e,null,l):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&Qa(t)&&(t=[t]),Pe(e,l,t))}const jd="3.4.21";/**
* @vue/runtime-dom v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ad="http://www.w3.org/2000/svg",Sd="http://www.w3.org/1998/Math/MathML",Jl=typeof document<"u"?document:null,Ls=Jl&&Jl.createElement("template"),Pd={insert:(e,l,t)=>{l.insertBefore(e,t||null)},remove:e=>{const l=e.parentNode;l&&l.removeChild(e)},createElement:(e,l,t,n)=>{const a=l==="svg"?Jl.createElementNS(Ad,e):l==="mathml"?Jl.createElementNS(Sd,e):Jl.createElement(e,t?{is:t}:void 0);return e==="select"&&n&&n.multiple!=null&&a.setAttribute("multiple",n.multiple),a},createText:e=>Jl.createTextNode(e),createComment:e=>Jl.createComment(e),setText:(e,l)=>{e.nodeValue=l},setElementText:(e,l)=>{e.textContent=l},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Jl.querySelector(e),setScopeId(e,l){e.setAttribute(l,"")},insertStaticContent(e,l,t,n,a,i){const s=t?t.previousSibling:l.lastChild;if(a&&(a===i||a.nextSibling))for(;l.insertBefore(a.cloneNode(!0),t),!(a===i||!(a=a.nextSibling)););else{Ls.innerHTML=n==="svg"?`<svg>${e}</svg>`:n==="mathml"?`<math>${e}</math>`:e;const o=Ls.content;if(n==="svg"||n==="mathml"){const c=o.firstChild;for(;c.firstChild;)o.appendChild(c.firstChild);o.removeChild(c)}l.insertBefore(o,t)}return[s?s.nextSibling:l.firstChild,t?t.previousSibling:l.lastChild]}},Il="transition",It="animation",wt=Symbol("_vtc"),Nl=(e,{slots:l})=>r(Cp,bo(e),l);Nl.displayName="Transition";const fo={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Td=Nl.props=Se({},Yr,fo),Ul=(e,l=[])=>{X(e)?e.forEach(t=>t(...l)):e&&e(...l)},js=e=>e?X(e)?e.some(l=>l.length>1):e.length>1:!1;function bo(e){const l={};for(const C in e)C in fo||(l[C]=e[C]);if(e.css===!1)return l;const{name:t="v",type:n,duration:a,enterFromClass:i=`${t}-enter-from`,enterActiveClass:s=`${t}-enter-active`,enterToClass:o=`${t}-enter-to`,appearFromClass:c=i,appearActiveClass:u=s,appearToClass:d=o,leaveFromClass:h=`${t}-leave-from`,leaveActiveClass:g=`${t}-leave-active`,leaveToClass:v=`${t}-leave-to`}=e,f=Id(a),E=f&&f[0],w=f&&f[1],{onBeforeEnter:b,onEnter:L,onEnterCancelled:_,onLeave:A,onLeaveCancelled:O,onBeforeAppear:j=b,onAppear:H=L,onAppearCancelled:M=_}=l,U=(C,ee,Le)=>{ql(C,ee?d:o),ql(C,ee?u:s),Le&&Le()},q=(C,ee)=>{C._isLeaving=!1,ql(C,h),ql(C,v),ql(C,g),ee&&ee()},W=C=>(ee,Le)=>{const je=C?H:L,$=()=>U(ee,C,Le);Ul(je,[ee,$]),As(()=>{ql(ee,C?c:i),_l(ee,C?d:o),js(je)||Ss(ee,n,E,$)})};return Se(l,{onBeforeEnter(C){Ul(b,[C]),_l(C,i),_l(C,s)},onBeforeAppear(C){Ul(j,[C]),_l(C,c),_l(C,u)},onEnter:W(!1),onAppear:W(!0),onLeave(C,ee){C._isLeaving=!0;const Le=()=>q(C,ee);_l(C,h),yo(),_l(C,g),As(()=>{C._isLeaving&&(ql(C,h),_l(C,v),js(A)||Ss(C,n,w,Le))}),Ul(A,[C,Le])},onEnterCancelled(C){U(C,!1),Ul(_,[C])},onAppearCancelled(C){U(C,!0),Ul(M,[C])},onLeaveCancelled(C){q(C),Ul(O,[C])}})}function Id(e){if(e==null)return null;if(xe(e))return[La(e.enter),La(e.leave)];{const l=La(e);return[l,l]}}function La(e){return Ru(e)}function _l(e,l){l.split(/\s+/).forEach(t=>t&&e.classList.add(t)),(e[wt]||(e[wt]=new Set)).add(l)}function ql(e,l){l.split(/\s+/).forEach(n=>n&&e.classList.remove(n));const t=e[wt];t&&(t.delete(l),t.size||(e[wt]=void 0))}function As(e){requestAnimationFrame(()=>{requestAnimationFrame(e)})}let qd=0;function Ss(e,l,t,n){const a=e._endId=++qd,i=()=>{a===e._endId&&n()};if(t)return setTimeout(i,t);const{type:s,timeout:o,propCount:c}=_o(e,l);if(!s)return n();const u=s+"end";let d=0;const h=()=>{e.removeEventListener(u,g),i()},g=v=>{v.target===e&&++d>=c&&h()};setTimeout(()=>{d<c&&h()},o+1),e.addEventListener(u,g)}function _o(e,l){const t=window.getComputedStyle(e),n=f=>(t[f]||"").split(", "),a=n(`${Il}Delay`),i=n(`${Il}Duration`),s=Ps(a,i),o=n(`${It}Delay`),c=n(`${It}Duration`),u=Ps(o,c);let d=null,h=0,g=0;l===Il?s>0&&(d=Il,h=s,g=i.length):l===It?u>0&&(d=It,h=u,g=c.length):(h=Math.max(s,u),d=h>0?s>u?Il:It:null,g=d?d===Il?i.length:c.length:0);const v=d===Il&&/\b(transform|all)(,|$)/.test(n(`${Il}Property`).toString());return{type:d,timeout:h,propCount:g,hasTransform:v}}function Ps(e,l){for(;e.length<l.length;)e=e.concat(e);return Math.max(...l.map((t,n)=>Ts(t)+Ts(e[n])))}function Ts(e){return e==="auto"?0:Number(e.slice(0,-1).replace(",","."))*1e3}function yo(){return document.body.offsetHeight}function Dd(e,l,t){const n=e[wt];n&&(l=(l?[l,...n]:[...n]).join(" ")),l==null?e.removeAttribute("class"):t?e.setAttribute("class",l):e.className=l}const Is=Symbol("_vod"),Rd=Symbol("_vsh"),Cd=Symbol(""),Od=/(^|;)\s*display\s*:/;function Jd(e,l,t){const n=e.style,a=qe(t);let i=!1;if(t&&!a){if(l)if(qe(l))for(const s of l.split(";")){const o=s.slice(0,s.indexOf(":")).trim();t[o]==null&&Hn(n,o,"")}else for(const s in l)t[s]==null&&Hn(n,s,"");for(const s in t)s==="display"&&(i=!0),Hn(n,s,t[s])}else if(a){if(l!==t){const s=n[Cd];s&&(t+=";"+s),n.cssText=t,i=Od.test(t)}}else l&&e.removeAttribute("style");Is in e&&(e[Is]=i?n.display:"",e[Rd]&&(n.display="none"))}const qs=/\s*!important$/;function Hn(e,l,t){if(X(t))t.forEach(n=>Hn(e,l,n));else if(t==null&&(t=""),l.startsWith("--"))e.setProperty(l,t);else{const n=Md(e,l);qs.test(t)?e.setProperty(jt(n),t.replace(qs,""),"important"):e[n]=t}}const Ds=["Webkit","Moz","ms"],ja={};function Md(e,l){const t=ja[l];if(t)return t;let n=nl(l);if(n!=="filter"&&n in e)return ja[l]=n;n=sn(n);for(let a=0;a<Ds.length;a++){const i=Ds[a]+n;if(i in e)return ja[l]=i}return l}const Rs="http://www.w3.org/1999/xlink";function Fd(e,l,t,n,a){if(n&&l.startsWith("xlink:"))t==null?e.removeAttributeNS(Rs,l.slice(6,l.length)):e.setAttributeNS(Rs,l,t);else{const i=Bu(l);t==null||i&&!Er(t)?e.removeAttribute(l):e.setAttribute(l,i?"":t)}}function Bd(e,l,t,n,a,i,s){if(l==="innerHTML"||l==="textContent"){n&&s(n,a,i),e[l]=t??"";return}const o=e.tagName;if(l==="value"&&o!=="PROGRESS"&&!o.includes("-")){const u=o==="OPTION"?e.getAttribute("value")||"":e.value,d=t??"";(u!==d||!("_value"in e))&&(e.value=d),t==null&&e.removeAttribute(l),e._value=t;return}let c=!1;if(t===""||t==null){const u=typeof e[l];u==="boolean"?t=Er(t):t==null&&u==="string"?(t="",c=!0):u==="number"&&(t=0,c=!0)}try{e[l]=t}catch{}c&&e.removeAttribute(l)}function Vd(e,l,t,n){e.addEventListener(l,t,n)}function zd(e,l,t,n){e.removeEventListener(l,t,n)}const Cs=Symbol("_vei");function Nd(e,l,t,n,a=null){const i=e[Cs]||(e[Cs]={}),s=i[l];if(n&&s)s.value=n;else{const[o,c]=Hd(l);if(n){const u=i[l]=$d(n,a);Vd(e,o,u,c)}else s&&(zd(e,o,s,c),i[l]=void 0)}}const Os=/(?:Once|Passive|Capture)$/;function Hd(e){let l;if(Os.test(e)){l={};let n;for(;n=e.match(Os);)e=e.slice(0,e.length-n[0].length),l[n[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):jt(e.slice(2)),l]}let Aa=0;const Gd=Promise.resolve(),Qd=()=>Aa||(Gd.then(()=>Aa=0),Aa=Date.now());function $d(e,l){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;ll(Kd(n,t.value),l,5,[n])};return t.value=e,t.attached=Qd(),t}function Kd(e,l){if(X(l)){const t=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{t.call(e),e._stopped=!0},l.map(n=>a=>!a._stopped&&n&&n(a))}else return l}const Js=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,Ud=(e,l,t,n,a,i,s,o,c)=>{const u=a==="svg";l==="class"?Dd(e,n,u):l==="style"?Jd(e,t,n):an(l)?ui(l)||Nd(e,l,t,n,s):(l[0]==="."?(l=l.slice(1),!0):l[0]==="^"?(l=l.slice(1),!1):Wd(e,l,n,u))?Bd(e,l,n,i,s,o,c):(l==="true-value"?e._trueValue=n:l==="false-value"&&(e._falseValue=n),Fd(e,l,n,u))};function Wd(e,l,t,n){if(n)return!!(l==="innerHTML"||l==="textContent"||l in e&&Js(l)&&te(t));if(l==="spellcheck"||l==="draggable"||l==="translate"||l==="form"||l==="list"&&e.tagName==="INPUT"||l==="type"&&e.tagName==="TEXTAREA")return!1;if(l==="width"||l==="height"){const a=e.tagName;if(a==="IMG"||a==="VIDEO"||a==="CANVAS"||a==="SOURCE")return!1}return Js(l)&&qe(t)?!1:l in e}const wo=new WeakMap,Eo=new WeakMap,Xn=Symbol("_moveCb"),Ms=Symbol("_enterCb"),xo={name:"TransitionGroup",props:Se({},Td,{tag:String,moveClass:String}),setup(e,{slots:l}){const t=pn(),n=Zr();let a,i;return lo(()=>{if(!a.length)return;const s=e.moveClass||`${e.name||"v"}-move`;if(!lh(a[0].el,t.vnode.el,s))return;a.forEach(Yd),a.forEach(Xd);const o=a.filter(eh);yo(),o.forEach(c=>{const u=c.el,d=u.style;_l(u,s),d.transform=d.webkitTransform=d.transitionDuration="";const h=u[Xn]=g=>{g&&g.target!==u||(!g||/transform$/.test(g.propertyName))&&(u.removeEventListener("transitionend",h),u[Xn]=null,ql(u,s))};u.addEventListener("transitionend",h)})}),()=>{const s=ie(e),o=bo(s);let c=s.tag||Ue;a=i,i=l.default?Ai(l.default()):[];for(let u=0;u<i.length;u++){const d=i[u];d.key!=null&&Ut(d,Kt(d,o,n,t))}if(a)for(let u=0;u<a.length;u++){const d=a[u];Ut(d,Kt(d,o,n,t)),wo.set(d,d.el.getBoundingClientRect())}return Pe(c,null,i)}}},Zd=e=>delete e.mode;xo.props;const Lo=xo;function Yd(e){const l=e.el;l[Xn]&&l[Xn](),l[Ms]&&l[Ms]()}function Xd(e){Eo.set(e,e.el.getBoundingClientRect())}function eh(e){const l=wo.get(e),t=Eo.get(e),n=l.left-t.left,a=l.top-t.top;if(n||a){const i=e.el.style;return i.transform=i.webkitTransform=`translate(${n}px,${a}px)`,i.transitionDuration="0s",e}}function lh(e,l,t){const n=e.cloneNode(),a=e[wt];a&&a.forEach(o=>{o.split(/\s+/).forEach(c=>c&&n.classList.remove(c))}),t.split(/\s+/).forEach(o=>o&&n.classList.add(o)),n.style.display="none";const i=l.nodeType===1?l:l.parentNode;i.appendChild(n);const{hasTransform:s}=_o(n);return i.removeChild(n),s}const th=Se({patchProp:Ud},Pd);let Sa,Fs=!1;function nh(){return Sa=Fs?Sa:od(th),Fs=!0,Sa}const ah=(...e)=>{const l=nh().createApp(...e),{mount:t}=l;return l.mount=n=>{const a=sh(n);if(a)return t(a,!0,ih(a))},l};function ih(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function sh(e){return qe(e)?document.querySelector(e):e}var rh=["link","meta","script","style","noscript","template"],oh=["title","base"],ch=([e,l,t])=>oh.includes(e)?e:rh.includes(e)?e==="meta"&&l.name?`${e}.${l.name}`:e==="template"&&l.id?`${e}.${l.id}`:JSON.stringify([e,Object.entries(l).map(([n,a])=>typeof a=="boolean"?a?[n,""]:null:[n,a]).filter(n=>n!=null).sort(([n],[a])=>n.localeCompare(a)),t]):null,uh=e=>{const l=new Set,t=[];return e.forEach(n=>{const a=ch(n);a&&!l.has(a)&&(l.add(a),t.push(n))}),t},ph=e=>e[0]==="/"?e:`/${e}`,jo=e=>e[e.length-1]==="/"||e.endsWith(".html")?e:`${e}/`,kl=e=>/^(https?:)?\/\//.test(e),dh=/.md((\?|#).*)?$/,Zt=(e,l="/")=>!!(kl(e)||e.startsWith("/")&&!e.startsWith(l)&&!dh.test(e)),Ao=e=>/^[a-z][a-z0-9+.-]*:/.test(e),gn=e=>Object.prototype.toString.call(e)==="[object Object]",hh=e=>{const[l,...t]=e.split(/(\?|#)/);if(!l||l.endsWith("/"))return e;let n=l.replace(/(^|\/)README.md$/i,"$1index.html");return n.endsWith(".md")?n=n.substring(0,n.length-3)+".html":n.endsWith(".html")||(n=n+".html"),n.endsWith("/index.html")&&(n=n.substring(0,n.length-10)),n+t.join("")},oa=e=>e[e.length-1]==="/"?e.slice(0,-1):e,So=e=>e[0]==="/"?e.slice(1):e,gh=(e,l)=>{const t=Object.keys(e).sort((n,a)=>{const i=a.split("/").length-n.split("/").length;return i!==0?i:a.length-n.length});for(const n of t)if(l.startsWith(n))return n;return"/"},ye=e=>typeof e=="string";const vh="modulepreload",kh=function(e){return"/learning/"+e},Bs={},p=function(l,t,n){let a=Promise.resolve();if(t&&t.length>0){const i=document.getElementsByTagName("link"),s=document.querySelector("meta[property=csp-nonce]"),o=(s==null?void 0:s.nonce)||(s==null?void 0:s.getAttribute("nonce"));a=Promise.all(t.map(c=>{if(c=kh(c),c in Bs)return;Bs[c]=!0;const u=c.endsWith(".css"),d=u?'[rel="stylesheet"]':"";if(!!n)for(let v=i.length-1;v>=0;v--){const f=i[v];if(f.href===c&&(!u||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${c}"]${d}`))return;const g=document.createElement("link");if(g.rel=u?"stylesheet":vh,u||(g.as="script",g.crossOrigin=""),g.href=c,o&&g.setAttribute("nonce",o),document.head.appendChild(g),u)return new Promise((v,f)=>{g.addEventListener("load",v),g.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${c}`)))})}))}return a.then(()=>l()).catch(i=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=i,window.dispatchEvent(s),!s.defaultPrevented)throw i})},mh=JSON.parse('{"/c++/array.html":"/c__/array.html","/c++/function.html":"/c__/function.html","/c++/headFile.html":"/c__/headFile.html","/c++/stream.html":"/c__/stream.html","/distributed-system/rpc/http&rpc.html":"/distributed-system/rpc/http_rpc.html"}'),fh=Object.fromEntries([["/home.html",{loader:()=>p(()=>import("./home.html-Dw6bhkfZ.js"),__vite__mapDeps([0,1])),meta:{d:1725292091e3,e:`<div class="hint-container tip">
<p class="hint-container-title">友情提示</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量很高，专为面试打造，配合 JavaGuide 食用)。</li>
<li><strong>知识星球</strong>：专属面试小册/一对一交流/简历修改/专属求职指南，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 知识星球</a></strong>（点击链接即可查看星球的详细介绍，一定确定自己真的需要再加入）。</li>
<li><strong>使用建议</strong> ：有水平的面试官都是顺着项目经历挖掘技术问题。一定不要死记硬背技术八股文！详细的学习建议请参考：<a href="/learning/javaguide/use-suggestion.html" target="_blank">JavaGuide 使用建议</a>。</li>
<li><strong>求个 Star</strong>：如果觉得 JavaGuide 的内容对你有帮助的话，还请点个免费的 Star，这是对我最大的鼓励，感谢各位一起同行，共勉！传送门：<a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener noreferrer">GitHub</a> | <a href="https://gitee.com/SnailClimb/JavaGuide" target="_blank" rel="noopener noreferrer">Gitee</a>。</li>
<li><strong>转载须知</strong>：以下所有文章如非文首说明为转载皆为 JavaGuide 原创，转载请在文首注明出处。如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！</li>
</ul>
</div>`,r:{minutes:11.21,words:3364},t:"JavaGuide（Java学习&面试指南）",i:"creative",y:"a"}}],["/",{loader:()=>p(()=>import("./index.html-CzKwfPYn.js"),__vite__mapDeps([2,1])),meta:{t:"面试指南",i:"home"}}],["/AloT/basis.html",{loader:()=>p(()=>import("./basis.html-QMrimd-S.js"),__vite__mapDeps([3,1])),meta:{d:1725292091e3,e:`<h2>AIoT</h2>
<ul>
<li>create more efficient IoT operations,</li>
<li>improve human-machine interactions</li>
<li>enhance data management and analytics.</li>
</ul>
<p>API ensure the connection from the end user to the machine.</p>
<p>Data collected by IoT devices are used by AI to give insights</p>
`,r:{minutes:.36,words:108},t:"基本概念",y:"a"}}],["/about-the-author/dog-that-copies-other-people-essay.html",{loader:()=>p(()=>import("./dog-that-copies-other-people-essay.html-C1nXc2KH.js"),__vite__mapDeps([4,1])),meta:{d:1725292091e3,c:"走近作者",g:["杂谈"],e:`<p>抄袭狗真的太烦了。。。</p>
<p>听朋友说我的文章在知乎又被盗了，原封不动地被别人用来引流。</p>
<figure><img src="https://oss.javaguide.cn/p3-juejin/39f223bd8d8240b8b7328f7ab6edbc57~tplv-k3u1fbpfcp-zoom-1.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<p>而且！！！这还不是最气的。</p>
<p>这人还在文末注明的原出处还不是我的。。。</p>
<figure><img src="https://oss.javaguide.cn/p3-juejin/fa47e0752f4b4b57af424114bc6bc558~tplv-k3u1fbpfcp-zoom-1.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:2.11,words:634},t:"抄袭狗，你冬天睡觉脚必冷！！！",y:"a"}}],["/about-the-author/feelings-after-one-month-of-induction-training.html",{loader:()=>p(()=>import("./feelings-after-one-month-of-induction-training.html-Beufeq7r.js"),__vite__mapDeps([5,1])),meta:{d:1725292091e3,c:"走近作者",g:["个人经历"],e:"<p>不知不觉已经入职一个多月了，在入职之前我没有在某个公司实习过或者工作过，所以很多东西刚入职工作的我来说还是比较新颖的。学校到职场的转变，带来了角色的转变，其中的差别因人而异。对我而言，在学校的时候课堂上老师课堂上教的东西，自己会根据自己的兴趣选择性接受，甚至很多课程你不想去上的话，还可以逃掉。到了公司就不一样了，公司要求你会的技能你不得不学，除非你不想干了。在学校的时候大部分人编程的目的都是为了通过考试或者找到一份好工作，真正靠自己兴趣支撑起来的很少，到了工作岗位之后我们编程更多的是因为工作的要求，相比于学校的来说会一般会更有挑战而且压力更大。在学校的时候，我们最重要的就是对自己负责，我们不断学习知识去武装自己，但是到了公司之后我们不光要对自己负责，更要对公司负责，毕竟公司出钱请你过来，不是让你一直 on beach 的。</p>",r:{minutes:7.43,words:2228},t:"入职培训一个月后的感受",y:"a"}}],["/about-the-author/feelings-of-half-a-year-from-graduation-to-entry.html",{loader:()=>p(()=>import("./feelings-of-half-a-year-from-graduation-to-entry.html-BLbZymN8.js"),__vite__mapDeps([6,1])),meta:{d:1725292091e3,c:"走近作者",g:["个人经历"],e:`<p>如果大家看过我之前的介绍的话，就会知道我是 19 年毕业的几百万应届毕业生中的一员。这篇文章主要讲了一下我入职大半年的感受，文中有很多自己的主观感受，如果你们有任何不认同的地方都可以直接在评论区说出来，会很尊重其他人的想法。</p>
<p>简单说一下自己的情况吧！我目前是在一家外企，每天的工作和大部分人一样就是做开发。毕业到现在，差不多也算是工作半年多了，也已经过了公司 6 个月的试用期。目前在公司做过两个偏向于业务方向的项目，其中一个正在做。你很难想象我在公司做的两个业务项目的后端都没有涉及到分布式/微服务，没有接触到 Redis、Kafka 等等比较“高大上”的技术在项目中的实际运用。</p>`,r:{minutes:7.08,words:2124},t:"从毕业到入职半年的感受",y:"a"}}],["/about-the-author/internet-addiction-teenager.html",{loader:()=>p(()=>import("./internet-addiction-teenager.html-CcIlc45l.js"),__vite__mapDeps([7,1])),meta:{d:1725292091e3,c:"走近作者",g:["个人经历"],e:`<blockquote>
<p>这篇文章写于 2021 年高考前夕。</p>
</blockquote>
<p>聊到高考，无数人都似乎有很多话说。今天就假借高考的名义，简单来聊聊我的高中求学经历吧！</p>
<p>说实话，我自己的高中求学经历真的还不算平淡，甚至有点魔幻，所以还是有很多话想要说的。</p>
<p>这篇文章大概会从我的初中一直介绍到高中，每一部分我都不会花太多篇幅，就简单聊聊吧！</p>
<p><strong>以下所有内容皆是事实，没有任何夸大的地方，稍微有一点点魔幻。</strong></p>
<h2>刚开始接触电脑</h2>
<p>最开始接触电脑是在我刚上五年级的时候，那时候家里没电脑，刚开始上网都是在黑网吧玩的。</p>`,r:{minutes:12.73,words:3820},t:"我曾经也是网瘾少年",y:"a"}}],["/about-the-author/javaguide-100k-star.html",{loader:()=>p(()=>import("./javaguide-100k-star.html-DlBiZdWd.js"),__vite__mapDeps([8,1])),meta:{d:1725292091e3,c:"走近作者",g:["个人经历"],e:`<p>2021-03-21，晚上 12 点，肝完了我正在做的一个项目的前端的某块功能，我随手打开了<a href="https://github.com/Snailclimb" target="_blank" rel="noopener noreferrer">我的 GitHub 主页</a>。</p>
<p>好家伙！几天没注意，<a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener noreferrer">JavaGuide</a> 这个项目直接上了 100K star。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/1&amp;e=1643644799&amp;token=kIxbL07-8jAj8w1n4s9zv64FuZZNEATmlU_Vm6zD:zANqh9HQEvvLPm6smyrjvjAt-Ik=.png" alt="JavaGuide 100k 里程碑" tabindex="0"><figcaption>JavaGuide 100k 里程碑</figcaption></figure>`,r:{minutes:2.13,words:639},t:"JavaGuide 开源项目 100K Star 了！",y:"a"}}],["/about-the-author/my-article-was-stolen-and-made-into-video-and-it-became-popular.html",{loader:()=>p(()=>import("./my-article-was-stolen-and-made-into-video-and-it-became-popular.html-BcFUcGeV.js"),__vite__mapDeps([9,1])),meta:{d:1725292091e3,c:"走近作者",g:["杂谈"],e:`<p>时间回到 2021-02-25，我在刷哔哩哔哩的时候发现，哔哩哔哩某 UP 主（某培训机构），擅自将我在知乎的一个回答做成了视频。</p>
<p>原滋原味啊！我艹。甚至，连我开头的自我调侃还加上了！真的牛皮！</p>
<p>你盗我原创，视频你用心做好点也行啊！至少也可以让这么优质的内容得到传播嘛！</p>
<p>结果，好家伙，视频做的像坨屎一样，配音也贼违和!</p>
<p>麻烦这个培训机构看到这篇文章之后可以考虑换一个人做类似恶心的事情哈！这人完全没脑子啊！</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/about-the-author/up-db6b9cf323930786fa2bec8b1e1bfaad732.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:2.87,words:862},t:"某培训机构盗我文章做成视频还上了B站热门",y:"a"}}],["/about-the-author/my-college-life.html",{loader:()=>p(()=>import("./my-college-life.html-OSJbGrEW.js"),__vite__mapDeps([10,1])),meta:{d:1725292091e3,c:"走近作者",g:["个人经历"],e:`<blockquote>
<p>关于初高中的生活，可以看 2020 年我写的 <a href="/learning/about-the-author/internet-addiction-teenager.html" target="_blank">我曾经也是网瘾少年</a> 这篇文章。</p>
</blockquote>
<p>2019 年 6 月份毕业，距今已经过去了 3 年。趁着高考以及应届生毕业之际，简单聊聊自己的大学生活。</p>
<p>下面是正文。</p>
<p>我本科毕业于荆州校区的长江大学，一所不起眼的双非一本。</p>
<p>在这里度过的四年大学生活还是过的挺开心的，直到现在，我依然非常怀念！</p>`,r:{minutes:20.52,words:6157},t:"害，毕业三年了！",y:"a"}}],["/about-the-author/",{loader:()=>p(()=>import("./index.html-BHLjbOUR.js"),__vite__mapDeps([11,1])),meta:{d:1725292091e3,c:"走近作者",e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:3.41,words:1024},t:"个人介绍 Q&A",y:"a"}}],["/about-the-author/writing-technology-blog-six-years.html",{loader:()=>p(()=>import("./writing-technology-blog-six-years.html-CY2nSsqd.js"),__vite__mapDeps([12,1])),meta:{d:1725292091e3,c:"走近作者",g:["杂谈"],e:`<p>坚持写技术博客已经有六年了，也算是一个小小的里程碑了。</p>
<p>一开始，我写技术博客就是简单地总结自己课堂上学习的课程比如网络、操作系统。渐渐地，我开始撰写一些更为系统化的知识点详解和面试常见问题总结。</p>
<figure><img src="https://oss.javaguide.cn/about-the-author/college-life/image-20230408131717766.png" alt="JavaGuide 首页" tabindex="0"><figcaption>JavaGuide 首页</figcaption></figure>
<p>许多人都想写技术博客，但却不清楚这对他们有何好处。有些人开始写技术博客，却不知道如何坚持下去，也不知道该写些什么。这篇文章我会认真聊聊我对记录技术博客的一些看法和心得，或许可以帮助你解决这些问题。</p>`,r:{minutes:12.21,words:3664},t:"坚持写技术博客六年了!",y:"a"}}],["/about-the-author/zhishixingqiu-two-years.html",{loader:()=>p(()=>import("./zhishixingqiu-two-years.html-Br2OixXn.js"),__vite__mapDeps([13,1])),meta:{d:1725292091e3,c:"知识星球",e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:6.57,words:1971},t:"我的知识星球快 3 岁了！",y:"a"}}],["/books/cs-basics.html",{loader:()=>p(()=>import("./cs-basics.html-B8_l2GP9.js"),__vite__mapDeps([14,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<p>考虑到很多同学比较喜欢看视频，因此，这部分内容我不光会推荐书籍，还会顺便推荐一些我觉得不错的视频教程和各大高校的 Project。</p>
<h2>操作系统</h2>
<p><strong>为什么要学习操作系统？</strong></p>
<p><strong>从对个人能力方面提升来说</strong>，操作系统中的很多思想、很多经典的算法，你都可以在我们日常开发使用的各种工具或者框架中找到它们的影子。比如说我们开发的系统使用的缓存（比如 Redis）和操作系统的高速缓存就很像。CPU 中的高速缓存有很多种，不过大部分都是为了解决 CPU 处理速度和内存处理速度不对等的问题。我们还可以把内存可以看作外存的高速缓存，程序运行的时候我们把外存的数据复制到内存，由于内存的处理速度远远高于外存，这样提高了处理速度。同样地，我们使用的 Redis 缓存就是为了解决程序处理速度和访问常规关系型数据库速度不对等的问题。高速缓存一般会按照局部性原理（2-8 原则）根据相应的淘汰算法保证缓存中的数据是经常会被访问的。我们平常使用的 Redis 缓存很多时候也会按照 2-8 原则去做，很多淘汰算法都和操作系统中的类似。既说了 2-8 原则，那就不得不提命中率了，这是所有缓存概念都通用的。简单来说也就是你要访问的数据有多少能直接在缓存中直接找到。命中率高的话，一般表明你的缓存设计比较合理，系统处理速度也相对较快。</p>`,r:{minutes:19,words:5701},t:"计算机基础必读经典书籍",i:"computer",y:"a"}}],["/books/database.html",{loader:()=>p(()=>import("./database.html-CpJSt7uZ.js"),__vite__mapDeps([15,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<h2>数据库基础</h2>
<p>数据库基础这块，如果你觉得书籍比较枯燥，自己坚持不下来的话，我推荐你可以先看看一些不错的视频，北京师范大学的<a href="https://www.icourse163.org/course/BNU-1002842007" target="_blank" rel="noopener noreferrer">《数据库系统原理》</a>、哈尔滨工业大学的<a href="https://www.icourse163.org/course/HIT-1001578001" target="_blank" rel="noopener noreferrer">《数据库系统（下）：管理与技术》</a>就很不错。</p>`,r:{minutes:4.93,words:1478},t:"数据库必读经典书籍",i:"database",y:"a"}}],["/books/distributed-system.html",{loader:()=>p(()=>import("./distributed-system.html-CenH7dR_.js"),__vite__mapDeps([16,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<h2>《深入理解分布式系统》</h2>
<figure><img src="https://oss.javaguide.cn/github/javaguide/books/deep-understanding-of-distributed-system.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<p><strong><a href="https://book.douban.com/subject/35794814/" target="_blank" rel="noopener noreferrer">《深入理解分布式系统》</a></strong> 是今年 3 月份刚出的一本分布式中文原创书籍，主要讲的是分布式领域的基本概念、常见挑战以及共识算法。</p>`,r:{minutes:4.47,words:1341},t:"分布式必读经典书籍",i:"distributed-network",y:"a"}}],["/books/java.html",{loader:()=>p(()=>import("./java.html-BeWdZKRw.js"),__vite__mapDeps([17,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<h2>Java 基础</h2>
<p><strong><a href="https://book.douban.com/subject/2000732/" target="_blank" rel="noopener noreferrer">《Head First Java》</a></strong></p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/books/image-20220424103035793.png" alt="《Head First Java》-豆瓣" tabindex="0"><figcaption>《Head First Java》-豆瓣</figcaption></figure>`,r:{minutes:12.26,words:3678},t:"Java 必读经典书籍",i:"java",y:"a"}}],["/books/",{loader:()=>p(()=>import("./index.html-D-ThHWda.js"),__vite__mapDeps([18,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<p>精选优质计算机书籍。</p>
<p>开源的目的是为了大家能一起完善，如果你觉得内容有任何需要完善/补充的地方，欢迎大家在项目 <a href="https://github.com/CodingDocs/awesome-cs/issues" target="_blank" rel="noopener noreferrer">issues 区</a> 推荐自己认可的技术书籍，让我们共同维护一个优质的技术书籍精选集！</p>
<ul>
<li>GitHub 地址：<a href="https://github.com/CodingDocs/awesome-cs" target="_blank" rel="noopener noreferrer">https://github.com/CodingDocs/awesome-cs</a></li>
<li>Gitee 地址：<a href="https://gitee.com/SnailClimb/awesome-cs" target="_blank" rel="noopener noreferrer">https://gitee.com/SnailClimb/awesome-cs</a></li>
</ul>`,r:{minutes:.52,words:156},t:"技术书籍精选",y:"a"}}],["/books/search-engine.html",{loader:()=>p(()=>import("./search-engine.html-60rkLFqT.js"),__vite__mapDeps([19,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<h2>Lucene</h2>
<p>Elasticsearch 在 Apache Lucene 的基础上开发而成，学习 ES 之前，建议简单了解一下 Lucene 的相关概念。</p>
<p><strong><a href="https://book.douban.com/subject/6440615/" target="_blank" rel="noopener noreferrer">《Lucene 实战》</a></strong> 是国内为数不多的中文版本讲 Lucene 的书籍，适合用来学习和了解 Lucene 相关的概念和常见操作。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/books/vAJkdYEyol4e6Nr.png" alt="《Lucene实战》-实战" tabindex="0"><figcaption>《Lucene实战》-实战</figcaption></figure>`,r:{minutes:1.1,words:329},t:"搜索引擎必读经典书籍",i:"search",y:"a"}}],["/books/software-quality.html",{loader:()=>p(()=>import("./software-quality.html-D6k4zRYo.js"),__vite__mapDeps([20,1])),meta:{d:1725292091e3,c:"计算机书籍",e:`<p>下面推荐都是我看过并且我觉得值得推荐的书籍。</p>
<p>不过，这些书籍都比较偏理论，只能帮助你建立一个写优秀代码的意识标准。 如果你想要编写更高质量的代码、更高质量的软件，还是应该多去看优秀的源码，多去学习优秀的代码实践。</p>
<h2>代码整洁之道</h2>
<p><strong><a href="https://book.douban.com/subject/30468597/" target="_blank" rel="noopener noreferrer">《重构》</a></strong></p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/books/20210328174841577.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:6.01,words:1803},t:"软件质量必读经典书籍",i:"highavailable",y:"a"}}],["/c__/array.html",{loader:()=>p(()=>import("./array.html-CMgeJTux.js"),__vite__mapDeps([21,1])),meta:{d:1725292091e3,e:`<h2>c++数组</h2>
<ol>
<li>全局数组，也就是定义在main函数外面的数组，元素的默认值是全部为0的</li>
<li>局部数组，定义在函数内部的数组，其值默认是随机的</li>
</ol>
`,r:{minutes:.21,words:62},t:"数组",y:"a"}}],["/c__/function.html",{loader:()=>p(()=>import("./function.html-BJ1sbst7.js"),__vite__mapDeps([22,1])),meta:{d:1725292091e3,e:`<h2>函数知识点</h2>
<ol>
<li>函数返回时一般是值传递，将函数内的变量进行复制然后传递。（类和基本类型变量都可以值传递）</li>
<li><span class="custom-highlight">T t()</span>这样写是新建栈对象
<blockquote>
<p>只在作用域内生效<br>
可以在函数中使用，函数返回栈对象时，会进行值传递（也就是通过拷贝构造函数创造出对象）<br>
<strong>new</strong>是新建堆对象</p>
</blockquote>
</li>
<li>成员函数后加const——防止成员函数修改成员数据</li>
</ol>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
using namespace std<span class="token punctuation">;</span>
class temp
<span class="token punctuation">{</span>
public<span class="token operator">:</span>
    <span class="token function">temp</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">setNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
private<span class="token operator">:</span>
    <span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
temp<span class="token operator">::</span><span class="token function">temp</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    this<span class="token operator">-&gt;</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">int</span> temp<span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    age<span class="token operator">+=</span><span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// #Error...error C2166: l-value specifies const object #</span>
    <span class="token keyword">return</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    temp <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"age= "</span> <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.09,words:328},t:"函数",y:"a"}}],["/c__/headFile.html",{loader:()=>p(()=>import("./headFile.html-ZxvCCQut.js"),__vite__mapDeps([23,1])),meta:{d:1725292091e3,e:`<h2>头文件调用</h2>
<h3>hpp头文件调用类</h3>
<p><br>
<br>
</p>
<h3>h头文件调用方法</h3>
`,r:{minutes:.18,words:53},t:"头文件",y:"a"}}],["/c__/stream.html",{loader:()=>p(()=>import("./stream.html-BrhYkKVV.js"),__vite__mapDeps([24,1])),meta:{d:1725292091e3,e:`<h2>c语言输入流</h2>
<h3>具体实现的输入流：</h3>
<ol>
<li>cin标准输入流</li>
</ol>
<p>c++标准库中用于读取键盘输入的输入流对象2. ifstream</p>
<p>从文件中读取输入的输入流对象</p>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fstream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    std<span class="token operator">::</span>ifstream <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">"example.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 打开文件作为输入流</span>
    std<span class="token operator">::</span>string line<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">is_open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>std<span class="token operator">::</span><span class="token function">getline</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 从文件输入流中读取每一行</span>
            std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> line <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 关闭文件输入流</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Unable to open file"</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.57,words:470},t:"流对象",y:"a"}}],["/database/basis.html",{loader:()=>p(()=>import("./basis.html-DxW8KzJv.js"),__vite__mapDeps([25,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:12.84,words:3851},t:"数据库基础知识总结",y:"a"}}],["/database/character-set.html",{loader:()=>p(()=>import("./character-set.html-Ce4pcbX1.js"),__vite__mapDeps([26,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础"],e:`<p>MySQL 字符编码集中有两套 UTF-8 编码实现：<strong><code>utf8</code></strong> 和 <strong><code>utf8mb4</code></strong>。</p>
<p>如果使用 <strong><code>utf8</code></strong> 的话，存储 emoji 符号和一些比较复杂的汉字、繁体字就会出错。</p>
<p>为什么会这样呢？这篇文章可以从源头给你解答。</p>
<h2>字符集是什么？</h2>
<p>字符是各种文字和符号的统称，包括各个国家文字、标点符号、表情、数字等等。 <strong>字符集</strong> 就是一系列字符的集合。字符集的种类较多，每个字符集可以表示的字符范围通常不同，就比如说有些字符集是无法表示汉字的。</p>`,r:{minutes:10.97,words:3290},t:"字符集详解",y:"a"}}],["/database/nosql.html",{loader:()=>p(()=>import("./nosql.html-nrkJNPwJ.js"),__vite__mapDeps([27,1])),meta:{d:1725292091e3,c:"数据库",g:["NoSQL","MongoDB","Redis"],e:`<h2>NoSQL 是什么？</h2>
<p>NoSQL（Not Only SQL 的缩写）泛指非关系型的数据库，主要针对的是键值、文档以及图形类型数据存储。并且，NoSQL 数据库天生支持分布式，数据冗余和数据分片等特性，旨在提供可扩展的高可用高性能数据存储解决方案。</p>
<p>一个常见的误解是 NoSQL 数据库或非关系型数据库不能很好地存储关系型数据。NoSQL 数据库可以存储关系型数据—它们与关系型数据库的存储方式不同。</p>
<p>NoSQL 数据库代表：HBase、Cassandra、MongoDB、Redis。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/database/mongodb/sql-nosql-tushi.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:4.31,words:1292},t:"NoSQL基础知识总结",y:"a"}}],["/distributed-system/api-gateway.html",{loader:()=>p(()=>import("./api-gateway.html-D8FL_RjX.js"),__vite__mapDeps([28,1])),meta:{d:1725292091e3,c:"分布式",e:`<h2>什么是网关？</h2>
<p>微服务背景下，一个系统被拆分为多个服务，但是像安全认证，流量控制，日志，监控等功能是每个服务都需要的，没有网关的话，我们就需要在每个服务中单独实现，这使得我们做了很多重复的事情并且没有一个全局的视图来统一管理这些功能。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/system-design/distributed-system/api-gateway-overview.png" alt="网关示意图" tabindex="0"><figcaption>网关示意图</figcaption></figure>`,r:{minutes:11.74,words:3523},t:"API网关基础知识总结",y:"a"}}],["/distributed-system/distributed-configuration-center.html",{loader:()=>p(()=>import("./distributed-configuration-center.html-C2V2XrYB.js"),__vite__mapDeps([29,1])),meta:{d:1725292091e3,c:"分布式",e:`<p><strong>分布式配置中心</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了《Java 面试指北》中。</p>
<figure><img src="https://oss.javaguide.cn/javamianshizhibei/distributed-system.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.29,words:88},t:"分布式配置中心常见问题总结(付费)",y:"a"}}],["/distributed-system/distributed-id-design.html",{loader:()=>p(()=>import("./distributed-id-design.html-CyTAjfKd.js"),__vite__mapDeps([30,1])),meta:{d:1725292091e3,c:"分布式",e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>看到百度 Geek 说的一篇结合具体场景聊分布式 ID 设计的文章，感觉挺不错的。于是，我将这篇文章的部分内容整理到了这里。原文传送门：<a href="https://mp.weixin.qq.com/s/bFDLb6U6EgI-DvCdLTq_QA" target="_blank" rel="noopener noreferrer">分布式 ID 生成服务的技术原理和项目实战</a> 。</p>
</div>
<p>网上绝大多数的分布式 ID 生成服务，一般着重于技术原理剖析，很少见到根据具体的业务场景去选型 ID 生成服务的文章。</p>`,r:{minutes:13.37,words:4012},t:"分布式ID设计指南",y:"a"}}],["/distributed-system/distributed-id.html",{loader:()=>p(()=>import("./distributed-id.html-BRQnPvuV.js"),__vite__mapDeps([31,1])),meta:{d:1725292091e3,c:"分布式",e:`<h2>分布式 ID 介绍</h2>
<h3>什么是 ID？</h3>
<p>日常开发中，我们需要对系统中的各种数据使用 ID 唯一表示，比如用户 ID 对应且仅对应一个人，商品 ID 对应且仅对应一件商品，订单 ID 对应且仅对应一个订单。</p>
<p>我们现实生活中也有各种 ID，比如身份证 ID 对应且仅对应一个人、地址 ID 对应且仅对应一个地址。</p>
<p>简单来说，<strong>ID 就是数据的唯一标识</strong>。</p>
<h3>什么是分布式 ID？</h3>
<p>分布式 ID 是分布式系统下的 ID。分布式 ID 不存在与现实生活中，属于计算机系统中的一个概念。</p>`,r:{minutes:18.02,words:5406},t:"分布式ID介绍&实现方案总结",y:"a"}}],["/distributed-system/distributed-lock-implementations.html",{loader:()=>p(()=>import("./distributed-lock-implementations.html-HapHCR2B.js"),__vite__mapDeps([32,1])),meta:{d:1725292091e3,c:"分布式",e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:15.58,words:4675},t:"分布式锁常见实现方案总结",y:"a"}}],["/distributed-system/distributed-lock.html",{loader:()=>p(()=>import("./distributed-lock.html-DIYIFCHI.js"),__vite__mapDeps([33,1])),meta:{d:1725292091e3,c:"分布式",e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:5.72,words:1717},t:"分布式锁介绍",y:"a"}}],["/distributed-system/distributed-transaction.html",{loader:()=>p(()=>import("./distributed-transaction.html-tbuwnonm.js"),__vite__mapDeps([34,1])),meta:{d:1725292091e3,c:"分布式",e:`<p><strong>分布式事务</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了《Java 面试指北》中。</p>
<figure><img src="https://oss.javaguide.cn/javamianshizhibei/distributed-system.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.29,words:86},t:"分布式事务常见解决方案总结(付费)",y:"a"}}],["/distributed-system/spring-cloud-gateway-questions.html",{loader:()=>p(()=>import("./spring-cloud-gateway-questions.html-RYfuIEC-.js"),__vite__mapDeps([35,1])),meta:{d:1725292091e3,c:"分布式",e:`<blockquote>
<p>本文重构完善自<a href="https://mp.weixin.qq.com/s/XjFYsP1IUqNzWqXZdJn-Aw" target="_blank" rel="noopener noreferrer">6000 字 | 16 图 | 深入理解 Spring Cloud Gateway 的原理 - 悟空聊架构</a>这篇文章。</p>
</blockquote>
<h2>什么是 Spring Cloud Gateway？</h2>
<p>Spring Cloud Gateway 属于 Spring Cloud 生态系统中的网关，其诞生的目标是为了替代老牌网关 <strong>Zuul</strong>。准确点来说，应该是 Zuul 1.x。Spring Cloud Gateway 起步要比 Zuul 2.x 更早。</p>`,r:{minutes:7.3,words:2191},t:"Spring Cloud Gateway常见问题总结",y:"a"}}],["/high-availability/fallback-and-circuit-breaker.html",{loader:()=>p(()=>import("./fallback-and-circuit-breaker.html-CTPHee9Y.js"),__vite__mapDeps([36,1])),meta:{d:1725292091e3,c:"高可用",e:'<p><strong>降级&amp;熔断</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>中。</p>',r:{minutes:.28,words:83},t:"降级&熔断详解(付费)",i:"circuit",y:"a"}}],["/high-availability/high-availability-system-design.html",{loader:()=>p(()=>import("./high-availability-system-design.html-D_SREUHA.js"),__vite__mapDeps([37,1])),meta:{d:1725292091e3,c:"高可用",e:`<h2>什么是高可用？可用性的判断标准是啥？</h2>
<p>高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的。</p>
<p>一般情况下，我们使用多少个 9 来评判一个系统的可用性，比如 99.9999% 就是代表该系统在所有的运行时间中只有 0.0001% 的时间是不可用的，这样的系统就是非常非常高可用的了！当然，也会有系统如果可用性不太好的话，可能连 9 都上不了。</p>
<p>除此之外，系统的可用性还可以用某功能的失败次数与总的请求次数之比来衡量，比如对网站请求 1000 次，其中有 10 次请求失败，那么可用性就是 99%。</p>`,r:{minutes:5.49,words:1648},t:"高可用系统设计指南",i:"design",y:"a"}}],["/high-availability/limit-request.html",{loader:()=>p(()=>import("./limit-request.html-CJOv1FYa.js"),__vite__mapDeps([38,1])),meta:{d:1725292091e3,c:"高可用",e:`<p>针对软件系统来说，限流就是对请求的速率进行限制，避免瞬时的大量请求击垮软件系统。毕竟，软件系统的处理能力是有限的。如果说超过了其处理能力的范围，软件系统可能直接就挂掉了。</p>
<p>限流可能会导致用户的请求无法被正确处理或者无法立即被处理，不过，这往往也是权衡了软件系统的稳定性之后得到的最优解。</p>
<p>现实生活中，处处都有限流的实际应用，就比如排队买票是为了避免大量用户涌入购票而导致售票员无法处理。</p>
<h2>常见限流算法有哪些？</h2>
<p>简单介绍 4 种非常好理解并且容易实现的限流算法！</p>
<blockquote>
<p>图片来源于 InfoQ 的一篇文章<a href="https://www.infoq.cn/article/Qg2tX8fyw5Vt-f3HH673" target="_blank" rel="noopener noreferrer">《分布式服务限流实战，已经为你排好坑了》</a>。</p>
</blockquote>`,r:{minutes:13.11,words:3933},t:"服务限流详解",i:"limit_rate",y:"a"}}],["/high-availability/performance-test.html",{loader:()=>p(()=>import("./performance-test.html-DZLUy0XS.js"),__vite__mapDeps([39,1])),meta:{d:1725292091e3,c:"高可用",e:`<p>性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地去写出性能更好的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。</p>
<p>这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。</p>
<h2>一 不同角色看网站性能</h2>
<h3>1.1 用户</h3>
<p>当用户打开一个网站的时候，最关注的是什么？当然是网站响应速度的快慢。比如我们点击了淘宝的主页，淘宝需要多久将首页的内容呈现在我的面前，我点击了提交订单按钮需要多久返回结果等等。</p>`,r:{minutes:8.15,words:2446},t:"性能测试入门",i:"et-performance",y:"a"}}],["/high-availability/redundancy.html",{loader:()=>p(()=>import("./redundancy.html-N6WHihMF.js"),__vite__mapDeps([40,1])),meta:{d:1725292091e3,c:"高可用",e:`<p>冗余设计是保证系统和数据高可用的最常的手段。</p>
<p>对于服务来说，冗余的思想就是相同的服务部署多份，如果正在使用的服务突然挂掉的话，系统可以很快切换到备份服务上，大大减少系统的不可用时间，提高系统的可用性。</p>
<p>对于数据来说，冗余的思想就是相同的数据备份多份，这样就可以很简单地提高数据的安全性。</p>
<p>实际上，日常生活中就有非常多的冗余思想的应用。</p>
<p>拿我自己来说，我对于重要文件的保存方法就是冗余思想的应用。我日常所使用的重要文件都会同步一份在 GitHub 以及个人云盘上，这样就可以保证即使电脑硬盘损坏，我也可以通过 GitHub 或者个人云盘找回自己的重要文件。</p>`,r:{minutes:4.14,words:1241},t:"冗余设计详解",i:"cluster",y:"a"}}],["/high-availability/timeout-and-retry.html",{loader:()=>p(()=>import("./timeout-and-retry.html-mfcs4q5Q.js"),__vite__mapDeps([41,1])),meta:{d:1725292091e3,c:"高可用",e:`<p>由于网络问题、系统或者服务内部的 Bug、服务器宕机、操作系统崩溃等问题的不确定性，我们的系统或者服务永远不可能保证时刻都是可用的状态。</p>
<p>为了最大限度的减小系统或者服务出现故障之后带来的影响，我们需要用到的 <strong>超时（Timeout）</strong> 和 <strong>重试（Retry）</strong> 机制。</p>
<p>想要把超时和重试机制讲清楚其实很简单，因为它俩本身就不是什么高深的概念。</p>
<p>虽然超时和重试机制的思想很简单，但是它俩是真的非常实用。你平时接触到的绝大部分涉及到远程调用的系统或者服务都会应用超时和重试机制。尤其是对于微服务系统来说，正确设置超时和重试非常重要。单体服务通常只涉及数据库、缓存、第三方 API、中间件等的网络调用，而微服务系统内部各个服务之间还存在着网络调用。</p>`,r:{minutes:7.63,words:2288},t:"超时&重试详解",i:"retry",y:"a"}}],["/high-performance/cdn.html",{loader:()=>p(()=>import("./cdn.html-BBaA5A4e.js"),__vite__mapDeps([42,1])),meta:{d:1725292091e3,c:"高性能",e:`<h2>什么是 CDN ？</h2>
<p><strong>CDN</strong> 全称是 Content Delivery Network/Content Distribution Network，翻译过的意思是 <strong>内容分发网络</strong> 。</p>
<p>我们可以将内容分发网络拆开来看：</p>
<ul>
<li>内容：指的是静态资源比如图片、视频、文档、JS、CSS、HTML。</li>
<li>分发网络：指的是将这些静态资源分发到位于多个不同的地理位置机房中的服务器上，这样，就可以实现静态资源的就近访问比如北京的用户直接访问北京机房的数据。</li>
</ul>`,r:{minutes:8,words:2399},t:"CDN工作原理详解",y:"a"}}],["/high-performance/data-cold-hot-separation.html",{loader:()=>p(()=>import("./data-cold-hot-separation.html-67TbMuWk.js"),__vite__mapDeps([43,1])),meta:{d:1725292091e3,c:"高性能",e:`<h2>什么是数据冷热分离？</h2>
<p>数据冷热分离是指根据数据的访问频率和业务重要性，将数据分为冷数据和热数据，冷数据一般存储在存储在低成本、低性能的介质中，热数据高性能存储介质中。</p>
<h3>冷数据和热数据</h3>
<p>热数据是指经常被访问和修改且需要快速访问的数据，冷数据是指不经常访问，对当前项目价值较低，但需要长期保存的数据。</p>
<p>冷热数据到底如何区分呢？有两个常见的区分方法：</p>
<ol>
<li><strong>时间维度区分</strong>：按照数据的创建时间、更新时间、过期时间等，将一定时间段内的数据视为热数据，超过该时间段的数据视为冷数据。例如，订单系统可以将 1 年前的订单数据作为冷数据，1 年内的订单数据作为热数据。这种方法适用于数据的访问频率和时间有较强的相关性的场景。</li>
<li><strong>访问频率区分</strong>：将高频访问的数据视为热数据，低频访问的数据视为冷数据。例如，内容系统可以将浏览量非常低的文章作为冷数据，浏览量较高的文章作为热数据。这种方法需要记录数据的访问频率，成本较高，适合访问频率和数据本身有较强的相关性的场景。</li>
</ol>`,r:{minutes:5.11,words:1532},t:"数据冷热分离详解",y:"a"}}],["/high-performance/deep-pagination-optimization.html",{loader:()=>p(()=>import("./deep-pagination-optimization.html-DbfLL4rf.js"),__vite__mapDeps([44,1])),meta:{d:1725292091e3,c:"高性能",e:`<h2>深度分页介绍</h2>
<p>查询偏移量过大的场景我们称为深度分页，这会导致查询性能较低，例如：</p>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># MySQL 在无法利用索引的情况下跳过1000000条记录后，再获取10条记录</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> t_order <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">LIMIT</span> <span class="token number">1000000</span><span class="token punctuation">,</span> <span class="token number">10</span>
</code></pre></div>`,r:{minutes:3.9,words:1171},t:"深度分页介绍及优化建议",y:"a"}}],["/high-performance/load-balancing.html",{loader:()=>p(()=>import("./load-balancing.html-DMCyFVvy.js"),__vite__mapDeps([45,1])),meta:{d:1725292091e3,c:"高性能",e:`<h2>什么是负载均衡？</h2>
<p><strong>负载均衡</strong> 指的是将用户请求分摊到不同的服务器上处理，以提高系统整体的并发处理能力以及可靠性。负载均衡服务可以有由专门的软件或者硬件来完成，一般情况下，硬件的性能更好，软件的价格更便宜（后文会详细介绍到）。</p>
<p>下图是<a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247519384&amp;idx=1&amp;sn=bc7e71af75350b755f04ca4178395b1a&amp;chksm=cea1c353f9d64a458f797696d4144b4d6e58639371a4612b8e4d106d83a66d2289e7b2cd7431&amp;token=660789642&amp;lang=zh_CN&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a> 「高并发篇」中的一篇文章的配图，从图中可以看出，系统的商品服务部署了多份在不同的服务器上，为了实现访问商品服务请求的分流，我们用到了负载均衡。</p>`,r:{minutes:15.97,words:4791},t:"负载均衡原理及算法详解",y:"a"}}],["/high-performance/read-and-write-separation-and-library-subtable.html",{loader:()=>p(()=>import("./read-and-write-separation-and-library-subtable.html-BEYoiCDs.js"),__vite__mapDeps([46,1])),meta:{d:1725292091e3,c:"高性能",e:`<h2>读写分离</h2>
<h3>什么是读写分离？</h3>
<p>见名思意，根据读写分离的名字，我们就可以知道：<strong>读写分离主要是为了将对数据库的读写操作分散到不同的数据库节点上。</strong> 这样的话，就能够小幅提升写性能，大幅提升读性能。</p>
<p>我简单画了一张图来帮助不太清楚读写分离的小伙伴理解。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/high-performance/read-and-write-separation-and-library-subtable/read-and-write-separation.png" alt="读写分离示意图" tabindex="0"><figcaption>读写分离示意图</figcaption></figure>`,r:{minutes:23.62,words:7085},t:"读写分离和分库分表详解",y:"a"}}],["/high-performance/sql-optimization.html",{loader:()=>p(()=>import("./sql-optimization.html-D2WNE4IV.js"),__vite__mapDeps([47,1])),meta:{d:1725292091e3,c:"高性能",e:'<p><strong>常见 SQL 优化手段总结</strong> 相关的内容为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>中。</p>',r:{minutes:.7,words:211},t:"常见SQL优化手段总结（付费）",y:"a"}}],["/high-quality-technical-articles/",{loader:()=>p(()=>import("./index.html-Dq-IcwNn.js"),__vite__mapDeps([48,1])),meta:{d:1725292091e3,e:`
<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:1.98,words:595},t:"程序人生",y:"a"}}],["/interview-preparation/interview-experience.html",{loader:()=>p(()=>import("./interview-experience.html-C9xF4hGO.js"),__vite__mapDeps([49,1])),meta:{d:1725292091e3,c:"知识星球",e:`<p>古人云:“<strong>他山之石，可以攻玉</strong>” 。善于学习借鉴别人的面试的成功经验或者失败的教训，可以让自己少走许多弯路。</p>
<p>在 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong> 的 <strong>「面经篇」</strong> ，我分享了 15+ 篇高质量的 Java 后端面经，有校招的，也有社招的，有大厂的，也有中小厂的。</p>
<p>如果你是非科班的同学，也能在这些文章中找到对应的非科班的同学写的面经。</p>`,r:{minutes:1.43,words:429},t:"优质面经汇总(付费)",i:"experience",y:"a"}}],["/interview-preparation/key-points-of-interview.html",{loader:()=>p(()=>import("./key-points-of-interview.html-lwPJ6A5W.js"),__vite__mapDeps([50,1])),meta:{d:1725292091e3,c:"面试准备",e:`<div class="hint-container tip">
<p class="hint-container-title">友情提示</p>
<p>本文节选自 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong>。这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ……）、优质面经等内容。</p>
</div>
<h2>Java 后端面试哪些知识点是重点？</h2>
<p><strong>准备面试的时候，具体哪些知识点是重点呢？</strong></p>`,r:{minutes:5.03,words:1508},t:"Java面试重点总结(重要)",i:"star",y:"a"}}],["/interview-preparation/project-experience-guide.html",{loader:()=>p(()=>import("./project-experience-guide.html-C3B6q_IC.js"),__vite__mapDeps([51,1])),meta:{d:1725292091e3,c:"面试准备",e:`<div class="hint-container tip">
<p class="hint-container-title">友情提示</p>
<p>本文节选自 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong>。这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ……）、优质面经等内容。</p>
</div>
<h2>没有项目经验怎么办?</h2>
<p>没有项目经验是大部分应届生会碰到的一个问题。甚至说，有很多有工作经验的程序员，对自己在公司做的项目不满意，也想找一个比较有技术含量的项目来做。</p>`,r:{minutes:7.31,words:2194},t:"项目经验指南",i:"project",y:"a"}}],["/interview-preparation/resume-guide.html",{loader:()=>p(()=>import("./resume-guide.html-tlut6ON3.js"),__vite__mapDeps([52,1])),meta:{d:1725292091e3,c:"面试准备",e:`<div class="hint-container tip">
<p class="hint-container-title">友情提示</p>
<p>本文节选自 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong>。这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ……）、优质面经等内容。</p>
</div>
<h2>前言</h2>
<p>一份好的简历可以在整个申请面试以及面试过程中起到非常重要的作用。</p>`,r:{minutes:15.84,words:4752},t:"程序员简历编写指南(重要)",i:"jianli",y:"a"}}],["/interview-preparation/self-test-of-common-interview-questions.html",{loader:()=>p(()=>import("./self-test-of-common-interview-questions.html-SNxlkiy6.js"),__vite__mapDeps([53,1])),meta:{d:1725292091e3,c:"知识星球",e:`<p>面试之前，强烈建议大家多拿常见的面试题来进行自测，检查一下自己的掌握情况，这是一种非常实用的备战技术面试的小技巧。</p>
<p>在 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong> 的 <strong>「技术面试题自测篇」</strong> ，我总结了 Java 面试中最重要的知识点的最常见的面试题并按照面试提问的方式展现出来。</p>
<figure><img src="https://oss.javaguide.cn/xingqiu/image-20220628102643202.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.78,words:233},t:"常见面试题自测(付费)",i:"security-fill",y:"a"}}],["/interview-preparation/teach-you-how-to-prepare-for-the-interview-hand-in-hand.html",{loader:()=>p(()=>import("./teach-you-how-to-prepare-for-the-interview-hand-in-hand.html-CiQhFVGs.js"),__vite__mapDeps([54,1])),meta:{d:1725292091e3,c:"知识星球",e:`<div class="hint-container tip">
<p class="hint-container-title">友情提示</p>
<p>本文节选自 <strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong>。这是一份教你如何更高效地准备面试的小册，涵盖常见八股文（系统设计、常见框架、分布式、高并发 ……）、优质面经等内容。</p>
</div>
<p>你的身边一定有很多编程比你厉害但是找的工作并没有你好的朋友！<strong>技术面试不同于编程，编程厉害不代表技术面试就一定能过。</strong></p>`,r:{minutes:19.4,words:5819},t:"手把手教你如何准备Java面试(重要)",i:"path",y:"a"}}],["/javaguide/contribution-guideline.html",{loader:()=>p(()=>import("./contribution-guideline.html-BLwLzSV0.js"),__vite__mapDeps([55,1])),meta:{d:1725292091e3,c:"走近项目",e:`<p>欢迎参与 JavaGuide 的维护工作，这是一件非常有意义的事情。详细信息请看：<a href="https://zhuanlan.zhihu.com/p/464832264" target="_blank" rel="noopener noreferrer">JavaGuide 贡献指南</a> 。</p>
<p>你可以从下面几个方向来做贡献：</p>
<ul>
<li>修改错别字，毕竟内容基本都是手敲，难免会有笔误。</li>
<li>对原有内容进行修改完善，例如对某个面试问题的答案进行完善、对某篇文章的内容进行完善。</li>
<li>新增内容，例如新增面试常问的问题、添加重要知识点的详解。</li>
</ul>`,r:{minutes:1.31,words:393},t:"贡献指南",i:"guide",y:"a"}}],["/javaguide/faq.html",{loader:()=>p(()=>import("./faq.html-Nw3Wos70.js"),__vite__mapDeps([56,1])),meta:{d:1725292091e3,c:"走近项目",e:`<h2>JavaGuide 是否支持 RSS？</h2>
<p>必须支持！推荐 RSS 订阅本网站获取最新更新。</p>
<h2>JavaGuide 有没有 PDF 版本？</h2>
<p>由于 JavaGuide 内容在持续完善，所以并没有一个完全与之同步的 PDF 版本提供。如果你想要 PDF 版本的话，可以考虑 <strong>《JavaGuide 面试突击版》</strong> ，这是对 JavaGuide 内容的浓缩总结。</p>
<p>《JavaGuide 面试突击版》在我的公众号后台回复“<strong>PDF</strong>”即可获取，免费的。除了 《JavaGuide 面试突击版》之外，还会免费送你多本优质面试 PDF 手册。</p>`,r:{minutes:3.1,words:931},t:"常见问题",i:"help",y:"a"}}],["/javaguide/history.html",{loader:()=>p(()=>import("./history.html-BTMrIb4r.js"),__vite__mapDeps([57,1])),meta:{d:1725292091e3,c:"走近项目",e:`<p>由于项目内容一直持续在更新迭代，所以，这里就不记录项目内容的具体更新情况了。</p>
<p>你可以通过 <a href="https://javaguide.cn/feed.json" target="_blank" rel="noopener noreferrer">RSS 订阅</a>获取网站的最新更新，你还可以通过 <a href="https://javaguide.cn/article/" target="_blank" rel="noopener noreferrer">https://javaguide.cn/article/</a>获取到网站最新更新的文章。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguideimage-20220614172338606.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.77,words:230},t:"网站历史",y:"a"}}],["/javaguide/intro.html",{loader:()=>p(()=>import("./intro.html-BgWImNW7.js"),__vite__mapDeps([58,1])),meta:{d:1725292091e3,c:"走近项目",e:`<h2>自我介绍</h2>
<p>我是 25 年大学毕业的，和这个项目原本的开源作者一样，我也是大三准备面试的时候开始寻找面试资料。在查找资料的时候发现有这样一个开源项目，在这里非常感谢原作者的开源精神！</p>
<p>我就根据这个开源项目进行增加内容，增加了原本没有的技术内容，根据我自己的学习路线开发适用于我的面试技术指南。</p>
<h2>官方知识星球</h2>
<p>这个是原作者提供的面向同学的纯粹的Java面试网站<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">Java 面试知识星球</a>，干货非常多，学习氛围也很不错！</p>`,r:{minutes:1.07,words:322},t:"项目介绍",i:"about",y:"a"}}],["/javaguide/use-suggestion.html",{loader:()=>p(()=>import("./use-suggestion.html-CScHCY1_.js"),__vite__mapDeps([59,1])),meta:{d:1725292091e3,c:"走近项目",e:`<p><strong>对于不准备面试的同学来说</strong> ，本文档倾向于给你提供一个比较详细的学习路径，目录清晰，让你对于 Java 整体的知识体系有一个清晰认识。你可以跟着视频、书籍或者官方文档学习完某个知识点之后，然后来这里找对应的总结，帮助你更好地掌握对应的知识点。甚至说，你在有编程基础的情况下，想要学习某个知识点的话，可以直接看我的总结，这样学习效率会非常高。</p>
<p><strong>对于准备面试的同学来说</strong> ，本文档涵盖 Java 程序员所需要掌握的核心知识的常见面试问题总结。</p>
<p>大部分人看 JavaGuide 应该都是为了准备技术八股文。<strong>那如何才能更高效地准备技术八股文？</strong></p>`,r:{minutes:2.41,words:724},t:"使用建议",i:"star",y:"a"}}],["/knowledge/",{loader:()=>p(()=>import("./index.html-cQx8Fnsb.js"),__vite__mapDeps([60,1])),meta:{d:1725292091e3,e:`<p>计算机必备知识</p>
`,r:{minutes:.02,words:7},t:"",y:"a"}}],["/linux/bash.html",{loader:()=>p(()=>import("./bash.html-C64PONNr.js"),__vite__mapDeps([61,1])),meta:{d:1725292091e3,c:"Linux",e:`<h2>Shell</h2>
<ul>
<li>壳程序，调用其他应用程序</li>
<li>用户&lt;---&gt;Shell&lt;---&gt;内核&lt;---&gt;硬件</li>
</ul>
<h3>Linux提供的shell版本</h3>
<ul>
<li>/bin/shell</li>
<li>/bin/bash</li>
<li>/bin/tcsh</li>
<li>/bin/csh</li>
</ul>
<h2>Bash</h2>
<p><strong>是shell的一个版本</strong></p>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>cat /etc/passwd
//查看不同用户所使用的shell
</code></pre></div>`,r:{minutes:.53,words:160},t:"Bash和Shell程序",y:"a"}}],["/linux/basis.html",{loader:()=>p(()=>import("./basis.html-kW_LTPU7.js"),__vite__mapDeps([62,1])),meta:{d:1725292091e3,c:"Linux",e:`<h2>Linux基础</h2>
<h3>目录配置</h3>
<ol>
<li>/etc 配置文件存放目录
<ul>
<li>/etc/default</li>
</ul>
</li>
<li>/usr/bin 可执行文件</li>
<li>/usr/lib 程序使用的动态函数库</li>
<li>/usr/share/doc 软件使用手册和说明文件</li>
<li>/usr/share/man man page文件</li>
</ol>
<h3>常用命令行工具</h3>
<ul>
<li>
<p>wget<br>
这是一个用于从网络上下载文件的命令行工具<br>
<strong>code example1:</strong></p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-q</span> <span class="token parameter variable">-O</span> - https://pkg.jenkins.io/debian/jenkins.io.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -
</code></pre></div><ul>
<li>-q:在wget中，表示静默模式，即不显示任何下载信息，只显示错误信息</li>
<li>-O -: -O 选项用于指定下载文件的输出路径，其中 - 表示将文件内容输出到标准输出流（stdout）</li>
<li><a href="https://pkg.jenkins.io/debian/jenkins.io.key:" target="_blank" rel="noopener noreferrer">https://pkg.jenkins.io/debian/jenkins.io.key:</a> 这是 Jenkins 官方仓库的 GPG 公钥的 URL 地址，用于验证 Jenkins 软件包的完整性和真实性。</li>
<li>|: 这是管道操作符，将命令的输出作为另一个命令的输入。</li>
<li>sudo apt-key add -: 这条命令将通过 wget 下载的 Jenkins GPG 公钥添加到系统的 APT 密钥管理中。这样，在以后使用 apt 命令安装 Jenkins 时，系统就可以使用该密钥来验证软件包的签名，确保软件包的完整性和来源可信。</li>
</ul>
<p><strong>code example2:</strong></p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">sh</span> <span class="token parameter variable">-c</span> <span class="token string">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span>
</code></pre></div><p>这部分命令是使用 echo 命令将 Jenkins 官方软件仓库的地址写入到一个新建的文件 /etc/apt/sources.list.d/jenkins.list 中。</p>
<p>该文件是 APT 软件源列表的一个片段，用于指定系统要从哪里获取软件包</p>
<ul>
<li>sh -c 'command': 这个命令是在 shell 中执行指定的命令。在这种情况下，command 是一个包含在单引号内的命令字符串。</li>
<li>deb: 这个关键字表示这是一个二进制软件包仓库。<br>
<a href="http://pkg.jenkins.io/debian-stable:" target="_blank" rel="noopener noreferrer">http://pkg.jenkins.io/debian-stable:</a> 这是 Jenkins 官方二进制软件包仓库的地址。</li>
<li>binary/: 这个路径指定了二进制软件包在仓库中的位置。</li>
<li>&gt;: 这个符号表示将命令的输出重定向到指定的文件中。</li>
</ul>
</li>
</ul>`,r:{minutes:1.66,words:499},t:"基础知识",y:"a"}}],["/linux/daemon.html",{loader:()=>p(()=>import("./daemon.html-C4YCF3dp.js"),__vite__mapDeps([63,1])),meta:{d:1725292091e3,c:"Linux",e:`<h2>daemon</h2>
<p><strong>类似于服务</strong></p>
<h2>systemd</h2>
<p><strong>启动服务管理机制</strong></p>
<h3>优势</h3>
<ul>
<li>并行处理所有服务</li>
<li>一经要求就响应的on-demand启动方式</li>
<li>服务依赖性的自动检查</li>
<li>依daemon功能分类</li>
<li>将多个daemons作为一个群组</li>
<li>向下兼容就有init脚本</li>
</ul>
<h3>配置文件目录</h3>
<ul>
<li>/usr/lib/systemd/system 每个服务最主要的启动脚本设置</li>
<li>/run/systemd/system 系统执行所产生的服务脚本</li>
<li>/etc/systemd/system 管理员根据主机系统需要所建立的执行脚本</li>
</ul>`,r:{minutes:.86,words:258},t:"Daemon和Service",y:"a"}}],["/linux/nginx.html",{loader:()=>p(()=>import("./nginx.html-BSHhpKAg.js"),__vite__mapDeps([64,1])),meta:{d:1725292091e3,c:"linux",g:["nginx"],e:`<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>server {
        listen       82;
        listen       [::]:82;
        server_name  _;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

    		# 这里是添加的内容
        location / {
          root /home/www/webProject/;
          index index.html;
	      try_files $uri $uri/ /index.html;
        }



        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
</code></pre></div>`,r:{minutes:.18,words:55},t:"nginx",y:"a"}}],["/linux/rpm.html",{loader:()=>p(()=>import("./rpm.html-C8A1pw0_.js"),__vite__mapDeps([65,1])),meta:{d:1725292091e3,c:"Linux",e:`<h3>RPM</h3>
<p>RPM软件管理程序：rpm</p>
<ul>
<li>root才能使用rpm</li>
<li>rpm不同于apt-get，rpm需要相应rpm文件才能安装软件；</li>
<li>可以不联网，通过将安装光盘挂载</li>
</ul>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>mount /dev/sr0 /mnt
find /mnt -name 'pam-devel*'
rpm -ivh pam-devel... --test
rpm -ivh pam-devel...
umonut /mnt
</code></pre></div>`,r:{minutes:.25,words:74},t:"RPM基础",y:"a"}}],["/linux/usergroup.html",{loader:()=>p(()=>import("./usergroup.html-CR64iqiB.js"),__vite__mapDeps([66,1])),meta:{d:1725292091e3,e:`<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">useradd</span> 选项 用户名
</code></pre></div><blockquote>
<p>-c comment 指定一段注释性描述。<br>
-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。<br>
-g 用户组 指定用户所属的用户组。<br>
-G 用户组，用户组 指定用户所属的附加组。<br>
-s Shell文件 指定用户的登录Shell。<br>
-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</p>
</blockquote>`,r:{minutes:.57,words:170},t:"用户组",y:"a"}}],["/net/basis.html",{loader:()=>p(()=>import("./basis.html-0sJQPI6v.js"),__vite__mapDeps([67,1])),meta:{d:1725292091e3,e:`<h2>.Net</h2>
<p>提供的内容：</p>
<ul>
<li><strong>C#、F#、Visual Basic 编程语言</strong></li>
<li>用于处理字符串、日期、文件/IO 等的 <strong>基础库</strong></li>
<li>适用于 macOS, Windows, Linux, and Docker 的 <strong>编辑器和工具</strong></li>
</ul>
<h3>.Net方法</h3>
<p>HtmlEncoder.Default.Encode 是 .NET 框架中的一个方法，用于将字符串编码为可以在 HTML 中安全显示的格式。它主要用于防止 XSS（跨站脚本攻击）漏洞。</p>`,r:{minutes:.45,words:135},t:".Net基础",y:"a"}}],["/neural-network/basis.html",{loader:()=>p(()=>import("./basis.html-Dq_7EgBS.js"),__vite__mapDeps([68,1])),meta:{d:1725292091e3,c:"神经网络",e:`<h2>顶会期刊</h2>
<h3>Database</h3>
<ul>
<li>
<p><strong>SIGMOD</strong>：Special Interest Group on Management Of Data</p>
</li>
<li>
<p><strong>VLDB</strong>：International Conference on Very Large Data Bases</p>
</li>
<li>
<p><strong>ICDE</strong>：International Conference on Data Engineering</p>
</li>
</ul>`,r:{minutes:.51,words:153},t:"神经网络基础",y:"a"}}],["/neural-network/paper-related.html",{loader:()=>p(()=>import("./paper-related.html-_3Exe2x4.js"),__vite__mapDeps([69,1])),meta:{d:1725292091e3,c:"论文",e:`<h2>基本要求</h2>
<ul>
<li>主题相关：
<ul>
<li>任务相关：视觉问答任务，基于知识的视觉问答</li>
<li>技术相关： GCN, LSTM相关方法</li>
</ul>
</li>
<li>问题相关：知识性视觉问答中存在数据，模型优化，偏置等等问题。但是只需要列出与本文要解决问题相关的一些工作。
<ul>
<li>从不同维度划分主题</li>
<li>同一主题方法归类</li>
</ul>
</li>
<li>总结问题</li>
<li>引出本研究的区别和贡献。</li>
</ul>
<h2>相关工作</h2>
<ul>
<li>工作分类</li>
<li>思路</li>
<li>引用文献的用途</li>
</ul>`,r:{minutes:.5,words:151},t:"论文写作",y:"a"}}],["/node/package-manager.html",{loader:()=>p(()=>import("./package-manager.html-D6bQeSpa.js"),__vite__mapDeps([70,1])),meta:{d:1725292091e3,c:"node.js",e:`<h2>PNPM</h2>
<p>PNPM 是一种 JavaScript 包管理器，类似于 npm 和 Yarn。</p>
<p>PNPM 的全称是"Plug'n'Play NPM"，它的主要目标是改进包的安装和管理过程，减少磁盘占用和提高性能。</p>
<p>PNPM 通过共享依赖以及符号链接来实现这些优化。与传统的 npm 或 Yarn 不同，PNPM 在安装包时将它们链接到一个共享的存储库中，而不是将它们复制到每个项目的 node_modules 目录中。</p>
<blockquote>
<p>这种方法大大减少了磁盘占用，特别是当多个项目共享相同的依赖时。</p>
</blockquote>`,r:{minutes:1.57,words:471},t:"包管理器",y:"a"}}],["/open-source-project/big-data.html",{loader:()=>p(()=>import("./big-data.html-DDMKKLdc.js"),__vite__mapDeps([71,1])),meta:{d:1725292091e3,c:"开源项目",e:`<ul>
<li><strong><a href="https://github.com/apache/spark" target="_blank" rel="noopener noreferrer">Spark</a></strong> :Spark 是用于大规模数据处理的统一分析引擎。</li>
<li><strong><a href="https://github.com/apache/flink" title="flink" target="_blank" rel="noopener noreferrer">Flink</a></strong>：Apache Flink 是一个框架和分布式处理引擎，用于在<em>无边界和有边界</em>数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。</li>
<li><strong><a href="https://hbase.apache.org/" target="_blank" rel="noopener noreferrer">HBase</a></strong>：HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用 HBase 技术可在廉价 PC Server 上搭建起大规模结构化存储集群。</li>
<li><strong><a href="https://flume.apache.org/" target="_blank" rel="noopener noreferrer">Flume</a></strong> :Apache Flume 是一个分布式的、可靠的、可用的，从多种不同的源收集、聚集、移动大量日志数据到集中数据存储的系统。</li>
<li><strong><a href="https://storm.apache.org/" target="_blank" rel="noopener noreferrer">Storm</a></strong> : 一个分布式，高容错的实时计算系统。</li>
</ul>`,r:{minutes:.77,words:231},t:"Java 优质开源大数据项目",i:"big-data",y:"a"}}],["/open-source-project/machine-learning.html",{loader:()=>p(()=>import("./machine-learning.html-DsVjIl4B.js"),__vite__mapDeps([72,1])),meta:{d:1725292091e3,c:"开源项目",e:`<p>由于 Java 在 AI 领域应用较少，因此相关的开源项目也非常少：</p>
<ul>
<li><a href="https://github.com/spring-projects/spring-ai" target="_blank" rel="noopener noreferrer">Spring AI</a>：人工智能工程应用框架，为开发 AI 应用程序提供了 Spring 友好的 API 和抽象。</li>
<li><a href="https://github.com/eclipse/deeplearning4j" target="_blank" rel="noopener noreferrer">Deeplearning4j</a>：Deeplearning4j 是第一个为 Java 和 Scala 编写的商业级，开源，分布式深度学习库。</li>
<li><a href="https://github.com/haifengl/smile" target="_blank" rel="noopener noreferrer">Smile</a>：基于 Java 和 Scala 的机器学习库。</li>
<li><a href="https://github.com/libgdx/gdx-ai" target="_blank" rel="noopener noreferrer">GdxAI</a>：完全用 Java 编写的人工智能框架，用于使用 libGDX 进行游戏开发。</li>
<li><a href="https://github.com/Grt1228/chatgpt-java" target="_blank" rel="noopener noreferrer">chatgpt-java</a>：ChatGPT Java SDK。</li>
<li><a href="https://github.com/hncboy/ai-beehive" target="_blank" rel="noopener noreferrer">ai-beehive</a>：AI 蜂巢，基于 Java 使用 Spring Boot 3 和 JDK 17，支持的功能有 ChatGPT、OpenAi Image、Midjourney、NewBing、文心一言等等。</li>
</ul>`,r:{minutes:.63,words:190},t:"Java 优质开源 AI 项目",i:"a-MachineLearning",y:"a"}}],["/open-source-project/practical-project.html",{loader:()=>p(()=>import("./practical-project.html-CNfeIW-e.js"),__vite__mapDeps([73,1])),meta:{d:1725292091e3,c:"开源项目",e:`<h2>快速开发平台</h2>
<ul>
<li><a href="https://gitee.com/xiaonuobase/snowy" target="_blank" rel="noopener noreferrer">Snowy</a>：国内首个国密前后端分离快速开发平台。详细介绍：<a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247534316&amp;idx=1&amp;sn=69938397674fc33ecda43c8c9d0a4039&amp;chksm=cea10927f9d68031bc862485c6be984ade5af233d4d871d498c38f22164a84314678c0c67cd7&amp;token=1464380539&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">5.1k！这是我见过最强的前后端分离快速开发脚手架！！</a>。</li>
<li><a href="https://github.com/elunez/eladmin" target="_blank" rel="noopener noreferrer">eladmin</a> : 前后端分离的后台管理系统，项目采用分模块开发方式， 权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由。</li>
<li><a href="https://gitee.com/y_project/RuoYi" target="_blank" rel="noopener noreferrer">RuoYi</a>：RuoYi 一款基于基于 SpringBoot 的权限管理系统 易读易懂、界面简洁美观，直接运行即可用 。</li>
<li><a href="https://github.com/valarchie/AgileBoot-Back-End" target="_blank" rel="noopener noreferrer">AgileBoot-Back-End</a>：基于 Ruoyi 做了大量重构优化的基础快速开发框架。</li>
<li><a href="https://gitee.com/lab1024/smart-admin" target="_blank" rel="noopener noreferrer">SmartAdmin</a> : 一套简洁、易用的低代码中后台解决方案。</li>
<li><a href="https://gitee.com/zhaoeryu/eu-backend" target="_blank" rel="noopener noreferrer">EuBackend</a>：基于 SpringBoot 开发的轻量级快速开发平台。</li>
<li><a href="https://github.com/YunaiV/ruoyi-vue-pro" target="_blank" rel="noopener noreferrer">RuoYi-Vue-Pro</a>：RuoYi-Vue 全新 Pro 版本，优化重构所有功能，支持数据权限、SaaS 多租户、Flowable 工作流、三方登录、支付等功能。</li>
<li><a href="https://gitee.com/dromara/RuoYi-Vue-Plus" target="_blank" rel="noopener noreferrer">RuoYi-Vue-Plus</a>：RuoYi-Vue 全新 Plus 版本，重写了 RuoYi-Vue 所有功能，集成了 Sa-Token、Mybatis-Plus、Jackson、SpringDoc、Hutool、OSS 定期同步等。</li>
<li><a href="https://gitee.com/log4j/pig" title="pig" target="_blank" rel="noopener noreferrer">pig</a>：基于 Spring Boot + Spring Cloud + OAuth2 的 RBAC 权限管理系统。</li>
<li><a href="https://gitee.com/stylefeng/guns" target="_blank" rel="noopener noreferrer">Guns</a>：现代化的 Java 应用开发基础框架。</li>
<li><a href="https://github.com/zhangdaiscott/jeecg-boot" target="_blank" rel="noopener noreferrer">JeecgBoot</a>：一款基于代码生成器的 J2EE 低代码快速开发平台，支持生成前后端分离架构的项目。</li>
<li><a href="https://gitee.com/erupt/erupt" target="_blank" rel="noopener noreferrer">Erupt</a> : 低代码全栈类框架，它使用 Java 注解 动态生成页面以及增、删、改、查、权限控制等后台功能。</li>
<li><a href="https://github.com/ballcat-projects/ballcat" target="_blank" rel="noopener noreferrer">BallCat</a>：一个功能完善的快速开发脚手架！除了最基本的权限管理，定时任务功能之外，还额外支持 XSS 过滤，SQL 防注入、数据脱敏等多种功能</li>
<li><a href="https://github.com/jhipster/generator-jhipster" target="_blank" rel="noopener noreferrer">JHipster</a> :开源应用程序平台，可在几秒钟内创建 Spring Boot + Angular / React 项目。</li>
</ul>`,r:{minutes:7.77,words:2330},t:"Java 优质开源实战项目",i:"project",y:"a"}}],["/open-source-project/",{loader:()=>p(()=>import("./index.html-BzinSwV1.js"),__vite__mapDeps([74,1])),meta:{d:1725292091e3,c:"开源项目",e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:2.9,words:870},t:"Java 开源项目精选",y:"a"}}],["/open-source-project/system-design.html",{loader:()=>p(()=>import("./system-design.html-Ct-dhxls.js"),__vite__mapDeps([75,1])),meta:{d:1725292091e3,c:"开源项目",e:`<h2>基础框架</h2>
<h3>Web 框架</h3>
<ul>
<li><a href="https://github.com/spring-projects/spring-boot" title="spring-boot" target="_blank" rel="noopener noreferrer">Spring Boot</a>：Spring Boot 可以轻松创建独立的生产级基于 Spring 的应用程序，内置 web 服务器让你可以像运行普通 Java 程序一样运行项 目。另外，大部分 Spring Boot 项目只需要少量的配置即可，这有别于 Spring 的重配置。</li>
<li><a href="https://github.com/sofastack/sofa-boot" target="_blank" rel="noopener noreferrer">SOFABoot</a>：SOFABoot 基于 Spring Boot ，不过在其基础上增加了 Readiness Check，类隔离，日志空间隔离等等能力。 配套提供的还有：SOFARPC（RPC 框架）、SOFABolt（基于 Netty 的远程通信框架）、SOFARegistry（注册中心）...详情请参考：<a href="https://github.com/sofastack" target="_blank" rel="noopener noreferrer">SOFAStack</a> 。</li>
<li><a href="https://github.com/tipsy/javalin" target="_blank" rel="noopener noreferrer">Javalin</a>：一个轻量级的 Web 框架，同时支持 Java 和 Kotlin，被微软、红帽、Uber 等公司使用。</li>
<li><a href="https://github.com/playframework/playframework" target="_blank" rel="noopener noreferrer">Play Framework</a>：面向 Java 和 Scala 的高速 Web 框架。</li>
<li><a href="https://github.com/lets-blade/blade" target="_blank" rel="noopener noreferrer">Blade</a>：一款追求简约、高效的 Web 框架，基于 Java8 + Netty4。</li>
</ul>`,r:{minutes:15.65,words:4696},t:"Java 优质开源系统设计项目",i:"xitongsheji",y:"a"}}],["/open-source-project/tool-library.html",{loader:()=>p(()=>import("./tool-library.html-Da_VO7GK.js"),__vite__mapDeps([76,1])),meta:{d:1725292091e3,c:"开源项目",e:`<h2>代码质量</h2>
<ul>
<li><a href="https://github.com/rzwitserloot/lombok" target="_blank" rel="noopener noreferrer">lombok</a> :使用 Lombok 我们可以简化我们的 Java 代码，比如使用它之后我们通过注释就可以实现 getter/setter、equals 等方法。</li>
<li><a href="https://github.com/google/guava" title="guava" target="_blank" rel="noopener noreferrer">guava</a>：Guava 是一组核心库，其中包括新的集合类型（例如 multimap 和 multiset），不可变集合，图形库以及用于并发、I / O、哈希、原始类型、字符串等的实用程序！</li>
<li><a href="https://github.com/looly/hutool" title="hutool" target="_blank" rel="noopener noreferrer">hutool</a> : Hutool 是一个 Java 工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让 Java 语言也可以“甜甜的”。</li>
<li><a href="https://github.com/alibaba/p3c" title="p3c" target="_blank" rel="noopener noreferrer">p3c</a>：Alibaba Java Coding Guidelines pmd implements and IDE plugin。Eclipse 和 IDEA 上都有该插件，推荐使用！</li>
<li><a href="https://github.com/SonarSource/sonarqube" title="sonarqube" target="_blank" rel="noopener noreferrer">sonarqube</a>：SonarQube 支持所有开发人员编写更干净，更安全的代码。</li>
<li><a href="https://github.com/checkstyle/checkstyle" title="checkstyle" target="_blank" rel="noopener noreferrer">checkstyle</a> :Checkstyle 是一种开发工具，可帮助程序员编写符合编码标准的 Java 代码。它使检查 Java 代码的过程自动化，从而使人们不必执行这项无聊（但很重要）的任务。这使其成为想要实施编码标准的项目的理想选择。</li>
<li><a href="https://github.com/pmd/pmd" title="pmd" target="_blank" rel="noopener noreferrer">pmd</a> : 可扩展的多语言静态代码分析器。</li>
<li><a href="https://github.com/spotbugs/spotbugs" title="spotbugs" target="_blank" rel="noopener noreferrer">spotbugs</a> :SpotBugs 是 FindBugs 的继任者。静态分析工具，用于查找 Java 代码中的错误。</li>
</ul>`,r:{minutes:4.83,words:1450},t:"Java 优质开源工具类",i:"codelibrary-fill",y:"a"}}],["/open-source-project/tools.html",{loader:()=>p(()=>import("./tools.html-BkAogtD1.js"),__vite__mapDeps([77,1])),meta:{d:1725292091e3,c:"开源项目",e:`<h2>项目构建</h2>
<ul>
<li><a href="https://maven.apache.org/" target="_blank" rel="noopener noreferrer">Maven</a>：一个软件项目管理和理解工具。基于项目对象模型 (Project Object Model，POM) 的概念，Maven 可以从一条中心信息管理项目的构建、报告和文档。详细介绍：<a href="https://javaguide.cn/tools/maven/maven-core-concepts.html" target="_blank" rel="noopener noreferrer">Maven 核心概念总结</a>。</li>
<li><a href="https://gradle.org/" target="_blank" rel="noopener noreferrer">Gradle</a> ：一个开源的构建自动化工具，它足够灵活，可以构建几乎任何类型的软件。Gradle 对你要构建什么或者如何构建它做了很少的假设，这使得 Gradle 特别灵活。详细介绍：<a href="https://javaguide.cn/tools/gradle/gradle-core-concepts.html" target="_blank" rel="noopener noreferrer">Gradle 核心概念总结</a>。</li>
</ul>`,r:{minutes:4.84,words:1451},t:"Java 优质开源开发工具",i:"tool",y:"a"}}],["/open-source-project/tutorial.html",{loader:()=>p(()=>import("./tutorial.html-BJ_zV91d.js"),__vite__mapDeps([78,1])),meta:{d:1725292091e3,c:"开源项目",e:`<h2>Java</h2>
<ul>
<li><a href="https://github.com/Snailclimb/JavaGuide" title="JavaGuide" target="_blank" rel="noopener noreferrer">JavaGuide</a> :【Java 学习+面试指南】 一份涵盖大部分 Java 程序员所需要掌握的核心知识。</li>
<li><a href="https://github.com/itwanger/toBeBetterJavaer" target="_blank" rel="noopener noreferrer">toBeBetterJavaer</a>：一份通俗易懂、风趣幽默的 Java 学习指南，内容涵盖 Java 基础、Java 集合框架、Java 并发编程、JVM、Java 企业级开发（Git、SSM、Spring Boot）等知识点。</li>
<li><a href="https://github.com/csguide-dabai/interview-guide" target="_blank" rel="noopener noreferrer">interview-guide</a>：总结了后端面试八股文中的重点，希望能帮助各位准备互联网开发岗校招面试的同学。</li>
<li><a href="https://github.com/doocs/advanced-java" title="advanced-java" target="_blank" rel="noopener noreferrer">advanced-java</a> :互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识。</li>
<li><a href="https://github.com/hollischuang/toBeTopJavaer" title="toBeTopJavaer" target="_blank" rel="noopener noreferrer">toBeTopJavaer</a>：Java 工程师成神之路 。</li>
<li><a href="https://github.com/aalansehaiyang/technology-talk" target="_blank" rel="noopener noreferrer">technology-talk</a> : 汇总 java 生态圈常用技术框架、开源中间件，系统架构、数据库、大公司架构案例、常用三方类库、项目管理、线上问题排查、个人成长、思考等知识</li>
<li><a href="https://github.com/crossoverJie/JCSprout" target="_blank" rel="noopener noreferrer">JCSprout</a> :处于萌芽阶段的 Java 核心知识库。</li>
<li><a href="https://github.com/crisxuan/bestJavaer" target="_blank" rel="noopener noreferrer">bestJavaer</a> : 这是一个成为更好的 Java 程序员的系列教程。</li>
<li><a href="https://github.com/iluwatar/java-design-patterns" title="java-design-patterns" target="_blank" rel="noopener noreferrer">java-design-patterns</a>：用 Java 实现的设计模式。</li>
</ul>`,r:{minutes:3.5,words:1050},t:"Java 优质开源技术教程",i:"book",y:"a"}}],["/projects/WebAPI.html",{loader:()=>p(()=>import("./WebAPI.html-D2ZJKTGg.js"),__vite__mapDeps([79,1])),meta:{d:1725292091e3,e:`<h2>表达式树</h2>
<p>表达式树由一系列表达式节点（Expression Node）组成，每个节点表示代码中的一个操作或值。这些节点有不同的类型，例如：</p>
<h2>查询表达式</h2>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name">IQueryable<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token function">SearchObjects</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> funcName<span class="token punctuation">,</span> <span class="token keyword">params</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> objs<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>context <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppException</span><span class="token punctuation">(</span><span class="token string">"未设置数据库连接上下文"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>searchDic<span class="token punctuation">.</span><span class="token function">ContainsKey</span><span class="token punctuation">(</span>funcName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AppException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$"未能找到 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">funcName</span><span class="token punctuation">}</span></span><span class="token string"> 查询函数"</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name"><span class="token keyword">var</span></span> objQuery <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">InterceptWith</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">InjectArrayVisitor</span><span class="token punctuation">(</span>objs<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InjectConditionVisitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>DelDate <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">OrderByDescending</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>CreateDate<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> searchDic<span class="token punctuation">[</span>funcName<span class="token punctuation">]</span><span class="token punctuation">(</span>objQuery<span class="token punctuation">,</span> objs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre></div>`,r:{minutes:3.51,words:1054},t:"大创项目",y:"a"}}],["/projects/general-projects.html",{loader:()=>p(()=>import("./general-projects.html-BiHjEUG-.js"),__vite__mapDeps([80,1])),meta:{d:1725292091e3,c:"projects",r:{minutes:.03,words:9},t:"综合项目实践",y:"a"}}],["/projects/",{loader:()=>p(()=>import("./index.html-BmNVKYOy.js"),__vite__mapDeps([81,1])),meta:{d:1725292091e3,e:`<p>这是本人大学期间所做项目的经验</p>
`,r:{minutes:.05,words:15},t:"",y:"a"}}],["/python/basis.html",{loader:()=>p(()=>import("./basis.html-DadKWyid.js"),__vite__mapDeps([82,1])),meta:{d:1725292091e3,e:`<h2>为什么Python运行慢</h2>
<ol>
<li>解释性语言，边运行边编译，其他语言在运行之前就编译成字节码</li>
<li>动态语言，在运行时可以改变其结构的语言，如新的函数、对象、代码可以被引入；并且因为没有类型定义，数据的比较和转换类型开销大</li>
<li>一切皆对象，每个对象都要维护引用计数</li>
<li>GIL机制，全局互斥锁，在多线程环境下性能开销极大</li>
<li>采用标记和分代的垃圾回收机制，每次垃圾回收都会中断正在执行的程序</li>
</ol>
<h2>优势</h2>
<ol>
<li>效率高。对于很多复杂性功能可以直接用清晰代码写出来</li>
<li>很多科学计算库，方便科研</li>
</ol>`,r:{minutes:.69,words:206},t:"Python基础",y:"a"}}],["/system-design/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",{loader:()=>p(()=>import("./J2EE基础知识.html-CVSyFKVk.js"),__vite__mapDeps([83,1])),meta:{d:1725292091e3,e:`
<p>在 Java Web 程序中，<strong>Servlet</strong>主要负责接收用户请求 <code>HttpServletRequest</code>,在<code>doGet()</code>,<code>doPost()</code>中做相应的处理，并将回应<code>HttpServletResponse</code>反馈给用户。<strong>Servlet</strong> 可以设置初始化参数，供 Servlet 内部使用。一个 Servlet 类只会有一个实例，在它初始化时调用<code>init()</code>方法，销毁时调用<code>destroy()</code>方法**。**Servlet 需要在 web.xml 中配置（MyEclipse 中创建 Servlet 会自动配置），<strong>一个 Servlet 可以设置多个 URL 访问</strong>。<strong>Servlet 不是线程安全</strong>，因此要谨慎使用类变量。</p>`,r:{minutes:17.8,words:5341},t:"Servlet 总结",y:"a"}}],["/system-design/design-pattern.html",{loader:()=>p(()=>import("./design-pattern.html-BGelByW8.js"),__vite__mapDeps([84,1])),meta:{d:1725292091e3,c:"系统设计",e:`<p><strong>设计模式</strong> 相关的面试题已经整理到了 PDF 手册中，你可以在我的公众号“<strong>JavaGuide</strong>”后台回复“<strong>PDF</strong>” 获取。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png" alt="JavaGuide 官方公众号" tabindex="0"><figcaption>JavaGuide 官方公众号</figcaption></figure>
<p><strong>《设计模式》PDF 电子书内容概览</strong>：</p>`,r:{minutes:.76,words:229},t:"设计模式常见面试题总结",i:"Tools",y:"a"}}],["/system-design/schedule-task.html",{loader:()=>p(()=>import("./schedule-task.html-DQbhxDBI.js"),__vite__mapDeps([85,1])),meta:{d:1725292091e3,c:"系统设计",e:`<h2>为什么需要定时任务？</h2>
<p>我们来看一下几个非常常见的业务场景：</p>
<ol>
<li>某系统凌晨 1 点要进行数据备份。</li>
<li>某电商平台，用户下单半个小时未支付的情况下需要自动取消订单。</li>
<li>某媒体聚合平台，每 10 分钟动态抓取某某网站的数据为自己所用。</li>
<li>某博客平台，支持定时发送文章。</li>
<li>某基金平台，每晚定时计算用户当日收益情况并推送给用户最新的数据。</li>
<li>……</li>
</ol>
<p>这些场景往往都要求我们在某个特定的时间去做某个事情，也就是定时或者延时去做某个事情。</p>
<ul>
<li>定时任务：在指定时间点执行特定的任务，例如每天早上 8 点，每周一下午 3 点等。定时任务可以用来做一些周期性的工作，如数据备份，日志清理，报表生成等。</li>
<li>延时任务：一定的延迟时间后执行特定的任务，例如 10 分钟后，3 小时后等。延时任务可以用来做一些异步的工作，如订单取消，推送通知，红包撤回等。</li>
</ul>`,r:{minutes:18.44,words:5531},t:"Java 定时任务详解",i:"time",y:"a"}}],["/system-design/system-design-questions.html",{loader:()=>p(()=>import("./system-design-questions.html-Cn1zuSlD.js"),__vite__mapDeps([86,1])),meta:{d:1725292091e3,c:"Java面试指北",e:'<p><strong>系统设计</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>中。</p>',r:{minutes:.31,words:94},t:"系统设计常见面试题总结(付费)",i:"design",y:"a"}}],["/system-design/web-real-time-message-push.html",{loader:()=>p(()=>import("./web-real-time-message-push.html-rXEOg32l.js"),__vite__mapDeps([87,1])),meta:{d:1725292091e3,c:"系统设计",e:`<blockquote>
<p>原文地址：<a href="https://juejin.cn/post/7122014462181113887%EF%BC%8CJavaGuide" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7122014462181113887，JavaGuide</a> 对本文进行了完善总结。</p>
</blockquote>
<p>我有一个朋友做了一个小破站，现在要实现一个站内信 Web 消息推送的功能，对，就是下图这个小红点，一个很常用的功能。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/system-design/web-real-time-message-push/1460000042192380.png" alt="站内信 Web 消息推送" tabindex="0"><figcaption>站内信 Web 消息推送</figcaption></figure>`,r:{minutes:16.52,words:4956},t:"Web 实时消息推送详解",i:"messages",y:"a"}}],["/vcs/git.html",{loader:()=>p(()=>import("./git.html-aUNbHnEo.js"),__vite__mapDeps([88,1])),meta:{d:1725292091e3,c:"vcs",e:`<h2>git基本操作</h2>
<h3>merge</h3>
<p>在 Git 中，“合并”指的是将两个或多个不同的分支或线性提交历史中的更改集成到一起。</p>
<p>这通常发生在开发团队合作开发项目时，其中不同的开发者可能会在同一个代码库中编辑不同的文件或同一个文件的不同部分。</p>
<h3>pull</h3>
<p>在 Git 中，“拉取”（Pull）是指从远程仓库获取最新的更改并将其合并到本地仓库中。</p>
<p>当你和其他开发者协作工作时，他们可能会将他们的更改推送到共享的远程仓库中。</p>
<p>git pull命令实际上执行了两个操作：首先，它从远程仓库中获取最新的更改（使用 git fetch），然后将这些更改合并到当前分支中（使用 git merge）。</p>`,r:{minutes:4.67,words:1400},t:"git版本管理",y:"a"}}],["/web/webrtc.html",{loader:()=>p(()=>import("./webrtc.html-CwSaAYP6.js"),__vite__mapDeps([89,1])),meta:{d:1725292091e3,c:"web",e:`<h2>协议</h2>
<h3>ICE（Interactive Connectivity Establishment）</h3>
<figure><figcaption>ICE信息交换整个过程</figcaption></figure>
<p>一个框架用以建立点对点连接。</p>
<ul>
<li>帮助应用通过防火墙的阻隔</li>
<li>为应用设定一个公网IP</li>
<li>通过一个服务器转发数据如果router禁止应用间的直接连接</li>
</ul>
<h3>STUN（Session Traversal Utilities for NAT）</h3>
<p>一个协议来发现公网IP地址，并且确定在路由器中router的会妨碍连接的限制。该协议使用的是NAT协议</p>`,r:{minutes:2.82,words:846},t:"WebRtc",y:"a"}}],["/zhuanlan/back-end-interview-high-frequency-system-design-and-scenario-questions.html",{loader:()=>p(()=>import("./back-end-interview-high-frequency-system-design-and-scenario-questions.html-CLWFU9NC.js"),__vite__mapDeps([90,1])),meta:{d:1725292091e3,c:"知识星球",e:`<h2>介绍</h2>
<p><strong>《后端面试高频系统设计&amp;场景题》</strong> 是我的<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>的一个内部小册，包含了常见的系统设计案例比如短链系统、秒杀系统以及高频的场景题比如海量数据去重、第三方授权登录。</p>
<p>近年来，随着国内的技术面试越来越卷，越来越多的公司开始在面试中考察系统设计和场景问题，以此来更全面的考察求职者，不论是校招还是社招。不过，正常面试全是场景题的情况还是极少的，面试官一般会在面试中穿插一两个系统设计和场景题来考察你。</p>`,r:{minutes:1.51,words:452},t:"《后端面试高频系统设计&场景题》",y:"a"}}],["/zhuanlan/handwritten-rpc-framework.html",{loader:()=>p(()=>import("./handwritten-rpc-framework.html-Cz7nMrKl.js"),__vite__mapDeps([91,1])),meta:{d:1725292091e3,c:"知识星球",e:`<h2>介绍</h2>
<p><strong>《手写 RPC 框架》</strong> 是我的<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>的一个内部小册，我写了 12 篇文章来讲解如何从零开始基于 Netty+Kyro+Zookeeper 实现一个简易的 RPC 框架。</p>
<p>麻雀虽小五脏俱全，项目代码注释详细，结构清晰，并且集成了 Check Style 规范代码结构，非常适合阅读和学习。</p>
<h2>内容概览</h2>
<figure><img src="https://oss.javaguide.cn/github/javaguide/image-20220308100605485.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.79,words:238},t:"《手写 RPC 框架》",y:"a"}}],["/zhuanlan/java-mian-shi-zhi-bei.html",{loader:()=>p(()=>import("./java-mian-shi-zhi-bei.html-AnZmfncS.js"),__vite__mapDeps([92,1])),meta:{d:1725292091e3,c:"知识星球",e:`<p>我花费了三年的时间，写了一本针对 Java 面试的《Java 面试指北》，内容质量非常高，非常适合准备 Java 面试的朋友使用！</p>
<p>目前的成绩：累计阅读 <strong>270w+</strong> ，点赞 <strong>3550+</strong> ，评论 <strong>1130+</strong> （几乎每一条提问类型的评论我看到后都会用心回复）。</p>
<figure><img src="https://oss.javaguide.cn/xingqiu/java-interview-guide-statistics.png" alt="《Java 面试指北》统计" tabindex="0"><figcaption>《Java 面试指北》统计</figcaption></figure>`,r:{minutes:3.88,words:1164},t:"《Java 面试指北》",y:"a"}}],["/zhuanlan/",{loader:()=>p(()=>import("./index.html-9TVFDCL-.js"),__vite__mapDeps([93,1])),meta:{d:1725292091e3,c:"知识星球",e:`<p>这部分的内容为我的<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>专属，目前已经更新了下面这些专栏：</p>
<ul>
<li><strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a></strong> : 与 JavaGuide 开源版的内容互补！</li>
<li><strong><a href="/learning/zhuanlan/back-end-interview-high-frequency-system-design-and-scenario-questions.html" target="_blank">《后端面试高频系统设计&amp;场景题》</a></strong> : 包含了常见的系统设计案例比如短链系统、秒杀系统以及高频的场景题比如海量数据去重、第三方授权登录。</li>
<li><strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《手写 RPC 框架》</a></strong> : 从零开始基于 Netty+Kyro+Zookeeper 实现一个简易的 RPC 框架。</li>
<li><strong><a href="/learning/zhuanlan/source-code-reading.html" target="_blank">《Java 必读源码系列》</a></strong>：目前已经整理了 Dubbo 2.6.x、Netty 4.x、SpringBoot 2.1 等框架/中间件的源码</li>
<li>……</li>
</ul>`,r:{minutes:.96,words:288},t:"星球专属优质专栏概览",y:"a"}}],["/zhuanlan/source-code-reading.html",{loader:()=>p(()=>import("./source-code-reading.html-B4-pkzXq.js"),__vite__mapDeps([94,1])),meta:{d:1725292091e3,c:"知识星球",e:`<h2>介绍</h2>
<p><strong>《Java 必读源码系列》</strong> 是我的<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>的一个内部小册，目前已经整理了 Dubbo 2.6.x、Netty 4.x、SpringBoot 2.1 等框架/中间件的源码。后续还会整理更多值得阅读的优质源码，持续完善中。</p>
<p>结构清晰，内容详细，非常适合想要深入学习框架/中间件源码的同学阅读。</p>
<h2>内容概览</h2>
<figure><img src="https://oss.javaguide.cn/xingqiu/image-20220621091832348.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.79,words:238},t:"《Java 必读源码系列》",y:"a"}}],["/AloT/IoT/MQTT.html",{loader:()=>p(()=>import("./MQTT.html-DoFrBEvv.js"),__vite__mapDeps([95,1])),meta:{d:1725292091e3,e:`<h2>介绍</h2>
<p>MQTT is an <strong>OASIS</strong> standard messaging protocol for the Internet of Things (IoT).<br>
It is designed as an extremely lightweight <strong>publish/subscribe</strong> messaging transport that is ideal for connecting<br>
remote devices with a small code footprint and minimal network bandwidth.</p>`,r:{minutes:.17,words:50},t:"MQTT",y:"a"}}],["/cs-basics/algorithms/10-classical-sorting-algorithms.html",{loader:()=>p(()=>import("./10-classical-sorting-algorithms.html-BYtk__Go.js"),__vite__mapDeps([96,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<blockquote>
<p>本文转自：<a href="http://www.guoyaohua.com/sorting.html" target="_blank" rel="noopener noreferrer">http://www.guoyaohua.com/sorting.html</a>，JavaGuide 对其做了补充完善。</p>
</blockquote>
<h2>引言</h2>
<p>所谓排序，就是使一串记录，按照其中的某个或某些关键字的大小，递增或递减的排列起来的操作。排序算法，就是如何使得记录按照要求排列的方法。排序算法在很多领域得到相当地重视，尤其是在大量数据的处理方面。一个优秀的算法可以节省大量的资源。在各个领域中考虑到数据的各种限制和规范，要得到一个符合实际的优秀算法，得经过大量的推理和分析。</p>`,r:{minutes:21.5,words:6451},t:"十大经典排序算法总结",y:"a"}}],["/cs-basics/algorithms/Practice.html",{loader:()=>p(()=>import("./Practice.html-CIj7yo96.js"),__vite__mapDeps([97,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<h2>LeetCode</h2>
<p><strong>以下是出自LeetCode题目，为作者个人练习记录使用，非商业目的</strong></p>
<ol>
<li><a href="https://leetcode.cn/problems/text-justification/description/?envType=study-plan-v2&amp;envId=top-interview-150" target="_blank" rel="noopener noreferrer">文本左右对齐</a>
<blockquote>
<p>hard<br>
思路：模拟</p>
</blockquote>
</li>
</ol>`,r:{minutes:2.07,words:620},t:"算法训练",y:"a"}}],["/cs-basics/algorithms/classical-algorithm-problems-recommendations.html",{loader:()=>p(()=>import("./classical-algorithm-problems-recommendations.html-CApHBnYU.js"),__vite__mapDeps([98,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<h2>贪心算法</h2>
<h3>算法思想</h3>
<p>贪心的本质是选择每一阶段的局部最优，从而达到全局最优。</p>
<h3>一般解题步骤</h3>
<ul>
<li>将问题分解为若干个子问题</li>
<li>找出适合的贪心策略</li>
<li>求解每一个子问题的最优解</li>
<li>将局部最优解堆叠成全局最优解</li>
</ul>
<h3>LeetCode</h3>
<p>455.分发饼干：<a href="https://leetcode.cn/problems/assign-cookies/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/assign-cookies/</a></p>`,r:{minutes:2.6,words:781},t:"经典算法思想总结（含LeetCode题目推荐）",y:"a"}}],["/cs-basics/algorithms/common-data-structures-leetcode-recommendations.html",{loader:()=>p(()=>import("./common-data-structures-leetcode-recommendations.html-B513FJDy.js"),__vite__mapDeps([99,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<h2>数组</h2>
<p>704.二分查找：<a href="https://leetcode.cn/problems/binary-search/" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/binary-search/</a></p>
<p>80.删除有序数组中的重复项 II：<a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array-ii" target="_blank" rel="noopener noreferrer">https://leetcode.cn/problems/remove-duplicates-from-sorted-array-ii</a></p>`,r:{minutes:1.19,words:356},t:"常见数据结构经典LeetCode题目推荐",y:"a"}}],["/cs-basics/algorithms/lanqiao.html",{loader:()=>p(()=>import("./lanqiao.html-DJjf-L9d.js"),__vite__mapDeps([100,1])),meta:{d:1725292091e3,e:`<ol>
<li><a href="https://www.lanqiao.cn/problems/2211/learning/" target="_blank" rel="noopener noreferrer">六六大顺</a></li>
</ol>
<p>涉及python数的精度(Decimal)</p>
<div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> decimal <span class="token keyword">import</span> Decimal<span class="token punctuation">,</span> getcontext
getcontext<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>prec <span class="token operator">=</span> <span class="token number">1000000000</span>
n<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
res<span class="token operator">=</span><span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Decimal<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Decimal<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">**</span> n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> Decimal<span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span> <span class="token operator">-</span> Decimal<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Decimal<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">**</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> Decimal<span class="token punctuation">(</span>
        <span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> Decimal<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">/</span> Decimal<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:.21,words:63},t:"蓝桥杯题目学习",y:"a"}}],["/cs-basics/algorithms/linkedlist-algorithm-problems.html",{loader:()=>p(()=>import("./linkedlist-algorithm-problems.html-DZsyM9IS.js"),__vite__mapDeps([101,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<h2>1. 两数相加</h2>
<h3>题目描述</h3>
<blockquote>
<p>Leetcode:给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。</p>
<p>你可以假设除了数字 0 之外，这两个数字都不会以零开头。</p>
</blockquote>
<p>示例：</p>
<div class="language-plain" data-ext="plain" data-title="plain"><pre class="language-plain"><code>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)
输出：7 -&gt; 0 -&gt; 8
原因：342 + 465 = 807
</code></pre></div>`,r:{minutes:7.21,words:2162},t:"几道常见的链表算法题",y:"a"}}],["/cs-basics/algorithms/string-algorithm-problems.html",{loader:()=>p(()=>import("./string-algorithm-problems.html-Iez2zfgj.js"),__vite__mapDeps([102,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<blockquote>
<p>作者：wwwxmu</p>
<p>原文地址:<a href="https://www.weiweiblog.cn/13string/" target="_blank" rel="noopener noreferrer">https://www.weiweiblog.cn/13string/</a></p>
</blockquote>
<h2>1. KMP 算法</h2>
<p>谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有 O(m)。因为“暴力搜索”的方法会反复回溯主串，导致效率低下，而 KMP 算法可以利用已经部分匹配这个有效信息，保持主串上的指针不回溯，通过修改子串的指针，让模式串尽量地移动到有效的位置。</p>`,r:{minutes:9.34,words:2801},t:"几道常见的字符串算法题",y:"a"}}],["/cs-basics/algorithms/the-sword-refers-to-offer.html",{loader:()=>p(()=>import("./the-sword-refers-to-offer.html--LX83phg.js"),__vite__mapDeps([103,1])),meta:{d:1725292091e3,c:"计算机基础",g:["算法"],e:`<h2>斐波那契数列</h2>
<p><strong>题目描述：</strong></p>
<p>大家都知道斐波那契数列，现在要求输入一个整数 n，请你输出斐波那契数列的第 n 项。<br>
n&lt;=39</p>
<p><strong>问题分析：</strong></p>
<p>可以肯定的是这一题通过递归的方式是肯定能做出来，但是这样会有一个很大的问题，那就是递归大量的重复计算会导致内存溢出。另外可以使用迭代法，用 fn1 和 fn2 保存计算过程中的结果，并复用起来。下面我会把两个方法示例代码都给出来并给出两个方法的运行时间对比。</p>
<p><strong>示例代码：</strong></p>`,r:{minutes:16.37,words:4911},t:"剑指offer部分编程题",y:"a"}}],["/cs-basics/data-structure/bloom-filter.html",{loader:()=>p(()=>import("./bloom-filter.html-CLeEfKxv.js"),__vite__mapDeps([104,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`<p>布隆过滤器相信大家没用过的话，也已经听过了。</p>
<p>布隆过滤器主要是为了解决海量数据的存在性问题。对于海量数据中判定某个数据是否存在且容忍轻微误差这一场景（比如缓存穿透、海量数据去重）来说，非常适合。</p>
<p>文章内容概览：</p>
<ol>
<li>什么是布隆过滤器？</li>
<li>布隆过滤器的原理介绍。</li>
<li>布隆过滤器使用场景。</li>
<li>通过 Java 编程手动实现布隆过滤器。</li>
<li>利用 Google 开源的 Guava 中自带的布隆过滤器。</li>
<li>Redis 中的布隆过滤器。</li>
</ol>
<h2>什么是布隆过滤器？</h2>`,r:{minutes:10.1,words:3031},t:"布隆过滤器",y:"a"}}],["/cs-basics/data-structure/graph.html",{loader:()=>p(()=>import("./graph.html-Bg05qX6h.js"),__vite__mapDeps([105,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`<p>图是一种较为复杂的非线性结构。 <strong>为啥说其较为复杂呢？</strong></p>
<p>根据前面的内容，我们知道：</p>
<ul>
<li>线性数据结构的元素满足唯一的线性关系，每个元素(除第一个和最后一个外)只有一个直接前趋和一个直接后继。</li>
<li>树形数据结构的元素之间有着明显的层次关系。</li>
</ul>
<p>但是，图形结构的元素之间的关系是任意的。</p>
<p><strong>何为图呢？</strong> 简单来说，图就是由顶点的有穷非空集合和顶点之间的边组成的集合。通常表示为：<strong>G(V,E)</strong>，其中，G 表示一个图，V 表示顶点的集合，E 表示边的集合。</p>`,r:{minutes:5.79,words:1737},t:"图",y:"a"}}],["/cs-basics/data-structure/heap.html",{loader:()=>p(()=>import("./heap.html-CoVTjKVY.js"),__vite__mapDeps([106,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`
<h2>什么是堆</h2>
<p>堆是一种满足以下条件的树：</p>
<p>堆中的每一个节点值都大于等于（或小于等于）子树中所有节点的值。或者说，任意一个节点的值都大于等于（或小于等于）所有子节点的值。</p>
<blockquote>
<p>大家可以把堆(最大堆)理解为一个公司,这个公司很公平,谁能力强谁就当老大,不存在弱的人当老大,老大手底下的人一定不会比他强。这样有助于理解后续堆的操作。</p>
</blockquote>
<p><strong>!!!特别提示：</strong></p>
<ul>
<li>很多博客说堆是完全二叉树，其实并非如此，<strong>堆不一定是完全二叉树</strong>，只是为了方便存储和索引，我们通常用完全二叉树的形式来表示堆，事实上，广为人知的斐波那契堆和二项堆就不是完全二叉树,它们甚至都不是二叉树。</li>
<li>（<strong>二叉</strong>）堆是一个数组，它可以被看成是一个 <strong>近似的完全二叉树</strong>。——《算法导论》第三版</li>
</ul>`,r:{minutes:9.11,words:2733},t:"堆",y:"a"}}],["/cs-basics/data-structure/linear-data-structure.html",{loader:()=>p(()=>import("./linear-data-structure.html-BgvCVB95.js"),__vite__mapDeps([107,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`<h2>1. 数组</h2>
<p><strong>数组（Array）</strong> 是一种很常见的数据结构。它由相同类型的元素（element）组成，并且是使用一块连续的内存来存储。</p>
<p>我们直接可以利用元素的索引（index）可以计算出该元素对应的存储地址。</p>
<p>数组的特点是：<strong>提供随机访问</strong> 并且容量有限。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code>假如数组的长度为 n。
访问：<span class="token class-name">O</span>（<span class="token number">1</span>）<span class="token comment">//访问特定位置的元素</span>
插入：<span class="token class-name">O</span>（n ）<span class="token comment">//最坏的情况发生在插入发生在数组的首部并需要移动所有元素时</span>
删除：<span class="token class-name">O</span>（n）<span class="token comment">//最坏的情况发生在删除数组的开头发生并需要移动第一元素后面所有的元素时</span>
</code></pre></div>`,r:{minutes:12.63,words:3788},t:"线性数据结构",y:"a"}}],["/cs-basics/data-structure/red-black-tree.html",{loader:()=>p(()=>import("./red-black-tree.html-DnrUazuz.js"),__vite__mapDeps([108,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`<h2>红黑树介绍</h2>
<p>红黑树（Red Black Tree）是一种自平衡二叉查找树。它是在 1972 年由 Rudolf Bayer 发明的，当时被称为平衡二叉 B 树（symmetric binary B-trees）。后来，在 1978 年被 Leo J. Guibas 和 Robert Sedgewick 修改为如今的“红黑树”。</p>
<p>由于其自平衡的特性，保证了最坏情形下在 O(logn) 时间复杂度内完成查找、增加、删除等操作，性能表现稳定。</p>
<p>在 JDK 中，<code>TreeMap</code>、<code>TreeSet</code> 以及 JDK1.8 的 <code>HashMap</code> 底层都用到了红黑树。</p>`,r:{minutes:3.66,words:1098},t:"红黑树",y:"a"}}],["/cs-basics/data-structure/tree.html",{loader:()=>p(()=>import("./tree.html-D6krl-oQ.js"),__vite__mapDeps([109,1])),meta:{d:1725292091e3,c:"计算机基础",g:["数据结构"],e:`<p>树就是一种类似现实生活中的树的数据结构（倒置的树）。任何一颗非空树只有一个根节点。</p>
<p>一棵树具有以下特点：</p>
<ol>
<li>一棵树中的任意两个结点有且仅有唯一的一条路径连通。</li>
<li>一棵树如果有 n 个结点，那么它一定恰好有 n-1 条边。</li>
<li>一棵树不包含回路。</li>
</ol>
<p>下图就是一颗树，并且是一颗二叉树。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/data-structure/二叉树-2.png" alt="二叉树" tabindex="0"><figcaption>二叉树</figcaption></figure>`,r:{minutes:7.13,words:2138},t:"树",y:"a"}}],["/cs-basics/network/application-layer-protocol.html",{loader:()=>p(()=>import("./application-layer-protocol.html-DTzc16va.js"),__vite__mapDeps([110,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>HTTP:超文本传输协议</h2>
<p><strong>超文本传输协议（HTTP，HyperText Transfer Protocol)</strong> 是一种用于传输超文本和多媒体内容的协议，主要是为 Web 浏览器与 Web 服务器之间的通信而设计的。当我们使用浏览器浏览网页的时候，我们网页就是通过 HTTP 请求进行加载的。</p>
<p>HTTP 使用客户端-服务器模型，客户端向服务器发送 HTTP Request（请求），服务器响应请求并返回 HTTP Response（响应），整个过程如下图所示。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/450px-HTTP-Header.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:7.74,words:2322},t:"应用层常见协议总结（应用层）",y:"a"}}],["/cs-basics/network/arp.html",{loader:()=>p(()=>import("./arp.html-ZGPGFvn4.js"),__vite__mapDeps([111,112,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>每当我们学习一个新的网络协议的时候，都要把他结合到 OSI 七层模型中，或者是 TCP/IP 协议栈中来学习，一是要学习该协议在整个网络协议栈中的位置，二是要学习该协议解决了什么问题，地位如何？三是要学习该协议的工作原理，以及一些更深入的细节。</p>
<p><strong>ARP 协议</strong>，可以说是在协议栈中属于一个<strong>偏底层的、非常重要的、又非常简单的</strong>通信协议。</p>
<p>开始阅读这篇文章之前，你可以先看看下面几个问题：</p>
<ol>
<li><strong>ARP 协议在协议栈中的位置？</strong> ARP 协议在协议栈中的位置非常重要，在理解了它的工作原理之后，也很难说它到底是网络层协议，还是链路层协议，因为它恰恰串联起了网络层和链路层。国外的大部分教程通常将 ARP 协议放在网络层。</li>
<li><strong>ARP 协议解决了什么问题，地位如何？</strong> ARP 协议，全称 <strong>地址解析协议（Address Resolution Protocol）</strong>，它解决的是网络层地址和链路层地址之间的转换问题。因为一个 IP 数据报在物理上传输的过程中，总是需要知道下一跳（物理上的下一个目的地）该去往何处，但 IP 地址属于逻辑地址，而 MAC 地址才是物理地址，ARP 协议解决了 IP 地址转 MAC 地址的一些问题。</li>
<li><strong>ARP 工作原理？</strong> 只希望大家记住几个关键词：<strong>ARP 表、广播问询、单播响应</strong>。</li>
</ol>`,r:{minutes:9.76,words:2928},t:"ARP 协议详解(网络层)",y:"a"}}],["/cs-basics/network/computer-network-xiexiren-summary.html",{loader:()=>p(()=>import("./computer-network-xiexiren-summary.html-8ZWUhonQ.js"),__vite__mapDeps([113,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:'<p>本文是我在大二学习计算机网络期间整理， 大部分内容都来自于谢希仁老师的<a href="https://www.elias.ltd/usr/local/etc/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%EF%BC%88%E7%AC%AC7%E7%89%88%EF%BC%89%E8%B0%A2%E5%B8%8C%E4%BB%81.pdf" target="_blank" rel="noopener noreferrer">《计算机网络》第七版</a>这本书。为了内容更容易理解，我对之前的整理进行了一波重构，并配上了一些相关的示意图便于理解。</p>',r:{minutes:38.98,words:11695},t:"《计算机网络》（谢希仁）内容总结",y:"a"}}],["/cs-basics/network/dns.html",{loader:()=>p(()=>import("./dns.html-BSrPKllf.js"),__vite__mapDeps([114,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>DNS（Domain Name System）域名管理系统，是当用户使用浏览器访问网址之后，使用的第一个重要协议。DNS 要解决的是<strong>域名和 IP 地址的映射问题</strong>。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/network/dns-overview.png" alt="DNS:域名系统" tabindex="0"><figcaption>DNS:域名系统</figcaption></figure>
<p>在实际使用中，有一种情况下，浏览器是可以不必动用 DNS 就可以获知域名和 IP 地址的映射的。浏览器在本地会维护一个<code>hosts</code>列表，一般来说浏览器要先查看要访问的域名是否在<code>hosts</code>列表中，如果有的话，直接提取对应的 IP 地址记录，就好了。如果本地<code>hosts</code>列表内没有域名-IP 对应记录的话，那么 DNS 就闪亮登场了。</p>`,r:{minutes:7.45,words:2236},t:"DNS 域名系统详解（应用层）",y:"a"}}],["/cs-basics/network/http-status-codes.html",{loader:()=>p(()=>import("./http-status-codes.html-aQ2cFY3Z.js"),__vite__mapDeps([115,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>HTTP 状态码用于描述 HTTP 请求的结果，比如 2xx 就代表请求被成功处理。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/network/http-status-code.png" alt="常见 HTTP 状态码" tabindex="0"><figcaption>常见 HTTP 状态码</figcaption></figure>
<h3>1xx Informational（信息性状态码）</h3>
<p>相比于其他类别状态码来说，1xx 你平时你大概率不会碰到，所以这里直接跳过。</p>`,r:{minutes:2.91,words:873},t:"HTTP 常见状态码总结（应用层）",y:"a"}}],["/cs-basics/network/http-vs-https.html",{loader:()=>p(()=>import("./http-vs-https.html-DfefwFGi.js"),__vite__mapDeps([116,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>HTTP 协议</h2>
<h3>HTTP 协议介绍</h3>
<p>HTTP 协议，全称超文本传输协议（Hypertext Transfer Protocol）。顾名思义，HTTP 协议就是用来规范超文本的传输，超文本，也就是网络上的包括文本在内的各式各样的消息，具体来说，主要是来规范浏览器和服务器端的行为的。</p>
<p>并且，HTTP 是一个无状态（stateless）协议，也就是说服务器不维护任何有关客户端过去所发请求的消息。这其实是一种懒政，有状态协议会更加复杂，需要维护状态（历史信息），而且如果客户或服务器失效，会产生状态的不一致，解决这种不一致的代价更高。</p>
<h3>HTTP 协议通信过程</h3>`,r:{minutes:9.6,words:2881},t:"HTTP vs HTTPS（应用层）",y:"a"}}],["/cs-basics/network/http1.0-vs-http1.1.html",{loader:()=>p(()=>import("./http1.0-vs-http1.1.html-BqGsKoFX.js"),__vite__mapDeps([117,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>这篇文章会从下面几个维度来对比 HTTP 1.0 和 HTTP 1.1：</p>
<ul>
<li>响应状态码</li>
<li>缓存处理</li>
<li>连接方式</li>
<li>Host 头处理</li>
<li>带宽优化</li>
</ul>
<h2>响应状态码</h2>
<p>HTTP/1.0 仅定义了 16 种状态码。HTTP/1.1 中新加入了大量的状态码，光是错误响应状态码就新增了 24 种。比如说，<code>100 (Continue)</code>——在请求大资源前的预热请求，<code>206 (Partial Content)</code>——范围请求的标识码，<code>409 (Conflict)</code>——请求与当前资源的规定冲突，<code>410 (Gone)</code>——资源已被永久转移，而且没有任何已知的转发地址。</p>`,r:{minutes:7.23,words:2169},t:"HTTP 1.0 vs HTTP 1.1（应用层）",y:"a"}}],["/cs-basics/network/nat.html",{loader:()=>p(()=>import("./nat.html-ArLF-Mas.js"),__vite__mapDeps([118,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>应用场景</h2>
<p><strong>NAT 协议（Network Address Translation）</strong> 的应用场景如同它的名称——网络地址转换，应用于内部网到外部网的地址转换过程中。具体地说，在一个小的子网（局域网，Local Area Network，LAN）内，各主机使用的是同一个 LAN 下的 IP 地址，但在该 LAN 以外，在广域网（Wide Area Network，WAN）中，需要一个统一的 IP 地址来标识该 LAN 在整个 Internet 上的位置。</p>
<p>这个场景其实不难理解。随着一个个小型办公室、家庭办公室（Small Office, Home Office, SOHO）的出现，为了管理这些 SOHO，一个个子网被设计出来，从而在整个 Internet 中的主机数量将非常庞大。如果每个主机都有一个“绝对唯一”的 IP 地址，那么 IPv4 地址的表达能力可能很快达到上限（）。因此，实际上，SOHO 子网中的 IP 地址是“相对的”，这在一定程度上也缓解了 IPv4 地址的分配压力。</p>`,r:{minutes:5.43,words:1628},t:"NAT 协议详解（网络层）",y:"a"}}],["/cs-basics/network/network-attack-means.html",{loader:()=>p(()=>import("./network-attack-means.html-DjWiqaTM.js"),__vite__mapDeps([119,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<blockquote>
<p>本文整理完善自<a href="https://mp.weixin.qq.com/s/AZwWrOlLxRSSi-ywBgZ0fA" target="_blank" rel="noopener noreferrer">TCP/IP 常见攻击手段 - 暖蓝笔记 - 2021</a>这篇文章。</p>
</blockquote>
<p>这篇文章的内容主要是介绍 TCP/IP 常见攻击手段，尤其是 DDoS 攻击，也会补充一些其他的常见网络攻击手段。</p>
<h2>IP 欺骗</h2>
<h3>IP 是什么?</h3>
<p>在网络中，所有的设备都会分配一个地址。这个地址就仿佛小蓝的家地址「<strong>多少号多少室</strong>」，这个号就是分配给整个子网的，「<strong>室</strong>」对应的号码即分配给子网中计算机的，这就是网络中的地址。「号」对应的号码为网络号，「<strong>室</strong>」对应的号码为主机号，这个地址的整体就是 <strong>IP 地址</strong>。</p>`,r:{minutes:37.19,words:11156},t:"网络攻击常见手段总结",y:"a"}}],["/cs-basics/network/osi-and-tcp-ip-model.html",{loader:()=>p(()=>import("./osi-and-tcp-ip-model.html-BKML4vkM.js"),__vite__mapDeps([120,121,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>OSI 七层模型</h2>
<p><strong>OSI 七层模型</strong> 是国际标准化组织提出一个网络分层模型，其大体结构以及每一层提供的功能如下图所示：</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/network/osi-7-model.png" alt="OSI 七层模型" tabindex="0"><figcaption>OSI 七层模型</figcaption></figure>
<p>每一层都专注做一件事情，并且每一层都需要使用下一层提供的功能比如传输层需要使用网络层提供的路由和寻址功能，这样传输层才知道把数据传输到哪里去。</p>`,r:{minutes:12.45,words:3735},t:"OSI 和 TCP/IP 网络分层模型详解（基础）",y:"a"}}],["/cs-basics/network/other-network-questions.html",{loader:()=>p(()=>import("./other-network-questions.html-C4fH7KRz.js"),__vite__mapDeps([122,121,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:31.78,words:9535},t:"计算机网络常见面试题总结(上)",y:"a"}}],["/cs-basics/network/other-network-questions2.html",{loader:()=>p(()=>import("./other-network-questions2.html-Dw3WAb37.js"),__vite__mapDeps([123,112,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>下篇主要是传输层和网络层相关的内容。</p>
<h2>TCP 与 UDP</h2>
<h3>TCP 与 UDP 的区别（重要）</h3>
<ol>
<li><strong>是否面向连接</strong>：UDP 在传送数据之前不需要先建立连接。而 TCP 提供面向连接的服务，在传送数据之前必须先建立连接，数据传送结束后要释放连接。</li>
<li><strong>是否是可靠传输</strong>：远地主机在收到 UDP 报文后，不需要给出任何确认，并且不保证数据不丢失，不保证是否顺序到达。TCP 提供可靠的传输服务，TCP 在传递数据之前，会有三次握手来建立连接，而且在数据传递时，有确认、窗口、重传、拥塞控制机制。通过 TCP 连接传输的数据，无差错、不丢失、不重复、并且按序到达。</li>
<li><strong>是否有状态</strong>：这个和上面的“是否可靠传输”相对应。TCP 传输是有状态的，这个有状态说的是 TCP 会去记录自己发送消息的状态比如消息是否发送了、是否被接收了等等。为此 ，TCP 需要维持复杂的连接状态表。而 UDP 是无状态服务，简单来说就是不管发出去之后的事情了（<strong>这很渣男！</strong>）。</li>
<li><strong>传输效率</strong>：由于使用 TCP 进行传输的时候多了连接、确认、重传等机制，所以 TCP 的传输效率要比 UDP 低很多。</li>
<li><strong>传输形式</strong>：TCP 是面向字节流的，UDP 是面向报文的。</li>
<li><strong>首部开销</strong>：TCP 首部开销（20 ～ 60 字节）比 UDP 首部开销（8 字节）要大。</li>
<li><strong>是否提供广播或多播服务</strong>：TCP 只支持点对点通信，UDP 支持一对一、一对多、多对一、多对多；</li>
<li>……</li>
</ol>`,r:{minutes:15.84,words:4752},t:"计算机网络常见面试题总结(下)",y:"a"}}],["/cs-basics/network/tcp-basis.html",{loader:()=>p(()=>import("./tcp-basis.html-19nLLY3e.js"),__vite__mapDeps([124,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>TCP报文格式</h2>
<figure><figcaption></figcaption></figure>
<ul>
<li>
<p><strong>源端口 和 目标端口</strong>：各占 2 个字节。2 个字节，也就是 16个 bit，这应该也能说明为什么计算机端口的范围是 1-65535 （0 不使用，2^16=65536，最大位65536不使用）了吧？有了源端口和目标端口，加上 IP 首部里的源IP和目标IP，就可以唯一确定一个连接。</p>
</li>
<li>
<p><strong>序列号</strong>：共占用 4个字节。说明序列号的范围是 [0, 2^32-1]，也就是 [0, 4294967296]。当序号增加到 4294967296 后，下一个序号将回到0重新开始。在建立连接时由计算机生成的随机数作为其初始值（ISN，即Initial Sequence Number，初始序列号），通过 SYN 包传给接收端主机，每发送一次数据，就累加一次该「数据字节数」的大小（其中要注意的是 SYN 和 FIN 包的 seq 也要消耗一个序号）。用来解决网络包乱序问题。</p>
</li>
<li>
<p><strong>确认号</strong>：共占用 4个字节。说明确认号的范围是 [0, 2^32-1]，也就是 [0, 4294967296]。它表示期望收到对方下一次数据的序列号（所以 ack 一般都是上次接收成功的数据字节序号加1），发送端收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收。用来解决不丢包的问题。TCP在接收到数据后 200ms 才会发送ACK包，这种设定是为了等待是否有数据可以一起发送的。</p>
</li>
<li>
<p><strong>数据偏移</strong>：共占 4 个bit，它表示的是TCP报文的数据起始处距离TCP报文起始处的距离有多远。实际生活中我们说距离多远，我们的单位通常是米，而这里距离有多远，单位是 4 个字节（也就是 32bit）。由于 4 个bit，能表示的最大整数是 15，也就说明 TCP 报文里数据开始的位置距离报文起点是 60 个字节（4*15）。这意味着 TCP 的首部（除数据外的都叫首部）长度是 20-60 个字节。</p>
</li>
<li>
<p><strong>窗口</strong>：共占 16 个bit，因此最大的窗口大小为 2^16-1 = 65535 = 64k。这是早期的设计，对于现在的网络应用，可能会不太够，因此可以在选项里加一个 窗口扩大选项，来传输更多的数据。窗口指的是发送本报文段的一方的接受窗口（而不是自己的发送窗口）。窗口值告诉对方：从本报文段首部中的确认号算起，接收方目前允许对方发送的数据量（以字节为单位）。之所以要有这个限制，是因为接收方的数据缓存空间是有限的。总之，窗口值作为接收方让发送方设置其发送窗口的依据。</p>
</li>
</ul>`,r:{minutes:4.35,words:1306},t:"TCP基础",y:"a"}}],["/cs-basics/network/tcp-connection-and-disconnection.html",{loader:()=>p(()=>import("./tcp-connection-and-disconnection.html-DbFcjdiX.js"),__vite__mapDeps([125,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>为了准确无误地把数据送达目标处，TCP 协议采用了三次握手策略。</p>
<h2>建立连接-TCP 三次握手</h2>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/network/tcp-shakes-hands-three-times.png" alt="TCP 三次握手图解" tabindex="0"><figcaption>TCP 三次握手图解</figcaption></figure>
<p>建立一个 TCP 连接需要“三次握手”，缺一不可：</p>
<ul>
<li><strong>一次握手</strong>:客户端发送带有 SYN（SEQ=x） 标志的数据包 -&gt; 服务端，然后客户端进入 <strong>SYN_SEND</strong> 状态，等待服务端的确认；</li>
<li><strong>二次握手</strong>:服务端发送带有 SYN+ACK(SEQ=y,ACK=x+1) 标志的数据包 –&gt; 客户端,然后服务端进入 <strong>SYN_RECV</strong> 状态；</li>
<li><strong>三次握手</strong>:客户端发送带有 ACK(ACK=y+1) 标志的数据包 –&gt; 服务端，然后客户端和服务端都进入<strong>ESTABLISHED</strong> 状态，完成 TCP 三次握手。</li>
</ul>`,r:{minutes:7.25,words:2175},t:"TCP 三次握手和四次挥手（传输层）",y:"a"}}],["/cs-basics/network/tcp-reliability-guarantee.html",{loader:()=>p(()=>import("./tcp-reliability-guarantee.html-BTQR93u_.js"),__vite__mapDeps([126,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<h2>TCP 如何保证传输的可靠性？</h2>
<ol>
<li><strong>基于数据块传输</strong>：应用数据被分割成 TCP 认为最适合发送的数据块，再传输给网络层，数据块被称为报文段或段。</li>
<li><strong>对失序数据包重新排序以及去重</strong>：TCP 为了保证不发生丢包，就给每个包一个序列号，有了序列号能够将接收到的数据根据序列号排序，并且去掉重复序列号的数据就可以实现数据包去重。</li>
<li><strong>校验和</strong> : TCP 将保持它首部和数据的检验和。这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到段的检验和有差错，TCP 将丢弃这个报文段和不确认收到此报文段。</li>
<li><strong>重传机制</strong> : 在数据包丢失或延迟的情况下，重新发送数据包，直到收到对方的确认应答（ACK）。TCP 重传机制主要有：基于计时器的重传（也就是超时重传）、快速重传（基于接收端的反馈信息来引发重传）、SACK（在快速重传的基础上，返回最近收到的报文段的序列号范围，这样客户端就知道，哪些数据包已经到达服务器了）、D-SACK（重复 SACK，在 SACK 的基础上，额外携带信息，告知发送方有哪些数据包自己重复接收了）。关于重传机制的详细介绍，可以查看<a href="https://zhuanlan.zhihu.com/p/101702312" target="_blank" rel="noopener noreferrer">详解 TCP 超时与重传机制</a>这篇文章。</li>
<li><strong>流量控制</strong> : TCP 连接的每一方都有固定大小的缓冲空间，TCP 的接收端只允许发送端发送接收端缓冲区能接纳的数据。当接收方来不及处理发送方的数据，能提示发送方降低发送的速率，防止包丢失。TCP 使用的流量控制协议是可变大小的滑动窗口协议（TCP 利用滑动窗口实现流量控制）。</li>
<li><strong>拥塞控制</strong> : 当网络拥塞时，减少数据的发送。TCP 在发送数据的时候，需要考虑两个因素：一是接收方的接收能力，二是网络的拥塞程度。接收方的接收能力由滑动窗口表示，表示接收方还有多少缓冲区可以用来接收数据。网络的拥塞程度由拥塞窗口表示，它是发送方根据网络状况自己维护的一个值，表示发送方认为可以在网络中传输的数据量。发送方发送数据的大小是滑动窗口和拥塞窗口的最小值，这样可以保证发送方既不会超过接收方的接收能力，也不会造成网络的过度拥塞。</li>
</ol>`,r:{minutes:12.9,words:3870},t:"TCP 传输可靠性保障（传输层）",y:"a"}}],["/cs-basics/network/the-whole-process-of-accessing-web-pages.html",{loader:()=>p(()=>import("./the-whole-process-of-accessing-web-pages.html-B-wtxj0d.js"),__vite__mapDeps([127,1])),meta:{d:1725292091e3,c:"计算机基础",g:["计算机网络"],e:`<p>开发岗中总是会考很多计算机网络的知识点，但如果让面试官只靠一道题，便涵盖最多的计网知识点，那可能就是 <strong>网页浏览的全过程</strong> 了。本篇文章将带大家从头到尾过一遍这道被考烂的面试题，必会！！！</p>
<p>总的来说，网络通信模型可以用下图来表示，也就是大家只要熟记网络结构五层模型，按照这个体系，很多知识点都能顺出来了。访问网页的过程也是如此。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/network/five-layers.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:5.48,words:1645},t:"访问网页的全过程（知识串联）",y:"a"}}],["/cs-basics/operating-system/linux-intro.html",{loader:()=>p(()=>import("./linux-intro.html-C27D9QBK.js"),__vite__mapDeps([128,1])),meta:{d:1725292091e3,c:"计算机基础",g:["操作系统","Linux"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:26.16,words:7849},t:"Linux 基础知识总结",y:"a"}}],["/cs-basics/operating-system/operating-system-basic-questions-01.html",{loader:()=>p(()=>import("./operating-system-basic-questions-01.html-DxaLCUBM.js"),__vite__mapDeps([129,1])),meta:{d:1725292091e3,c:"计算机基础",g:["操作系统"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:38.17,words:11450},t:"操作系统常见面试题总结(上)",y:"a"}}],["/cs-basics/operating-system/operating-system-basic-questions-02.html",{loader:()=>p(()=>import("./operating-system-basic-questions-02.html-gulVeI1G.js"),__vite__mapDeps([130,1])),meta:{d:1725292091e3,c:"计算机基础",g:["操作系统"],e:`<h2>内存管理</h2>
<h3>内存管理主要做了什么？</h3>
<figure><img src="https://oss.javaguide.cn/github/javaguide/cs-basics/operating-system/memory-management-roles.png" alt="内存管理主要做的事情" tabindex="0"><figcaption>内存管理主要做的事情</figcaption></figure>
<p>操作系统的内存管理非常重要，主要负责下面这些事情：</p>
<ul>
<li><strong>内存的分配与回收</strong>：对进程所需的内存进行分配和释放，malloc 函数：申请内存，free 函数：释放内存。</li>
<li><strong>地址转换</strong>：将程序中的虚拟地址转换成内存中的物理地址。</li>
<li><strong>内存扩充</strong>：当系统没有足够的内存时，利用虚拟内存技术或自动覆盖技术，从逻辑上扩充内存。</li>
<li><strong>内存映射</strong>：将一个文件直接映射到进程的进程空间中，这样可以通过内存指针用读写内存的办法直接存取文件内容，速度更快。</li>
<li><strong>内存优化</strong>：通过调整内存分配策略和回收算法来优化内存使用效率。</li>
<li><strong>内存安全</strong>：保证进程之间使用内存互不干扰，避免一些恶意程序通过修改内存来破坏系统的安全性。</li>
<li>……</li>
</ul>`,r:{minutes:33.79,words:10138},t:"操作系统常见面试题总结(下)",y:"a"}}],["/cs-basics/operating-system/shell-intro.html",{loader:()=>p(()=>import("./shell-intro.html-BZdO8DTA.js"),__vite__mapDeps([131,1])),meta:{d:1725292091e3,c:"计算机基础",g:["操作系统","Linux"],e:`<p>Shell 编程在我们的日常开发工作中非常实用，目前 Linux 系统下最流行的运维自动化语言就是 Shell 和 Python 了。</p>
<p>这篇文章我会简单总结一下 Shell 编程基础知识，带你入门 Shell 编程！</p>
<h2>走进 Shell 编程的大门</h2>
<h3>为什么要学 Shell？</h3>
<p>学一个东西，我们大部分情况都是往实用性方向着想。从工作角度来讲，学习 Shell 是为了提高我们自己工作效率，提高产出，让我们在更少的时间完成更多的事情。</p>
<p>很多人会说 Shell 编程属于运维方面的知识了，应该是运维人员来做，我们做后端开发的没必要学。我觉得这种说法大错特错，相比于专门做 Linux 运维的人员来说，我们对 Shell 编程掌握程度的要求要比他们低，但是 Shell 编程也是我们必须要掌握的！</p>`,r:{minutes:11.65,words:3495},t:"Shell 编程基础知识总结",y:"a"}}],["/database/elasticsearch/elasticsearch-questions-01.html",{loader:()=>p(()=>import("./elasticsearch-questions-01.html-CXlLZrQV.js"),__vite__mapDeps([132,1])),meta:{d:1725292091e3,c:"数据库",g:["NoSQL","Elasticsearch"],e:`<p><strong>Elasticsearch</strong> 相关的面试题为我的<a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a>中。</p>
<figure><img src="https://oss.javaguide.cn/javamianshizhibei/elasticsearch-questions.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.28,words:84},t:"Elasticsearch常见面试题总结(付费)",y:"a"}}],["/database/mongodb/mongodb-questions-01.html",{loader:()=>p(()=>import("./mongodb-questions-01.html-CVvvRqzm.js"),__vite__mapDeps([133,1])),meta:{d:1725292091e3,c:"数据库",g:["NoSQL","MongoDB"],e:`<blockquote>
<p>少部分内容参考了 MongoDB 官方文档的描述，在此说明一下。</p>
</blockquote>
<h2>MongoDB 基础</h2>
<h3>MongoDB 是什么？</h3>
<p>MongoDB 是一个基于 <strong>分布式文件存储</strong> 的开源 NoSQL 数据库系统，由 <strong>C++</strong> 编写的。MongoDB 提供了 <strong>面向文档</strong> 的存储方式，操作起来比较简单和容易，支持“<strong>无模式</strong>”的数据建模，可以存储比较复杂的数据类型，是一款非常流行的 <strong>文档类型数据库</strong> 。</p>`,r:{minutes:19.82,words:5947},t:"MongoDB常见面试题总结（上）",y:"a"}}],["/database/mongodb/mongodb-questions-02.html",{loader:()=>p(()=>import("./mongodb-questions-02.html-Ca5yjoKG.js"),__vite__mapDeps([134,1])),meta:{d:1725292091e3,c:"数据库",g:["NoSQL","MongoDB"],e:`<h2>MongoDB 索引</h2>
<h3>MongoDB 索引有什么用?</h3>
<p>和关系型数据库类似，MongoDB 中也有索引。索引的目的主要是用来提高查询效率，如果没有索引的话，MongoDB 必须执行 <strong>集合扫描</strong> ，即扫描集合中的每个文档，以选择与查询语句匹配的文档。如果查询存在合适的索引，MongoDB 可以使用该索引来限制它必须检查的文档数量。并且，MongoDB 可以使用索引中的排序返回排序后的结果。</p>
<p>虽然索引可以显著缩短查询时间，但是使用索引、维护索引是有代价的。在执行写入操作时，除了要更新文档之外，还必须更新索引，这必然会影响写入的性能。因此，当有大量写操作而读操作少时，或者不考虑读操作的性能时，都不推荐建立索引。</p>`,r:{minutes:16.66,words:4997},t:"MongoDB常见面试题总结（下）",y:"a"}}],["/database/mysql/a-thousand-lines-of-mysql-study-notes.html",{loader:()=>p(()=>import("./a-thousand-lines-of-mysql-study-notes.html-Dod4mMh1.js"),__vite__mapDeps([135,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>原文地址：<a href="https://shockerli.net/post/1000-line-mysql-note/" target="_blank" rel="noopener noreferrer">https://shockerli.net/post/1000-line-mysql-note/</a> ，JavaGuide 对本文进行了简答排版，新增了目录。</p>
</blockquote>
<p>非常不错的总结，强烈建议保存下来，需要的时候看一看。</p>
<h3>基本操作</h3>
<div class="language-sql" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">/* Windows服务 */</span>
<span class="token comment">-- 启动 MySQL</span>
			net <span class="token keyword">start</span> mysql
<span class="token comment">-- 创建Windows服务</span>
				sc <span class="token keyword">create</span> mysql binPath<span class="token operator">=</span> mysqld_bin_path<span class="token punctuation">(</span>注意：等号与值之间有空格<span class="token punctuation">)</span>
<span class="token comment">/* 连接与断开服务器 */</span>
<span class="token comment">-- 连接 MySQL</span>
				mysql <span class="token operator">-</span>h 地址 <span class="token operator">-</span>P 端口 <span class="token operator">-</span>u 用户名 <span class="token operator">-</span>p 密码
<span class="token comment">-- 显示哪些线程正在运行</span>
				<span class="token keyword">SHOW</span> PROCESSLIST
<span class="token comment">-- 显示系统变量信息</span>
				<span class="token keyword">SHOW</span> VARIABLES
</code></pre></div>`,r:{minutes:33.01,words:9902},t:"一千行 MySQL 学习笔记",y:"a"}}],["/database/mysql/how-sql-executed-in-mysql.html",{loader:()=>p(()=>import("./how-sql-executed-in-mysql.html-CdknHDDV.js"),__vite__mapDeps([136,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>本文来自<a href="https://github.com/kinglaw1204" target="_blank" rel="noopener noreferrer">木木匠</a>投稿。</p>
</blockquote>
<p>本篇文章会分析下一个 SQL 语句在 MySQL 中的执行流程，包括 SQL 的查询在 MySQL 内部会怎么流转，SQL 语句的更新是怎么完成的。</p>
<p>在分析之前我会先带着你看看 MySQL 的基础架构，知道了 MySQL 由那些组件组成以及这些组件的作用是什么，可以帮助我们理解和解决这些问题。</p>
<h2>一 MySQL 基础架构分析</h2>`,r:{minutes:10.27,words:3081},t:"SQL语句在MySQL中的执行过程",y:"a"}}],["/database/mysql/index-invalidation-caused-by-implicit-conversion.html",{loader:()=>p(()=>import("./index-invalidation-caused-by-implicit-conversion.html-CY193TI6.js"),__vite__mapDeps([137,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL","性能优化"],e:`<blockquote>
<p>本次测试使用的 MySQL 版本是 <code>5.7.26</code>，随着 MySQL 版本的更新某些特性可能会发生改变，本文不代表所述观点和结论于 MySQL 所有版本均准确无误，版本差异请自行甄别。</p>
<p>原文：<a href="https://www.guitu18.com/post/2019/11/24/61.html" target="_blank" rel="noopener noreferrer">https://www.guitu18.com/post/2019/11/24/61.html</a></p>
</blockquote>`,r:{minutes:8.71,words:2613},t:"MySQL隐式转换造成索引失效",y:"a"}}],["/database/mysql/innodb-implementation-of-mvcc.html",{loader:()=>p(()=>import("./innodb-implementation-of-mvcc.html-CkJEEDrj.js"),__vite__mapDeps([138,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<h2>多版本并发控制 (Multi-Version Concurrency Control)</h2>
<p>MVCC 是一种并发控制机制，用于在多个并发事务同时读写数据库时保持数据的一致性和隔离性。它是通过在每个数据行上维护多个版本的数据来实现的。当一个事务要对数据库中的数据进行修改时，MVCC 会为该事务创建一个数据快照，而不是直接修改实际的数据行。</p>
<p>1、读操作（SELECT）：</p>
<p>当一个事务执行读操作时，它会使用快照读取。快照读取是基于事务开始时数据库中的状态创建的，因此事务不会读取其他事务尚未提交的修改。具体工作情况如下：</p>
<ul>
<li>对于读取操作，事务会查找符合条件的数据行，并选择符合其事务开始时间的数据版本进行读取。</li>
<li>如果某个数据行有多个版本，事务会选择不晚于其开始时间的最新版本，确保事务只读取在它开始之前已经存在的数据。</li>
<li>事务读取的是快照数据，因此其他并发事务对数据行的修改不会影响当前事务的读取操作。</li>
</ul>`,r:{minutes:14.68,words:4404},t:"InnoDB存储引擎对MVCC的实现",y:"a"}}],["/database/mysql/mysql-auto-increment-primary-key-continuous.html",{loader:()=>p(()=>import("./mysql-auto-increment-primary-key-continuous.html-BfV1pekX.js"),__vite__mapDeps([139,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL","大厂面试"],e:`<blockquote>
<p>作者：飞天小牛肉</p>
<p>原文：<a href="https://mp.weixin.qq.com/s/qci10h9rJx_COZbHV3aygQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/qci10h9rJx_COZbHV3aygQ</a></p>
</blockquote>
<p>众所周知，自增主键可以让聚集索引尽量地保持递增顺序插入，避免了随机查询，从而提高了查询效率。</p>
<p>但实际上，MySQL 的自增主键并不能保证一定是连续递增的。</p>`,r:{minutes:9.92,words:2976},t:"MySQL自增主键一定是连续的吗",y:"a"}}],["/database/mysql/mysql-high-performance-optimization-specification-recommendations.html",{loader:()=>p(()=>import("./mysql-high-performance-optimization-specification-recommendations.html-Dpx-4h-2.js"),__vite__mapDeps([140,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>作者: 听风 原文地址: <a href="https://www.cnblogs.com/huchong/p/10219318.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/huchong/p/10219318.html</a>。</p>
<p>JavaGuide 已获得作者授权，并对原文内容进行了完善补充。</p>
</blockquote>
<h2>数据库命名规范</h2>
<ul>
<li>所有数据库对象名称必须使用小写字母并用下划线分割</li>
<li>所有数据库对象名称禁止使用 MySQL 保留关键字（如果表名中包含关键字查询时，需要将其用单引号括起来）</li>
<li>数据库对象的命名要能做到见名识意，并且最后不要超过 32 个字符</li>
<li>临时库表必须以 <code>tmp_</code> 为前缀并以日期为后缀，备份表必须以 <code>bak_</code> 为前缀并以日期 (时间戳) 为后缀</li>
<li>所有存储相同数据的列名和列类型必须一致（一般作为关联列，如果查询时关联列类型不一致会自动进行数据类型隐式转换，会造成列上的索引失效，导致查询效率降低）</li>
</ul>`,r:{minutes:18.73,words:5618},t:"MySQL高性能优化规范建议总结",y:"a"}}],["/database/mysql/mysql-index.html",{loader:()=>p(()=>import("./mysql-index.html-CQctvbCx.js"),__vite__mapDeps([141,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>感谢<a href="https://github.com/WT-AHA" target="_blank" rel="noopener noreferrer">WT-AHA</a>对本文的完善，相关 PR：<a href="https://github.com/Snailclimb/JavaGuide/pull/1648" target="_blank" rel="noopener noreferrer">https://github.com/Snailclimb/JavaGuide/pull/1648</a> 。</p>
</blockquote>
<p>但凡经历过几场面试的小伙伴，应该都清楚，数据库索引这个知识点在面试中出现的频率高到离谱。</p>`,r:{minutes:30.26,words:9078},t:"MySQL索引详解",y:"a"}}],["/database/mysql/mysql-logs.html",{loader:()=>p(()=>import("./mysql-logs.html-CoKgRHeH.js"),__vite__mapDeps([142,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>本文来自公号程序猿阿星投稿，JavaGuide 对其做了补充完善。</p>
</blockquote>
<h2>前言</h2>
<p>MySQL 日志 主要包括错误日志、查询日志、慢查询日志、事务日志、二进制日志几大类。其中，比较重要的还要属二进制日志 binlog（归档日志）和事务日志 redo log（重做日志）和 undo log（回滚日志）。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/01.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:16.01,words:4803},t:"MySQL三大日志(binlog、redo log和undo log)详解",y:"a"}}],["/database/mysql/mysql-query-cache.html",{loader:()=>p(()=>import("./mysql-query-cache.html-BTjAJ6Ag.js"),__vite__mapDeps([143,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<p>缓存是一个有效且实用的系统性能优化的手段，不论是操作系统还是各种软件和网站或多或少都用到了缓存。</p>
<p>然而，有经验的 DBA 都建议生产环境中把 MySQL 自带的 Query Cache（查询缓存）给关掉。而且，从 MySQL 5.7.20 开始，就已经默认弃用查询缓存了。在 MySQL 8.0 及之后，更是直接删除了查询缓存的功能。</p>
<p>这又是为什么呢？查询缓存真就这么鸡肋么?</p>
<p>带着如下几个问题，我们正式进入本文。</p>
<ul>
<li>MySQL 查询缓存是什么？适用范围？</li>
<li>MySQL 缓存规则是什么？</li>
<li>MySQL 缓存的优缺点是什么？</li>
<li>MySQL 缓存对性能有什么影响？</li>
</ul>`,r:{minutes:10.85,words:3256},t:"MySQL查询缓存详解",y:"a"}}],["/database/mysql/mysql-query-execution-plan.html",{loader:()=>p(()=>import("./mysql-query-execution-plan.html-CNeEqWn4.js"),__vite__mapDeps([144,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>本文来自公号 MySQL 技术，JavaGuide 对其做了补充完善。原文地址：<a href="https://mp.weixin.qq.com/s/d5OowNLtXBGEAbT31sSH4g" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/d5OowNLtXBGEAbT31sSH4g</a></p>
</blockquote>
<p>优化 SQL 的第一步应该是读懂 SQL 的执行计划。本篇文章，我们一起来学习下 MySQL <code>EXPLAIN</code> 执行计划相关知识。</p>`,r:{minutes:6.22,words:1867},t:"MySQL执行计划分析",y:"a"}}],["/database/mysql/mysql-questions-01.html",{loader:()=>p(()=>import("./mysql-questions-01.html-Cfv5oyKu.js"),__vite__mapDeps([145,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL","大厂面试"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:41.63,words:12488},t:"MySQL常见面试题总结",y:"a"}}],["/database/mysql/some-thoughts-on-database-storage-time.html",{loader:()=>p(()=>import("./some-thoughts-on-database-storage-time.html-ntG6c0lv.js"),__vite__mapDeps([146,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<p>我们平时开发中不可避免的就是要存储时间，比如我们要记录操作表中这条记录的时间、记录转账的交易时间、记录出发时间、用户下单时间等等。你会发现时间这个东西与我们开发的联系还是非常紧密的，用的好与不好会给我们的业务甚至功能带来很大的影响。所以，我们有必要重新出发，好好认识一下这个东西。</p>
<h2>不要用字符串存储日期</h2>
<p>和绝大部分对数据库不太了解的新手一样，我在大学的时候就这样干过，甚至认为这样是一个不错的表示日期的方法。毕竟简单直白，容易上手。</p>
<p>但是，这是不正确的做法，主要会有下面两个问题：</p>
<ol>
<li>字符串占用的空间更大！</li>
<li>字符串存储的日期效率比较低（逐个字符进行比对），无法用日期相关的 API 进行计算和比较。</li>
</ol>`,r:{minutes:5.71,words:1714},t:"MySQL日期类型选择建议",y:"a"}}],["/database/mysql/transaction-isolation-level.html",{loader:()=>p(()=>import("./transaction-isolation-level.html-fsfW_WqX.js"),__vite__mapDeps([147,1])),meta:{d:1725292091e3,c:"数据库",g:["MySQL"],e:`<blockquote>
<p>本文由 <a href="https://github.com/Snailclimb" target="_blank" rel="noopener noreferrer">SnailClimb</a> 和 <a href="https://github.com/guang19" target="_blank" rel="noopener noreferrer">guang19</a> 共同完成。</p>
</blockquote>
<p>关于事务基本概览的介绍，请看这篇文章的介绍：<a href="/learning/database/mysql/mysql-questions-01.html#MySQL-%E4%BA%8B%E5%8A%A1" target="_blank">MySQL 常见知识点&amp;面试题总结</a></p>`,r:{minutes:4.94,words:1482},t:"MySQL事务隔离级别详解",y:"a"}}],["/database/redis/3-commonly-used-cache-read-and-write-strategies.html",{loader:()=>p(()=>import("./3-commonly-used-cache-read-and-write-strategies.html-D1Gi7Txp.js"),__vite__mapDeps([148,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p>看到很多小伙伴简历上写了“<strong>熟练使用缓存</strong>”，但是被我问到“<strong>缓存常用的 3 种读写策略</strong>”的时候却一脸懵逼。</p>
<p>在我看来，造成这个问题的原因是我们在学习 Redis 的时候，可能只是简单写了一些 Demo，并没有去关注缓存的读写策略，或者说压根不知道这回事。</p>
<p>但是，搞懂 3 种常见的缓存读写策略对于实际工作中使用缓存以及面试中被问到缓存都是非常有帮助的！</p>
<p><strong>下面介绍到的三种模式各有优劣，不存在最佳模式，根据具体的业务场景选择适合自己的缓存读写模式。</strong></p>`,r:{minutes:5.47,words:1640},t:"3种常用的缓存读写策略详解",y:"a"}}],["/database/redis/cache-basics.html",{loader:()=>p(()=>import("./cache-basics.html-CpED1rRT.js"),__vite__mapDeps([149,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p><strong>缓存基础</strong> 相关的面试题为我的 <a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a>中。</p>
<figure><img src="https://oss.javaguide.cn/javamianshizhibei/database-questions.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.3,words:89},t:"缓存基础常见面试题总结(付费)",y:"a"}}],["/database/redis/redis-basis.html",{loader:()=>p(()=>import("./redis-basis.html-BjyfW_Ks.js"),__vite__mapDeps([150,1])),meta:{d:1725292091e3,c:"数据库",e:`<h2>Windows使用</h2>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-server redis.windows.conf
<span class="token comment">#使用指定配置文件启动redis服务器</span>
redis-cli <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">6379</span> <span class="token parameter variable">-a</span> your_password
<span class="token comment">#在另一个cmd窗口启动redis数据库</span>
redis-cil <span class="token function">shutdown</span>
<span class="token comment">#关闭服务器</span>
AUTH your_password
<span class="token comment">#在启动数据库后输入密码进行身份验证</span>
</code></pre></div>`,r:{minutes:1.33,words:400},t:"redis语法基础",y:"a"}}],["/database/redis/redis-cluster.html",{loader:()=>p(()=>import("./redis-cluster.html-DTNZXnhG.js"),__vite__mapDeps([151,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p><strong>Redis 集群</strong> 相关的面试题为我的 <a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a>中。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/database/redis/redis-cluster-javamianshizhibei.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:.28,words:83},t:"Redis集群详解(付费)",y:"a"}}],["/database/redis/redis-common-blocking-problems-summary.html",{loader:()=>p(()=>import("./redis-common-blocking-problems-summary.html-CoZJbS59.js"),__vite__mapDeps([152,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<blockquote>
<p>本文整理完善自：<a href="https://mp.weixin.qq.com/s/0Nqfq_eQrUb12QH6eBbHXA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/0Nqfq_eQrUb12QH6eBbHXA</a> ，作者：阿 Q 说代码</p>
</blockquote>
<p>这篇文章会详细总结一下可能导致 Redis 阻塞的情况，这些情况也是影响 Redis 性能的关键因素，使用 Redis 的时候应该格外注意！</p>
<h2>O(n) 命令</h2>`,r:{minutes:9.35,words:2804},t:"Redis常见阻塞原因总结",y:"a"}}],["/database/redis/redis-data-structures-01.html",{loader:()=>p(()=>import("./redis-data-structures-01.html-D8gJt7Ii.js"),__vite__mapDeps([153,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p>Redis 共有 5 种基本数据类型：String（字符串）、List（列表）、Set（集合）、Hash（散列）、Zset（有序集合）。</p>
<p>这 5 种数据类型是直接提供给用户使用的，是数据的保存形式，其底层实现主要依赖这 8 种数据结构：简单动态字符串（SDS）、LinkedList（双向链表）、Dict（哈希表/字典）、SkipList（跳跃表）、Intset（整数集合）、ZipList（压缩列表）、QuickList（快速列表）。</p>
<p>Redis 5 种基本数据类型对应的底层数据结构实现如下表所示：</p>
<table>
<thead>
<tr>
<th style="text-align:left">String</th>
<th style="text-align:left">List</th>
<th style="text-align:left">Hash</th>
<th style="text-align:left">Set</th>
<th style="text-align:left">Zset</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">SDS</td>
<td style="text-align:left">LinkedList/ZipList/QuickList</td>
<td style="text-align:left">Dict、ZipList</td>
<td style="text-align:left">Dict、Intset</td>
<td style="text-align:left">ZipList、SkipList</td>
</tr>
</tbody>
</table>`,r:{minutes:13.26,words:3978},t:"Redis 5 种基本数据类型详解",y:"a"}}],["/database/redis/redis-data-structures-02.html",{loader:()=>p(()=>import("./redis-data-structures-02.html-NjxX4uW5.js"),__vite__mapDeps([154,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p>除了 5 种基本的数据类型之外，Redis 还支持 3 种特殊的数据类型：Bitmap、HyperLogLog、GEO。</p>
<h2>Bitmap （位图）</h2>
<h3>介绍</h3>
<p>根据官网介绍：</p>
<blockquote>
<p>Bitmaps are not an actual data type, but a set of bit-oriented operations defined on the String type which is treated like a bit vector. Since strings are binary safe blobs and their maximum length is 512 MB, they are suitable to set up to 2^32 different bits.</p>
<p>Bitmap 不是 Redis 中的实际数据类型，而是在 String 类型上定义的一组面向位的操作，将其视为位向量。由于字符串是二进制安全的块，且最大长度为 512 MB，它们适合用于设置最多 2^32 个不同的位。</p>
</blockquote>`,r:{minutes:6.24,words:1873},t:"Redis 3 种特殊数据类型详解",y:"a"}}],["/database/redis/redis-delayed-task.html",{loader:()=>p(()=>import("./redis-delayed-task.html-S60XuGos.js"),__vite__mapDeps([155,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p>基于 Redis 实现延时任务的功能无非就下面两种方案：</p>
<ol>
<li>Redis 过期事件监听</li>
<li>Redisson 内置的延时队列</li>
</ol>
<p>面试的时候，你可以先说自己考虑了这两种方案，但最后发现 Redis 过期事件监听这种方案存在很多问题，因此你最终选择了 Redisson 内置的 DelayedQueue 这种方案。</p>
<p>这个时候面试官可能会追问你一些相关的问题，我们后面会提到，提前准备就好了。</p>
<p>另外，除了下面介绍到的这些问题之外，Redis 相关的常见问题建议你都复习一遍，不排除面试官会顺带问你一些 Redis 的其他问题。</p>`,r:{minutes:5.1,words:1530},t:"如何基于Redis实现延时任务",y:"a"}}],["/database/redis/redis-memory-fragmentation.html",{loader:()=>p(()=>import("./redis-memory-fragmentation.html-YE_-d6Y-.js"),__vite__mapDeps([156,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<h2>什么是内存碎片?</h2>
<p>你可以将内存碎片简单地理解为那些不可用的空闲内存。</p>
<p>举个例子：操作系统为你分配了 32 字节的连续内存空间，而你存储数据实际只需要使用 24 字节内存空间，那这多余出来的 8 字节内存空间如果后续没办法再被分配存储其他数据的话，就可以被称为内存碎片。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/memory-fragmentation.png" alt="内存碎片" tabindex="0"><figcaption>内存碎片</figcaption></figure>`,r:{minutes:4.53,words:1360},t:"Redis内存碎片详解",y:"a"}}],["/database/redis/redis-persistence.html",{loader:()=>p(()=>import("./redis-persistence.html-Yj4f7q5R.js"),__vite__mapDeps([157,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<p>使用缓存的时候，我们经常需要对内存中的数据进行持久化也就是将内存中的数据写入到硬盘中。大部分原因是为了之后重用数据（比如重启机器、机器故障之后恢复数据），或者是为了做数据同步（比如 Redis 集群的主从节点通过 RDB 文件同步数据）。</p>
<p>Redis 不同于 Memcached 的很重要一点就是，Redis 支持持久化，而且支持 3 种持久化方式:</p>
<ul>
<li>快照（snapshotting，RDB）</li>
<li>只追加文件（append-only file, AOF）</li>
<li>RDB 和 AOF 的混合持久化(Redis 4.0 新增)</li>
</ul>`,r:{minutes:14.35,words:4304},t:"Redis持久化机制详解",y:"a"}}],["/database/redis/redis-questions-01.html",{loader:()=>p(()=>import("./redis-questions-01.html-BUUnzCTn.js"),__vite__mapDeps([158,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:43.36,words:13007},t:"Redis常见面试题总结(上)",y:"a"}}],["/database/redis/redis-questions-02.html",{loader:()=>p(()=>import("./redis-questions-02.html-DLxK24U4.js"),__vite__mapDeps([159,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>Redis 事务</h2>
<h3>什么是 Redis 事务？</h3>
<p>你可以将 Redis 中的事务理解为：<strong>Redis 事务提供了一种将多个命令请求打包的功能。然后，再按顺序执行打包的所有命令，并且不会被中途打断。</strong></p>`,r:{minutes:35.87,words:10761},t:"Redis常见面试题总结(下)",y:"a"}}],["/database/redis/redis-skiplist.html",{loader:()=>p(()=>import("./redis-skiplist.html-B45q0wuL.js"),__vite__mapDeps([160,1])),meta:{d:1725292091e3,c:"数据库",g:["Redis"],e:`<h2>前言</h2>
<p>近几年针对 Redis 面试时会涉及常见数据结构的底层设计，其中就有这么一道比较有意思的面试题：“Redis 的有序集合底层为什么要用跳表，而不用平衡树、红黑树或者 B+树？”。</p>
<p>本文就以这道大厂常问的面试题为切入点，带大家详细了解一下跳表这个数据结构。</p>
<p>本文整体脉络如下图所示，笔者会从有序集合的基本使用到跳表的源码分析和实现，让你会对 Redis 的有序集合底层实现的跳表有着更深刻的理解和掌握。</p>
<figure><img src="https://oss.javaguide.cn/javaguide/database/redis/skiplist/202401222005468.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:23.95,words:7184},t:"Redis为什么用跳表实现有序集合",y:"a"}}],["/database/sql/sql-questions-01.html",{loader:()=>p(()=>import("./sql-questions-01.html-DgEQstxU.js"),__vite__mapDeps([161,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>题目来源于：<a href="https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=298" target="_blank" rel="noopener noreferrer">牛客题霸 - SQL 必知必会</a></p>
</blockquote>
<h2>检索数据</h2>
<p><code>SELECT</code> 用于从数据库中查询数据。</p>
<h3>从 Customers 表中检索所有的 ID</h3>
<p>现有表 <code>Customers</code> 如下：</p>`,r:{minutes:32.49,words:9746},t:"SQL常见面试题总结（1）",y:"a"}}],["/database/sql/sql-questions-02.html",{loader:()=>p(()=>import("./sql-questions-02.html-CaKn_AIm.js"),__vite__mapDeps([162,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>题目来源于：<a href="https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=240" target="_blank" rel="noopener noreferrer">牛客题霸 - SQL 进阶挑战</a></p>
</blockquote>
<h2>增删改操作</h2>
<p>SQL 插入记录的方式汇总：</p>
<ul>
<li><strong>普通插入（全字段）</strong> ：<code>INSERT INTO table_name VALUES (value1, value2, ...)</code></li>
<li><strong>普通插入（限定字段）</strong> ：<code>INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...)</code></li>
<li><strong>多条一次性插入</strong> ：<code>INSERT INTO table_name (column1, column2, ...) VALUES (value1_1, value1_2, ...), (value2_1, value2_2, ...), ...</code></li>
<li><strong>从另一个表导入</strong> ：<code>INSERT INTO table_name SELECT * FROM table_name2 [WHERE key=value]</code></li>
<li><strong>带更新的插入</strong> ：<code>REPLACE INTO table_name VALUES (value1, value2, ...)</code>（注意这种原理是检测到主键或唯一性索引键重复就删除原记录后重新插入）</li>
</ul>`,r:{minutes:13.92,words:4177},t:"SQL常见面试题总结（2）",y:"a"}}],["/database/sql/sql-questions-03.html",{loader:()=>p(()=>import("./sql-questions-03.html-KYmC394_.js"),__vite__mapDeps([163,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>题目来源于：<a href="https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=240" target="_blank" rel="noopener noreferrer">牛客题霸 - SQL 进阶挑战</a></p>
</blockquote>
<p>较难或者困难的题目可以根据自身实际情况和面试需要来决定是否要跳过。</p>
<h2>聚合函数</h2>
<h3>SQL 类别高难度试卷得分的截断平均值（较难）</h3>
<p><strong>描述</strong>： 牛客的运营同学想要查看大家在 SQL 类别中高难度试卷的得分情况。</p>`,r:{minutes:39.07,words:11721},t:"SQL常见面试题总结（3）",y:"a"}}],["/database/sql/sql-questions-04.html",{loader:()=>p(()=>import("./sql-questions-04.html-CTRRsk_3.js"),__vite__mapDeps([164,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>题目来源于：<a href="https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=240" target="_blank" rel="noopener noreferrer">牛客题霸 - SQL 进阶挑战</a></p>
</blockquote>
<p>较难或者困难的题目可以根据自身实际情况和面试需要来决定是否要跳过。</p>
<h2>专用窗口函数</h2>
<p>MySQL 8.0 版本引入了窗口函数的支持，下面是 MySQL 中常见的窗口函数及其用法：</p>
`,r:{minutes:21.8,words:6539},t:"SQL常见面试题总结（4）",y:"a"}}],["/database/sql/sql-questions-05.html",{loader:()=>p(()=>import("./sql-questions-05.html-EzEDLy67.js"),__vite__mapDeps([165,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>题目来源于：<a href="https://www.nowcoder.com/exam/oj?page=1&amp;tab=SQL%E7%AF%87&amp;topicId=240" target="_blank" rel="noopener noreferrer">牛客题霸 - SQL 进阶挑战</a></p>
</blockquote>
<p>较难或者困难的题目可以根据自身实际情况和面试需要来决定是否要跳过。</p>
<h2>空值处理</h2>
<h3>统计有未完成状态的试卷的未完成数和未完成率</h3>
<p><strong>描述</strong>：</p>`,r:{minutes:26.48,words:7943},t:"SQL常见面试题总结（5）",y:"a"}}],["/database/sql/sql-syntax-summary.html",{loader:()=>p(()=>import("./sql-syntax-summary.html-Cp2B7r7V.js"),__vite__mapDeps([166,1])),meta:{d:1725292091e3,c:"数据库",g:["数据库基础","SQL"],e:`<blockquote>
<p>本文整理完善自下面这两份资料：</p>
<ul>
<li><a href="https://juejin.cn/post/6844903790571700231" target="_blank" rel="noopener noreferrer">SQL 语法速成手册</a></li>
<li><a href="https://www.begtut.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener noreferrer">MySQL 超全教程</a></li>
</ul>
</blockquote>`,r:{minutes:29.63,words:8890},t:"SQL语法基础知识总结",y:"a"}}],["/distributed-system/protocol/cap-and-base-theorem.html",{loader:()=>p(()=>import("./cap-and-base-theorem.html-B_bVDW0i.js"),__vite__mapDeps([167,1])),meta:{d:1725292091e3,c:"分布式",g:["分布式理论"],e:`<p>经历过技术面试的小伙伴想必对 CAP &amp; BASE 这个两个理论已经再熟悉不过了！</p>
<p>我当年参加面试的时候，不夸张地说，只要问到分布式相关的内容，面试官几乎是必定会问这两个分布式相关的理论。一是因为这两个分布式基础理论是学习分布式知识的必备前置基础，二是因为很多面试官自己比较熟悉这两个理论（方便提问）。</p>
<p>我们非常有必要将这两个理论搞懂，并且能够用自己的理解给别人讲出来。</p>
<h2>CAP 理论</h2>
<p><a href="https://zh.wikipedia.org/wiki/CAP%E5%AE%9A%E7%90%86" target="_blank" rel="noopener noreferrer">CAP 理论/定理</a>起源于 2000 年，由加州大学伯克利分校的 Eric Brewer 教授在分布式计算原理研讨会（PODC）上提出，因此 CAP 定理又被称作 <strong>布鲁尔定理（Brewer’s theorem）</strong></p>`,r:{minutes:10.77,words:3232},t:"CAP & BASE理论详解",y:"a"}}],["/distributed-system/protocol/gossip-protocl.html",{loader:()=>p(()=>import("./gossip-protocl.html-CK5hbMx_.js"),__vite__mapDeps([168,1])),meta:{d:1725292091e3,c:"分布式",g:["分布式协议&算法","共识算法"],e:`<h2>背景</h2>
<p>在分布式系统中，不同的节点进行数据/信息共享是一个基本的需求。</p>
<p>一种比较简单粗暴的方法就是 <strong>集中式发散消息</strong>，简单来说就是一个主节点同时共享最新信息给其他所有节点，比较适合中心化系统。这种方法的缺陷也很明显，节点多的时候不光同步消息的效率低，还太依赖与中心节点，存在单点风险问题。</p>
<p>于是，<strong>分散式发散消息</strong> 的 <strong>Gossip 协议</strong> 就诞生了。</p>
<h2>Gossip 协议介绍</h2>
<p>Gossip 直译过来就是闲话、流言蜚语的意思。流言蜚语有什么特点呢？容易被传播且传播速度还快，你传我我传他，然后大家都知道了。</p>`,r:{minutes:8.11,words:2432},t:"Gossip 协议详解",y:"a"}}],["/distributed-system/protocol/paxos-algorithm.html",{loader:()=>p(()=>import("./paxos-algorithm.html-DDq3Y6rK.js"),__vite__mapDeps([169,1])),meta:{d:1725292091e3,c:"分布式",g:["分布式协议&算法","共识算法"],e:`<h2>背景</h2>
<p>Paxos 算法是 Leslie Lamport（<a href="https://zh.wikipedia.org/wiki/%E8%8E%B1%E6%96%AF%E5%88%A9%C2%B7%E5%85%B0%E4%BC%AF%E7%89%B9" target="_blank" rel="noopener noreferrer">莱斯利·兰伯特</a>）在 <strong>1990</strong> 年提出了一种分布式系统 <strong>共识</strong> 算法。这也是第一个被证明完备的共识算法（前提是不存在拜占庭将军问题，也就是没有恶意节点）。</p>`,r:{minutes:5.66,words:1699},t:"Paxos 算法详解",y:"a"}}],["/distributed-system/protocol/raft-algorithm.html",{loader:()=>p(()=>import("./raft-algorithm.html-tSPkh2kj.js"),__vite__mapDeps([170,1])),meta:{d:1725292091e3,c:"分布式",g:["分布式协议&算法","共识算法"],e:`<blockquote>
<p>本文由 <a href="https://github.com/Snailclimb" target="_blank" rel="noopener noreferrer">SnailClimb</a> 和 <a href="https://github.com/jun0315" target="_blank" rel="noopener noreferrer">Xieqijun</a> 共同完成。</p>
</blockquote>
<h2>1 背景</h2>
<p>当今的数据中心和应用程序在高度动态的环境中运行，为了应对高度动态的环境，它们通过额外的服务器进行横向扩展，并且根据需求进行扩展和收缩。同时，服务器和网络故障也很常见。</p>`,r:{minutes:12.05,words:3615},t:"Raft 算法详解",y:"a"}}],["/distributed-system/rpc/dubbo.html",{loader:()=>p(()=>import("./dubbo.html-Dks0AnYz.js"),__vite__mapDeps([171,1])),meta:{d:1725292091e3,c:"分布式",g:["rpc"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>Dubbo3 已经发布，这篇文章是基于 Dubbo2 写的。Dubbo3 基于 Dubbo2 演进而来，在保持原有核心功能特性的同时， Dubbo3 在易用性、超大规模微服务实践、云原生基础设施适配、安全设计等几大方向上进行了全面升级。</li>
<li>本文中的很多链接已经失效，主要原因是因为 Dubbo 官方文档进行了修改导致 URL 失效。</li>
</ul>
</div>
<p>这篇文章是我根据官方文档以及自己平时的使用情况，对 Dubbo 所做的一个总结。欢迎补充！</p>`,r:{minutes:19,words:5699},t:"Dubbo常见问题总结",y:"a"}}],["/distributed-system/rpc/http_rpc.html",{loader:()=>p(()=>import("./http_rpc.html-CPnSIJhX.js"),__vite__mapDeps([172,1])),meta:{d:1725292091e3,c:"分布式",g:["rpc"],e:`<blockquote>
<p>本文来自<a href="https://juejin.cn/user/4001878057422087" target="_blank" rel="noopener noreferrer">小白 debug</a>投稿，原文：<a href="https://juejin.cn/post/7121882245605883934" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7121882245605883934</a> 。</p>
</blockquote>
<p>我想起了我刚工作的时候，第一次接触 RPC 协议，当时就很懵，我 HTTP 协议用的好好的，为什么还要用 RPC 协议？</p>`,r:{minutes:11.75,words:3524},t:"有了 HTTP 协议，为什么还要有 RPC ？",y:"a"}}],["/distributed-system/rpc/rpc-intro.html",{loader:()=>p(()=>import("./rpc-intro.html-B33U9obO.js"),__vite__mapDeps([173,1])),meta:{d:1725292091e3,c:"分布式",g:["rpc"],e:`<p>这篇文章会简单介绍一下 RPC 相关的基础概念。</p>
<h2>RPC 是什么?</h2>
<p><strong>RPC（Remote Procedure Call）</strong> 即远程过程调用，通过名字我们就能看出 RPC 关注的是远程调用而非本地调用。</p>
<p><strong>为什么要 RPC ？</strong> 因为，两个不同的服务器上的服务提供的方法不在一个内存空间，所以，需要通过网络编程才能传递方法调用所需要的参数。并且，方法调用的结果也需要通过网络编程来接收。但是，如果我们自己手动网络编程来实现这个调用过程的话工作量是非常大的，因为，我们需要考虑底层传输方式（TCP 还是 UDP）、序列化方式等等方面。</p>`,r:{minutes:8.32,words:2496},t:"RPC基础知识总结",y:"a"}}],["/high-performance/message-queue/disruptor-questions.html",{loader:()=>p(()=>import("./disruptor-questions.html-Ogo0vF8Y.js"),__vite__mapDeps([174,1])),meta:{d:1725292091e3,c:"高性能",g:["消息队列"],e:`<p>Disruptor 是一个相对冷门一些的知识点，不过，如果你的项目经历中用到了 Disruptor 的话，那面试中就很可能会被问到。</p>
<p>一位球友之前投稿的面经（社招）中就涉及一些 Disruptor 的问题，文章传送门：<a href="https://mp.weixin.qq.com/s/C5QMjwEb6pzXACqZsyqC4A" target="_blank" rel="noopener noreferrer">圆梦！顺利拿到字节、淘宝、拼多多等大厂 offer！</a> 。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/high-performance/message-queue/disruptor-interview-questions.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:9.09,words:2726},t:"Disruptor常见问题总结",y:"a"}}],["/high-performance/message-queue/kafka-questions-01.html",{loader:()=>p(()=>import("./kafka-questions-01.html-BQV3aNq6.js"),__vite__mapDeps([175,1])),meta:{d:1725292091e3,c:"高性能",g:["消息队列"],e:`<h2>Kafka 基础</h2>
<h3>Kafka 是什么？主要应用场景有哪些？</h3>
<p>Kafka 是一个分布式流式处理平台。这到底是什么意思呢？</p>
<p>流平台具有三个关键功能：</p>
<ol>
<li><strong>消息队列</strong>：发布和订阅消息流，这个功能类似于消息队列，这也是 Kafka 也被归类为消息队列的原因。</li>
<li><strong>容错的持久方式存储记录消息流</strong>：Kafka 会把消息持久化到磁盘，有效避免了消息丢失的风险。</li>
<li><strong>流式处理平台：</strong> 在消息发布的时候进行处理，Kafka 提供了一个完整的流式处理类库。</li>
</ol>`,r:{minutes:21.64,words:6492},t:"Kafka常见问题总结",y:"a"}}],["/high-performance/message-queue/message-queue.html",{loader:()=>p(()=>import("./message-queue.html-Cu2e6mYa.js"),__vite__mapDeps([176,1])),meta:{d:1725292091e3,c:"高性能",g:["消息队列"],e:`<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这篇文章中的消息队列主要指的是分布式消息队列。</p>
</div>
<p>“RabbitMQ？”“Kafka？”“RocketMQ？”...在日常学习与开发过程中，我们常常听到消息队列这个关键词。我也在我的多篇文章中提到了这个概念。可能你是熟练使用消息队列的老手，又或者你是不懂消息队列的新手，不论你了不了解消息队列，本文都将带你搞懂消息队列的一些基本理论。</p>
<p>如果你是老手，你可能从本文学到你之前不曾注意的一些关于消息队列的重要概念，如果你是新手，相信本文将是你打开消息队列大门的一板砖。</p>`,r:{minutes:20.12,words:6035},t:"消息队列基础知识总结",y:"a"}}],["/high-performance/message-queue/rabbitmq-questions.html",{loader:()=>p(()=>import("./rabbitmq-questions.html-C8yyqYks.js"),__vite__mapDeps([177,1])),meta:{d:1725292091e3,c:"高性能",g:["消息队列"],e:`<blockquote>
<p>本篇文章由 JavaGuide 收集自网络，原出处不明。</p>
</blockquote>
<h2>RabbitMQ 是什么？</h2>
<p>RabbitMQ 是一个在 AMQP（Advanced Message Queuing Protocol ）基础上实现的，可复用的企业消息系统。它可以用于大型软件系统各个模块之间的高效通信，支持高并发，支持可扩展。它支持多种客户端如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP 等，支持 AJAX，持久化，用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。</p>`,r:{minutes:17.56,words:5268},t:"RabbitMQ常见问题总结",y:"a"}}],["/high-performance/message-queue/rocketmq-questions.html",{loader:()=>p(()=>import("./rocketmq-questions.html-BjAJlj1z.js"),__vite__mapDeps([178,1])),meta:{d:1725292091e3,c:"高性能",g:["RocketMQ","消息队列"],e:`<blockquote>
<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;mid=2247485969&amp;idx=1&amp;sn=6bd53abde30d42a778d5a35ec104428c&amp;chksm=cea245daf9d5cccce631f93115f0c2c4a7634e55f5bef9009fd03f5a0ffa55b745b5ef4f0530&amp;token=294077121&amp;lang=zh_CN#rd" target="_blank" rel="noopener noreferrer">本文由 FrancisQ 投稿！</a> 相比原文主要进行了下面这些完善：</p>
<ul>
<li><a href="https://github.com/Snailclimb/JavaGuide/pull/2133" target="_blank" rel="noopener noreferrer">分析了 RocketMQ 高性能读写的原因和顺序消费的具体实现</a></li>
<li><a href="https://github.com/Snailclimb/JavaGuide/pull/2134" target="_blank" rel="noopener noreferrer">增加了消息类型、消费者类型、消费者组和生产者组的介绍</a></li>
</ul>
</blockquote>`,r:{minutes:57.87,words:17362},t:"RocketMQ常见问题总结",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/20-bad-habits-of-bad-programmers.html",{loader:()=>p(()=>import("./20-bad-habits-of-bad-programmers.html-DYL62IxC.js"),__vite__mapDeps([179,1])),meta:{a:"Kaito",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：Kaito 大佬的一篇文章，很实用的建议！</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/6hUU6SZsxGPWAIIByq93Rw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/6hUU6SZsxGPWAIIByq93Rw</a></p>
</blockquote>
<p>我想你肯定遇到过这样一类程序员：<strong>他们无论是写代码，还是写文档，又或是和别人沟通，都显得特别专业</strong>。每次遇到这类人，我都在想，他们到底是怎么做到的？</p>`,r:{minutes:6.73,words:2018},t:"糟糕程序员的 20 个坏习惯",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/meituan-three-year-summary-lesson-10.html",{loader:()=>p(()=>import("./meituan-three-year-summary-lesson-10.html-CNR7x9x9.js"),__vite__mapDeps([180,1])),meta:{a:"CityDreamer部落",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：作者用了很多生动的例子和故事展示了自己在美团的成长和感悟，看了之后受益颇多！</p>
<p><strong>内容概览</strong>：</p>
<p>本文的作者提出了以下十条建议，希望能对其他职场人有所启发和帮助：</p>
<ol>
<li>结构化思考与表达，提高个人影响力</li>
<li>忘掉职级，该怼就怼，推动事情往前走</li>
<li>用好平台资源，结识优秀的人，学习通识课</li>
<li>一切都是争取来的，不要等待机会，要主动寻求</li>
<li>关注商业，升维到老板思维，看清趋势，及时止损</li>
<li>培养数据思维，利用数据了解世界，指导决策</li>
<li>做一个好"销售"，无论是自己还是产品，都要学会展示和说服</li>
<li>少加班多运动，保持身心健康，提高工作效率</li>
<li>有随时可以离开的底气，不要被职场所困，借假修真，提升自己</li>
<li>只是一份工作，不要过分纠结，相信自己，走出去看看</li>
</ol>
<p><strong>原文地址</strong>：<a href="https://mp.weixin.qq.com/s/XidSVIwd4oKkDKEICaY1mQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/XidSVIwd4oKkDKEICaY1mQ</a></p>
</blockquote>`,r:{minutes:13.12,words:3935},t:"美团三年，总结的10条血泪教训",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/programmer-quickly-learn-new-technology.html",{loader:()=>p(()=>import("./programmer-quickly-learn-new-technology.html-DPLa6on_.js"),__vite__mapDeps([181,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：这是<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>练级攻略篇中的一篇文章，分享了我对于如何快速学习一门新技术的看法。</p>
<figure><img src="https://oss.javaguide.cn/javamianshizhibei/training-strategy-articles.png" alt="《Java 面试指北》练级攻略篇" tabindex="0"><figcaption>《Java 面试指北》练级攻略篇</figcaption></figure>
</blockquote>`,r:{minutes:4.51,words:1354},t:"程序员如何快速学习新技术",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/seven-tips-for-becoming-an-advanced-programmer.html",{loader:()=>p(()=>import("./seven-tips-for-becoming-an-advanced-programmer.html-DQQx5qvz.js"),__vite__mapDeps([182,1])),meta:{a:"Kaito",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：普通程序员要想成长为高级程序员甚至是专家等更高级别，应该注意在哪些方面注意加强？开发内功修炼号主飞哥在这篇文章中就给出了七条实用的建议。</p>
<p><strong>内容概览</strong>：</p>
<ol>
<li>刻意加强需求评审能力</li>
<li>主动思考效率</li>
<li>加强内功能力</li>
<li>思考性能</li>
<li>重视线上</li>
<li>关注全局</li>
<li>归纳总结能力</li>
</ol>
<p><strong>原文地址</strong>：<a href="https://mp.weixin.qq.com/s/8lMGzBzXine-NAsqEaIE4g" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/8lMGzBzXine-NAsqEaIE4g</a></p>
</blockquote>`,r:{minutes:7.86,words:2358},t:"给想成长为高级别开发同学的七条建议",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/ten-years-of-dachang-growth-road.html",{loader:()=>p(()=>import("./ten-years-of-dachang-growth-road.html-DNBJYGBF.js"),__vite__mapDeps([183,1])),meta:{a:"CodingBetterLife",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：这篇文章的作者有着丰富的工作经验，曾在大厂工作了 12 年。结合自己走过的弯路和接触过的优秀技术人，他总结出了一些对于个人成长具有普遍指导意义的经验和特质。</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/vIIRxznpRr5yd6IVyNUW2w" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/vIIRxznpRr5yd6IVyNUW2w</a></p>
</blockquote>`,r:{minutes:9.75,words:2925},t:"十年大厂成长之路",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/the-growth-strategy-of-the-technological-giant.html",{loader:()=>p(()=>import("./the-growth-strategy-of-the-technological-giant.html-oW5D2t8U.js"),__vite__mapDeps([184,1])),meta:{a:"波波微课",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：波波老师的一篇文章，写的非常好，不光是对技术成长有帮助，其他领域也是同样适用的！建议反复阅读，形成一套自己的技术成长策略。</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/YrN8T67s801-MRo01lCHXA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/YrN8T67s801-MRo01lCHXA</a></p>
</blockquote>`,r:{minutes:20.56,words:6167},t:"程序员的技术成长战略",y:"a"}}],["/high-quality-technical-articles/advanced-programmer/thinking-about-technology-and-business-after-five-years-of-work.html",{loader:()=>p(()=>import("./thinking-about-technology-and-business-after-five-years-of-work.html-DD9wArFO.js"),__vite__mapDeps([185,1])),meta:{a:"知了一笑",d:1725292091e3,c:"技术文章精选集",g:["练级攻略"],e:`<blockquote>
<p><strong>推荐语</strong>：这是我在两年前看到的一篇对我触动比较深的文章。确实要学会适应变化，并积累能力。积累解决问题的能力，优化思考方式，拓宽自己的认知。</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/CTbEdi0F4-qFoJT05kNlXA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/CTbEdi0F4-qFoJT05kNlXA</a></p>
</blockquote>`,r:{minutes:9.03,words:2710},t:"工作五年之后，对技术和业务的思考",y:"a"}}],["/high-quality-technical-articles/interview/how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology.html",{loader:()=>p(()=>import("./how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology.html-nd5Mxako.js"),__vite__mapDeps([186,1])),meta:{a:"琴水玉",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：从面试官和面试者两个角度探讨了技术面试！非常不错！</p>
<p><strong>内容概览：</strong></p>
<ul>
<li>实战与理论结合。比如，候选人叙述 JVM 内存模型布局之后，可以接着问：有哪些原因可能会导致 OOM , 有哪些预防措施? 你是否遇到过内存泄露的问题? 如何排查和解决这类问题?</li>
<li>项目经历考察不宜超过两个。因为要深入考察一个项目的详情，所占用的时间还是比较大的。一般来说，会让候选人挑选一个他或她觉得最有收获的/最有挑战的/印象最深刻的/自己觉得特有意思的项目。然后围绕这个项目进行发问。通常是从项目背景出发，考察项目的技术栈、项目模块及交互的整体理解、项目中遇到的有挑战性的技术问题及解决方案、排查和解决问题、代码可维护性问题、工程质量保障等。</li>
<li>多问少说，让候选者多表现。根据候选者的回答适当地引导或递进或横向移动。</li>
</ul>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/lovesqcc/p/15169365.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/lovesqcc/p/15169365.html</a></p>
</blockquote>`,r:{minutes:21.91,words:6573},t:"如何在技术初试中考察程序员的技术能力",y:"a"}}],["/high-quality-technical-articles/interview/my-personal-experience-in-2021.html",{loader:()=>p(()=>import("./my-personal-experience-in-2021.html-D2mjj_jS.js"),__vite__mapDeps([187,1])),meta:{a:"月色真美",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：这篇文章的作者校招最终去了飞书做开发。在这篇文章中，他分享了自己的校招经历以及个人经验。</p>
<p><strong>原文地址</strong>：<a href="https://www.ihewro.com/archives/1217/" target="_blank" rel="noopener noreferrer">https://www.ihewro.com/archives/1217/</a></p>
</blockquote>
<h2>基本情况</h2>
<p>我是 C++主要是后台开发的方向。</p>
`,r:{minutes:13.21,words:3963},t:"校招进入飞书的个人经验",y:"a"}}],["/high-quality-technical-articles/interview/screen-candidates-for-packaging.html",{loader:()=>p(()=>import("./screen-candidates-for-packaging.html-iW1nY-na.js"),__vite__mapDeps([188,1])),meta:{a:"Coody",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：经常听到培训班待过的朋友给我说他们的老师是怎么教他们“包装”自己的，不光是培训班，我认识的很多朋友也都会在面试之前“包装”一下自己，所以这个现象是普遍存在的。但是面试官也不都是傻子，通过下面这篇文章来看看面试官是如何甄别应聘者的包装程度。</p>
<p><strong>原文地址</strong>：<a href="https://my.oschina.net/hooker/blog/3014656" target="_blank" rel="noopener noreferrer">https://my.oschina.net/hooker/blog/3014656</a></p>
</blockquote>`,r:{minutes:10.06,words:3018},t:"如何甄别应聘者的包装程度",y:"a"}}],["/high-quality-technical-articles/interview/some-secrets-about-alibaba-interview.html",{loader:()=>p(()=>import("./some-secrets-about-alibaba-interview.html-Bs99E7La.js"),__vite__mapDeps([189,1])),meta:{a:"龙叔",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：详细介绍了求职者在面试中应该具备哪些能力才会有更大概率脱颖而出。</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/M2M808PwQ2JcMqfLQfXQMw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/M2M808PwQ2JcMqfLQfXQMw</a></p>
</blockquote>
<p>最近我的工作稍微轻松些，就被安排去校招面试了</p>`,r:{minutes:5.74,words:1721},t:"阿里技术面试的一些秘密",y:"a"}}],["/high-quality-technical-articles/interview/summary-of-spring-recruitment.html",{loader:()=>p(()=>import("./summary-of-spring-recruitment.html-B9DVxhE_.js"),__vite__mapDeps([190,1])),meta:{a:"钟期既遇",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：牛客网热帖，写的很全面！暑期实习，投了阿里、腾讯、字节，拿到了阿里和腾讯的 offer。</p>
<p><strong>原文地址：</strong> <a href="https://www.nowcoder.com/discuss/640519" target="_blank" rel="noopener noreferrer">https://www.nowcoder.com/discuss/640519</a></p>
<p><strong>下篇</strong>：<a href="https://www.nowcoder.com/discuss/804679" target="_blank" rel="noopener noreferrer">十年饮冰，难凉热血——秋招总结</a></p>
</blockquote>`,r:{minutes:19,words:5700},t:"普通人的春招总结（阿里、腾讯offer）",y:"a"}}],["/high-quality-technical-articles/interview/technical-preliminary-preparation.html",{loader:()=>p(()=>import("./technical-preliminary-preparation.html-Cap6Gjt5.js"),__vite__mapDeps([191,1])),meta:{a:"琴水玉",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：从面试官和面试者两个角度探讨了技术面试！非常不错！</p>
<p><strong>内容概览：</strong></p>
<ul>
<li>通过技术基础考察候选者，才能考察到候选者的真实技术实力：技术深度和广度。</li>
<li>实战与理论结合。比如，候选人叙述 JVM 内存模型布局之后，可以接着问：有哪些原因可能会导致 OOM , 有哪些预防措施? 你是否遇到过内存泄露的问题? 如何排查和解决这类问题?</li>
<li>项目经历考察不宜超过两个。因为要深入考察一个项目的详情，所占用的时间还是比较大的。一般来说，会让候选人挑选一个他或她觉得最有收获的/最有挑战的/印象最深刻的/自己觉得特有意思的项目。然后围绕这个项目进行发问。通常是从项目背景出发，考察项目的技术栈、项目模块及交互的整体理解、项目中遇到的有挑战性的技术问题及解决方案、排查和解决问题、代码可维护性问题、工程质量保障等。</li>
<li>多问少说，让候选者多表现。根据候选者的回答适当地引导或递进或横向移动。</li>
</ul>
<p><strong>原文地址：</strong> <a href="https://www.cnblogs.com/lovesqcc/p/15169365.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/lovesqcc/p/15169365.html</a></p>
</blockquote>`,r:{minutes:13.61,words:4082},t:"从面试官和候选者的角度谈如何准备技术初试",y:"a"}}],["/high-quality-technical-articles/interview/the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer.html",{loader:()=>p(()=>import("./the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer.html-qmHFxgCc.js"),__vite__mapDeps([192,1])),meta:{a:"琴水玉",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：本文的作者，今年 36 岁，已有 8 年 JAVA 开发经验。在阿里云三年半，有赞四年半，已是标准的大龄程序员了。在这篇文章中，作者给出了一些关于面试和个人能力提升的一些小建议，非常实用！</p>
<p><strong>内容概览</strong>：</p>
<ol>
<li>个人介绍，是对自己的一个更为清晰、深入和全面的认识契机。</li>
<li>简历是充分展示自己的浓缩精华，也是重新审视自己和过往经历的契机。不仅仅是简要介绍技能和经验，更要最大程度凸显自己的优势领域（差异化）。</li>
<li>我个人是不赞成海投的，而倾向于定向投。找准方向投，虽然目标更少，但更有效率。</li>
<li>技术探索，一定要先理解原理。原理不懂，就会浮于表层，不能真正掌握它。技术原理探究要掌握到什么程度？数据结构与算法设计、考量因素、技术机制、优化思路。要在脑中回放，直到一切细节而清晰可见。如果能够清晰有条理地表述出来，就更好了。技术原理探究，一定要看源码。看了源码与没看源码是有区别的。没看源码，虽然说得出来，但终是隔了一层纸；看了源码，才捅破了那层纸，有了自己的理解，也就能说得更加有底气了。当然，也可能是我缺乏演戏的本领。</li>
<li>要善于从失败中学习。正是在杭州四个月空档期的持续学习、思考、积累和提炼，以及面试失败的反思、不断调整对策、完善准备、改善原有的短板，采取更为合理的方式，才在回武汉的短短两个周内拿到比较满意的 offer 。</li>
<li>面试是通过沟通来理解双方的过程。面试中的问题，千变万化，但有一些问题是需要提前准备好的。</li>
</ol>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/lovesqcc/p/14354921.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/lovesqcc/p/14354921.html</a></p>
</blockquote>`,r:{minutes:35.66,words:10698},t:"一位大龄程序员所经历的面试的历炼和思考",y:"a"}}],["/high-quality-technical-articles/interview/the-experience-of-get-offer-from-over-20-big-companies.html",{loader:()=>p(()=>import("./the-experience-of-get-offer-from-over-20-big-companies.html-CazrXkII.js"),__vite__mapDeps([193,1])),meta:{a:"业余码农",d:1725292091e3,c:"技术文章精选集",g:["面试"],e:`<blockquote>
<p><strong>推荐语</strong>：很实用的面试经验分享！</p>
<p><strong>原文地址</strong>：<a href="https://mp.weixin.qq.com/s/HXKg6-H0kGUU2OA1DS43Bw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/HXKg6-H0kGUU2OA1DS43Bw</a></p>
</blockquote>
<p>突然回想起当年，我也在秋招时也斩获了 20+的互联网各大厂 offer。现在想起来也是有点唏嘘，毕竟拿得再多也只能选择一家。不过许多朋友想让我分享下互联网面试方法，今天就来给大家仔细讲讲打法！</p>`,r:{minutes:13.99,words:4197},t:"斩获 20+ 大厂 offer 的面试经验分享",y:"a"}}],["/high-quality-technical-articles/personal-experience/8-years-programmer-work-summary.html",{loader:()=>p(()=>import("./8-years-programmer-work-summary.html-CO9aZKEz.js"),__vite__mapDeps([194,1])),meta:{a:"陈小房",d:1725292091e3,c:"技术文章精选集",g:["个人经历"],e:`<blockquote>
<p><strong>推荐语</strong>：这篇文章讲述了一位中科大的朋友 8 年的经历：从 2013 年毕业之后加入上海航天 x 院某卫星研究所，再到入职华为，从华为离职。除了丰富的经历之外，作者在文章还给出了很多自己对于工作/生活的思考。我觉得非常受用！我在这里，向这位作者表达一下衷心的感谢。</p>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/scada/p/14259332.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/scada/p/14259332.html</a></p>
</blockquote>`,r:{minutes:34.54,words:10361},t:"一个中科大差生的 8 年程序员工作总结",y:"a"}}],["/high-quality-technical-articles/personal-experience/four-year-work-in-tencent-summary.html",{loader:()=>p(()=>import("./four-year-work-in-tencent-summary.html-CjKBssFl.js"),__vite__mapDeps([195,1])),meta:{a:"pioneeryi",d:1725292091e3,c:"技术文章精选集",g:["个人经历"],e:`<p>程序员是一个流动性很大的职业，经常会有新面孔的到来，也经常会有老面孔的离开，有主动离开的，也有被动离职的。</p>
<p>再加上这几年卷得厉害，做的事更多了，拿到的却更少了，互联网好像也没有那么香了。</p>
<p>人来人往，变动无常的状态，其实也早已习惯。</p>
<p>打工人的唯一出路，无外乎精进自己的专业技能，提升自己的核心竞争力，这样无论有什么变动，走到哪里，都能有口饭吃。</p>
<p>今天分享一位博主，校招入职腾讯，工作四年后，离开的故事。</p>
<p>至于为什么离开，我也不清楚，可能是有其他更好的选择，或者是觉得当前的工作对自己的提升有限。</p>
<p><strong>下文中的“我”，指这位作者本人。</strong></p>`,r:{minutes:10.57,words:3172},t:"从校招入职腾讯的四年工作总结",y:"a"}}],["/high-quality-technical-articles/personal-experience/huawei-od-275-days.html",{loader:()=>p(()=>import("./huawei-od-275-days.html-BqCc8M8b.js"),__vite__mapDeps([196,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["个人经历"],e:`<blockquote>
<p><strong>推荐语</strong>：一位朋友的华为 OD 工作经历以及腾讯面试经历分享，内容很不错。</p>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/shoufeng/p/14322931.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/shoufeng/p/14322931.html</a></p>
</blockquote>
<h2>时间线</h2>
<ul>
<li>18 年 7 月，毕业于某不知名 985 计科专业；</li>
<li>毕业前，在某马的 JavaEE（后台开发）培训了 6 个月；</li>
<li>第一份工作（18-07 ~ 19-12）接触了大数据，感觉大数据更有前景；</li>
<li>19 年 12 月，入职中国平安产险（去到才发现是做后台开发 😢）；</li>
<li>20 年 3 月，从平安辞职，跳去华为 OD 做大数据基础平台；</li>
<li>2021 年 1 月，入职鹅厂</li>
</ul>`,r:{minutes:14.42,words:4325},t:"华为 OD 275 天后，我进了腾讯！",y:"a"}}],["/high-quality-technical-articles/personal-experience/two-years-of-back-end-develop--experience-in-didi-and-toutiao.html",{loader:()=>p(()=>import("./two-years-of-back-end-develop--experience-in-didi-and-toutiao.html-YL_zifHz.js"),__vite__mapDeps([197,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["个人经历"],e:`<blockquote>
<p><strong>推荐语</strong>：很实用的工作经验分享，看完之后十分受用！</p>
<p><strong>内容概览</strong>：</p>
<ul>
<li>要学会深入思考，总结沉淀，这是我觉得最重要也是最有意义的一件事。</li>
<li>积极学习，保持技术热情。如果我们积极学习，保持技术能力、知识储备与工作年限成正比，这到了 35 岁哪还有什么焦虑呢，这样的大牛我觉得应该也是各大公司抢着要吧？</li>
<li>在能为公司办成事，创造价值这一点上，我觉得最重要的两个字就是主动，主动承担任务，主动沟通交流，主动推动项目进展，主动协调资源，主动向上反馈，主动创造影响力等等。</li>
<li>脸皮要厚一点，多找人聊，快速融入，最忌讳有问题也不说，自己把自己孤立起来。</li>
<li>想舔就舔，不想舔也没必要酸别人，Respect Greatness。</li>
<li>时刻准备着，技术在手就没什么可怕的，哪天干得不爽了直接跳槽。</li>
<li>平时积极总结沉淀，多跟别人交流，形成方法论。</li>
<li>……</li>
</ul>
<p><strong>原文地址</strong>：<a href="https://www.nowcoder.com/discuss/351805" target="_blank" rel="noopener noreferrer">https://www.nowcoder.com/discuss/351805</a></p>
</blockquote>`,r:{minutes:21.27,words:6381},t:"滴滴和头条两年后端工作经验分享",y:"a"}}],["/high-quality-technical-articles/programmer/efficient-book-publishing-and-practice-guide.html",{loader:()=>p(()=>import("./efficient-book-publishing-and-practice-guide.html-CNLAix9f.js"),__vite__mapDeps([198,1])),meta:{a:"hsm_computer",d:1725292091e3,c:"技术文章精选集",g:["程序员"],e:`<blockquote>
<p><strong>推荐语</strong>：详细介绍了程序员出书的一些常见问题，强烈建议有出书想法的朋友看看这篇文章。</p>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/JavaArchitect/p/14128202.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/JavaArchitect/p/14128202.html</a></p>
</blockquote>
<p>古有三不朽， 所谓立德、立功、立言。程序员出一本属于自己的书，如果说是立言，可能过于高大上，但终究也算一件雅事。</p>`,r:{minutes:21.16,words:6347},t:"程序员高效出书避坑和实践指南",y:"a"}}],["/high-quality-technical-articles/programmer/how-do-programmers-publish-a-technical-book.html",{loader:()=>p(()=>import("./how-do-programmers-publish-a-technical-book.html-yKjYaoIq.js"),__vite__mapDeps([199,1])),meta:{a:"hsm_computer",d:1725292091e3,c:"技术文章精选集",g:["程序员"],e:`<blockquote>
<p><strong>推荐语</strong>：详细介绍了程序员应该如何从头开始出一本自己的书籍。</p>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/JavaArchitect/p/12195219.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/JavaArchitect/p/12195219.html</a></p>
</blockquote>
<p>在面试或联系副业的时候，如果能令人信服地证明自己的实力，那么很有可能事半功倍。如何证明自己的实力？最有信服力的是大公司职位背景背书，没有之一，比如在 BAT 担任资深架构，那么其它话甚至都不用讲了。</p>`,r:{minutes:12.32,words:3695},t:"程序员怎样出版一本技术书",y:"a"}}],["/high-quality-technical-articles/work/32-tips-improving-career.html",{loader:()=>p(()=>import("./32-tips-improving-career.html-CPeb7Fft.js"),__vite__mapDeps([200,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["工作"],e:`<blockquote>
<p><strong>推荐语</strong>：阿里开发者的一篇职场经验的分享。</p>
<p><strong>原文地址：</strong> <a href="https://mp.weixin.qq.com/s/6BkbGekSRTadm9j7XUL13g" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/6BkbGekSRTadm9j7XUL13g</a></p>
</blockquote>
<h2>成长的捷径</h2>
<ul>
<li>入职伊始谦逊的态度是好的，但不要把“我是新人”作为心理安全线；</li>
<li>写一篇技术博客大概需要两周左右，但可能是最快的成长方式；</li>
<li>一定要读两本书：金字塔原理、高效能人士的七个习惯（这本书名字像成功学，实际讲的是如何塑造性格）；</li>
<li>多问是什么、为什么，追本溯源把问题解决掉，试图绕过的问题永远会在下个路口等着你；</li>
<li>不要沉迷于忙碌带来的虚假安全感中，目标的确定和追逐才是最真实的安全；</li>
<li>不用过于计较一时的得失，在公平的环境中，吃亏是福不是鸡汤；</li>
<li>思维和技能不要受限于前端、后端、测试等角色，把自己定位成业务域问题的终结者；</li>
<li>好奇和热爱是成长最大的捷径，长期主义者会认同自己的工作价值，甚至要高于组织当下给的认同（KPI）。</li>
</ul>`,r:{minutes:4.84,words:1451},t:"32条总结教你提升职场经验",y:"a"}}],["/high-quality-technical-articles/work/employee-performance.html",{loader:()=>p(()=>import("./employee-performance.html-F8xcHnHI.js"),__vite__mapDeps([201,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["工作"],e:`<blockquote>
<p><strong>内容概览</strong>：</p>
<ul>
<li>在大部分公司，绩效跟你的年终奖、职级晋升、薪水涨幅等等福利是直接相关的。</li>
<li>你的上级、上上级对你的绩效拥有绝对的话语权，这是潜规则，放到任何公司都是。成年人的世界，没有绝对的公平，绩效考核尤为明显。</li>
<li>提升绩效的打法：
<ul>
<li>短期打法：找出 1-2 件事，体现出你的独特价值（抓关键事件）。</li>
<li>长期打法：通过一步步信任的建立，成为团队的核心人员或者是老板的心腹，具备不可替代性。</li>
</ul>
</li>
</ul>
<p><strong>原文地址</strong>：<a href="https://mp.weixin.qq.com/s/D1s8p7z8Sp60c-ndGyh2yQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/D1s8p7z8Sp60c-ndGyh2yQ</a></p>
</blockquote>`,r:{minutes:8.02,words:2407},t:"聊聊大厂的绩效考核",y:"a"}}],["/high-quality-technical-articles/work/get-into-work-mode-quickly-when-you-join-a-company.html",{loader:()=>p(()=>import("./get-into-work-mode-quickly-when-you-join-a-company.html-CJGAcxfF.js"),__vite__mapDeps([202,1])),meta:{d:1725292091e3,c:"技术文章精选集",g:["工作"],e:`<blockquote>
<p><strong>推荐语</strong>：强烈建议每一位即将入职/在职的小伙伴看看这篇文章，看完之后可以帮助你少踩很多坑。整篇文章逻辑清晰，内容全面！</p>
<p><strong>原文地址</strong>：<a href="https://www.cnblogs.com/hunternet/p/14675348.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/hunternet/p/14675348.html</a></p>
</blockquote>
<figure><img src="https://oss.javaguide.cn/github/javaguide/high-quality-technical-articles/work/新入职一家公司如何快速进入状态.png" alt="新入职一家公司如何快速进入状态" tabindex="0"><figcaption>新入职一家公司如何快速进入状态</figcaption></figure>`,r:{minutes:9.72,words:2917},t:"新入职一家公司如何快速进入工作状态",y:"a"}}],["/java/basis/bigdecimal.html",{loader:()=>p(()=>import("./bigdecimal.html-C9HZ0d-l.js"),__vite__mapDeps([203,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<p>《阿里巴巴 Java 开发手册》中提到：“为了避免精度丢失，可以使用 <code>BigDecimal</code> 来进行浮点数的运算”。</p>
<p>浮点数的运算竟然还会有精度丢失的风险吗？确实会！</p>
<p>示例代码：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">2.0f</span> <span class="token operator">-</span> <span class="token number">1.9f</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> b <span class="token operator">=</span> <span class="token number">1.8f</span> <span class="token operator">-</span> <span class="token number">1.7f</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0.100000024</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0.099999905</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// false</span>
</code></pre></div>`,r:{minutes:7.25,words:2176},t:"BigDecimal 详解",y:"a"}}],["/java/basis/generics-and-wildcards.html",{loader:()=>p(()=>import("./generics-and-wildcards.html-BQ1vp1dw.js"),__vite__mapDeps([204,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:'<p><strong>泛型&amp;通配符</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="/learning/java/basis/hhttps:/javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北》</a>（点击链接即可查看详细介绍以及获取方法）中。</p>',r:{minutes:.68,words:205},t:"泛型&通配符详解",y:"a"}}],["/java/basis/java-basic-questions-01.html",{loader:()=>p(()=>import("./java-basic-questions-01.html-DNWV2wzR.js"),__vite__mapDeps([205,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<h2>基础概念与常识</h2>
<h3>Java 语言有哪些特点?</h3>
<ol>
<li>简单易学（语法简单，上手容易）；</li>
<li>面向对象（封装，继承，多态）；</li>
<li>平台无关性（ Java 虚拟机实现平台无关性）；</li>
<li>支持多线程（ C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持）；</li>
<li>可靠性（具备异常处理和自动内存管理机制）；</li>
<li>安全性（Java 语言本身的设计就提供了多重安全防护机制如访问权限修饰符、限制程序直接访问操作系统资源）；</li>
<li>高效性（通过 Just In Time 编译器等技术的优化，Java 语言的运行效率还是非常不错的）；</li>
<li>支持网络编程并且很方便；</li>
<li>编译与解释并存；</li>
<li>……</li>
</ol>`,r:{minutes:43.66,words:13097},t:"Java基础常见面试题总结(上)",y:"a"}}],["/java/basis/java-basic-questions-02.html",{loader:()=>p(()=>import("./java-basic-questions-02.html-BNt_Be2z.js"),__vite__mapDeps([206,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>面向对象基础</h2>
<h3>面向对象和面向过程的区别</h3>
<p>两者的主要区别在于解决问题的方式不同：</p>
`,r:{minutes:27.32,words:8195},t:"Java基础常见面试题总结(中)",y:"a"}}],["/java/basis/java-basic-questions-03.html",{loader:()=>p(()=>import("./java-basic-questions-03.html-CektmcqC.js"),__vite__mapDeps([207,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>异常</h2>
<p><strong>Java 异常类层次结构图概览</strong>：</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/basis/types-of-exceptions-in-java.png" alt="Java 异常类层次结构图" tabindex="0"><figcaption>Java 异常类层次结构图</figcaption></figure>`,r:{minutes:20.85,words:6256},t:"Java基础常见面试题总结(下)",y:"a"}}],["/java/basis/java-keyword-summary.html",{loader:()=>p(()=>import("./java-keyword-summary.html-DChHrfBl.js"),__vite__mapDeps([208,1])),meta:{d:1725292091e3,e:`
<h2>final 关键字</h2>
<p><strong>final 关键字，意思是最终的、不可修改的，最见不得变化 ，用来修饰类、方法和变量，具有以下特点：</strong></p>
<ol>
<li>
<p>final 修饰的类不能被继承，final 类中的所有成员方法都会被隐式的指定为 final 方法；</p>
</li>
<li>
<p>final 修饰的方法不能被重写；</p>
</li>
<li>
<p>final 修饰的变量是常量，如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改；如果是引用类型的变量，则在对其初始化之后便不能让其指向另一个对象。</p>
</li>
</ol>`,r:{minutes:11.22,words:3366},t:"final,static,this,super 关键字总结",y:"a"}}],["/java/basis/proxy.html",{loader:()=>p(()=>import("./proxy.html-B7WzqVEh.js"),__vite__mapDeps([209,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<h2>1. 代理模式</h2>
<p>代理模式是一种比较好理解的设计模式。简单来说就是 <strong>我们使用代理对象来代替对真实对象(real object)的访问，这样就可以在不修改原目标对象的前提下，提供额外的功能操作，扩展目标对象的功能。</strong></p>
<p><strong>代理模式的主要作用是扩展目标对象的功能，比如说在目标对象的某个方法执行前后你可以增加一些自定义的操作。</strong></p>
<p>举个例子：新娘找来了自己的姨妈来代替自己处理新郎的提问，新娘收到的提问都是经过姨妈处理过滤之后的。姨妈在这里就可以看作是代理你的代理对象，代理的行为（方法）是接收和回复新郎的提问。</p>`,r:{minutes:10.36,words:3108},t:"Java 代理模式详解",y:"a"}}],["/java/basis/reflection.html",{loader:()=>p(()=>import("./reflection.html-DP8SlLUg.js"),__vite__mapDeps([210,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<h2>何为反射？</h2>
<p>如果说大家研究过框架的底层原理或者咱们自己写过框架的话，一定对反射这个概念不陌生。</p>
<p>反射之所以被称为框架的灵魂，主要是因为它赋予了我们在运行时分析类以及执行类中方法的能力。</p>
<p>通过反射你可以获取任意一个类的所有属性和方法，你还可以调用这些方法和属性。</p>
<h2>反射的应用场景了解么？</h2>
<p>像咱们平时大部分时候都是在写业务代码，很少会接触到直接使用反射机制的场景。</p>
<p>但是，这并不代表反射没有用。相反，正是因为反射，你才能这么轻松地使用各种框架。像 Spring/Spring Boot、MyBatis 等等框架中都大量使用了反射机制。</p>`,r:{minutes:4.02,words:1206},t:"Java 反射机制详解",y:"a"}}],["/java/basis/serialization.html",{loader:()=>p(()=>import("./serialization.html-BlUp_Vrs.js"),__vite__mapDeps([211,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<h2>什么是序列化和反序列化?</h2>
<p>如果我们需要持久化 Java 对象比如将 Java 对象保存在文件中，或者在网络传输 Java 对象，这些场景都需要用到序列化。</p>
<p>简单来说：</p>
<ul>
<li><strong>序列化</strong>：将数据结构或对象转换成二进制字节流的过程</li>
<li><strong>反序列化</strong>：将在序列化过程中所生成的二进制字节流转换成数据结构或者对象的过程</li>
</ul>
<p>对于 Java 这种面向对象编程语言来说，我们序列化的都是对象（Object）也就是实例化后的类(Class)，但是在 C++这种半面向对象的语言中，struct(结构体)定义的是数据结构类型，而 class 对应的是对象类型。</p>`,r:{minutes:9.04,words:2712},t:"Java 序列化详解",y:"a"}}],["/java/basis/spi.html",{loader:()=>p(()=>import("./spi.html-BPW52pSn.js"),__vite__mapDeps([212,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<blockquote>
<p>本文来自 <a href="https://github.com/jjx0708" target="_blank" rel="noopener noreferrer">Kingshion</a> 投稿。欢迎更多朋友参与到 JavaGuide 的维护工作，这是一件非常有意义的事情。详细信息请看：<a href="https://javaguide.cn/javaguide/contribution-guideline.html" target="_blank" rel="noopener noreferrer">JavaGuide 贡献指南</a> 。</p>
</blockquote>`,r:{minutes:13.73,words:4120},t:"Java SPI 机制详解",y:"a"}}],["/java/basis/syntactic-sugar.html",{loader:()=>p(()=>import("./syntactic-sugar.html-Bhf9Moa3.js"),__vite__mapDeps([213,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<blockquote>
<p>作者：Hollis</p>
<p>原文：<a href="https://mp.weixin.qq.com/s/o4XdEMq1DL-nBS-f8Za5Aw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/o4XdEMq1DL-nBS-f8Za5Aw</a></p>
</blockquote>
<p>语法糖是大厂 Java 面试常问的一个知识点。</p>
<p>本文从 Java 编译原理角度，深入字节码及 class 文件，抽丝剥茧，了解 Java 中的语法糖原理及用法，帮助大家在学会如何使用 Java 语法糖的同时，了解这些语法糖背后的原理。</p>`,r:{minutes:19.53,words:5860},t:"Java 语法糖详解",y:"a"}}],["/java/basis/syntax.html",{loader:()=>p(()=>import("./syntax.html-D74r1nuu.js"),__vite__mapDeps([214,1])),meta:{d:1725292091e3,e:`<h2>匿名内部类</h2>
<h3>使用接口实现</h3>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>Runnable runnable = new Runnable() {
    @Override
    public void run() {
      System.out.print("hello world");
    }
};

new Thread(runnable).start();

</code></pre></div>`,r:{minutes:.1,words:30},t:"Java语法",y:"a"}}],["/java/basis/unsafe.html",{loader:()=>p(()=>import("./unsafe.html-CEYNkbzP.js"),__vite__mapDeps([215,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<blockquote>
<p>本文整理完善自下面这两篇优秀的文章：</p>
<ul>
<li><a href="https://tech.meituan.com/2019/02/14/talk-about-java-magic-class-unsafe.html" target="_blank" rel="noopener noreferrer">Java 魔法类：Unsafe 应用解析 - 美团技术团队 -2019</a></li>
<li><a href="https://xie.infoq.cn/article/8b6ed4195e475bfb32dacc5cb" target="_blank" rel="noopener noreferrer">Java 双刃剑之 Unsafe 类详解 - 码农参上 - 2021</a></li>
</ul>
</blockquote>`,r:{minutes:25.47,words:7641},t:"Java 魔法类 Unsafe 详解",y:"a"}}],["/java/basis/why-there-only-value-passing-in-java.html",{loader:()=>p(()=>import("./why-there-only-value-passing-in-java.html-DEsAr-O8.js"),__vite__mapDeps([216,1])),meta:{d:1725292091e3,c:"Java",g:["Java基础"],e:`<p>开始之前，我们先来搞懂下面这两个概念：</p>
<ul>
<li>形参&amp;实参</li>
<li>值传递&amp;引用传递</li>
</ul>
<h2>形参&amp;实参</h2>
<p>方法的定义可能会用到 <strong>参数</strong>（有参的方法），参数在程序语言中分为：</p>
<ul>
<li><strong>实参（实际参数，Arguments）</strong>：用于传递给函数/方法的参数，必须有确定的值。</li>
<li><strong>形参（形式参数，Parameters）</strong>：用于定义函数/方法，接收实参，不需要有确定的值。</li>
</ul>`,r:{minutes:5.09,words:1528},t:"Java 值传递详解",y:"a"}}],["/java/collection/arrayblockingqueue-source-code.html",{loader:()=>p(()=>import("./arrayblockingqueue-source-code.html-DzAGCoDl.js"),__vite__mapDeps([217,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<h2>阻塞队列简介</h2>
<h3>阻塞队列的历史</h3>
<p>Java 阻塞队列的历史可以追溯到 JDK1.5 版本，当时 Java 平台增加了 <code>java.util.concurrent</code>，即我们常说的 JUC 包，其中包含了各种并发流程控制工具、并发容器、原子类等。这其中自然也包含了我们这篇文章所讨论的阻塞队列。</p>
<p>为了解决高并发场景下多线程之间数据共享的问题，JDK1.5 版本中出现了 <code>ArrayBlockingQueue</code> 和 <code>LinkedBlockingQueue</code>，它们是带有生产者-消费者模式实现的并发容器。其中，<code>ArrayBlockingQueue</code> 是有界队列，即添加的元素达到上限之后，再次添加就会被阻塞或者抛出异常。而 <code>LinkedBlockingQueue</code> 则由链表构成的队列，正是因为链表的特性，所以 <code>LinkedBlockingQueue</code> 在添加元素上并不会向 <code>ArrayBlockingQueue</code> 那样有着较多的约束，所以 <code>LinkedBlockingQueue</code> 设置队列是否有界是可选的(注意这里的无界并不是指可以添加任务数量的元素，而是说队列的大小默认为 <code>Integer.MAX_VALUE</code>，近乎于无限大)。</p>`,r:{minutes:26.28,words:7884},t:"ArrayBlockingQueue 源码分析",y:"a"}}],["/java/collection/arraylist-source-code.html",{loader:()=>p(()=>import("./arraylist-source-code.html-IiY0bevV.js"),__vite__mapDeps([218,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:22.66,words:6798},t:"ArrayList 源码分析",y:"a"}}],["/java/collection/concurrent-hash-map-source-code.html",{loader:()=>p(()=>import("./concurrent-hash-map-source-code.html-BnpXyKJF.js"),__vite__mapDeps([219,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<blockquote>
<p>本文来自公众号：末读代码的投稿，原文地址：<a href="https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/AHWzboztt53ZfFZmsSnMSw</a> 。</p>
</blockquote>
<p>上一篇文章介绍了 HashMap 源码，反响不错，也有很多同学发表了自己的观点，这次又来了，这次是 <code>ConcurrentHashMap</code> 了，作为线程安全的 HashMap ，它的使用频率也是很高。那么它的存储结构和实现原理是怎么样的呢？</p>`,r:{minutes:14.35,words:4304},t:"ConcurrentHashMap 源码分析",y:"a"}}],["/java/collection/copyonwritearraylist-source-code.html",{loader:()=>p(()=>import("./copyonwritearraylist-source-code.html-Cv6MbIbX.js"),__vite__mapDeps([220,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<h2>CopyOnWriteArrayList 简介</h2>
<p>在 JDK1.5 之前，如果想要使用并发安全的 <code>List</code> 只能选择 <code>Vector</code>。而 <code>Vector</code> 是一种老旧的集合，已经被淘汰。<code>Vector</code> 对于增删改查等方法基本都加了 <code>synchronized</code>，这种方式虽然能够保证同步，但这相当于对整个 <code>Vector</code> 加上了一把大锁，使得每个方法执行的时候都要去获得锁，导致性能非常低下。</p>
<p>JDK1.5 引入了 <code>Java.util.concurrent</code>（JUC）包，其中提供了很多线程安全且并发性能良好的容器，其中唯一的线程安全 <code>List</code> 实现就是 <code>CopyOnWriteArrayList</code> 。关于<code>java.util.concurrent</code> 包下常见并发容器的总结，可以看我写的这篇文章：<a href="https://javaguide.cn/java/concurrent/java-concurrent-collections.html" target="_blank" rel="noopener noreferrer">Java 常见并发容器总结</a> 。</p>`,r:{minutes:10.99,words:3298},t:"CopyOnWriteArrayList 源码分析",y:"a"}}],["/java/collection/delayqueue-source-code.html",{loader:()=>p(()=>import("./delayqueue-source-code.html-CvNhZ6zS.js"),__vite__mapDeps([221,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<h2>DelayQueue 简介</h2>
<p><code>DelayQueue</code> 是 JUC 包(<code>java.util.concurrent)</code>为我们提供的延迟队列，用于实现延时任务比如订单下单 15 分钟未支付直接取消。它是 <code>BlockingQueue</code> 的一种，底层是一个基于 <code>PriorityQueue</code> 实现的一个无界队列，是线程安全的。关于<code>PriorityQueue</code>可以参考笔者编写的这篇文章：<a href="/learning/java/collection/priorityqueue-source-code.html" target="_blank">PriorityQueue 源码分析</a> 。</p>`,r:{minutes:12.76,words:3827},t:"DelayQueue 源码分析",y:"a"}}],["/java/collection/hashmap-source-code.html",{loader:()=>p(()=>import("./hashmap-source-code.html-DZKVoDLh.js"),__vite__mapDeps([222,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<blockquote>
<p>感谢 <a href="https://github.com/changfubai" target="_blank" rel="noopener noreferrer">changfubai</a> 对本文的改进做出的贡献！</p>
</blockquote>`,r:{minutes:14.4,words:4321},t:"HashMap 源码分析",y:"a"}}],["/java/collection/java-collection-precautions-for-use.html",{loader:()=>p(()=>import("./java-collection-precautions-for-use.html-SsPgVxv2.js"),__vite__mapDeps([223,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<p>这篇文章我根据《阿里巴巴 Java 开发手册》总结了关于集合使用常见的注意事项以及其具体原理。</p>
<p>强烈建议小伙伴们多多阅读几遍，避免自己写代码的时候出现这些低级的问题。</p>
<h2>集合判空</h2>
<p>《阿里巴巴 Java 开发手册》的描述如下：</p>
<blockquote>
<p><strong>判断所有集合内部的元素是否为空，使用 <code>isEmpty()</code> 方法，而不是 <code>size()==0</code> 的方式。</strong></p>
</blockquote>
<p>这是因为 <code>isEmpty()</code> 方法的可读性更好，并且时间复杂度为 O(1)。</p>`,r:{minutes:8.14,words:2441},t:"Java集合使用注意事项总结",y:"a"}}],["/java/collection/java-collection-questions-01.html",{loader:()=>p(()=>import("./java-collection-questions-01.html-DehKSmze.js"),__vite__mapDeps([224,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:21.18,words:6353},t:"Java集合常见面试题总结(上)",y:"a"}}],["/java/collection/java-collection-questions-02.html",{loader:()=>p(()=>import("./java-collection-questions-02.html-DXfxDruY.js"),__vite__mapDeps([225,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>Map（重要）</h2>
<h3>HashMap 和 Hashtable 的区别</h3>
<ul>
<li><strong>线程是否安全：</strong> <code>HashMap</code> 是非线程安全的，<code>Hashtable</code> 是线程安全的,因为 <code>Hashtable</code> 内部的方法基本都经过<code>synchronized</code> 修饰。（如果你要保证线程安全的话就使用 <code>ConcurrentHashMap</code> 吧！）；</li>
<li><strong>效率：</strong> 因为线程安全的问题，<code>HashMap</code> 要比 <code>Hashtable</code> 效率高一点。另外，<code>Hashtable</code> 基本被淘汰，不要在代码中使用它；</li>
<li><strong>对 Null key 和 Null value 的支持：</strong> <code>HashMap</code> 可以存储 null 的 key 和 value，但 null 作为键只能有一个，null 作为值可以有多个；Hashtable 不允许有 null 键和 null 值，否则会抛出 <code>NullPointerException</code>。</li>
<li><strong>初始容量大小和每次扩充容量大小的不同：</strong> ① 创建时如果不指定容量初始值，<code>Hashtable</code> 默认的初始大小为 11，之后每次扩充，容量变为原来的 2n+1。<code>HashMap</code> 默认的初始化大小为 16。之后每次扩充，容量变为原来的 2 倍。② 创建时如果给定了容量初始值，那么 <code>Hashtable</code> 会直接使用你给定的大小，而 <code>HashMap</code> 会将其扩充为 2 的幂次方大小（<code>HashMap</code> 中的<code>tableSizeFor()</code>方法保证，下面给出了源代码）。也就是说 <code>HashMap</code> 总是使用 2 的幂作为哈希表的大小,后面会介绍到为什么是 2 的幂次方。</li>
<li><strong>底层数据结构：</strong> JDK1.8 以后的 <code>HashMap</code> 在解决哈希冲突时有了较大的变化，当链表长度大于阈值（默认为 8）时，将链表转化为红黑树（将链表转换成红黑树前会判断，如果当前数组的长度小于 64，那么会选择先进行数组扩容，而不是转换为红黑树），以减少搜索时间（后文中我会结合源码对这一过程进行分析）。<code>Hashtable</code> 没有这样的机制。</li>
</ul>`,r:{minutes:24.5,words:7350},t:"Java集合常见面试题总结(下)",y:"a"}}],["/java/collection/linkedhashmap-source-code.html",{loader:()=>p(()=>import("./linkedhashmap-source-code.html-zrz_eiRf.js"),__vite__mapDeps([226,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<h2>LinkedHashMap 简介</h2>
<p><code>LinkedHashMap</code> 是 Java 提供的一个集合类，它继承自 <code>HashMap</code>，并在 <code>HashMap</code> 基础上维护一条双向链表，使得具备如下特性:</p>
<ol>
<li>支持遍历时会按照插入顺序有序进行迭代。</li>
<li>支持按照元素访问顺序排序,适用于封装 LRU 缓存工具。</li>
<li>因为内部使用双向链表维护各个节点，所以遍历时的效率和元素个数成正比，相较于和容量成正比的 HashMap 来说，迭代效率会高很多。</li>
</ol>`,r:{minutes:19.01,words:5704},t:"LinkedHashMap 源码分析",y:"a"}}],["/java/collection/linkedlist-source-code.html",{loader:()=>p(()=>import("./linkedlist-source-code.html-CIBylTDt.js"),__vite__mapDeps([227,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>LinkedList 简介</h2>
<p><code>LinkedList</code> 是一个基于双向链表实现的集合类，经常被拿来和 <code>ArrayList</code> 做比较。关于 <code>LinkedList</code> 和<code>ArrayList</code>的详细对比，我们 <a href="/learning/java/collection/java-collection-questions-01.html" target="_blank">Java 集合常见面试题总结(上)</a>有详细介绍到。</p>`,r:{minutes:12.56,words:3768},t:"LinkedList 源码分析",y:"a"}}],["/java/collection/priorityqueue-source-code.html",{loader:()=>p(()=>import("./priorityqueue-source-code.html-CpesoFXu.js"),__vite__mapDeps([228,1])),meta:{d:1725292091e3,c:"Java",g:["Java集合"],e:'<p><strong>PriorityQueue 源码分析</strong> 为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/source-code-reading.html" target="_blank" rel="noopener noreferrer">《Java 必读源码系列》</a>中。</p>',r:{minutes:.28,words:85},t:"PriorityQueue 源码分析（付费）",y:"a"}}],["/java/concurrent/aqs.html",{loader:()=>p(()=>import("./aqs.html-BDmJHgqM.js"),__vite__mapDeps([229,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<h2>AQS 介绍</h2>
<p>AQS 的全称为 <code>AbstractQueuedSynchronizer</code> ，翻译过来的意思就是抽象队列同步器。这个类在 <code>java.util.concurrent.locks</code> 包下面。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/AQS.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<p>AQS 就是一个抽象类，主要用来构建锁和同步器。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractQueuedSynchronizer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractOwnableSynchronizer</span> <span class="token keyword">implements</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:21.94,words:6582},t:"AQS 详解",y:"a"}}],["/java/concurrent/atomic-classes.html",{loader:()=>p(()=>import("./atomic-classes.html-lm3d8f-q.js"),__vite__mapDeps([230,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<h2>Atomic 原子类介绍</h2>
<p>Atomic 翻译成中文是原子的意思。在化学上，我们知道原子是构成一般物质的最小单位，在化学反应中是不可分割的。在我们这里 Atomic 是指一个操作是不可中断的。即使是在多个线程一起执行的时候，一个操作一旦开始，就不会被其他线程干扰。</p>
<p>所以，所谓原子类说简单点就是具有原子/原子操作特征的类。</p>
<p>并发包 <code>java.util.concurrent</code> 的原子类都存放在<code>java.util.concurrent.atomic</code>下,如下图所示。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/JUC原子类概览.png" alt="JUC原子类概览" tabindex="0"><figcaption>JUC原子类概览</figcaption></figure>`,r:{minutes:9.38,words:2815},t:"Atomic 原子类总结",y:"a"}}],["/java/concurrent/completablefuture-intro.html",{loader:()=>p(()=>import("./completablefuture-intro.html-CP_vnwG6.js"),__vite__mapDeps([231,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>一个接口可能需要调用 N 个其他服务的接口，这在项目开发中还是挺常见的。举个例子：用户请求获取订单信息，可能需要调用用户信息、商品详情、物流信息、商品推荐等接口，最后再汇总数据统一返回。</p>
<p>如果是串行（按顺序依次执行每个任务）执行的话，接口的响应速度会非常慢。考虑到这些接口之间有大部分都是 <strong>无前后顺序关联</strong> 的，可以 <strong>并行执行</strong> ，就比如说调用获取商品详情的时候，可以同时调用获取物流信息。通过并行执行多个任务的方式，接口的响应速度会得到大幅优化。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/high-performance/serial-to-parallel.png" alt="serial-to-parallel" tabindex="0"><figcaption>serial-to-parallel</figcaption></figure>`,r:{minutes:16.09,words:4826},t:"CompletableFuture 详解",y:"a"}}],["/java/concurrent/java-concurrent-collections.html",{loader:()=>p(()=>import("./java-concurrent-collections.html-Bc-7E_XJ.js"),__vite__mapDeps([232,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>JDK 提供的这些容器大部分在 <code>java.util.concurrent</code> 包中。</p>
<ul>
<li><strong><code>ConcurrentHashMap</code></strong> : 线程安全的 <code>HashMap</code></li>
<li><strong><code>CopyOnWriteArrayList</code></strong> : 线程安全的 <code>List</code>，在读多写少的场合性能非常好，远远好于 <code>Vector</code>。</li>
<li><strong><code>ConcurrentLinkedQueue</code></strong> : 高效的并发队列，使用链表实现。可以看做一个线程安全的 <code>LinkedList</code>，这是一个非阻塞队列。</li>
<li><strong><code>BlockingQueue</code></strong> : 这是一个接口，JDK 内部通过链表、数组等方式实现了这个接口。表示阻塞队列，非常适合用于作为数据共享的通道。</li>
<li><strong><code>ConcurrentSkipListMap</code></strong> : 跳表的实现。这是一个 Map，使用跳表的数据结构进行快速查找。</li>
</ul>`,r:{minutes:9.76,words:2928},t:"Java 常见并发容器总结",y:"a"}}],["/java/concurrent/java-concurrent-questions-01.html",{loader:()=>p(()=>import("./java-concurrent-questions-01.html-DA4EZTjR.js"),__vite__mapDeps([233,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<h2>线程</h2>
<h3>什么是线程和进程?</h3>
<h4>何为进程?</h4>
<p>进程是程序的一次执行过程，是系统运行程序的基本单位，因此进程是动态的。系统运行一个程序即是一个进程从创建，运行到消亡的过程。</p>
<p>在 Java 中，当我们启动 main 函数时其实就是启动了一个 JVM 的进程，而 main 函数所在的线程就是这个进程中的一个线程，也称主线程。</p>
<p>如下图所示，在 Windows 中通过查看任务管理器的方式，我们就可以清楚看到 Windows 当前运行的进程（<code>.exe</code> 文件的运行）。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/进程示例图片-Windows.png" alt="进程示例图片-Windows" tabindex="0"><figcaption>进程示例图片-Windows</figcaption></figure>`,r:{minutes:23.23,words:6969},t:"Java并发常见面试题总结（上）",y:"a"}}],["/java/concurrent/java-concurrent-questions-02.html",{loader:()=>p(()=>import("./java-concurrent-questions-02.html-s7zflcq2.js"),__vite__mapDeps([234,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<h2>JMM(Java 内存模型)</h2>
<p>JMM（Java 内存模型）相关的问题比较多，也比较重要，于是我单独抽了一篇文章来总结 JMM 相关的知识点和问题：<a href="/learning/java/concurrent/jmm.html" target="_blank">JMM（Java 内存模型）详解</a> 。</p>
<h2>volatile 关键字</h2>
<h3>如何保证变量的可见性？</h3>
<p>在 Java 中，<code>volatile</code> 关键字可以保证变量的可见性，如果我们将变量声明为 <strong><code>volatile</code></strong> ，这就指示 JVM，这个变量是共享且不稳定的，每次使用它都到主存中进行读取。</p>`,r:{minutes:31.02,words:9307},t:"Java并发常见面试题总结（中）",y:"a"}}],["/java/concurrent/java-concurrent-questions-03.html",{loader:()=>p(()=>import("./java-concurrent-questions-03.html-BZqv46GE.js"),__vite__mapDeps([235,236,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<h2>ThreadLocal</h2>
<h3>ThreadLocal 有什么用？</h3>
<p>通常情况下，我们创建的变量是可以被任何一个线程访问并修改的。<strong>如果想实现每一个线程都有自己的专属本地变量该如何解决呢？</strong></p>
<p>JDK 中自带的<code>ThreadLocal</code>类正是为了解决这样的问题。 <strong><code>ThreadLocal</code>类主要解决的就是让每个线程绑定自己的值，可以将<code>ThreadLocal</code>类形象的比喻成存放数据的盒子，盒子中可以存储每个线程的私有数据。</strong></p>`,r:{minutes:45.97,words:13790},t:"Java并发常见面试题总结（下）",y:"a"}}],["/java/concurrent/java-thread-point.html",{loader:()=>p(()=>import("./java-thread-point.html-CaUOlBZm.js"),__vite__mapDeps([237,1])),meta:{d:1725292091e3,c:"Java",g:["Java多线程"],e:`<h2>守护进程</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//这是一个无线计数器</span>
<span class="token keyword">class</span> <span class="token class-name">TimerThread</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//可以使用守护进程</span>
<span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
t<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div>`,r:{minutes:1.95,words:586},t:"Java 线程练习",y:"a"}}],["/java/concurrent/java-thread-pool-best-practices.html",{loader:()=>p(()=>import("./java-thread-pool-best-practices.html-D33Bbydj.js"),__vite__mapDeps([238,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>简单总结一下我了解的使用线程池的时候应该注意的东西，网上似乎还没有专门写这方面的文章。</p>
<h2>1、正确声明线程池</h2>
<p><strong>线程池必须手动通过 <code>ThreadPoolExecutor</code> 的构造函数来声明，避免使用<code>Executors</code> 类创建线程池，会有 OOM 风险。</strong></p>
<p><code>Executors</code> 返回线程池对象的弊端如下(后文会详细介绍到)：</p>
<ul>
<li><strong><code>FixedThreadPool</code> 和 <code>SingleThreadExecutor</code></strong>：使用的是无界的 <code>LinkedBlockingQueue</code>，任务队列最大长度为 <code>Integer.MAX_VALUE</code>,可能堆积大量的请求，从而导致 OOM。</li>
<li><strong><code>CachedThreadPool</code></strong>：使用的是同步队列 <code>SynchronousQueue</code>, 允许创建的线程数量为 <code>Integer.MAX_VALUE</code> ，可能会创建大量线程，从而导致 OOM。</li>
<li><strong><code>ScheduledThreadPool</code> 和 <code>SingleThreadScheduledExecutor</code></strong> : 使用的无界的延迟阻塞队列<code>DelayedWorkQueue</code>，任务队列最大长度为 <code>Integer.MAX_VALUE</code>,可能堆积大量的请求，从而导致 OOM。</li>
</ul>`,r:{minutes:15.44,words:4631},t:"Java 线程池最佳实践",y:"a"}}],["/java/concurrent/java-thread-pool-summary.html",{loader:()=>p(()=>import("./java-thread-pool-summary.html-CzSmVpDi.js"),__vite__mapDeps([239,236,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>池化技术想必大家已经屡见不鲜了，线程池、数据库连接池、HTTP 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减少每次获取资源的消耗，提高对资源的利用率。</p>
<p>这篇文章我会详细介绍一下线程池的基本概念以及核心原理。</p>
<h2>线程池介绍</h2>
<p>顾名思义，线程池就是管理一系列线程的资源池，其提供了一种限制和管理线程资源的方式。每个线程池还维护一些基本统计信息，例如已完成任务的数量。</p>
<p>这里借用《Java 并发编程的艺术》书中的部分内容来总结一下使用线程池的好处：</p>
<ul>
<li><strong>降低资源消耗</strong>。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。</li>
<li><strong>提高响应速度</strong>。当任务到达时，任务可以不需要等到线程创建就能立即执行。</li>
<li><strong>提高线程的可管理性</strong>。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。</li>
</ul>`,r:{minutes:28.74,words:8623},t:"Java 线程池详解",y:"a"}}],["/java/concurrent/jmm.html",{loader:()=>p(()=>import("./jmm.html-BVoOibON.js"),__vite__mapDeps([240,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>JMM(Java 内存模型)主要定义了对于一个共享变量，当另一个线程对这个共享变量执行写操作后，这个线程对这个共享变量的可见性。</p>
<p>要想理解透彻 JMM（Java 内存模型），我们先要从 <strong>CPU 缓存模型和指令重排序</strong> 说起！</p>
<h2>从 CPU 缓存模型说起</h2>
<p><strong>为什么要弄一个 CPU 高速缓存呢？</strong> 类比我们开发网站后台系统使用的缓存（比如 Redis）是为了解决程序处理速度和访问常规关系型数据库速度不对等的问题。 <strong>CPU 缓存则是为了解决 CPU 处理速度和内存处理速度不对等的问题。</strong></p>`,r:{minutes:19.27,words:5780},t:"JMM（Java 内存模型）详解",y:"a"}}],["/java/concurrent/optimistic-lock-and-pessimistic-lock.html",{loader:()=>p(()=>import("./optimistic-lock-and-pessimistic-lock.html-Cj20RrFM.js"),__vite__mapDeps([241,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<p>如果将悲观锁（Pessimistic Lock）和乐观锁（PessimisticLock 或 OptimisticLock）对应到现实生活中来。悲观锁有点像是一位比较悲观（也可以说是未雨绸缪）的人，总是会假设最坏的情况，避免出现问题。乐观锁有点像是一位比较乐观的人，总是会假设最好的情况，在要出现问题之前快速解决问题。</p>
<p>在程序世界中，乐观锁和悲观锁的最终目的都是为了保证线程安全，避免在并发场景下的资源竞争问题。但是，相比于乐观锁，悲观锁对性能的影响更大！</p>
<h2>什么是悲观锁？</h2>
<p>悲观锁总是假设最坏的情况，认为共享资源每次被访问的时候就会出现问题(比如共享数据被修改)，所以每次在获取资源操作的时候都会上锁，这样其他线程想拿到这个资源就会阻塞直到锁被上一个持有者释放。也就是说，<strong>共享资源每次只给一个线程使用，其它线程阻塞，用完后再把资源转让给其它线程</strong>。</p>`,r:{minutes:10.02,words:3007},t:"乐观锁和悲观锁详解",y:"a"}}],["/java/concurrent/reentrantlock.html",{loader:()=>p(()=>import("./reentrantlock.html-C1CMXeSU.js"),__vite__mapDeps([242,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<blockquote>
<p>本文转载自：<a href="https://tech.meituan.com/2019/12/05/aqs-theory-and-apply.html" target="_blank" rel="noopener noreferrer">https://tech.meituan.com/2019/12/05/aqs-theory-and-apply.html</a></p>
<p>作者：美团技术团队</p>
</blockquote>
<p>Java 中的大部分同步类（Semaphore、ReentrantLock 等）都是基于 AbstractQueuedSynchronizer（简称为 AQS）实现的。AQS 是一种提供了原子式管理同步状态、阻塞和唤醒线程功能以及队列模型的简单框架。</p>`,r:{minutes:30.35,words:9106},t:"从ReentrantLock的实现看AQS的原理及应用",y:"a"}}],["/java/concurrent/threadlocal.html",{loader:()=>p(()=>import("./threadlocal.html-B_wIuHjs.js"),__vite__mapDeps([243,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<blockquote>
<p>本文来自一枝花算不算浪漫投稿， 原文地址：<a href="https://juejin.cn/post/6844904151567040519" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844904151567040519</a>。</p>
</blockquote>
<h3>前言</h3>
<figure><figcaption></figcaption></figure>
<p><strong>全文共 10000+字，31 张图，这篇文章同样耗费了不少的时间和精力才创作完成，原创不易，请大家点点关注+在看，感谢。</strong></p>`,r:{minutes:23.66,words:7098},t:"ThreadLocal 详解",y:"a"}}],["/java/concurrent/virtual-thread.html",{loader:()=>p(()=>import("./virtual-thread.html-C_VBcF3E.js"),__vite__mapDeps([244,1])),meta:{d:1725292091e3,c:"Java",g:["Java并发"],e:`<blockquote>
<p>本文部分内容来自 <a href="https://github.com/Lorin-github" target="_blank" rel="noopener noreferrer">Lorin</a> 的<a href="https://github.com/Snailclimb/JavaGuide/pull/2190" target="_blank" rel="noopener noreferrer">PR</a>。</p>
</blockquote>
<p>虚拟线程在 Java 21 正式发布，这是一项重量级的更新。</p>
<h2>什么是虚拟线程？</h2>`,r:{minutes:5.17,words:1550},t:"虚拟线程极简入门",y:"a"}}],["/java/io/io-basis.html",{loader:()=>p(()=>import("./io-basis.html-DAoWDLSc.js"),__vite__mapDeps([245,1])),meta:{d:1725292091e3,c:"Java",g:["Java IO","Java基础"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:15.66,words:4699},t:"Java IO 基础知识总结",y:"a"}}],["/java/io/io-design-patterns.html",{loader:()=>p(()=>import("./io-design-patterns.html-C2tyrFE0.js"),__vite__mapDeps([246,1])),meta:{d:1725292091e3,c:"Java",g:["Java IO","Java基础"],e:`<p>这篇文章我们简单来看看我们从 IO 中能够学习到哪些设计模式的应用。</p>
<h2>装饰器模式</h2>
<p><strong>装饰器（Decorator）模式</strong> 可以在不改变原有对象的情况下拓展其功能。</p>
<p>装饰器模式通过组合替代继承来扩展原始类的功能，在一些继承关系比较复杂的场景（IO 这一场景各种类的继承关系就比较复杂）更加实用。</p>
<p>对于字节流来说， <code>FilterInputStream</code> （对应输入流）和<code>FilterOutputStream</code>（对应输出流）是装饰器模式的核心，分别用于增强 <code>InputStream</code> 和<code>OutputStream</code>子类对象的功能。</p>`,r:{minutes:7.8,words:2340},t:"Java IO 设计模式总结",y:"a"}}],["/java/io/io-model.html",{loader:()=>p(()=>import("./io-model.html-csBA7Rbo.js"),__vite__mapDeps([247,1])),meta:{d:1725292091e3,c:"Java",g:["Java IO","Java基础"],e:`<p>IO 模型这块确实挺难理解的，需要太多计算机底层知识。写这篇文章用了挺久，就非常希望能把我所知道的讲出来吧!希望朋友们能有收获！为了写这篇文章，还翻看了一下《UNIX 网络编程》这本书，太难了，我滴乖乖！心痛~</p>
<p><em>个人能力有限。如果文章有任何需要补充/完善/修改的地方，欢迎在评论区指出，共同进步！</em></p>
<h2>前言</h2>
<p>I/O 一直是很多小伙伴难以理解的一个知识点，这篇文章我会将我所理解的 I/O 讲给你听，希望可以对你有所帮助。</p>
<h2>I/O</h2>
<h3>何为 I/O?</h3>
<p>I/O（<strong>I</strong>nput/<strong>O</strong>utpu） 即<strong>输入／输出</strong> 。</p>`,r:{minutes:6.4,words:1919},t:"Java IO 模型详解",y:"a"}}],["/java/io/nio-basis.html",{loader:()=>p(()=>import("./nio-basis.html-DNkNjabL.js"),__vite__mapDeps([248,1])),meta:{d:1725292091e3,c:"Java",g:["Java IO","Java基础"],e:`<p>在学习 NIO 之前，需要先了解一下计算机 I/O 模型的基础理论知识。还不了解的话，可以参考我写的这篇文章：<a href="https://javaguide.cn/java/io/io-model.html" target="_blank" rel="noopener noreferrer">Java IO 模型详解</a>。</p>
<h2>NIO 简介</h2>
<p>在传统的 Java I/O 模型（BIO）中，I/O 操作是以阻塞的方式进行的。也就是说，当一个线程执行一个 I/O 操作时，它会被阻塞直到操作完成。这种阻塞模型在处理多个并发连接时可能会导致性能瓶颈，因为需要为每个连接创建一个线程，而线程的创建和切换都是有开销的。</p>`,r:{minutes:13,words:3900},t:"Java NIO 核心知识总结",y:"a"}}],["/java/jvm/class-file-structure.html",{loader:()=>p(()=>import("./class-file-structure.html-CkF26Z6-.js"),__vite__mapDeps([249,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<h2>回顾一下字节码</h2>
<p>在 Java 中，JVM 可以理解的代码就叫做<code>字节码</code>（即扩展名为 <code>.class</code> 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。</p>
<p>Clojure（Lisp 语言的一种方言）、Groovy、Scala、JRuby、Kotlin 等语言都是运行在 Java 虚拟机之上。下图展示了不同的语言被不同的编译器编译成<code>.class</code>文件最终运行在 Java 虚拟机之上。<code>.class</code>文件的二进制格式可以使用 <a href="https://www.x-ways.net/winhex/" target="_blank" rel="noopener noreferrer">WinHex</a> 查看。</p>`,r:{minutes:8.86,words:2658},t:"类文件结构详解",y:"a"}}],["/java/jvm/class-loading-process.html",{loader:()=>p(()=>import("./class-loading-process.html-R53dRvGV.js"),__vite__mapDeps([250,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<h2>类的生命周期</h2>
<p>类从被加载到虚拟机内存中开始到卸载出内存为止，它的整个生命周期可以简单概括为 7 个阶段：：加载（Loading）、验证（Verification）、准备（Preparation）、解析（Resolution）、初始化（Initialization）、使用（Using）和卸载（Unloading）。其中，验证、准备和解析这三个阶段可以统称为连接（Linking）。</p>
<p>这 7 个阶段的顺序如下图所示：</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/jvm/lifecycle-of-a-class.png" alt="一个类的完整生命周期" tabindex="0"><figcaption>一个类的完整生命周期</figcaption></figure>`,r:{minutes:10.82,words:3245},t:"类加载过程详解",y:"a"}}],["/java/jvm/classloader.html",{loader:()=>p(()=>import("./classloader.html-DtL5axM6.js"),__vite__mapDeps([251,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<h2>回顾一下类加载过程</h2>
<p>开始介绍类加载器和双亲委派模型之前，简单回顾一下类加载过程。</p>
<ul>
<li>类加载过程：<strong>加载-&gt;连接-&gt;初始化</strong>。</li>
<li>连接过程又可分为三步：<strong>验证-&gt;准备-&gt;解析</strong>。</li>
</ul>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/jvm/class-loading-procedure.png" alt="类加载过程" tabindex="0"><figcaption>类加载过程</figcaption></figure>`,r:{minutes:17.22,words:5165},t:"类加载器详解（重点）",y:"a"}}],["/java/jvm/jdk-monitoring-and-troubleshooting-tools.html",{loader:()=>p(()=>import("./jdk-monitoring-and-troubleshooting-tools.html-BFl41Bvz.js"),__vite__mapDeps([252,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<h2>JDK 命令行工具</h2>
<p>这些命令在 JDK 安装目录下的 bin 目录下：</p>
<ul>
<li><strong><code>jps</code></strong> (JVM Process Status）: 类似 UNIX 的 <code>ps</code> 命令。用于查看所有 Java 进程的启动类、传入参数和 Java 虚拟机参数等信息；</li>
<li><strong><code>jstat</code></strong>（JVM Statistics Monitoring Tool）: 用于收集 HotSpot 虚拟机各方面的运行数据;</li>
<li><strong><code>jinfo</code></strong> (Configuration Info for Java) : Configuration Info for Java,显示虚拟机配置信息;</li>
<li><strong><code>jmap</code></strong> (Memory Map for Java) : 生成堆转储快照;</li>
<li><strong><code>jhat</code></strong> (JVM Heap Dump Browser) : 用于分析 heapdump 文件，它会建立一个 HTTP/HTML 服务器，让用户可以在浏览器上查看分析结果。JDK9 移除了 jhat；</li>
<li><strong><code>jstack</code></strong> (Stack Trace for Java) : 生成虚拟机当前时刻的线程快照，线程快照就是当前虚拟机内每一条线程正在执行的方法堆栈的集合。</li>
</ul>`,r:{minutes:10.75,words:3224},t:"JDK监控和故障处理工具总结",y:"a"}}],["/java/jvm/jvm-garbage-collection.html",{loader:()=>p(()=>import("./jvm-garbage-collection.html-vXlxaVCV.js"),__vite__mapDeps([253,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<blockquote>
<p>如果没有特殊说明，都是针对的是 HotSpot 虚拟机。</p>
<p>本文基于《深入理解 Java 虚拟机：JVM 高级特性与最佳实践》进行总结补充。</p>
<p>常见面试题：</p>
<ul>
<li>如何判断对象是否死亡（两种方法）。</li>
<li>简单的介绍一下强引用、软引用、弱引用、虚引用（虚引用与软引用和弱引用的区别、使用软引用能带来的好处）。</li>
<li>如何判断一个常量是废弃常量</li>
<li>如何判断一个类是无用的类</li>
<li>垃圾收集有哪些算法，各自的特点？</li>
<li>HotSpot 为什么要分为新生代和老年代？</li>
<li>常见的垃圾回收器有哪些？</li>
<li>介绍一下 CMS,G1 收集器。</li>
<li>Minor Gc 和 Full GC 有什么不同呢？</li>
</ul>
</blockquote>`,r:{minutes:28.19,words:8456},t:"JVM垃圾回收详解（重点）",y:"a"}}],["/java/jvm/jvm-in-action.html",{loader:()=>p(()=>import("./jvm-in-action.html-Ce96rpyW.js"),__vite__mapDeps([254,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<p>JVM 线上问题排查和性能调优也是面试常问的一个问题，尤其是社招中大厂的面试。</p>
<p>这篇文章，我会分享一些我看到的相关的案例。</p>
<p>下面是正文。</p>
<p><a href="https://juejin.cn/post/7205141492264976445" target="_blank" rel="noopener noreferrer">一次线上 OOM 问题分析 - 艾小仙 - 2023</a></p>
<ul>
<li><strong>现象</strong>：线上某个服务有接口非常慢，通过监控链路查看发现，中间的 GAP 时间非常大，实际接口并没有消耗很多时间，并且在那段时间里有很多这样的请求。</li>
<li><strong>分析</strong>：使用 JDK 自带的<code>jvisualvm</code>分析 dump 文件(MAT 也能分析)。</li>
<li><strong>建议</strong>：对于 SQL 语句，如果监测到没有<code>where</code>条件的全表查询应该默认增加一个合适的<code>limit</code>作为限制，防止这种问题拖垮整个系统</li>
<li><strong>资料</strong>：<a href="https://heapdump.cn/article/3489050" target="_blank" rel="noopener noreferrer">实战案例：记一次 dump 文件分析历程转载 - HeapDump - 2022</a>。</li>
</ul>`,r:{minutes:3.44,words:1032},t:"JVM线上问题排查和性能调优案例",y:"a"}}],["/java/jvm/jvm-intro.html",{loader:()=>p(()=>import("./jvm-intro.html-C_1niK4c.js"),__vite__mapDeps([255,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<blockquote>
<p>来自<a href="https://juejin.im/user/5c2400afe51d45451758aa96" target="_blank" rel="noopener noreferrer">说出你的愿望吧丷</a>投稿，原文地址：<a href="https://juejin.im/post/5e1505d0f265da5d5d744050" target="_blank" rel="noopener noreferrer">https://juejin.im/post/5e1505d0f265da5d5d744050</a>。</p>
</blockquote>`,r:{minutes:28.89,words:8667},t:"大白话带你认识 JVM",y:"a"}}],["/java/jvm/jvm-parameters-intro.html",{loader:()=>p(()=>import("./jvm-parameters-intro.html-DC9rr7bY.js"),__vite__mapDeps([256,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<blockquote>
<p>本文由 JavaGuide 翻译自 <a href="https://www.baeldung.com/jvm-parameters" target="_blank" rel="noopener noreferrer">https://www.baeldung.com/jvm-parameters</a>，并对文章进行了大量的完善补充。</p>
<p>JDK 版本：1.8</p>
</blockquote>
<h2>1.概述</h2>
<p>在本篇文章中，你将掌握最常用的 JVM 参数配置。</p>
<h2>2.堆内存相关</h2>
<blockquote>
<p>Java 虚拟机所管理的内存中最大的一块，Java 堆是所有线程共享的一块内存区域，在虚拟机启动时创建。<strong>此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例以及数组都在这里分配内存。</strong></p>
</blockquote>`,r:{minutes:8.6,words:2579},t:"最重要的JVM参数总结",y:"a"}}],["/java/jvm/memory-area.html",{loader:()=>p(()=>import("./memory-area.html-uH1TwqO7.js"),__vite__mapDeps([257,1])),meta:{d:1725292091e3,c:"Java",g:["JVM"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:36.25,words:10874},t:"Java内存区域详解（重点）",y:"a"}}],["/java/network/tcp.html",{loader:()=>p(()=>import("./tcp.html-B7sW6WtK.js"),__vite__mapDeps([258,1])),meta:{d:1725292091e3,c:"java",g:["socket","tcp"],e:`<h2>Socket</h2>
<p>Socket是一个抽象概念，一个应用程序通过一个Socket来建立一个远程连接，而Socket内部通过TCP/IP协议把数据传输到网络：<br>
</p>
<h3>服务端</h3>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Server</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServerSocket</span> ss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">(</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 监听指定端口</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"server is running..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Socket</span> sock <span class="token operator">=</span> ss<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"connected from "</span> <span class="token operator">+</span> sock<span class="token punctuation">.</span><span class="token function">getRemoteSocketAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Thread</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span>sock<span class="token punctuation">)</span><span class="token punctuation">;</span>
            t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Handler</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token class-name">Socket</span> sock<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Handler</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> sock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sock <span class="token operator">=</span> sock<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sock<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">OutputStream</span> output <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sock<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">handle</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>sock<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> ioe<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"client disconnected."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> input<span class="token punctuation">,</span> <span class="token class-name">OutputStream</span> output<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"hello\\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> s <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"bye"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"bye\\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"ok: "</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">"\\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.24,words:372},t:"TCP编程",y:"a"}}],["/java/network/udp.html",{loader:()=>p(()=>import("./udp.html-OxL2J8N3.js"),__vite__mapDeps([259,1])),meta:{d:1725292091e3,c:"java",g:["udp","socket"],e:`<h2>UDP</h2>
<p>和TCP编程相比，UDP编程就简单得多，因为UDP没有创建连接，数据包也是一次收发一个，所以没有流的概念。</p>
<p>UDP和TCP都使用0~65535的端口，但是分开使用，互不干扰</p>
<blockquote>
<p>即一个应用程序用TCP占用了端口1234，不影响另一个应用程序用UDP占用端口1234。</p>
</blockquote>
<h2>服务端</h2>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">DatagramSocket</span> ds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramSocket</span><span class="token punctuation">(</span><span class="token number">6666</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 监听指定端口</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 无限循环</span>
    <span class="token comment">// 数据缓冲区:</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">DatagramPacket</span> packet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatagramPacket</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ds<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 收取一个UDP数据包</span>
    <span class="token comment">// 收取到的数据存储在buffer中，由packet.getOffset(), packet.getLength()指定起始位置和长度</span>
    <span class="token comment">// 将其按UTF-8编码转换为String:</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>packet<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> packet<span class="token punctuation">.</span><span class="token function">getOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> packet<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 发送数据:</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token string">"ACK"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    packet<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ds<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>packet<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.74,words:522},t:"UDP编程",y:"a"}}],["/java/new-features/java10.html",{loader:()=>p(()=>import("./java10.html-C_jCk5FB.js"),__vite__mapDeps([260,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p><strong>Java 10</strong> 发布于 2018 年 3 月 20 日，最知名的特性应该是 <code>var</code> 关键字（局部变量类型推断）的引入了，其他还有垃圾收集器改善、GC 改进、性能提升、线程管控等一批新特性。</p>
<p><strong>概览（精选了一部分）</strong>：</p>
<ul>
<li><a href="https://openjdk.java.net/jeps/286" target="_blank" rel="noopener noreferrer">JEP 286：局部变量类型推断</a></li>
<li><a href="https://openjdk.java.net/jeps/304" target="_blank" rel="noopener noreferrer">JEP 304：垃圾回收器接口</a></li>
<li><a href="https://openjdk.java.net/jeps/307" target="_blank" rel="noopener noreferrer">JEP 307：G1 并行 Full GC</a></li>
<li><a href="https://openjdk.java.net/jeps/310" target="_blank" rel="noopener noreferrer">JEP 310：应用程序类数据共享(扩展 CDS 功能)</a></li>
<li><a href="https://openjdk.java.net/jeps/317" target="_blank" rel="noopener noreferrer">JEP 317：实验性的基于 Java 的 JIT 编译器</a></li>
</ul>`,r:{minutes:4.8,words:1440},t:"Java 10 新特性概览",y:"a"}}],["/java/new-features/java11.html",{loader:()=>p(()=>import("./java11.html-Tlt9BY5P.js"),__vite__mapDeps([261,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p><strong>Java 11</strong> 于 2018 年 9 月 25 日正式发布，这是很重要的一个版本！Java 11 和 2017 年 9 月份发布的 Java 9 以及 2018 年 3 月份发布的 Java 10 相比，其最大的区别就是：在长期支持(Long-Term-Support)方面，<strong>Oracle 表示会对 Java 11 提供大力支持，这一支持将会持续至 2026 年 9 月。这是据 Java 8 以后支持的首个长期版本。</strong></p>
<p>下面这张图是 Oracle 官方给出的 Oracle JDK 支持的时间线。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/new-features/4c1611fad59449edbbd6e233690e9fa7.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:4.48,words:1343},t:"Java 11 新特性概览",y:"a"}}],["/java/new-features/java12-13.html",{loader:()=>p(()=>import("./java12-13.html-CO9_6QvR.js"),__vite__mapDeps([262,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<h2>Java12</h2>
<h3>String 增强</h3>
<p>Java 12 增加了两个的字符串处理方法，如以下所示。</p>
<p><code>indent()</code> 方法可以实现字符串缩进。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token string">"Java"</span><span class="token punctuation">;</span>
<span class="token comment">// 缩进 4 格</span>
text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indent</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">indent</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:7.27,words:2182},t:"Java 12  & 13 新特性概览",y:"a"}}],["/java/new-features/java14-15.html",{loader:()=>p(()=>import("./java14-15.html-DVxNgSxl.js"),__vite__mapDeps([263,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<h2>Java14</h2>
<h3>空指针异常精准提示</h3>
<p>通过 JVM 参数中添加<code>-XX:+ShowCodeDetailsInExceptionMessages</code>，可以在空指针异常中获取更为详细的调用信息，更快的定位和解决问题。</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token punctuation">.</span>i <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span> <span class="token comment">// 假设这段代码会发生空指针</span>
</code></pre></div>`,r:{minutes:5.33,words:1599},t:"Java 14  & 15 新特性概览",y:"a"}}],["/java/new-features/java16.html",{loader:()=>p(()=>import("./java16.html-Crm3xLQP.js"),__vite__mapDeps([264,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>Java 16 在 2021 年 3 月 16 日正式发布，非长期支持（LTS）版本。</p>
<p>相关阅读：<a href="https://openjdk.java.net/projects/jdk/16/" target="_blank" rel="noopener noreferrer">OpenJDK Java 16 文档</a> 。</p>
<h2>JEP 338:向量 API(第一次孵化)</h2>
<p>向量（Vector） API 最初由 <a href="https://openjdk.java.net/jeps/338" target="_blank" rel="noopener noreferrer">JEP 338</a> 提出，并作为<a href="http://openjdk.java.net/jeps/11" target="_blank" rel="noopener noreferrer">孵化 API</a>集成到 Java 16 中。第二轮孵化由 <a href="https://openjdk.java.net/jeps/414" target="_blank" rel="noopener noreferrer">JEP 414</a> 提出并集成到 Java 17 中，第三轮孵化由 <a href="https://openjdk.java.net/jeps/417" target="_blank" rel="noopener noreferrer">JEP 417</a> 提出并集成到 Java 18 中，第四轮由 <a href="https://openjdk.java.net/jeps/426" target="_blank" rel="noopener noreferrer">JEP 426</a> 提出并集成到了 Java 19 中。</p>`,r:{minutes:9.99,words:2997},t:"Java 16 新特性概览",y:"a"}}],["/java/new-features/java17.html",{loader:()=>p(()=>import("./java17.html-CcQ7j99K.js"),__vite__mapDeps([265,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>Java 17 在 2021 年 9 月 14 日正式发布，是一个长期支持（LTS）版本。</p>
<p>下面这张图是 Oracle 官方给出的 Oracle JDK 支持的时间线。可以看得到，Java</p>
<p>17 最多可以支持到 2029 年 9 月份。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/new-features/4c1611fad59449edbbd6e233690e9fa7.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:6.21,words:1864},t:"Java 17 新特性概览（重要）",y:"a"}}],["/java/new-features/java18.html",{loader:()=>p(()=>import("./java18.html-3liOhuOJ.js"),__vite__mapDeps([266,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>Java 18 在 2022 年 3 月 22 日正式发布，非长期支持版本。</p>
<p>Java 18 带来了 9 个新特性：</p>
<ul>
<li><a href="https://openjdk.java.net/jeps/400" target="_blank" rel="noopener noreferrer">JEP 400:UTF-8 by Default（默认字符集为 UTF-8）</a></li>
<li><a href="https://openjdk.java.net/jeps/408" target="_blank" rel="noopener noreferrer">JEP 408:Simple Web Server（简易的 Web 服务器）</a></li>
<li><a href="https://openjdk.java.net/jeps/413" target="_blank" rel="noopener noreferrer">JEP 413:Code Snippets in Java API Documentation（Java API 文档中的代码片段）</a></li>
<li><a href="https://openjdk.java.net/jeps/416" target="_blank" rel="noopener noreferrer">JEP 416:Reimplement Core Reflection with Method Handles（使用方法句柄重新实现反射核心）</a></li>
<li><a href="https://openjdk.java.net/jeps/417" target="_blank" rel="noopener noreferrer">JEP 417:Vector（向量） API</a>（第三次孵化）</li>
<li><a href="https://openjdk.java.net/jeps/418" target="_blank" rel="noopener noreferrer">JEP 418:Internet-Address Resolution（互联网地址解析）SPI</a></li>
<li><a href="https://openjdk.java.net/jeps/419" target="_blank" rel="noopener noreferrer">JEP 419:Foreign Function &amp; Memory API（外部函数和内存 API）</a>（第二次孵化）</li>
<li><a href="https://openjdk.java.net/jeps/420" target="_blank" rel="noopener noreferrer">JEP 420:Pattern Matching for switch（switch 模式匹配）</a>（第二次预览）</li>
<li><a href="https://openjdk.java.net/jeps/421" target="_blank" rel="noopener noreferrer">JEP 421:Deprecate Finalization for Removal</a></li>
</ul>`,r:{minutes:4.54,words:1363},t:"Java 18 新特性概览",y:"a"}}],["/java/new-features/java19.html",{loader:()=>p(()=>import("./java19.html-CiKba4Yx.js"),__vite__mapDeps([267,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>JDK 19 定于 2022 年 9 月 20 日正式发布以供生产使用，非长期支持版本。不过，JDK 19 中有一些比较重要的新特性值得关注。</p>
<p>JDK 19 只有 7 个新特性：</p>
<ul>
<li><a href="https://openjdk.org/jeps/405" target="_blank" rel="noopener noreferrer">JEP 405: Record Patterns（记录模式）</a>（预览）</li>
<li><a href="https://openjdk.org/jeps/422" target="_blank" rel="noopener noreferrer">JEP 422: Linux/RISC-V Port</a></li>
<li><a href="https://openjdk.org/jeps/424" target="_blank" rel="noopener noreferrer">JEP 424: Foreign Function &amp; Memory API（外部函数和内存 API）</a>（预览）</li>
<li><a href="https://openjdk.org/jeps/425" target="_blank" rel="noopener noreferrer">JEP 425: Virtual Threads（虚拟线程）</a>（预览）</li>
<li><a href="https://openjdk.java.net/jeps/426" target="_blank" rel="noopener noreferrer">JEP 426: Vector（向量）API</a>（第四次孵化）</li>
<li><a href="https://openjdk.java.net/jeps/427" target="_blank" rel="noopener noreferrer">JEP 427: Pattern Matching for switch（switch 模式匹配）</a></li>
<li><a href="https://openjdk.org/jeps/428" target="_blank" rel="noopener noreferrer">JEP 428: Structured Concurrency（结构化并发）</a>（孵化）</li>
</ul>`,r:{minutes:5.66,words:1698},t:"Java 19 新特性概览",y:"a"}}],["/java/new-features/java20.html",{loader:()=>p(()=>import("./java20.html-BCFdMVeY.js"),__vite__mapDeps([268,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>JDK 20 于 2023 年 3 月 21 日发布，非长期支持版本。</p>
<p>根据开发计划，下一个 LTS 版本就是将于 2023 年 9 月发布的 JDK 21。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/java/new-features/640.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<p>JDK 20 只有 7 个新特性：</p>
<ul>
<li><a href="https://openjdk.org/jeps/429" target="_blank" rel="noopener noreferrer">JEP 429：Scoped Values（作用域值）</a>（第一次孵化）</li>
<li><a href="https://openjdk.org/jeps/432" target="_blank" rel="noopener noreferrer">JEP 432：Record Patterns（记录模式）</a>（第二次预览）</li>
<li><a href="https://openjdk.org/jeps/433" target="_blank" rel="noopener noreferrer">JEP 433：switch 模式匹配</a>（第四次预览）</li>
<li><a href="https://openjdk.org/jeps/434" target="_blank" rel="noopener noreferrer">JEP 434: Foreign Function &amp; Memory API（外部函数和内存 API）</a>（第二次预览）</li>
<li><a href="https://openjdk.org/jeps/436" target="_blank" rel="noopener noreferrer">JEP 436: Virtual Threads（虚拟线程）</a>（第二次预览）</li>
<li><a href="https://openjdk.org/jeps/437" target="_blank" rel="noopener noreferrer">JEP 437:Structured Concurrency（结构化并发）</a>(第二次孵化)</li>
<li><a href="https://openjdk.org/jeps/438" target="_blank" rel="noopener noreferrer">JEP 432:向量 API（</a>第五次孵化）</li>
</ul>`,r:{minutes:9.61,words:2883},t:"Java 20 新特性概览",y:"a"}}],["/java/new-features/java21.html",{loader:()=>p(()=>import("./java21.html-DwBIrh6v.js"),__vite__mapDeps([269,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p>JDK 21 于 2023 年 9 月 19 日 发布，这是一个非常重要的版本，里程碑式。</p>
<p>JDK21 是 LTS（长期支持版），至此为止，目前有 JDK8、JDK11、JDK17 和 JDK21 这四个长期支持版了。</p>
<p>JDK 21 共有 15 个新特性，这篇文章会挑选其中较为重要的一些新特性进行详细介绍：</p>
<ul>
<li>
<p><a href="https://openjdk.org/jeps/430" target="_blank" rel="noopener noreferrer">JEP 430：String Templates（字符串模板）</a>（预览）</p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/431" target="_blank" rel="noopener noreferrer">JEP 431：Sequenced Collections（序列化集合）</a></p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/439" target="_blank" rel="noopener noreferrer">JEP 439：Generational ZGC（分代 ZGC）</a></p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/440" target="_blank" rel="noopener noreferrer">JEP 440：Record Patterns（记录模式）</a></p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/442" target="_blank" rel="noopener noreferrer">JEP 441：Pattern Matching for switch（switch 的模式匹配）</a></p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/442" target="_blank" rel="noopener noreferrer">JEP 442：Foreign Function &amp; Memory API（外部函数和内存 API）</a>（第三次预览）</p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/443" target="_blank" rel="noopener noreferrer">JEP 443：Unnamed Patterns and Variables（未命名模式和变量</a>（预览）</p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/444" target="_blank" rel="noopener noreferrer">JEP 444：Virtual Threads（虚拟线程）</a></p>
</li>
<li>
<p><a href="https://openjdk.org/jeps/445" target="_blank" rel="noopener noreferrer">JEP 445：Unnamed Classes and Instance Main Methods（未命名类和实例 main 方法 ）</a>（预览）</p>
</li>
</ul>`,r:{minutes:9.08,words:2724},t:"Java 21 新特性概览(重要)",y:"a"}}],["/java/new-features/java8-common-new-features.html",{loader:()=>p(()=>import("./java8-common-new-features.html-CFS1Heqy.js"),__vite__mapDeps([270,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<blockquote>
<p>本文来自<a href="https://github.com/cowbi" target="_blank" rel="noopener noreferrer">cowbi</a>的投稿~</p>
</blockquote>
<p>Oracle 于 2014 发布了 Java8（jdk1.8），诸多原因使它成为目前市场上使用最多的 jdk 版本。虽然发布距今已将近 7 年，但很多程序员对其新特性还是不够了解，尤其是用惯了 Java8 之前版本的老程序员，比如我。</p>
<p>为了不脱离队伍太远，还是有必要对这些新特性做一些总结梳理。它较 jdk.7 有很多变化或者说是优化，比如 interface 里可以有静态方法，并且可以有方法体，这一点就颠覆了之前的认知；<code>java.util.HashMap</code> 数据结构里增加了红黑树；还有众所周知的 Lambda 表达式等等。本文不能把所有的新特性都给大家一一分享，只列出比较常用的新特性给大家做详细讲解。更多相关内容请看<a href="https://www.oracle.com/java/technologies/javase/8-whats-new.html" target="_blank" rel="noopener noreferrer">官网关于 Java8 的新特性的介绍</a>。</p>`,r:{minutes:21.16,words:6349},t:"Java8 新特性实战",y:"a"}}],["/java/new-features/java8-tutorial-translate.html",{loader:()=>p(()=>import("./java8-tutorial-translate.html-oZljLzhN.js"),__vite__mapDeps([271,1])),meta:{d:1725292091e3,e:`
<p>随着 Java 8 的普及度越来越高，很多人都提到面试中关于 Java 8 也是非常常问的知识点。应各位要求和需要，我打算对这部分知识做一个总结。本来准备自己总结的，后面看到 GitHub 上有一个相关的仓库，地址：<br>
<a href="https://github.com/winterbe/java8-tutorial" target="_blank" rel="noopener noreferrer">https://github.com/winterbe/java8-tutorial</a>。这个仓库是英文的，我对其进行了翻译并添加和修改了部分内容，下面是正文。</p>
<hr>`,r:{minutes:22.04,words:6612},t:"《Java8 指南》中文翻译",y:"a"}}],["/java/new-features/java9.html",{loader:()=>p(()=>import("./java9.html-Dmb48abY.js"),__vite__mapDeps([272,1])),meta:{d:1725292091e3,c:"Java",g:["Java新特性"],e:`<p><strong>Java 9</strong> 发布于 2017 年 9 月 21 日 。作为 Java 8 之后 3 年半才发布的新版本，Java 9 带来了很多重大的变化其中最重要的改动是 Java 平台模块系统的引入，其他还有诸如集合、<code>Stream</code> 流……。</p>
<p>你可以在 <a href="http://jdk.java.net/archive/" target="_blank" rel="noopener noreferrer">Archived OpenJDK General-Availability Releases</a> 上下载自己需要的 JDK 版本！官方的新特性说明文档地址：<a href="https://openjdk.java.net/projects/jdk/" target="_blank" rel="noopener noreferrer">https://openjdk.java.net/projects/jdk/</a> 。</p>`,r:{minutes:8.06,words:2419},t:"Java 9 新特性概览",y:"a"}}],["/java/servlet/basis.html",{loader:()=>p(()=>import("./basis.html-NsUYDRD1.js"),__vite__mapDeps([273,1])),meta:{d:1725292091e3,c:"java",g:["servlet"],e:`<h2>What is Servlet</h2>
<p>Java Servlet（Java服务器小程序）是一个基于Java技术的Web组件，运行在服务器端，它由Servlet容器所管理，用于生成动态的内容。</p>
<p>Servlet是平台独立的Java类，编写一个Servlet，实际上就是按照Servlet规范编写一个Java类。Servlet被编译为平台独立 的字节码，可以被动态地加载到支持Java技术的Web服务器中运行。</p>
<h2>Servlet容器</h2>
<p>Servlet容器也叫做Servlet引擎，是Web服务器或应用程序服务器的一部分，用于在发送的请求和响应之上提供网络服务，解码基于 MIME的请求，格式化基于MIME的响应。</p>`,r:{minutes:2.42,words:726},t:"servlet基础",y:"a"}}],["/knowledge/further-math/curve.html",{loader:()=>p(()=>import("./curve.html-NtUFnYs8.js"),__vite__mapDeps([274,1])),meta:{d:1725292091e3,g:["further-math"],e:`<h2>椭球面</h2>
<p><br>
</p>
<h2>二次柱面</h2>
<figure><figcaption>img_2.png</figcaption></figure>
`,r:{minutes:.08,words:25},t:"曲面曲线方程",y:"a"}}],["/linux/slurm/basis.html",{loader:()=>p(()=>import("./basis.html-BY2iEdKH.js"),__vite__mapDeps([275,1])),meta:{d:1725292091e3,c:"linux",e:`<h2>slurm介绍</h2>
<p>Slurm（Simple Linux Utility for Resource Management）是一个开源的、灵活的、可扩展的集群管理和作业调度系统，主要用于管理计算集群中的资源分配和作业调度。</p>
<ul>
<li>灵活性和可扩展性：Slurm可以轻松地配置和部署在各种规模和类型的集群上，并支持动态添加和移除节点。</li>
<li>高性能作业调度：Slurm具有高效的作业调度算法，可以有效地管理大规模集群上的作业并优化资源利用率。</li>
<li>资源管理：Slurm可以管理各种类型的资源，包括CPU、GPU、内存、网络等，并提供了细粒度的资源分配和控制。</li>
<li>可扩展的插件架构：Slurm提供了丰富的插件接口，允许用户根据需要定制和扩展功能。</li>
<li>可视化界面：Slurm提供了一些工具和界面，如sview，用于直观地查看集群状态和作业情况。</li>
</ul>`,r:{minutes:2.19,words:656},t:"slurm基础知识",y:"a"}}],["/net/csharp/delegate.html",{loader:()=>p(()=>import("./delegate.html-B16mnFu9.js"),__vite__mapDeps([276,1])),meta:{d:1725292091e3,e:`<h2>基础知识</h2>
<ol>
<li>定义使用delegate</li>
</ol>
<div class="language-c#" data-ext="c#" data-title="c#"><pre class="language-c#"><code>public delegate int MyDelegate(int x);
MyDelegate myDelegate=new MyDelegate(method1);
MyDelegate myDelegate=method1;
// method1是方法
</code></pre></div><ol start="2">
<li>多播</li>
</ol>`,r:{minutes:.6,words:179},t:"委托",y:"a"}}],["/net/csharp/task.html",{loader:()=>p(()=>import("./task.html-Cmtz3GnQ.js"),__vite__mapDeps([277,1])),meta:{d:1725292091e3,e:`<h2>Task任务</h2>
<p>Task可以用来进行创建任务</p>
<div class="language-c#" data-ext="c#" data-title="c#"><pre class="language-c#"><code>//1. new Task来创建任务(使用lambda 表达式)
Task task=new Task(()=&gt;{

})
// 启动任务
task.start();
//确认是否完成
task.IsCompleted

//2. Task.run快速启动任务
Task task=Task.run(()=&gt;{

    }
)
//可以使用Task&lt;T&gt;类型，task.result获取结果
//如果task没有完成，task.result会被阻塞



</code></pre></div>`,r:{minutes:.4,words:121},t:"多线程",y:"a"}}],["/neural-network/transformer/basis.html",{loader:()=>p(()=>import("./basis.html-lD0kXux4.js"),__vite__mapDeps([278,1])),meta:{d:1725292091e3,c:"Transformer",e:`<h2>掩码</h2>
`,r:{minutes:.03,words:8},t:"Transformer基础",y:"a"}}],["/neural-network/transformer/encoder.html",{loader:()=>p(()=>import("./encoder.html-DwYcfuHL.js"),__vite__mapDeps([279,1])),meta:{d:1725292091e3,c:"Transformer",e:`<h2>Encoder</h2>
<figure><img src="http://47.94.135.15:81/Transformer/Encoder-Layer.webp" alt="Encoder-Layer" tabindex="0"><figcaption>Encoder-Layer</figcaption></figure>
<h3>Code Example</h3>
<div class="language-python" data-ext="py" data-title="EncoderLayer"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">EncoderLayer</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">"""
    Single encoder layer in a transformer encoder.

    Performs multi-head attention and position-wise feedforward operations.
    Supports layer normalization before or after these operations.

    Args:
        d_model (int): Embedding dimension size.
        ffn_hidden (int): Feedforward network hidden layer size.
        n_head (int): Number of attention heads.
        drop_prob (float): Dropout probability.
        norm_type (str): Type of layer normalization, 'pre' or 'post'.
        pe (str): Positional encoding type, 'rotary', 'relative' or 'absolute'.

    """</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> d_model<span class="token punctuation">,</span> ffn_hidden<span class="token punctuation">,</span> n_head<span class="token punctuation">,</span> drop_prob<span class="token punctuation">,</span> norm_type<span class="token punctuation">,</span> pe<span class="token operator">=</span><span class="token string">'absolute'</span><span class="token punctuation">,</span> norm_bias<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span>
                 <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
        <span class="token keyword">assert</span> norm_type <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'pre'</span><span class="token punctuation">,</span> <span class="token string">'post'</span><span class="token punctuation">,</span> <span class="token string">'rezero'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \\
            <span class="token string">"norm_type must be 'pre', 'post' or 'rezero'"</span>
        <span class="token keyword">assert</span> pe <span class="token keyword">in</span> <span class="token punctuation">(</span>
            <span class="token string">'rotary'</span><span class="token punctuation">,</span> <span class="token string">'relative'</span><span class="token punctuation">,</span> <span class="token string">'absolute'</span><span class="token punctuation">,</span> <span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"rpe must be either 'rotary' or 'relative' or 'absolute'"</span>
        <span class="token keyword">if</span> pe <span class="token operator">==</span> <span class="token string">'rotary'</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>attention <span class="token operator">=</span> MultiHeadAttention<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> n_head<span class="token operator">=</span>n_head<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> pe <span class="token operator">==</span> <span class="token string">'relative'</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>attention <span class="token operator">=</span> RPEMultiHeadAttention<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> n_head<span class="token operator">=</span>n_head<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>attention <span class="token operator">=</span> MultiHeadAttention<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> n_head<span class="token operator">=</span>n_head<span class="token punctuation">,</span> pe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dropout1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span>p<span class="token operator">=</span>drop_prob<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>ffn <span class="token operator">=</span> PositionWiseFeedForward<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> hidden<span class="token operator">=</span>ffn_hidden<span class="token punctuation">,</span> drop_prob<span class="token operator">=</span>drop_prob<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>dropout2 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Dropout<span class="token punctuation">(</span>p<span class="token operator">=</span>drop_prob<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>norm_type <span class="token operator">=</span> norm_type  <span class="token comment"># post, pre, or rezero</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>norm_type <span class="token operator">==</span> <span class="token string">'pre'</span> <span class="token keyword">or</span> self<span class="token punctuation">.</span>norm_type <span class="token operator">==</span> <span class="token string">'post'</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>norm1 <span class="token operator">=</span> LayerNorm<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> bias<span class="token operator">=</span>norm_bias<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>norm2 <span class="token operator">=</span> LayerNorm<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> bias<span class="token operator">=</span>norm_bias<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>res_weight <span class="token operator">=</span> nn<span class="token punctuation">.</span>Parameter<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>Tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requires_grad<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span> src_mask<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>norm_type <span class="token operator">==</span> <span class="token string">'post'</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>norm1<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dropout1<span class="token punctuation">(</span>self<span class="token punctuation">.</span>attention<span class="token punctuation">(</span>query<span class="token operator">=</span>x<span class="token punctuation">,</span> key<span class="token operator">=</span>x<span class="token punctuation">,</span> value<span class="token operator">=</span>x<span class="token punctuation">,</span> mask<span class="token operator">=</span>src_mask<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">)</span>
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>norm2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>dropout2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ffn<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> x<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>norm_type <span class="token operator">==</span> <span class="token string">'pre'</span><span class="token punctuation">:</span>
            x_pre_norm <span class="token operator">=</span> self<span class="token punctuation">.</span>norm1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>dropout1<span class="token punctuation">(</span>self<span class="token punctuation">.</span>attention<span class="token punctuation">(</span>query<span class="token operator">=</span>x_pre_norm<span class="token punctuation">,</span> key<span class="token operator">=</span>x_pre_norm<span class="token punctuation">,</span> value<span class="token operator">=</span>x_pre_norm<span class="token punctuation">,</span> mask<span class="token operator">=</span>src_mask<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> x
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>dropout2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ffn<span class="token punctuation">(</span>self<span class="token punctuation">.</span>norm2<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> x
            <span class="token comment"># x = self.attention(query=x_pre_norm, key=x_pre_norm, value=x_pre_norm, mask=src_mask) + x</span>
            <span class="token comment"># x = self.ffn(self.norm2(x)) + x</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>dropout1<span class="token punctuation">(</span>self<span class="token punctuation">.</span>attention<span class="token punctuation">(</span>query<span class="token operator">=</span>x<span class="token punctuation">,</span> key<span class="token operator">=</span>x<span class="token punctuation">,</span> value<span class="token operator">=</span>x<span class="token punctuation">,</span> mask<span class="token operator">=</span>src_mask<span class="token punctuation">)</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>res_weight<span class="token punctuation">)</span> <span class="token operator">+</span> x
            x <span class="token operator">=</span> self<span class="token punctuation">.</span>dropout2<span class="token punctuation">(</span>self<span class="token punctuation">.</span>ffn<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>res_weight<span class="token punctuation">)</span> <span class="token operator">+</span> x
        <span class="token keyword">return</span> x
        <span class="token comment"># 输出给encoder的x的shape（batch_size,seq_len,embed_size）</span>
</code></pre></div>`,r:{minutes:1.03,words:310},t:"Encoder层介绍",y:"a"}}],["/node/markdown/markdownit.html",{loader:()=>p(()=>import("./markdownit.html-StZHdWIO.js"),__vite__mapDeps([280,1])),meta:{d:1725292091e3,c:"markdown",e:`<p>详情请点击<a href="https://github.com/markdown-it/markdown-it?tab=readme-ov-file#usage-examples" target="_blank" rel="noopener noreferrer">markdownit扩展用法</a></p>
<h2>footnote</h2>
<p>Here is a footnote reference,<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"> and another.<sup class="footnote-ref"></sup></a><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></p>`,r:{minutes:.21,words:63},t:"markdownit扩展语法",y:"a"}}],["/software-project/project-management/intro.html",{loader:()=>p(()=>import("./intro.html-DyK0u0PU.js"),__vite__mapDeps([281,1])),meta:{d:1725292091e3,e:`<p>这是我大三下学期学习的课程，要写各种软件项目计划书。</p>
`,r:{minutes:.11,words:33},t:"软件项目管理介绍",y:"a"}}],["/software-project/project-management/project-estimate.html",{loader:()=>p(()=>import("./project-estimate.html-CIqoQVL7.js"),__vite__mapDeps([282,1])),meta:{d:1725292091e3,e:`<h2>基本内容</h2>
<p>在项目实施之前，在计划过程中完成</p>
<ul>
<li>规模估算</li>
<li>工作量估算</li>
<li>进度估算</li>
<li>风险估算</li>
<li>其他估算</li>
</ul>
<h2>基本估算方法</h2>
<h2>软件规模估算</h2>
<h3>德尔菲法</h3>
<figure><figcaption></figcaption></figure>
<h3>代码行估算法</h3>
<p>LOC指所有可执行的源代码行数，包括控制语句、数据定义、数据类型声明、等价声明、格式声明等</p>
<ul>
<li>SLOC (single line of code)</li>
<li>KLOC (thousand lines of code)</li>
<li>LLOC (logical line of code)</li>
<li>PLOC (physical line of code)</li>
<li>NCLOC (non-commented line of code)</li>
<li>DSI (delivered source instruction)</li>
</ul>`,r:{minutes:1.45,words:436},t:"项目估算",y:"a"}}],["/software-project/project-management/project-process-and-cost-management.html",{loader:()=>p(()=>import("./project-process-and-cost-management.html-D1Zv1D6k.js"),__vite__mapDeps([283,1])),meta:{d:1725292091e3,e:`<h2>项目活动</h2>
<p>项目活动就是把项目的工作量分解为易管理的具体任务，而每一项任务都要有明确的时间和资源的限制，它是项目进度表编制的基础<br>
</p>
<h2>关键路径分析</h2>
<h3>关键路径</h3>
<p>在项目网络中有一条路线的时间最长。这条路线决定着项目的工期时间，称之为关键路径。</p>
<p>位于关键路径上的活动就是关键项目活动。</p>
<h3>活动缓冲期</h3>
<ol>
<li>任何关键活动的延迟都会导致项目预估工期的延期，所以关键活动的缓冲期都是0。(下图A,B,E,G,H是关键活动，他们缓冲期为0）</li>
<li>非关键活动缓冲期计算：找出下一条最长路径temp，$$\\text{活动缓冲期}=\\text{关键路径时间} - \\text{路径temp时间}$$<br>
</li>
</ol>`,r:{minutes:1.28,words:385},t:"项目进度和成本管理",y:"a"}}],["/system-design/basis/RESTfulAPI.html",{loader:()=>p(()=>import("./RESTfulAPI.html-B3yuZgD8.js"),__vite__mapDeps([284,1])),meta:{d:1725292091e3,c:"代码质量",e:`<figure><img src="https://oss.javaguide.cn/system-design/basis/2021050713553862.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<p>这篇文章简单聊聊后端程序员必备的 RESTful API 相关的知识。</p>
<p>开始正式介绍 RESTful API 之前，我们需要首先搞清：<strong>API 到底是什么？</strong></p>
<h2>何为 API？</h2>
<figure><img src="https://oss.javaguide.cn/system-design/basis/20210507153833945.png" alt="" tabindex="0"><figcaption></figcaption></figure>`,r:{minutes:8.28,words:2484},t:"RestFul API 简明教程",y:"a"}}],["/system-design/basis/naming.html",{loader:()=>p(()=>import("./naming.html-De3oR2Aq.js"),__vite__mapDeps([285,1])),meta:{d:1725292091e3,c:"代码质量",e:`<p>我还记得我刚工作那一段时间， 项目 Code Review 的时候，我经常因为变量命名不规范而被 “diss”!</p>
<p>究其原因还是自己那会经验不足，而且，大学那会写项目的时候不太注意这些问题，想着只要把功能实现出来就行了。</p>
<p>但是，工作中就不一样，为了代码的可读性、可维护性，项目组对于代码质量的要求还是很高的！</p>
<p>前段时间，项目组新来的一个实习生也经常在 Code Review 因为变量命名不规范而被 “diss”，这让我想到自己刚到公司写代码那会的日子。</p>
<p>于是，我就简单写了这篇关于变量命名规范的文章，希望能对同样有此困扰的小伙伴提供一些帮助。</p>`,r:{minutes:7.47,words:2242},t:"代码命名指南",y:"a"}}],["/system-design/basis/refactoring.html",{loader:()=>p(()=>import("./refactoring.html-1wfaXtvE.js"),__vite__mapDeps([286,1])),meta:{d:1725292091e3,c:"代码质量",e:`<p>前段时间重读了<a href="https://book.douban.com/subject/30468597/" target="_blank" rel="noopener noreferrer">《重构：改善代码既有设计》</a>，收货颇多。于是，简单写了一篇文章来聊聊我对重构的看法。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/image-20220311155746549.png" alt="" tabindex="0"><figcaption></figcaption></figure>
<h2>何谓重构？</h2>`,r:{minutes:8.5,words:2551},t:"代码重构指南",y:"a"}}],["/system-design/basis/software-engineering.html",{loader:()=>p(()=>import("./software-engineering.html-BEzDnkt-.js"),__vite__mapDeps([287,1])),meta:{d:1725292091e3,c:"系统设计",e:`<p>大部分软件开发从业者，都会忽略软件开发中的一些最基础、最底层的一些概念。但是，这些软件开发的概念对于软件开发来说非常重要，就像是软件开发的基石一样。这也是我写这篇文章的原因。</p>
<h2>何为软件工程？</h2>
<p>1968 年 NATO（北大西洋公约组织）提出了<strong>软件危机</strong>（<strong>Software crisis</strong>）一词。同年，为了解决软件危机问题，“<strong>软件工程</strong>”的概念诞生了。一门叫做软件工程的学科也就应运而生。</p>
<p>随着时间的推移，软件工程这门学科也经历了一轮又一轮的完善，其中的一些核心内容比如软件开发模型越来越丰富实用！</p>`,r:{minutes:6.31,words:1894},t:"软件工程简明教程",y:"a"}}],["/system-design/basis/unit-test.html",{loader:()=>p(()=>import("./unit-test.html-CUuP0h-a.js"),__vite__mapDeps([288,1])),meta:{d:1725292091e3,c:"代码质量",e:`<blockquote>
<p>本文重构完善自<a href="https://www.jianshu.com/p/fa41fb80d2b8" target="_blank" rel="noopener noreferrer">谈谈为什么写单元测试 - 键盘男 - 2016</a>这篇文章。</p>
</blockquote>
<h2>何谓单元测试？</h2>
<p>维基百科是这样介绍单元测试的：</p>
<blockquote>
<p>在计算机编程中，单元测试（Unit Testing）是针对程序模块（软件设计的最小单位）进行的正确性检验测试工作。</p>
<p>程序单元是应用的 <strong>最小可测试部件</strong> 。在过程化编程中，一个单元就是单个程序、函数、过程等；对于面向对象编程，最小单元就是方法，包括基类（超类）、抽象类、或者派生类（子类）中的方法。</p>
</blockquote>`,r:{minutes:8.56,words:2569},t:"单元测试到底是什么？应该怎么做？",y:"a"}}],["/system-design/designMode/reactorDesign.html",{loader:()=>p(()=>import("./reactorDesign.html-DVbSnozK.js"),__vite__mapDeps([289,1])),meta:{d:1725292091e3,c:"系统设计",e:`<figure><img src="https://pic3.zhimg.com/80/v2-30401fced0ce7a24ac6299f785bc16fa_1440w.webp" alt="v2-30401fced0ce7a24ac6299f785bc16fa_1440w" tabindex="0"><figcaption>v2-30401fced0ce7a24ac6299f785bc16fa_1440w</figcaption></figure>
<h2>Reactor模式</h2>
<p>反应器模式或应答者模式，是基于事件驱动的设计模式，拥有一个或多个并发输入源，有一个服务处理器和多个请求处理器，服务处理器会同步的将输入的请求事件以多路复用的方式分发给相应的请求处理器。</p>`,r:{minutes:1,words:300},t:"Reactor模式",y:"a"}}],["/system-design/framework/netty.html",{loader:()=>p(()=>import("./netty.html-yZU4nOtd.js"),__vite__mapDeps([290,1])),meta:{d:1725292091e3,c:"框架",e:'<p><strong>Netty</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>中。</p>',r:{minutes:.27,words:81},t:"Netty常见面试题总结(付费)",i:"network",y:"a"}}],["/system-design/security/advantages-and-disadvantages-of-jwt.html",{loader:()=>p(()=>import("./advantages-and-disadvantages-of-jwt.html-eiB8BtiX.js"),__vite__mapDeps([291,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<p>在 <a href="https://javaguide.cn/system-design/security/jwt-intro.html" target="_blank" rel="noopener noreferrer">JWT 基本概念详解</a>这篇文章中，我介绍了：</p>
<ul>
<li>什么是 JWT?</li>
<li>JWT 由哪些部分组成？</li>
<li>如何基于 JWT 进行身份验证？</li>
<li>JWT 如何防止 Token 被篡改？</li>
<li>如何加强 JWT 的安全性？</li>
</ul>
<p>这篇文章，我们一起探讨一下 JWT 身份认证的优缺点以及常见问题的解决办法。</p>`,r:{minutes:11.06,words:3319},t:"JWT 身份认证优缺点分析",y:"a"}}],["/system-design/security/basis-of-authority-certification.html",{loader:()=>p(()=>import("./basis-of-authority-certification.html-D75WR13v.js"),__vite__mapDeps([292,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<h2>认证 (Authentication) 和授权 (Authorization)的区别是什么？</h2>
<p>这是一个绝大多数人都会混淆的问题。首先先从读音上来认识这两个名词，很多人都会把它俩的读音搞混，所以我建议你先先去查一查这两个单词到底该怎么读，他们的具体含义是什么。</p>
<p>说简单点就是：</p>
<ul>
<li><strong>认证 (Authentication)：</strong> 你是谁。</li>
<li><strong>授权 (Authorization)：</strong> 你有权限干什么。</li>
</ul>
<p>稍微正式点（啰嗦点）的说法就是：</p>`,r:{minutes:12.74,words:3821},t:"认证授权基础概念详解",y:"a"}}],["/system-design/security/data-desensitization.html",{loader:()=>p(()=>import("./data-desensitization.html-DqJtW3ec.js"),__vite__mapDeps([293,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<blockquote>
<p>本文转载完善自<a href="https://mp.weixin.qq.com/s/1qFWczesU50ndPPLtABHFg" target="_blank" rel="noopener noreferrer">Hutool：一行代码搞定数据脱敏 - 京东云开发者</a>。</p>
</blockquote>`,r:{minutes:11.44,words:3431},t:"数据脱敏方案总结",y:"a"}}],["/system-design/security/design-of-authority-system.html",{loader:()=>p(()=>import("./design-of-authority-system.html-bXJqDtJd.js"),__vite__mapDeps([294,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<blockquote>
<p>作者：转转技术团队</p>
<p>原文：<a href="https://mp.weixin.qq.com/s/ONMuELjdHYa0yQceTj01Iw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/ONMuELjdHYa0yQceTj01Iw</a></p>
</blockquote>`,r:{minutes:13.63,words:4089},t:"权限系统设计详解",y:"a"}}],["/system-design/security/encryption-algorithms.html",{loader:()=>p(()=>import("./encryption-algorithms.html-BzEdK7_c.js"),__vite__mapDeps([295,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<p>加密算法是一种用数学方法对数据进行变换的技术，目的是保护数据的安全，防止被未经授权的人读取或修改。加密算法可以分为三大类：对称加密算法、非对称加密算法和哈希算法（也叫摘要算法）。</p>
<p>日常开发中常见的需要用到加密算法的场景：</p>
<ol>
<li>保存在数据库中的密码需要加盐之后使用哈希算法（比如 BCrypt）进行加密。</li>
<li>保存在数据库中的银行卡号、身份号这类敏感数据需要使用对称加密算法（比如 AES）保存。</li>
<li>网络传输的敏感数据比如银行卡号、身份号需要用 HTTPS + 非对称加密算法（如 RSA）来保证传输数据的安全性。</li>
<li>……</li>
</ol>`,r:{minutes:17.59,words:5278},t:"常见加密算法总结",y:"a"}}],["/system-design/security/jwt-intro.html",{loader:()=>p(()=>import("./jwt-intro.html-C_Ku4Lug.js"),__vite__mapDeps([296,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<figure><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank"><img src="https://oss.javaguide.cn/xingqiu/xingqiu.png" alt="JavaGuide官方知识星球" tabindex="0"></a><figcaption>JavaGuide官方知识星球</figcaption></figure>
<h2>什么是 JWT?</h2>
<p>JWT （JSON Web Token） 是目前最流行的跨域认证解决方案，是一种基于 Token 的认证授权机制。 从 JWT 的全称可以看出，JWT 本身也是 Token，一种规范化之后的 JSON 结构的 Token。</p>`,r:{minutes:5.51,words:1652},t:"JWT 基础概念详解",y:"a"}}],["/system-design/security/sentive-words-filter.html",{loader:()=>p(()=>import("./sentive-words-filter.html-DeLT8-bB.js"),__vite__mapDeps([297,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<p>系统需要对用户输入的文本进行敏感词过滤如色情、政治、暴力相关的词汇。</p>
<p>敏感词过滤用的使用比较多的 <strong>Trie 树算法</strong> 和 <strong>DFA 算法</strong>。</p>
<h2>算法实现</h2>
<h3>Trie 树</h3>
<p><strong>Trie 树</strong> 也称为字典树、单词查找树，哈希树的一种变种，通常被用于字符串匹配，用来解决在一组字符串集合中快速查找某个字符串的问题。像浏览器搜索的关键词提示就可以基于 Trie 树来做的。</p>
<figure><img src="https://oss.javaguide.cn/github/javaguide/system-design/security/brower-trie.png" alt="浏览器 Trie 树效果展示" tabindex="0"><figcaption>浏览器 Trie 树效果展示</figcaption></figure>`,r:{minutes:3.7,words:1109},t:"敏感词过滤方案总结",y:"a"}}],["/system-design/security/sso-intro.html",{loader:()=>p(()=>import("./sso-intro.html-DRNuu_v5.js"),__vite__mapDeps([298,1])),meta:{d:1725292091e3,c:"系统设计",g:["安全"],e:`<blockquote>
<p>本文授权转载自：<a href="https://ken.io/note/sso-design-implement" target="_blank" rel="noopener noreferrer">https://ken.io/note/sso-design-implement</a> 作者：<a href="http://ken.io" target="_blank" rel="noopener noreferrer">ken.io</a></p>
</blockquote>
<h2>SSO 介绍</h2>
<h3>什么是 SSO？</h3>
<p>SSO 英文全称 Single Sign On，单点登录。SSO 是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。</p>`,r:{minutes:4.52,words:1355},t:"SSO 单点登录详解",y:"a"}}],["/tools/docker/docker-in-action.html",{loader:()=>p(()=>import("./docker-in-action.html-BFpZ-8Ud.js"),__vite__mapDeps([299,1])),meta:{d:1725292091e3,c:"开发工具",g:["Docker"],e:`<h2>Docker 介绍</h2>
<p>开始之前，还是简单介绍一下 Docker，更多 Docker 概念介绍可以看前一篇文章<a href="/learning/tools/docker/docker-intro.html" target="_blank">Docker 核心概念总结</a>。</p>
<h3>什么是 Docker？</h3>
<p>说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。</p>
<ul>
<li>Docker 是世界领先的软件容器平台，基于 <strong>Go 语言</strong> 进行开发实现。</li>
<li>Docker 能够很好的自动执行重复性任务，例如搭建和配置开发环境，从而解放开发人员。</li>
<li>用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。</li>
<li>Docker 可以<strong>对进程进行封装隔离，属于操作系统层面的虚拟化技术。</strong> 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。</li>
</ul>`,r:{minutes:17.62,words:5287},t:"Docker实战",y:"a"}}],["/tools/docker/docker-intro.html",{loader:()=>p(()=>import("./docker-intro.html-BODsufqK.js"),__vite__mapDeps([300,1])),meta:{d:1725292091e3,c:"开发工具",g:["Docker"],e:`<p><strong>本文只是对 Docker 的概念做了较为详细的介绍，并不涉及一些像 Docker 环境的安装以及 Docker 的一些常见操作和命令。</strong></p>
<h2>一 认识容器</h2>
<p><strong>Docker 是世界领先的软件容器平台</strong>，所以想要搞懂 Docker 的概念我们必须先从容器开始说起。</p>
<h3>1.1 什么是容器?</h3>
<h4>先来看看容器较为官方的解释</h4>
<p><strong>一句话概括容器：容器就是将软件打包成标准化单元，以用于开发、交付和部署。</strong></p>
<ul>
<li><strong>容器镜像是轻量的、可执行的独立软件包</strong> ，包含软件运行所需的所有内容：代码、运行时环境、系统工具、系统库和设置。</li>
<li><strong>容器化软件适用于基于 Linux 和 Windows 的应用，在任何环境中都能够始终如一地运行。</strong></li>
<li><strong>容器赋予了软件独立性</strong>，使其免受外在环境差异（例如，开发和预演环境的差异）的影响，从而有助于减少团队间在相同基础设施上运行不同软件时的冲突。</li>
</ul>`,r:{minutes:17.98,words:5395},t:"Docker核心概念总结",y:"a"}}],["/tools/genkins/basis.html",{loader:()=>p(()=>import("./basis.html-Cg_9nAIb.js"),__vite__mapDeps([301,1])),meta:{d:1725292091e3,c:"genkins",e:`<h2>概念</h2>
<p>Jenkins是一款开源 CI&amp;CD 软件，用于自动化各种任务，包括构建、测试和部署软件。</p>
<p>Jenkins 支持各种运行方式，可通过系统包、Docker 或者通过一个独立的 Java 程序。</p>
<h2>安装</h2>
<h3>apt-get安装</h3>
<h3>docker安装</h3>
<h3>安装细节</h3>
<ul>
<li>
<p>jdk版本需为jdk17</p>
<blockquote>
<p>如果不是所需版本，在/usr/lib/jvm中找到相应的版本，将原有/usr/bin/java文件删除，并且通过以下指令建立新的符号链接：</p>
</blockquote>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/lib/jvm/java-7/bin/java /usr/bin/java
</code></pre></div><blockquote>
<p>与此同时也可以删除原有的jdk：</p>
</blockquote>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /usr/lib/jvm/java-9
</code></pre></div></li>
<li>
<p>初始运行端口为8080</p>
<blockquote>
<p>更改端口需到/etc/default/jenkins/jenkins.xml修改<strong>HTTP_PORT=8080</strong></p>
</blockquote>
</li>
</ul>`,r:{minutes:1.31,words:392},t:"genkins基础知识",y:"a"}}],["/tools/genkins/practice.html",{loader:()=>p(()=>import("./practice.html-Bai1YEec.js"),__vite__mapDeps([302,1])),meta:{d:1725292091e3,c:"开发工具",e:`<h2>配置Github源代码</h2>
<ul>
<li>
<p>配置SSH凭据</p>
<ul>
<li>生成SSH密钥</li>
</ul>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-C</span> <span class="token string">"your_email@example.com"</span>
</code></pre></div><ul>
<li>
<p>将 SSH 公钥添加到 GitHub</p>
<p>~/.ssh/id_rsa.pub 文件中的内容复制并粘贴到 GitHub 的 "Key" 文本框中，并为 SSH 密钥添加一个描述，然后点击 "Add SSH key"</p>
</li>
<li>
<p>在 Jenkins 中配置 SSH 凭据</p>
</li>
</ul>
</li>
<li>
<p>SSH密钥验证<br>
下一步把github的host-key保存到linux服务器上</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ssh-keyscan github.com <span class="token operator">&gt;&gt;</span> ~/.ssh/known_hosts
</code></pre></div><ul>
<li>host-key:github.com的公钥，在之后使用ssh连接github时搜索网站上的host key,判断ssh访问的主机是否被篡改过
<blockquote>
<p>那么主机B当前使用的host key保存在哪呢？在/etc/ssh/ssh_host*文件中，这些文件是服务端(此处即主机B)的sshd服务程序启动时重建的。以rsa算法为例，则保存在/etc/ssh/ssh_host_rsa_key和/etc/ssh/ssh_host_rsa_key.pub中，其中公钥文件/etc/ssh/ssh_host_rsa_key.pub中保存的就是host key。</p>
</blockquote>
</li>
</ul>
</li>
</ul>`,r:{minutes:1.99,words:598},t:"genkins实践",y:"a"}}],["/tools/git/git-intro.html",{loader:()=>p(()=>import("./git-intro.html-D8rxStd2.js"),__vite__mapDeps([303,1])),meta:{d:1725292091e3,c:"开发工具",g:["Git"],e:`<h2>版本控制</h2>
<h3>什么是版本控制</h3>
<p>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。 除了项目源代码，你可以对任何类型的文件进行版本控制。</p>
<h3>为什么要版本控制</h3>
<p>有了它你就可以将某个文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态，你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等。</p>
<h3>本地版本控制系统</h3>
<p>许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。 这么做唯一的好处就是简单，但是特别容易犯错。 有时候会混淆所在的工作目录，一不小心会写错文件或者覆盖意想外的文件。</p>`,r:{minutes:11.55,words:3465},t:"Git核心概念总结",y:"a"}}],["/tools/git/github-tips.html",{loader:()=>p(()=>import("./github-tips.html-rd2s6MPF.js"),__vite__mapDeps([304,1])),meta:{d:1725292091e3,c:"开发工具",g:["Git"],e:`<p>我使用 Github 已经有 6 年多了，今天毫无保留地把自己觉得比较有用的 Github 小技巧送给关注 JavaGuide 的各位小伙伴。</p>
<h2>一键生成 Github 简历 &amp; Github 年报</h2>
<p>通过 <a href="https://resume.github.io/" target="_blank" rel="noopener noreferrer">https://resume.github.io/</a> 这个网站你可以一键生成一个在线的 Github 简历。</p>
<p>当时我参加的校招的时候，个人信息那里就放了一个在线的 Github 简历。我觉得这样会让面试官感觉你是一个内行，会提高一些印象分。</p>`,r:{minutes:6.28,words:1884},t:"Github实用小技巧总结",y:"a"}}],["/tools/gradle/gradle-core-concepts.html",{loader:()=>p(()=>import("./gradle-core-concepts.html-CXEo58Z5.js"),__vite__mapDeps([305,1])),meta:{d:1725292091e3,c:"开发工具",e:`<blockquote>
<p>这部分内容主要根据 Gradle 官方文档整理，做了对应的删减，主要保留比较重要的部分，不涉及实战，主要是一些重要概念的介绍。</p>
</blockquote>
<p>Gradle 这部分内容属于可选内容，可以根据自身需求决定是否学习，目前国内还是使用 Maven 普遍一些。</p>
<h2>Gradle 介绍</h2>
<p>Gradle 官方文档是这样介绍的 Gradle 的：</p>
<blockquote>
<p>Gradle is an open-source <a href="https://en.wikipedia.org/wiki/Build_automation" target="_blank" rel="noopener noreferrer">build automation</a> tool flexible enough to build almost any type of software. Gradle makes few assumptions about what you’re trying to build or how to build it. This makes Gradle particularly flexible.</p>
<p>Gradle 是一个开源的构建自动化工具，它足够灵活，可以构建几乎任何类型的软件。Gradle 对你要构建什么或者如何构建它做了很少的假设。这使得 Gradle 特别灵活。</p>
</blockquote>`,r:{minutes:10.47,words:3142},t:"Gradle核心概念总结",y:"a"}}],["/tools/maven/maven-best-practices.html",{loader:()=>p(()=>import("./maven-best-practices.html-BK9MuyD1.js"),__vite__mapDeps([306,1])),meta:{d:1725292091e3,c:"开发工具",e:`<blockquote>
<p>本文由 JavaGuide 翻译并完善，原文地址：<a href="https://medium.com/@AlexanderObregon/maven-best-practices-tips-and-tricks-for-java-developers-438eca03f72b" target="_blank" rel="noopener noreferrer">https://medium.com/@AlexanderObregon/maven-best-practices-tips-and-tricks-for-java-developers-438eca03f72b</a> 。</p>
</blockquote>`,r:{minutes:5.62,words:1687},t:"Maven最佳实践",y:"a"}}],["/tools/maven/maven-core-concepts.html",{loader:()=>p(()=>import("./maven-core-concepts.html-DaWXfBXY.js"),__vite__mapDeps([307,1])),meta:{d:1725292091e3,c:"开发工具",e:`<blockquote>
<p>这部分内容主要根据 Maven 官方文档整理，做了对应的删减，主要保留比较重要的部分，不涉及实战，主要是一些重要概念的介绍。</p>
</blockquote>
<h2>Maven 介绍</h2>
<p><a href="https://github.com/apache/maven" target="_blank" rel="noopener noreferrer">Maven</a> 官方文档是这样介绍的 Maven 的：</p>
<blockquote>
<p>Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information.</p>
<p>Apache Maven 的本质是一个软件项目管理和理解工具。基于项目对象模型 (Project Object Model，POM) 的概念，Maven 可以从一条中心信息管理项目的构建、报告和文档。</p>
</blockquote>`,r:{minutes:16.64,words:4993},t:"Maven核心概念总结",y:"a"}}],["/web/css/box-model.html",{loader:()=>p(()=>import("./box-model.html-DDEJEGjq.js"),__vite__mapDeps([308,1])),meta:{d:1725292091e3,c:"web",e:`<h2>区块盒子和行内盒子</h2>
<p>在 CSS 中，我们有几种类型的盒子，一般分为<strong>区块盒子</strong>（block boxes）和<strong>行内盒子</strong>（inline boxes）。类型指的是盒子在页面流中的行为方式以及与页面上其他盒子的关系。</p>
<p>盒子有<strong>内部显示</strong>（inner display type）和<strong>外部显示</strong>（outer display type）两种类型。</p>
<h2>外部显示类型</h2>
<ul>
<li>
<p>一个拥有 <strong>block</strong> 外部显示类型的盒子会表现出以下行为：</p>
<ul>
<li>display:block</li>
<li>盒子会产生换行。</li>
<li>width 和 height 属性可以发挥作用。</li>
<li>内边距、外边距和边框会将其他元素从当前盒子周围“推开”。</li>
<li>如果未指定 width，方框将沿行向扩展，以填充其容器中的可用空间。在大多数情况下，盒子会变得与其容器一样宽，占据可用空间的 100%。</li>
</ul>
</li>
<li>
<p>一个拥有 <strong>inline</strong> 外部显示类型的盒子会表现出以下行为：</p>
<ul>
<li>display: inline</li>
<li>盒子不会产生换行。</li>
<li>width 和 height 属性将不起作用。</li>
<li>垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子推开。</li>
<li>水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子推开。</li>
</ul>
</li>
</ul>`,r:{minutes:2.36,words:707},t:"盒模型",y:"a"}}],["/web/javascript/javascript-basis.html",{loader:()=>p(()=>import("./javascript-basis.html-3uE51Jhg.js"),__vite__mapDeps([309,1])),meta:{d:1725292091e3,c:"web",e:`<h2>变量类型</h2>
<ul>
<li>
<p>Number</p>
</li>
<li>
<p>String</p>
</li>
<li>
<p>Boolean</p>
</li>
<li>
<p>Array</p>
<ul>
<li>
<p>索引访问数组（可以多维）</p>
</li>
<li>
<p>length属性访问长度</p>
</li>
<li>
<p>和字符串的转换</p>
<div class="language-javascript" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> myData <span class="token operator">=</span> <span class="token string">"Manchester,London,Liverpool,Birmingham,Leeds,Carlisle"</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> myArray <span class="token operator">=</span> myData<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> myNewString <span class="token operator">=</span> myArray<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> dogNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Rocket"</span><span class="token punctuation">,</span> <span class="token string">"Flash"</span><span class="token punctuation">,</span> <span class="token string">"Bella"</span><span class="token punctuation">,</span> <span class="token string">"Slugger"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
dogNames<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Rocket,Flash,Bella,Slugger</span>
</code></pre></div></li>
<li>
<p>增加或者删除数组元素</p>
<ul>
<li>数组末尾添加或删除一个项目，我们可以使用 push() 和 pop()</li>
<li>数组开始增加或删除项目，unshift() 和 shift()</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Object</p>
</li>
</ul>`,r:{minutes:2.66,words:799},t:"JavaScript",y:"a"}}],["/web/javascript/javascript-extension.html",{loader:()=>p(()=>import("./javascript-extension.html-DS08C7C0.js"),__vite__mapDeps([310,1])),meta:{d:1725292091e3,c:"web",g:["javascript"],e:`<h2>Chunk Error</h2>
<h3>Basis knowledge</h3>
<p>The way React, Vue, Angular and similar frameworks work is by <strong>downloading JavaScript files and using them to render websites</strong> on the browser. Whenever a project is built, two types of files are created:</p>
<ul>
<li>Main entry file - The file to which the script tag in index.html points to</li>
<li>Other helper files - The files which are imported by the main entry file whenever required.</li>
</ul>`,r:{minutes:3.89,words:1166},t:"JavaScript扩展",y:"a"}}],["/cs-basics/algorithms/acwing/acwing.html",{loader:()=>p(()=>import("./acwing.html-_Z-tpzZP.js"),__vite__mapDeps([311,1])),meta:{d:1725292091e3,e:`<p><a href="https://www.acwing.com/problem/content/description/317/" target="_blank" rel="noopener noreferrer">315.旅行</a></p>
<div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
len1 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
len2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
forward <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> b<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
            forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>
            <span class="token keyword">elif</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>
res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">def</span> <span class="token function">search</span><span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> forward<span class="token punctuation">,</span>res
    <span class="token keyword">if</span> start1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> start2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        newtemp<span class="token operator">=</span><span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newtemp<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">if</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        temp<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
        temp<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
        search<span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>


search<span class="token punctuation">(</span>len1<span class="token punctuation">,</span> len2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
res<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
res<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
res<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:.75,words:225},t:"acwing题目",y:"a"}}],["/cs-basics/algorithms/model/dp.html",{loader:()=>p(()=>import("./dp.html-DHFvMV66.js"),__vite__mapDeps([312,1])),meta:{d:1725292091e3,e:`<ol>
<li><a href="https://www.acwing.com/problem/content/description/317/" target="_blank" rel="noopener noreferrer">315.旅行</a>
<blockquote>
<p>LCS问题+路径输出</p>
</blockquote>
</li>
</ol>
<div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
len1 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
len2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
forward <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> b<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
            forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span>
            <span class="token keyword">elif</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
                forward<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span>
res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">def</span> <span class="token function">search</span><span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> forward<span class="token punctuation">,</span>res
    <span class="token keyword">if</span> start1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">or</span> start2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        newtemp<span class="token operator">=</span><span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newtemp<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">if</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        temp<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">[</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
        temp<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> forward<span class="token punctuation">[</span>start1<span class="token punctuation">]</span><span class="token punctuation">[</span>start2<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>
        search<span class="token punctuation">(</span>start1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> start2<span class="token punctuation">,</span> temp<span class="token punctuation">)</span>
        search<span class="token punctuation">(</span>start1<span class="token punctuation">,</span> start2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span>


search<span class="token punctuation">(</span>len1<span class="token punctuation">,</span> len2<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
res<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
res<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
res<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:3.17,words:950},t:"动态规划",y:"a"}}],["/cs-basics/algorithms/model/graph.html",{loader:()=>p(()=>import("./graph.html-gMrzkeNK.js"),__vite__mapDeps([313,1])),meta:{d:1725292091e3,c:"cs-basis",e:`<h2>二分图最大匹配</h2>
<h3>匈牙利算法</h3>
<p>将问题看成从N个男生寻找M个女生的对象</p>
<ol>
<li>遍历男生，首先遍历这一轮的男生a的潜在发展对象，</li>
<li>如果潜在女朋友有男朋友b，则劝说这个男朋友b能否换一个</li>
<li>遍历这个男朋友b的潜在女朋友，看是否能成功找一个空着的
<ul>
<li>如果可以，男生b则换新的女朋友</li>
<li>如果不行，男生a只能接着遍历之后的潜在女朋友</li>
</ul>
</li>
<li>遍历完所有都没有的话，就单身</li>
</ol>
<div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code>n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
edges <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>
    s<span class="token punctuation">,</span> t <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    s<span class="token operator">-=</span><span class="token number">1</span>
    t<span class="token operator">-=</span><span class="token number">1</span>
    <span class="token keyword">if</span> s <span class="token keyword">not</span> <span class="token keyword">in</span> edges<span class="token punctuation">:</span>
        edges<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>t<span class="token punctuation">]</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        edges<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
relation <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> m
visited <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> n
time <span class="token operator">=</span> <span class="token number">0</span>
res <span class="token operator">=</span> <span class="token number">0</span>


<span class="token keyword">def</span> <span class="token function">hungry</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> visited<span class="token punctuation">,</span> time<span class="token punctuation">,</span> relation
    <span class="token keyword">if</span> visited<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">==</span> time<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    visited<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> time
    <span class="token keyword">for</span> edge <span class="token keyword">in</span> edges<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> relation<span class="token punctuation">[</span>edge<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> hungry<span class="token punctuation">(</span>relation<span class="token punctuation">[</span>edge<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            relation<span class="token punctuation">[</span>edge<span class="token punctuation">]</span> <span class="token operator">=</span> s
            <span class="token keyword">return</span> <span class="token boolean">True</span>

    <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    time <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> edges<span class="token punctuation">:</span>
        <span class="token keyword">continue</span>
    <span class="token keyword">if</span> hungry<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>
        res <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:2.21,words:664},t:"图论",y:"a"}}],["/cs-basics/algorithms/model/greedy.html",{loader:()=>p(()=>import("./greedy.html-PdFXrxq1.js"),__vite__mapDeps([314,1])),meta:{d:1725292091e3,e:`<ol>
<li>区间覆盖</li>
</ol>
<p>给定N个闭区间以及一个线段区间 ，请你选择尽量少的区间，将指定线段区间完全覆盖</p>
<blockquote>
<ul>
<li>将闭区间以左端点大小排序</li>
<li>每一次循环筛选左端点小于start的区间，获取最大的右端点，判断是否大于线段区间右端点
<ul>
<li>若大于，则结束</li>
<li>若小于，令，继续循环</li>
</ul>
</li>
</ul>
</blockquote>
<p>2.<a href="https://www.lanqiao.cn/problems/2216/learning/" target="_blank" rel="noopener noreferrer">图书借阅</a></p>`,r:{minutes:.94,words:281},t:"贪心",y:"a"}}],["/cs-basics/algorithms/model/math.html",{loader:()=>p(()=>import("./math.html-CuZ0IiN_.js"),__vite__mapDeps([315,1])),meta:{d:1725292091e3,c:"cs-basis",e:`<h2>约数个数和约数之和</h2>
<p>一个数质因子分解：</p>
<p>约数个数：</p>
<p>约数之和：</p>
<div class="language-python" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
primes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">getPrimes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> primes
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">while</span> num <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> primes<span class="token punctuation">:</span>
                    primes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    primes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>
                num <span class="token operator">=</span> num <span class="token operator">//</span> i
    <span class="token keyword">if</span> num <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
        primes<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>


<span class="token keyword">def</span> <span class="token function">p_sum</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>
    res <span class="token operator">=</span> <span class="token number">0</span>
    temp <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        res <span class="token operator">+=</span> temp
        temp <span class="token operator">*=</span> p
    <span class="token keyword">return</span> res


getPrimes<span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">for</span> prime <span class="token keyword">in</span> primes<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    res <span class="token operator">*=</span> p_sum<span class="token punctuation">(</span>prime<span class="token punctuation">,</span> primes<span class="token punctuation">[</span>prime<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre></div>`,r:{minutes:3,words:900},t:"数论",y:"a"}}],["/cs-basics/network/authentication/credential.html",{loader:()=>p(()=>import("./credential.html-BeMU6hcz.js"),__vite__mapDeps([316,1])),meta:{d:1725292091e3,c:"network",g:["credential"],e:`<h2>What is Credential</h2>
<p>在Web开发中，凭证（Credential）是指用于验证用户身份的信息。这通常包括用户名和密码，但也可以是其他形式的身份验证数据，如OAuth令牌或公钥。</p>
<ol>
<li>
<p>凭证（Credential）：</p>
<ul>
<li>用于用户身份验证的基本信息。</li>
<li>通常在用户登录时由用户输入（如用户名和密码）。</li>
<li>可以通过Credential Management API进行存储和管理，以便简化后续的登录流程。</li>
</ul>
</li>
<li>
<p>会话（Session）：</p>
<ul>
<li>是服务器端用于跟踪用户状态的机制。</li>
<li>当用户成功登录后，服务器会创建一个会话，并分配一个唯一的会话ID给用户。</li>
<li>这个会话ID通常存储在服务器的内存或数据库中。</li>
<li>会话在用户关闭浏览器或会话超时后会失效。</li>
</ul>
</li>
<li>
<p>Cookie：</p>
<ul>
<li>是存储在用户浏览器中的小型数据文件。</li>
<li>可以用来持久化会话ID，从而在用户关闭浏览器后仍然可以保持登录状态（通过持久化cookie）。</li>
<li>也可以存储一些不敏感的数据，如用户偏好设置。</li>
<li>HTTP请求时，浏览器会自动将相关的Cookie发送到服务器，以维持会话状态。</li>
</ul>
</li>
</ol>`,r:{minutes:2.39,words:718},t:"网页凭证",y:"a"}}],["/cs-basics/network/authentication/federated-identity.html",{loader:()=>p(()=>import("./federated-identity.html-DHqTWJTz.js"),__vite__mapDeps([317,1])),meta:{d:1725292091e3,c:"network",g:["authentication"],e:`<figure><figcaption>Federated Identity process</figcaption></figure>
<p>有很多方法能够实现第三方登录，最常用的是OAuth协议，这个协议旨在支持分布式的身份认证和对于calling system的认证token的反馈</p>
<p>OAuth只包括了OAuth authentication tokens，没有包含用户信息，所以只能用于身份的通行，不能用于和用户权限有关的操作，比如开放给用户什么资源</p>
<p>为了解决这个问题，<strong>OpenID Connect</strong>可以从用户的认证系统中提供用户信息。</p>`,r:{minutes:.48,words:144},t:"第三方登录",y:"a"}}],["/cs-basics/network/authentication/mobile-device-authentication.html",{loader:()=>p(()=>import("./mobile-device-authentication.html-Dgl62Lml.js"),__vite__mapDeps([318,1])),meta:{d:1725292091e3,c:"network",g:["authentication"],e:`<figure><figcaption>mobile-device-authentication</figcaption></figure>
`,r:{minutes:.06,words:19},t:"移动设备身份认证",y:"a"}}],["/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.html",{loader:()=>p(()=>import("./zookeeper-in-action.html-BRYEmDPR.js"),__vite__mapDeps([319,1])),meta:{d:1725292091e3,c:"分布式",g:["ZooKeeper"],e:`<p>这篇文章简单给演示一下 ZooKeeper 常见命令的使用以及 ZooKeeper Java 客户端 Curator 的基本使用。介绍到的内容都是最基本的操作，能满足日常工作的基本需要。</p>
<p>如果文章有任何需要改善和完善的地方，欢迎在评论区指出，共同进步！</p>
<h2>ZooKeeper 安装</h2>
<h3>使用 Docker 安装 zookeeper</h3>
<p><strong>a.使用 Docker 下载 ZooKeeper</strong></p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull zookeeper:3.5.8
</code></pre></div>`,r:{minutes:5.75,words:1724},t:"ZooKeeper 实战",y:"a"}}],["/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.html",{loader:()=>p(()=>import("./zookeeper-intro.html-fBwE86vj.js"),__vite__mapDeps([320,1])),meta:{d:1725292091e3,c:"分布式",g:["ZooKeeper"],e:`<p>相信大家对 ZooKeeper 应该不算陌生。但是你真的了解 ZooKeeper 到底有啥用不？如果别人/面试官让你给他讲讲对于 ZooKeeper 的认识，你能回答到什么地步呢？</p>
<p>拿我自己来说吧！我本人在大学曾经使用 Dubbo 来做分布式项目的时候，使用了 ZooKeeper 作为注册中心。为了保证分布式系统能够同步访问某个资源，我还使用 ZooKeeper 做过分布式锁。另外，我在学习 Kafka 的时候，知道 Kafka 很多功能的实现依赖了 ZooKeeper。</p>
<p>前几天，总结项目经验的时候，我突然问自己 ZooKeeper 到底是个什么东西？想了半天，脑海中只是简单的能浮现出几句话：</p>`,r:{minutes:22.51,words:6753},t:"ZooKeeper相关概念总结(入门)",y:"a"}}],["/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.html",{loader:()=>p(()=>import("./zookeeper-plus.html-B20QLsUC.js"),__vite__mapDeps([321,1])),meta:{d:1725292091e3,c:"分布式",g:["ZooKeeper"],e:`<blockquote>
<p><a href="https://juejin.im/user/5c33853851882525ea106810" target="_blank" rel="noopener noreferrer">FrancisQ</a> 投稿。</p>
</blockquote>
<h2>什么是 ZooKeeper</h2>
<p><code>ZooKeeper</code> 由 <code>Yahoo</code> 开发，后来捐赠给了 <code>Apache</code> ，现已成为 <code>Apache</code> 顶级项目。<code>ZooKeeper</code> 是一个开源的分布式应用程序协调服务器，其为分布式系统提供一致性服务。其一致性是通过基于 <code>Paxos</code> 算法的 <code>ZAB</code> 协议完成的。其主要功能包括：配置维护、分布式同步、集群管理、分布式事务等。</p>`,r:{minutes:35.18,words:10554},t:"ZooKeeper相关概念总结(进阶)",y:"a"}}],["/system-design/framework/mybatis/mybatis-interview.html",{loader:()=>p(()=>import("./mybatis-interview.html-BLwRxh_K.js"),__vite__mapDeps([322,1])),meta:{d:1725292091e3,c:"框架",g:["MyBatis"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:13.58,words:4074},t:"MyBatis常见面试题总结",i:"database",y:"a"}}],["/system-design/framework/spring/ioc-and-aop.html",{loader:()=>p(()=>import("./ioc-and-aop.html-chx68xeb.js"),__vite__mapDeps([323,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:`<p>这篇文章会从下面从以下几个问题展开对 IoC &amp; AOP 的解释</p>
<ul>
<li>什么是 IoC？</li>
<li>IoC 解决了什么问题？</li>
<li>IoC 和 DI 的区别？</li>
<li>什么是 AOP？</li>
<li>AOP 解决了什么问题？</li>
<li>AOP 的应用场景有哪些？</li>
<li>AOP 为什么叫做切面编程？</li>
<li>AOP 实现方式有哪些？</li>
</ul>
<p>首先声明：IoC &amp; AOP 不是 Spring 提出来的，它们在 Spring 之前其实已经存在了，只不过当时更加偏向于理论。Spring 在技术层次将这两个思想进行了很好的实现。</p>`,r:{minutes:9.42,words:2825},t:"IoC & AOP详解（快速搞懂）",y:"a"}}],["/system-design/framework/spring/spring-boot-auto-assembly-principles.html",{loader:()=>p(()=>import("./spring-boot-auto-assembly-principles.html-DFfi2iV7.js"),__vite__mapDeps([324,1])),meta:{d:1725292091e3,c:"框架",g:["SpringBoot"],e:`<blockquote>
<p>作者：<a href="https://github.com/Miki-byte-1024" target="_blank" rel="noopener noreferrer">Miki-byte-1024</a> &amp; <a href="https://github.com/Snailclimb" target="_blank" rel="noopener noreferrer">Snailclimb</a></p>
</blockquote>
<p>每次问到 Spring Boot， 面试官非常喜欢问这个问题：“讲述一下 SpringBoot 自动装配原理？”。</p>`,r:{minutes:7.36,words:2207},t:"SpringBoot 自动装配原理详解",y:"a"}}],["/system-design/framework/spring/spring-common-annotations.html",{loader:()=>p(()=>import("./spring-common-annotations.html-U3O-r9SR.js"),__vite__mapDeps([325,1])),meta:{d:1725292091e3,c:"框架",g:["SpringBoot","Spring"],e:`<h3>0.前言</h3>
<p>可以毫不夸张地说，这篇文章介绍的 Spring/SpringBoot 常用注解基本已经涵盖你工作中遇到的大部分常用的场景。对于每一个注解我都说了具体用法，掌握搞懂，使用 SpringBoot 来开发项目基本没啥大问题了！</p>
<p><strong>为什么要写这篇文章？</strong></p>
<p>最近看到网上有一篇关于 SpringBoot 常用注解的文章被转载的比较多，我看了文章内容之后属实觉得质量有点低，并且有点会误导没有太多实际使用经验的人（这些人又占据了大多数）。所以，自己索性花了大概 两天时间简单总结一下了。</p>
<p><strong>因为我个人的能力和精力有限，如果有任何不对或者需要完善的地方，请帮忙指出！Guide 感激不尽！</strong></p>`,r:{minutes:18.3,words:5490},t:"Spring&SpringBoot常用注解总结",y:"a"}}],["/system-design/framework/spring/spring-design-patterns-summary.html",{loader:()=>p(()=>import("./spring-design-patterns-summary.html-PqUEHpOc.js"),__vite__mapDeps([326,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:`<p>“JDK 中用到了哪些设计模式? Spring 中用到了哪些设计模式? ”这两个问题，在面试中比较常见。</p>
<p>我在网上搜索了一下关于 Spring 中设计模式的讲解几乎都是千篇一律，而且大部分都年代久远。所以，花了几天时间自己总结了一下。</p>
<p>由于我的个人能力有限，文中如有任何错误各位都可以指出。另外，文章篇幅有限，对于设计模式以及一些源码的解读我只是一笔带过，这篇文章的主要目的是回顾一下 Spring 中的设计模式。</p>
<h2>控制反转(IoC)和依赖注入(DI)</h2>
<p><strong>IoC(Inversion of Control,控制反转)</strong> 是 Spring 中一个非常非常重要的概念，它不是什么技术，而是一种解耦的设计思想。IoC 的主要目的是借助于“第三方”(Spring 中的 IoC 容器) 实现具有依赖关系的对象之间的解耦(IOC 容器管理对象，你只管使用即可)，从而降低代码之间的耦合度。</p>`,r:{minutes:14.52,words:4356},t:"Spring 中的设计模式详解",y:"a"}}],["/system-design/framework/spring/spring-knowledge-and-questions-summary.html",{loader:()=>p(()=>import("./spring-knowledge-and-questions-summary.html-DGkr4HYb.js"),__vite__mapDeps([327,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:`<div class="hint-container tip">
<p class="hint-container-title">这是一则或许对你有用的小广告</p>
<ul>
<li><strong>面试专版</strong>：准备 Java 面试的小伙伴可以考虑面试专版：<strong><a href="/learning/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank">《Java 面试指北 》</a></strong> (质量非常高，专为面试打造，配合 JavaGuide 食用效果最佳)。</li>
<li><strong>知识星球</strong>：技术专栏/一对一提问/简历修改/求职指南/面试打卡/不定时福利，欢迎加入 <strong><a href="/learning/about-the-author/zhishixingqiu-two-years.html" target="_blank">JavaGuide 官方知识星球</a></strong>。</li>
</ul>
</div>`,r:{minutes:40.86,words:12257},t:"Spring常见面试题总结",y:"a"}}],["/system-design/framework/spring/spring-transaction.html",{loader:()=>p(()=>import("./spring-transaction.html-sHBmnCgD.js"),__vite__mapDeps([328,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:`<p>前段时间答应读者的 <strong>Spring 事务</strong> 分析总结终于来了。这部分内容比较重要，不论是对于工作还是面试，但是网上比较好的参考资料比较少。</p>
<h2>什么是事务？</h2>
<p><strong>事务是逻辑上的一组操作，要么都执行，要么都不执行。</strong></p>
<p>相信大家应该都能背上面这句话了，下面我结合我们日常的真实开发来谈一谈。</p>
<p>我们系统的每个业务方法可能包括了多个原子性的数据库操作，比如下面的 <code>savePerson()</code> 方法中就有两个原子性的数据库操作。这些原子性的数据库操作是有依赖的，它们要么都执行，要不就都不执行。</p>`,r:{minutes:22.68,words:6804},t:"Spring 事务详解",y:"a"}}],["/system-design/framework/spring/springboot-knowledge-and-questions-summary.html",{loader:()=>p(()=>import("./springboot-knowledge-and-questions-summary.html-BIiHGBob.js"),__vite__mapDeps([329,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:'<p><strong>Spring Boot</strong> 相关的面试题为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/java-mian-shi-zhi-bei.html" target="_blank" rel="noopener noreferrer">《Java 面试指北》</a>中。</p>',r:{minutes:.27,words:82},t:"SpringBoot常见面试题总结(付费)",y:"a"}}],["/system-design/framework/spring/springboot-source-code.html",{loader:()=>p(()=>import("./springboot-source-code.html-hmSqNuD9.js"),__vite__mapDeps([330,1])),meta:{d:1725292091e3,c:"框架",g:["Spring"],e:'<p><strong>Spring Boot 核心源码解读</strong> 为我的<a href="https://javaguide.cn/about-the-author/zhishixingqiu-two-years.html" target="_blank" rel="noopener noreferrer">知识星球</a>（点击链接即可查看详细介绍以及加入方法）专属内容，已经整理到了<a href="https://javaguide.cn/zhuanlan/source-code-reading.html" target="_blank" rel="noopener noreferrer">《Java 必读源码系列》</a>中。</p>',r:{minutes:.31,words:94},t:"Spring Boot核心源码解读（付费）",y:"a"}}],["/system-design/framework/vue/Single-File-Components.html",{loader:()=>p(()=>import("./Single-File-Components.html-oJAEuRDL.js"),__vite__mapDeps([331,1])),meta:{d:1725292091e3,c:"vue",r:{minutes:.01,words:4},t:"SFC",y:"a"}}],["/system-design/framework/vue/slot.html",{loader:()=>p(()=>import("./slot.html-ZEwoW9wN.js"),__vite__mapDeps([332,1])),meta:{d:1725292091e3,c:"vue",e:`<h2>Slot</h2>
<p>和prop传递JavaScript对象不同的是，slot传递的是template content</p>
<figure><figcaption></figcaption></figure>
`,r:{minutes:.09,words:27},t:"slot使用",y:"a"}}],["/system-design/framework/vue/storage.html",{loader:()=>p(()=>import("./storage.html-BuKxeI3_.js"),__vite__mapDeps([333,1])),meta:{d:1725292091e3,c:"vue",e:`<h2>localStorage和sessionStorage</h2>
<p>Web 存储对象 localStorage 和 sessionStorage 允许我们在浏览器上保存键/值对。</p>
<p>它们有趣的是，在页面刷新后（对于 sessionStorage）甚至浏览器完全重启（对于 localStorage）后，数据仍然保留在浏览器中。我们很快就会看到。</p>
<h3>我们已经有了 cookie。为什么还要其他存储对象呢？</h3>
<p>与 cookie 不同，Web 存储对象不会随每个请求被发送到服务器。因此，我们可以保存更多数据。大多数现代浏览器都允许保存至少 5MB 的数据（或更多），并且具有用于配置数据的设置。</p>`,r:{minutes:2.61,words:782},t:"vue中storage解析",y:"a"}}],["/system-design/framework/vue/typescript.html",{loader:()=>p(()=>import("./typescript.html-6imQ1c6L.js"),__vite__mapDeps([334,1])),meta:{d:1725292091e3,c:"vue",e:`<h2>Basis</h2>
<p>vue原生支持TypeScript</p>
<ul>
<li>detect many common errors via static analysis at build time
<ul>
<li>reduces the chance of runtime errors in production</li>
<li>allows us to more confidently refactor code in large-scale applications</li>
</ul>
</li>
<li>improves developer ergonomics via type-based auto-completion in IDEs</li>
</ul>`,r:{minutes:2.07,words:622},t:"TypeScript介绍",y:"a"}}],["/404.html",{loader:()=>p(()=>import("./404.html-Y0J7Q0Mr.js"),__vite__mapDeps([335,1])),meta:{t:""}}],["/AloT/",{loader:()=>p(()=>import("./index.html-DsfFvjyz.js"),__vite__mapDeps([336,1])),meta:{t:"Alo T"}}],["/c__/",{loader:()=>p(()=>import("./index.html-DK6XCzGS.js"),__vite__mapDeps([337,1])),meta:{t:"C"}}],["/database/",{loader:()=>p(()=>import("./index.html-DumbJfxb.js"),__vite__mapDeps([338,1])),meta:{t:"Database"}}],["/distributed-system/",{loader:()=>p(()=>import("./index.html-fGjOfg7e.js"),__vite__mapDeps([339,1])),meta:{t:"Distributed System"}}],["/high-availability/",{loader:()=>p(()=>import("./index.html-Cw47iUcx.js"),__vite__mapDeps([340,1])),meta:{t:"High Availability"}}],["/high-performance/",{loader:()=>p(()=>import("./index.html-CpYYzroK.js"),__vite__mapDeps([341,1])),meta:{t:"High Performance"}}],["/interview-preparation/",{loader:()=>p(()=>import("./index.html-DkjYDj76.js"),__vite__mapDeps([342,1])),meta:{t:"Interview Preparation"}}],["/javaguide/",{loader:()=>p(()=>import("./index.html-Bn7KcV9z.js"),__vite__mapDeps([343,1])),meta:{t:"Javaguide"}}],["/linux/",{loader:()=>p(()=>import("./index.html-Deh314cn.js"),__vite__mapDeps([344,1])),meta:{t:"Linux"}}],["/net/",{loader:()=>p(()=>import("./index.html-BKoQSMgJ.js"),__vite__mapDeps([345,1])),meta:{t:"Net"}}],["/neural-network/",{loader:()=>p(()=>import("./index.html-CyfYOLlS.js"),__vite__mapDeps([346,1])),meta:{t:"Neural Network"}}],["/node/",{loader:()=>p(()=>import("./index.html-oiALF0pG.js"),__vite__mapDeps([347,1])),meta:{t:"Node"}}],["/python/",{loader:()=>p(()=>import("./index.html-JQRYlJcv.js"),__vite__mapDeps([348,1])),meta:{t:"Python"}}],["/system-design/",{loader:()=>p(()=>import("./index.html-FhTwfWqj.js"),__vite__mapDeps([349,1])),meta:{t:"System Design"}}],["/vcs/",{loader:()=>p(()=>import("./index.html-zLk2scEV.js"),__vite__mapDeps([350,1])),meta:{t:"Vcs"}}],["/web/",{loader:()=>p(()=>import("./index.html-BBQ9jIeW.js"),__vite__mapDeps([351,1])),meta:{t:"Web"}}],["/AloT/IoT/",{loader:()=>p(()=>import("./index.html-CG-AZXI-.js"),__vite__mapDeps([352,1])),meta:{t:"Io T"}}],["/cs-basics/algorithms/",{loader:()=>p(()=>import("./index.html-DVP8rsgg.js"),__vite__mapDeps([353,1])),meta:{t:"Algorithms"}}],["/cs-basics/",{loader:()=>p(()=>import("./index.html-B0ceFXzf.js"),__vite__mapDeps([354,1])),meta:{t:"Cs Basics"}}],["/cs-basics/data-structure/",{loader:()=>p(()=>import("./index.html-BDjCg7Ba.js"),__vite__mapDeps([355,1])),meta:{t:"Data Structure"}}],["/cs-basics/network/",{loader:()=>p(()=>import("./index.html-DwnXhG2l.js"),__vite__mapDeps([356,1])),meta:{t:"Network"}}],["/cs-basics/operating-system/",{loader:()=>p(()=>import("./index.html-CdkshY-8.js"),__vite__mapDeps([357,1])),meta:{t:"Operating System"}}],["/database/elasticsearch/",{loader:()=>p(()=>import("./index.html-DnjsEVIW.js"),__vite__mapDeps([358,1])),meta:{t:"Elasticsearch"}}],["/database/mongodb/",{loader:()=>p(()=>import("./index.html-DBgTYHj0.js"),__vite__mapDeps([359,1])),meta:{t:"Mongodb"}}],["/database/mysql/",{loader:()=>p(()=>import("./index.html-B7g0sDJy.js"),__vite__mapDeps([360,1])),meta:{t:"Mysql"}}],["/database/redis/",{loader:()=>p(()=>import("./index.html-D2fsuSKo.js"),__vite__mapDeps([361,1])),meta:{t:"Redis"}}],["/database/sql/",{loader:()=>p(()=>import("./index.html-NHfLyCVn.js"),__vite__mapDeps([362,1])),meta:{t:"Sql"}}],["/distributed-system/protocol/",{loader:()=>p(()=>import("./index.html-IUgePV-1.js"),__vite__mapDeps([363,1])),meta:{t:"Protocol"}}],["/distributed-system/rpc/",{loader:()=>p(()=>import("./index.html-DLphlezm.js"),__vite__mapDeps([364,1])),meta:{t:"Rpc"}}],["/high-performance/message-queue/",{loader:()=>p(()=>import("./index.html-m1n_YQ3Z.js"),__vite__mapDeps([365,1])),meta:{t:"Message Queue"}}],["/high-quality-technical-articles/advanced-programmer/",{loader:()=>p(()=>import("./index.html-DYGJQ_n1.js"),__vite__mapDeps([366,1])),meta:{t:"Advanced Programmer"}}],["/high-quality-technical-articles/interview/",{loader:()=>p(()=>import("./index.html-B_NYebJK.js"),__vite__mapDeps([367,1])),meta:{t:"Interview"}}],["/high-quality-technical-articles/personal-experience/",{loader:()=>p(()=>import("./index.html-B9OJyIW9.js"),__vite__mapDeps([368,1])),meta:{t:"Personal Experience"}}],["/high-quality-technical-articles/programmer/",{loader:()=>p(()=>import("./index.html-pAb2IpZe.js"),__vite__mapDeps([369,1])),meta:{t:"Programmer"}}],["/high-quality-technical-articles/work/",{loader:()=>p(()=>import("./index.html-CPLP-51u.js"),__vite__mapDeps([370,1])),meta:{t:"Work"}}],["/java/basis/",{loader:()=>p(()=>import("./index.html-DSm2lPSO.js"),__vite__mapDeps([371,1])),meta:{t:"Basis"}}],["/java/",{loader:()=>p(()=>import("./index.html-CFu1IeGV.js"),__vite__mapDeps([372,1])),meta:{t:"Java"}}],["/java/collection/",{loader:()=>p(()=>import("./index.html-BFbbdKMq.js"),__vite__mapDeps([373,1])),meta:{t:"Collection"}}],["/java/concurrent/",{loader:()=>p(()=>import("./index.html-DMawg8e0.js"),__vite__mapDeps([374,1])),meta:{t:"Concurrent"}}],["/java/io/",{loader:()=>p(()=>import("./index.html-Cc4dwPYj.js"),__vite__mapDeps([375,1])),meta:{t:"Io"}}],["/java/jvm/",{loader:()=>p(()=>import("./index.html-CkZnoFTE.js"),__vite__mapDeps([376,1])),meta:{t:"Jvm"}}],["/java/network/",{loader:()=>p(()=>import("./index.html-BAc6Zp2_.js"),__vite__mapDeps([377,1])),meta:{t:"Network"}}],["/java/new-features/",{loader:()=>p(()=>import("./index.html-D9DjKI5W.js"),__vite__mapDeps([378,1])),meta:{t:"New Features"}}],["/java/servlet/",{loader:()=>p(()=>import("./index.html-C-ufd-u7.js"),__vite__mapDeps([379,1])),meta:{t:"Servlet"}}],["/knowledge/further-math/",{loader:()=>p(()=>import("./index.html-C5KuZ271.js"),__vite__mapDeps([380,1])),meta:{t:"Further Math"}}],["/linux/slurm/",{loader:()=>p(()=>import("./index.html-DJePGU9B.js"),__vite__mapDeps([381,1])),meta:{t:"Slurm"}}],["/net/csharp/",{loader:()=>p(()=>import("./index.html-DfwMBMka.js"),__vite__mapDeps([382,1])),meta:{t:"Csharp"}}],["/neural-network/transformer/",{loader:()=>p(()=>import("./index.html-D4BiEttK.js"),__vite__mapDeps([383,1])),meta:{t:"Transformer"}}],["/node/markdown/",{loader:()=>p(()=>import("./index.html-BAqdOnjv.js"),__vite__mapDeps([384,1])),meta:{t:"Markdown"}}],["/software-project/project-management/",{loader:()=>p(()=>import("./index.html-CtYiT0WE.js"),__vite__mapDeps([385,1])),meta:{t:"Project Management"}}],["/software-project/",{loader:()=>p(()=>import("./index.html-CfVTZ7Vb.js"),__vite__mapDeps([386,1])),meta:{t:"Software Project"}}],["/system-design/basis/",{loader:()=>p(()=>import("./index.html-W8tPxF7c.js"),__vite__mapDeps([387,1])),meta:{t:"Basis"}}],["/system-design/designMode/",{loader:()=>p(()=>import("./index.html-Qsy_cshp.js"),__vite__mapDeps([388,1])),meta:{t:"Design Mode"}}],["/system-design/framework/",{loader:()=>p(()=>import("./index.html-Bn3CDPQ9.js"),__vite__mapDeps([389,1])),meta:{t:"Framework"}}],["/system-design/security/",{loader:()=>p(()=>import("./index.html-EM0timow.js"),__vite__mapDeps([390,1])),meta:{t:"Security"}}],["/tools/docker/",{loader:()=>p(()=>import("./index.html-B5w3CFD6.js"),__vite__mapDeps([391,1])),meta:{t:"Docker"}}],["/tools/",{loader:()=>p(()=>import("./index.html-DKqHNxay.js"),__vite__mapDeps([392,1])),meta:{t:"Tools"}}],["/tools/genkins/",{loader:()=>p(()=>import("./index.html-BNzEoAn1.js"),__vite__mapDeps([393,1])),meta:{t:"Genkins"}}],["/tools/git/",{loader:()=>p(()=>import("./index.html-DTHp4ZfZ.js"),__vite__mapDeps([394,1])),meta:{t:"Git"}}],["/tools/gradle/",{loader:()=>p(()=>import("./index.html-CErDif_W.js"),__vite__mapDeps([395,1])),meta:{t:"Gradle"}}],["/tools/maven/",{loader:()=>p(()=>import("./index.html-BsGYGXCy.js"),__vite__mapDeps([396,1])),meta:{t:"Maven"}}],["/web/css/",{loader:()=>p(()=>import("./index.html-DdrUTuWX.js"),__vite__mapDeps([397,1])),meta:{t:"Css"}}],["/web/javascript/",{loader:()=>p(()=>import("./index.html-Bc1or63p.js"),__vite__mapDeps([398,1])),meta:{t:"Javascript"}}],["/cs-basics/algorithms/acwing/",{loader:()=>p(()=>import("./index.html-B0yfxYOk.js"),__vite__mapDeps([399,1])),meta:{t:"Acwing"}}],["/cs-basics/algorithms/model/",{loader:()=>p(()=>import("./index.html-BGY50a-d.js"),__vite__mapDeps([400,1])),meta:{t:"Model"}}],["/cs-basics/network/authentication/",{loader:()=>p(()=>import("./index.html-u1NOho2R.js"),__vite__mapDeps([401,1])),meta:{t:"Authentication"}}],["/distributed-system/distributed-process-coordination/zookeeper/",{loader:()=>p(()=>import("./index.html-JMt4Fq3p.js"),__vite__mapDeps([402,1])),meta:{t:"Zookeeper"}}],["/distributed-system/distributed-process-coordination/",{loader:()=>p(()=>import("./index.html-gDgdZ8SR.js"),__vite__mapDeps([403,1])),meta:{t:"Distributed Process Coordination"}}],["/system-design/framework/mybatis/",{loader:()=>p(()=>import("./index.html-D_B3bcER.js"),__vite__mapDeps([404,1])),meta:{t:"Mybatis"}}],["/system-design/framework/spring/",{loader:()=>p(()=>import("./index.html-BlGQQyrS.js"),__vite__mapDeps([405,1])),meta:{t:"Spring"}}],["/system-design/framework/vue/",{loader:()=>p(()=>import("./index.html-CIwvinHJ.js"),__vite__mapDeps([406,1])),meta:{t:"Vue"}}],["/category/",{loader:()=>p(()=>import("./index.html-DUSXRjND.js"),__vite__mapDeps([407,1])),meta:{t:"分类",I:!1}}],["/category/%E8%B5%B0%E8%BF%91%E4%BD%9C%E8%80%85/",{loader:()=>p(()=>import("./index.html-CpaIApNK.js"),__vite__mapDeps([408,1])),meta:{t:"走近作者 分类",I:!1}}],["/category/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/",{loader:()=>p(()=>import("./index.html-VswafVV-.js"),__vite__mapDeps([409,1])),meta:{t:"知识星球 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B9%A6%E7%B1%8D/",{loader:()=>p(()=>import("./index.html-DL3lhowx.js"),__vite__mapDeps([410,1])),meta:{t:"计算机书籍 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>p(()=>import("./index.html-D0s66SOQ.js"),__vite__mapDeps([411,1])),meta:{t:"数据库 分类",I:!1}}],["/category/%E5%88%86%E5%B8%83%E5%BC%8F/",{loader:()=>p(()=>import("./index.html-D3qxJiJ8.js"),__vite__mapDeps([412,1])),meta:{t:"分布式 分类",I:!1}}],["/category/%E9%AB%98%E5%8F%AF%E7%94%A8/",{loader:()=>p(()=>import("./index.html-DxslKpBn.js"),__vite__mapDeps([413,1])),meta:{t:"高可用 分类",I:!1}}],["/category/%E9%AB%98%E6%80%A7%E8%83%BD/",{loader:()=>p(()=>import("./index.html-BCSBvc6n.js"),__vite__mapDeps([414,1])),meta:{t:"高性能 分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",{loader:()=>p(()=>import("./index.html-iSG7dP2s.js"),__vite__mapDeps([415,1])),meta:{t:"面试准备 分类",I:!1}}],["/category/%E8%B5%B0%E8%BF%91%E9%A1%B9%E7%9B%AE/",{loader:()=>p(()=>import("./index.html-CFRlKPRW.js"),__vite__mapDeps([416,1])),meta:{t:"走近项目 分类",I:!1}}],["/category/linux/",{loader:()=>p(()=>import("./index.html-M9M1tt-o.js"),__vite__mapDeps([417,1])),meta:{t:"Linux 分类",I:!1}}],["/category/linux/",{loader:()=>p(()=>import("./index.html-M9M1tt-o.js"),__vite__mapDeps([417,1])),meta:{t:"linux 分类",I:!1}}],["/category/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",{loader:()=>p(()=>import("./index.html-B7zHOkiC.js"),__vite__mapDeps([418,1])),meta:{t:"神经网络 分类",I:!1}}],["/category/%E8%AE%BA%E6%96%87/",{loader:()=>p(()=>import("./index.html-B-n00uVC.js"),__vite__mapDeps([419,1])),meta:{t:"论文 分类",I:!1}}],["/category/node.js/",{loader:()=>p(()=>import("./index.html-BLS0D0ju.js"),__vite__mapDeps([420,1])),meta:{t:"node.js 分类",I:!1}}],["/category/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/",{loader:()=>p(()=>import("./index.html-D0qvOLz3.js"),__vite__mapDeps([421,1])),meta:{t:"开源项目 分类",I:!1}}],["/category/projects/",{loader:()=>p(()=>import("./index.html-qCT_yBUQ.js"),__vite__mapDeps([422,1])),meta:{t:"projects 分类",I:!1}}],["/category/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/",{loader:()=>p(()=>import("./index.html-z23uZ5px.js"),__vite__mapDeps([423,1])),meta:{t:"系统设计 分类",I:!1}}],["/category/java%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8C%97/",{loader:()=>p(()=>import("./index.html-Bjx0OkzB.js"),__vite__mapDeps([424,1])),meta:{t:"Java面试指北 分类",I:!1}}],["/category/vcs/",{loader:()=>p(()=>import("./index.html-BIi1JLbp.js"),__vite__mapDeps([425,1])),meta:{t:"vcs 分类",I:!1}}],["/category/web/",{loader:()=>p(()=>import("./index.html-Dp2eonD0.js"),__vite__mapDeps([426,1])),meta:{t:"web 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",{loader:()=>p(()=>import("./index.html-DGws2Wy8.js"),__vite__mapDeps([427,1])),meta:{t:"计算机基础 分类",I:!1}}],["/category/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%B2%BE%E9%80%89%E9%9B%86/",{loader:()=>p(()=>import("./index.html-BUZamy60.js"),__vite__mapDeps([428,1])),meta:{t:"技术文章精选集 分类",I:!1}}],["/category/java/",{loader:()=>p(()=>import("./index.html-BPCFJtXB.js"),__vite__mapDeps([429,1])),meta:{t:"Java 分类",I:!1}}],["/category/java/",{loader:()=>p(()=>import("./index.html-BPCFJtXB.js"),__vite__mapDeps([429,1])),meta:{t:"java 分类",I:!1}}],["/category/transformer/",{loader:()=>p(()=>import("./index.html-BXhH_wCo.js"),__vite__mapDeps([430,1])),meta:{t:"Transformer 分类",I:!1}}],["/category/markdown/",{loader:()=>p(()=>import("./index.html-BbFRQBgL.js"),__vite__mapDeps([431,1])),meta:{t:"markdown 分类",I:!1}}],["/category/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/",{loader:()=>p(()=>import("./index.html-RFz-ytem.js"),__vite__mapDeps([432,1])),meta:{t:"代码质量 分类",I:!1}}],["/category/%E6%A1%86%E6%9E%B6/",{loader:()=>p(()=>import("./index.html-DSA_9udl.js"),__vite__mapDeps([433,1])),meta:{t:"框架 分类",I:!1}}],["/category/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",{loader:()=>p(()=>import("./index.html-D2O0Hhg0.js"),__vite__mapDeps([434,1])),meta:{t:"开发工具 分类",I:!1}}],["/category/genkins/",{loader:()=>p(()=>import("./index.html-CEqKovn3.js"),__vite__mapDeps([435,1])),meta:{t:"genkins 分类",I:!1}}],["/category/cs-basis/",{loader:()=>p(()=>import("./index.html-CUeKkc6z.js"),__vite__mapDeps([436,1])),meta:{t:"cs-basis 分类",I:!1}}],["/category/network/",{loader:()=>p(()=>import("./index.html-CJt8FPDd.js"),__vite__mapDeps([437,1])),meta:{t:"network 分类",I:!1}}],["/category/vue/",{loader:()=>p(()=>import("./index.html-DUo5W6Fh.js"),__vite__mapDeps([438,1])),meta:{t:"vue 分类",I:!1}}],["/tag/",{loader:()=>p(()=>import("./index.html-BAwaYc7b.js"),__vite__mapDeps([439,1])),meta:{t:"标签",I:!1}}],["/tag/%E6%9D%82%E8%B0%88/",{loader:()=>p(()=>import("./index.html-D9DzOQqQ.js"),__vite__mapDeps([440,1])),meta:{t:"标签: 杂谈",I:!1}}],["/tag/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E5%8E%86/",{loader:()=>p(()=>import("./index.html-3T2P8Az2.js"),__vite__mapDeps([441,1])),meta:{t:"标签: 个人经历",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/",{loader:()=>p(()=>import("./index.html-CzGW1Tut.js"),__vite__mapDeps([442,1])),meta:{t:"标签: 数据库基础",I:!1}}],["/tag/nosql/",{loader:()=>p(()=>import("./index.html-CCal6hLT.js"),__vite__mapDeps([443,1])),meta:{t:"标签: NoSQL",I:!1}}],["/tag/mongodb/",{loader:()=>p(()=>import("./index.html-BIuQz1ey.js"),__vite__mapDeps([444,1])),meta:{t:"标签: MongoDB",I:!1}}],["/tag/redis/",{loader:()=>p(()=>import("./index.html-Ch2E2h6l.js"),__vite__mapDeps([445,1])),meta:{t:"标签: Redis",I:!1}}],["/tag/nginx/",{loader:()=>p(()=>import("./index.html-BRcitvTs.js"),__vite__mapDeps([446,1])),meta:{t:"标签: nginx",I:!1}}],["/tag/%E7%AE%97%E6%B3%95/",{loader:()=>p(()=>import("./index.html-DqCN6wHS.js"),__vite__mapDeps([447,1])),meta:{t:"标签: 算法",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>p(()=>import("./index.html-D_JD15M7.js"),__vite__mapDeps([448,1])),meta:{t:"标签: 数据结构",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>p(()=>import("./index.html-DPrTZMps.js"),__vite__mapDeps([449,1])),meta:{t:"标签: 计算机网络",I:!1}}],["/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>p(()=>import("./index.html-BRT9Jimf.js"),__vite__mapDeps([450,1])),meta:{t:"标签: 操作系统",I:!1}}],["/tag/linux/",{loader:()=>p(()=>import("./index.html-DdWneCWJ.js"),__vite__mapDeps([451,1])),meta:{t:"标签: Linux",I:!1}}],["/tag/elasticsearch/",{loader:()=>p(()=>import("./index.html-C1hh3qmo.js"),__vite__mapDeps([452,1])),meta:{t:"标签: Elasticsearch",I:!1}}],["/tag/mysql/",{loader:()=>p(()=>import("./index.html-BAUj70ij.js"),__vite__mapDeps([453,1])),meta:{t:"标签: MySQL",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",{loader:()=>p(()=>import("./index.html-BJKn-LKY.js"),__vite__mapDeps([454,1])),meta:{t:"标签: 性能优化",I:!1}}],["/tag/%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95/",{loader:()=>p(()=>import("./index.html-C3Q1KP8n.js"),__vite__mapDeps([455,1])),meta:{t:"标签: 大厂面试",I:!1}}],["/tag/sql/",{loader:()=>p(()=>import("./index.html-D_Vz5Acy.js"),__vite__mapDeps([456,1])),meta:{t:"标签: SQL",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/",{loader:()=>p(()=>import("./index.html-BKZVcxGY.js"),__vite__mapDeps([457,1])),meta:{t:"标签: 分布式理论",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE_%E7%AE%97%E6%B3%95/",{loader:()=>p(()=>import("./index.html-Cxmhbu4K.js"),__vite__mapDeps([458,1])),meta:{t:"标签: 分布式协议&算法",I:!1}}],["/tag/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/",{loader:()=>p(()=>import("./index.html-7v3XWnqx.js"),__vite__mapDeps([459,1])),meta:{t:"标签: 共识算法",I:!1}}],["/tag/rpc/",{loader:()=>p(()=>import("./index.html-CLy4qVVr.js"),__vite__mapDeps([460,1])),meta:{t:"标签: rpc",I:!1}}],["/tag/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",{loader:()=>p(()=>import("./index.html-3D8t4Nz9.js"),__vite__mapDeps([461,1])),meta:{t:"标签: 消息队列",I:!1}}],["/tag/rocketmq/",{loader:()=>p(()=>import("./index.html-tHJITamP.js"),__vite__mapDeps([462,1])),meta:{t:"标签: RocketMQ",I:!1}}],["/tag/%E7%BB%83%E7%BA%A7%E6%94%BB%E7%95%A5/",{loader:()=>p(()=>import("./index.html-CoV53ddP.js"),__vite__mapDeps([463,1])),meta:{t:"标签: 练级攻略",I:!1}}],["/tag/%E9%9D%A2%E8%AF%95/",{loader:()=>p(()=>import("./index.html-BTyol5dF.js"),__vite__mapDeps([464,1])),meta:{t:"标签: 面试",I:!1}}],["/tag/%E7%A8%8B%E5%BA%8F%E5%91%98/",{loader:()=>p(()=>import("./index.html-B94FTTdH.js"),__vite__mapDeps([465,1])),meta:{t:"标签: 程序员",I:!1}}],["/tag/%E5%B7%A5%E4%BD%9C/",{loader:()=>p(()=>import("./index.html-D3j4fHRw.js"),__vite__mapDeps([466,1])),meta:{t:"标签: 工作",I:!1}}],["/tag/java%E5%9F%BA%E7%A1%80/",{loader:()=>p(()=>import("./index.html-k0eClRBl.js"),__vite__mapDeps([467,1])),meta:{t:"标签: Java基础",I:!1}}],["/tag/java%E9%9B%86%E5%90%88/",{loader:()=>p(()=>import("./index.html-BN7kz6M6.js"),__vite__mapDeps([468,1])),meta:{t:"标签: Java集合",I:!1}}],["/tag/java%E5%B9%B6%E5%8F%91/",{loader:()=>p(()=>import("./index.html-BV9GuRBc.js"),__vite__mapDeps([469,1])),meta:{t:"标签: Java并发",I:!1}}],["/tag/java%E5%A4%9A%E7%BA%BF%E7%A8%8B/",{loader:()=>p(()=>import("./index.html-yK8QoZD8.js"),__vite__mapDeps([470,1])),meta:{t:"标签: Java多线程",I:!1}}],["/tag/java-io/",{loader:()=>p(()=>import("./index.html-D_IfiyXn.js"),__vite__mapDeps([471,1])),meta:{t:"标签: Java IO",I:!1}}],["/tag/jvm/",{loader:()=>p(()=>import("./index.html-DdMf4PIz.js"),__vite__mapDeps([472,1])),meta:{t:"标签: JVM",I:!1}}],["/tag/socket/",{loader:()=>p(()=>import("./index.html-EmNkrxBF.js"),__vite__mapDeps([473,1])),meta:{t:"标签: socket",I:!1}}],["/tag/tcp/",{loader:()=>p(()=>import("./index.html-bG27zcs7.js"),__vite__mapDeps([474,1])),meta:{t:"标签: tcp",I:!1}}],["/tag/udp/",{loader:()=>p(()=>import("./index.html-BQEkuTg-.js"),__vite__mapDeps([475,1])),meta:{t:"标签: udp",I:!1}}],["/tag/java%E6%96%B0%E7%89%B9%E6%80%A7/",{loader:()=>p(()=>import("./index.html-Exdw0uGj.js"),__vite__mapDeps([476,1])),meta:{t:"标签: Java新特性",I:!1}}],["/tag/servlet/",{loader:()=>p(()=>import("./index.html-CpZknRJ2.js"),__vite__mapDeps([477,1])),meta:{t:"标签: servlet",I:!1}}],["/tag/further-math/",{loader:()=>p(()=>import("./index.html-Chgw0BnO.js"),__vite__mapDeps([478,1])),meta:{t:"标签: further-math",I:!1}}],["/tag/%E5%AE%89%E5%85%A8/",{loader:()=>p(()=>import("./index.html-bW07KkRx.js"),__vite__mapDeps([479,1])),meta:{t:"标签: 安全",I:!1}}],["/tag/docker/",{loader:()=>p(()=>import("./index.html-Djsw8tJA.js"),__vite__mapDeps([480,1])),meta:{t:"标签: Docker",I:!1}}],["/tag/git/",{loader:()=>p(()=>import("./index.html-Bo9PNkPA.js"),__vite__mapDeps([481,1])),meta:{t:"标签: Git",I:!1}}],["/tag/javascript/",{loader:()=>p(()=>import("./index.html-yWEKbLP0.js"),__vite__mapDeps([482,1])),meta:{t:"标签: javascript",I:!1}}],["/tag/credential/",{loader:()=>p(()=>import("./index.html-D7Otfcsm.js"),__vite__mapDeps([483,1])),meta:{t:"标签: credential",I:!1}}],["/tag/authentication/",{loader:()=>p(()=>import("./index.html-BowrACRf.js"),__vite__mapDeps([484,1])),meta:{t:"标签: authentication",I:!1}}],["/tag/zookeeper/",{loader:()=>p(()=>import("./index.html-iqU0IQQL.js"),__vite__mapDeps([485,1])),meta:{t:"标签: ZooKeeper",I:!1}}],["/tag/mybatis/",{loader:()=>p(()=>import("./index.html-CWCEd5ji.js"),__vite__mapDeps([486,1])),meta:{t:"标签: MyBatis",I:!1}}],["/tag/spring/",{loader:()=>p(()=>import("./index.html-DqeqTU6N.js"),__vite__mapDeps([487,1])),meta:{t:"标签: Spring",I:!1}}],["/tag/springboot/",{loader:()=>p(()=>import("./index.html-C09WUhaY.js"),__vite__mapDeps([488,1])),meta:{t:"标签: SpringBoot",I:!1}}],["/article/",{loader:()=>p(()=>import("./index.html-cbAiXywL.js"),__vite__mapDeps([489,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>p(()=>import("./index.html-DU3vYsd7.js"),__vite__mapDeps([490,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>p(()=>import("./index.html-9q5XiKwh.js"),__vite__mapDeps([491,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.3.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const ht=typeof document<"u";function bh(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const he=Object.assign;function Pa(e,l){const t={};for(const n in l){const a=l[n];t[n]=ul(a)?a.map(e):e(a)}return t}const Nt=()=>{},ul=Array.isArray,Po=/#/g,_h=/&/g,yh=/\//g,wh=/=/g,Eh=/\?/g,To=/\+/g,xh=/%5B/g,Lh=/%5D/g,Io=/%5E/g,jh=/%60/g,qo=/%7B/g,Ah=/%7C/g,Do=/%7D/g,Sh=/%20/g;function Di(e){return encodeURI(""+e).replace(Ah,"|").replace(xh,"[").replace(Lh,"]")}function Ph(e){return Di(e).replace(qo,"{").replace(Do,"}").replace(Io,"^")}function Ka(e){return Di(e).replace(To,"%2B").replace(Sh,"+").replace(Po,"%23").replace(_h,"%26").replace(jh,"`").replace(qo,"{").replace(Do,"}").replace(Io,"^")}function Th(e){return Ka(e).replace(wh,"%3D")}function Ih(e){return Di(e).replace(Po,"%23").replace(Eh,"%3F")}function qh(e){return e==null?"":Ih(e).replace(yh,"%2F")}function Yt(e){try{return decodeURIComponent(""+e)}catch{}return""+e}const Dh=/\/$/,Rh=e=>e.replace(Dh,"");function Ta(e,l,t="/"){let n,a={},i="",s="";const o=l.indexOf("#");let c=l.indexOf("?");return o<c&&o>=0&&(c=-1),c>-1&&(n=l.slice(0,c),i=l.slice(c+1,o>-1?o:l.length),a=e(i)),o>-1&&(n=n||l.slice(0,o),s=l.slice(o,l.length)),n=Mh(n??l,t),{fullPath:n+(i&&"?")+i+s,path:n,query:a,hash:Yt(s)}}function Ch(e,l){const t=l.query?e(l.query):"";return l.path+(t&&"?")+t+(l.hash||"")}function Vs(e,l){return!l||!e.toLowerCase().startsWith(l.toLowerCase())?e:e.slice(l.length)||"/"}function Oh(e,l,t){const n=l.matched.length-1,a=t.matched.length-1;return n>-1&&n===a&&Et(l.matched[n],t.matched[a])&&Ro(l.params,t.params)&&e(l.query)===e(t.query)&&l.hash===t.hash}function Et(e,l){return(e.aliasOf||e)===(l.aliasOf||l)}function Ro(e,l){if(Object.keys(e).length!==Object.keys(l).length)return!1;for(const t in e)if(!Jh(e[t],l[t]))return!1;return!0}function Jh(e,l){return ul(e)?zs(e,l):ul(l)?zs(l,e):e===l}function zs(e,l){return ul(l)?e.length===l.length&&e.every((t,n)=>t===l[n]):e.length===1&&e[0]===l}function Mh(e,l){if(e.startsWith("/"))return e;if(!e)return l;const t=l.split("/"),n=e.split("/"),a=n[n.length-1];(a===".."||a===".")&&n.push("");let i=t.length-1,s,o;for(s=0;s<n.length;s++)if(o=n[s],o!==".")if(o==="..")i>1&&i--;else break;return t.slice(0,i).join("/")+"/"+n.slice(s).join("/")}var Xt;(function(e){e.pop="pop",e.push="push"})(Xt||(Xt={}));var Ht;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Ht||(Ht={}));function Fh(e){if(!e)if(ht){const l=document.querySelector("base");e=l&&l.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),Rh(e)}const Bh=/^[^#]+#/;function Vh(e,l){return e.replace(Bh,"#")+l}function zh(e,l){const t=document.documentElement.getBoundingClientRect(),n=e.getBoundingClientRect();return{behavior:l.behavior,left:n.left-t.left-(l.left||0),top:n.top-t.top-(l.top||0)}}const ca=()=>({left:window.scrollX,top:window.scrollY});function Nh(e){let l;if("el"in e){const t=e.el,n=typeof t=="string"&&t.startsWith("#"),a=typeof t=="string"?n?document.getElementById(t.slice(1)):document.querySelector(t):t;if(!a)return;l=zh(a,e)}else l=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(l):window.scrollTo(l.left!=null?l.left:window.scrollX,l.top!=null?l.top:window.scrollY)}function Ns(e,l){return(history.state?history.state.position-l:-1)+e}const Ua=new Map;function Hh(e,l){Ua.set(e,l)}function Gh(e){const l=Ua.get(e);return Ua.delete(e),l}let Qh=()=>location.protocol+"//"+location.host;function Co(e,l){const{pathname:t,search:n,hash:a}=l,i=e.indexOf("#");if(i>-1){let o=a.includes(e.slice(i))?e.slice(i).length:1,c=a.slice(o);return c[0]!=="/"&&(c="/"+c),Vs(c,"")}return Vs(t,e)+n+a}function $h(e,l,t,n){let a=[],i=[],s=null;const o=({state:g})=>{const v=Co(e,location),f=t.value,E=l.value;let w=0;if(g){if(t.value=v,l.value=g,s&&s===f){s=null;return}w=E?g.position-E.position:0}else n(v);a.forEach(b=>{b(t.value,f,{delta:w,type:Xt.pop,direction:w?w>0?Ht.forward:Ht.back:Ht.unknown})})};function c(){s=t.value}function u(g){a.push(g);const v=()=>{const f=a.indexOf(g);f>-1&&a.splice(f,1)};return i.push(v),v}function d(){const{history:g}=window;g.state&&g.replaceState(he({},g.state,{scroll:ca()}),"")}function h(){for(const g of i)g();i=[],window.removeEventListener("popstate",o),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",o),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:c,listen:u,destroy:h}}function Hs(e,l,t,n=!1,a=!1){return{back:e,current:l,forward:t,replaced:n,position:window.history.length,scroll:a?ca():null}}function Kh(e){const{history:l,location:t}=window,n={value:Co(e,t)},a={value:l.state};a.value||i(n.value,{back:null,current:n.value,forward:null,position:l.length-1,replaced:!0,scroll:null},!0);function i(c,u,d){const h=e.indexOf("#"),g=h>-1?(t.host&&document.querySelector("base")?e:e.slice(h))+c:Qh()+e+c;try{l[d?"replaceState":"pushState"](u,"",g),a.value=u}catch(v){console.error(v),t[d?"replace":"assign"](g)}}function s(c,u){const d=he({},l.state,Hs(a.value.back,c,a.value.forward,!0),u,{position:a.value.position});i(c,d,!0),n.value=c}function o(c,u){const d=he({},a.value,l.state,{forward:c,scroll:ca()});i(d.current,d,!0);const h=he({},Hs(n.value,c,null),{position:d.position+1},u);i(c,h,!1),n.value=c}return{location:n,state:a,push:o,replace:s}}function Uh(e){e=Fh(e);const l=Kh(e),t=$h(e,l.state,l.location,l.replace);function n(i,s=!0){s||t.pauseListeners(),history.go(i)}const a=he({location:"",base:e,go:n,createHref:Vh.bind(null,e)},l,t);return Object.defineProperty(a,"location",{enumerable:!0,get:()=>l.location.value}),Object.defineProperty(a,"state",{enumerable:!0,get:()=>l.state.value}),a}function Wh(e){return typeof e=="string"||e&&typeof e=="object"}function Oo(e){return typeof e=="string"||typeof e=="symbol"}const yl={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Jo=Symbol("");var Gs;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(Gs||(Gs={}));function xt(e,l){return he(new Error,{type:e,[Jo]:!0},l)}function bl(e,l){return e instanceof Error&&Jo in e&&(l==null||!!(e.type&l))}const Qs="[^/]+?",Zh={sensitive:!1,strict:!1,start:!0,end:!0},Yh=/[.+*?^${}()[\]/\\]/g;function Xh(e,l){const t=he({},Zh,l),n=[];let a=t.start?"^":"";const i=[];for(const u of e){const d=u.length?[]:[90];t.strict&&!u.length&&(a+="/");for(let h=0;h<u.length;h++){const g=u[h];let v=40+(t.sensitive?.25:0);if(g.type===0)h||(a+="/"),a+=g.value.replace(Yh,"\\$&"),v+=40;else if(g.type===1){const{value:f,repeatable:E,optional:w,regexp:b}=g;i.push({name:f,repeatable:E,optional:w});const L=b||Qs;if(L!==Qs){v+=10;try{new RegExp(`(${L})`)}catch(A){throw new Error(`Invalid custom RegExp for param "${f}" (${L}): `+A.message)}}let _=E?`((?:${L})(?:/(?:${L}))*)`:`(${L})`;h||(_=w&&u.length<2?`(?:/${_})`:"/"+_),w&&(_+="?"),a+=_,v+=20,w&&(v+=-8),E&&(v+=-20),L===".*"&&(v+=-50)}d.push(v)}n.push(d)}if(t.strict&&t.end){const u=n.length-1;n[u][n[u].length-1]+=.7000000000000001}t.strict||(a+="/?"),t.end?a+="$":t.strict&&(a+="(?:/|$)");const s=new RegExp(a,t.sensitive?"":"i");function o(u){const d=u.match(s),h={};if(!d)return null;for(let g=1;g<d.length;g++){const v=d[g]||"",f=i[g-1];h[f.name]=v&&f.repeatable?v.split("/"):v}return h}function c(u){let d="",h=!1;for(const g of e){(!h||!d.endsWith("/"))&&(d+="/"),h=!1;for(const v of g)if(v.type===0)d+=v.value;else if(v.type===1){const{value:f,repeatable:E,optional:w}=v,b=f in u?u[f]:"";if(ul(b)&&!E)throw new Error(`Provided param "${f}" is an array but it is not repeatable (* or + modifiers)`);const L=ul(b)?b.join("/"):b;if(!L)if(w)g.length<2&&(d.endsWith("/")?d=d.slice(0,-1):h=!0);else throw new Error(`Missing required param "${f}"`);d+=L}}return d||"/"}return{re:s,score:n,keys:i,parse:o,stringify:c}}function eg(e,l){let t=0;for(;t<e.length&&t<l.length;){const n=l[t]-e[t];if(n)return n;t++}return e.length<l.length?e.length===1&&e[0]===80?-1:1:e.length>l.length?l.length===1&&l[0]===80?1:-1:0}function lg(e,l){let t=0;const n=e.score,a=l.score;for(;t<n.length&&t<a.length;){const i=eg(n[t],a[t]);if(i)return i;t++}if(Math.abs(a.length-n.length)===1){if($s(n))return 1;if($s(a))return-1}return a.length-n.length}function $s(e){const l=e[e.length-1];return e.length>0&&l[l.length-1]<0}const tg={type:0,value:""},ng=/[a-zA-Z0-9_]/;function ag(e){if(!e)return[[]];if(e==="/")return[[tg]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function l(v){throw new Error(`ERR (${t})/"${u}": ${v}`)}let t=0,n=t;const a=[];let i;function s(){i&&a.push(i),i=[]}let o=0,c,u="",d="";function h(){u&&(t===0?i.push({type:0,value:u}):t===1||t===2||t===3?(i.length>1&&(c==="*"||c==="+")&&l(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),i.push({type:1,value:u,regexp:d,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):l("Invalid state to consume buffer"),u="")}function g(){u+=c}for(;o<e.length;){if(c=e[o++],c==="\\"&&t!==2){n=t,t=4;continue}switch(t){case 0:c==="/"?(u&&h(),s()):c===":"?(h(),t=1):g();break;case 4:g(),t=n;break;case 1:c==="("?t=2:ng.test(c)?g():(h(),t=0,c!=="*"&&c!=="?"&&c!=="+"&&o--);break;case 2:c===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+c:t=3:d+=c;break;case 3:h(),t=0,c!=="*"&&c!=="?"&&c!=="+"&&o--,d="";break;default:l("Unknown state");break}}return t===2&&l(`Unfinished custom RegExp for param "${u}"`),h(),s(),a}function ig(e,l,t){const n=Xh(ag(e.path),t),a=he(n,{record:e,parent:l,children:[],alias:[]});return l&&!a.record.aliasOf==!l.record.aliasOf&&l.children.push(a),a}function sg(e,l){const t=[],n=new Map;l=Ws({strict:!1,end:!0,sensitive:!1},l);function a(d){return n.get(d)}function i(d,h,g){const v=!g,f=rg(d);f.aliasOf=g&&g.record;const E=Ws(l,d),w=[f];if("alias"in d){const _=typeof d.alias=="string"?[d.alias]:d.alias;for(const A of _)w.push(he({},f,{components:g?g.record.components:f.components,path:A,aliasOf:g?g.record:f}))}let b,L;for(const _ of w){const{path:A}=_;if(h&&A[0]!=="/"){const O=h.record.path,j=O[O.length-1]==="/"?"":"/";_.path=h.record.path+(A&&j+A)}if(b=ig(_,h,E),g?g.alias.push(b):(L=L||b,L!==b&&L.alias.push(b),v&&d.name&&!Us(b)&&s(d.name)),f.children){const O=f.children;for(let j=0;j<O.length;j++)i(O[j],b,g&&g.children[j])}g=g||b,(b.record.components&&Object.keys(b.record.components).length||b.record.name||b.record.redirect)&&c(b)}return L?()=>{s(L)}:Nt}function s(d){if(Oo(d)){const h=n.get(d);h&&(n.delete(d),t.splice(t.indexOf(h),1),h.children.forEach(s),h.alias.forEach(s))}else{const h=t.indexOf(d);h>-1&&(t.splice(h,1),d.record.name&&n.delete(d.record.name),d.children.forEach(s),d.alias.forEach(s))}}function o(){return t}function c(d){let h=0;for(;h<t.length&&lg(d,t[h])>=0&&(d.record.path!==t[h].record.path||!Mo(d,t[h]));)h++;t.splice(h,0,d),d.record.name&&!Us(d)&&n.set(d.record.name,d)}function u(d,h){let g,v={},f,E;if("name"in d&&d.name){if(g=n.get(d.name),!g)throw xt(1,{location:d});E=g.record.name,v=he(Ks(h.params,g.keys.filter(L=>!L.optional).concat(g.parent?g.parent.keys.filter(L=>L.optional):[]).map(L=>L.name)),d.params&&Ks(d.params,g.keys.map(L=>L.name))),f=g.stringify(v)}else if(d.path!=null)f=d.path,g=t.find(L=>L.re.test(f)),g&&(v=g.parse(f),E=g.record.name);else{if(g=h.name?n.get(h.name):t.find(L=>L.re.test(h.path)),!g)throw xt(1,{location:d,currentLocation:h});E=g.record.name,v=he({},h.params,d.params),f=g.stringify(v)}const w=[];let b=g;for(;b;)w.unshift(b.record),b=b.parent;return{name:E,path:f,params:v,matched:w,meta:cg(w)}}return e.forEach(d=>i(d)),{addRoute:i,resolve:u,removeRoute:s,getRoutes:o,getRecordMatcher:a}}function Ks(e,l){const t={};for(const n of l)n in e&&(t[n]=e[n]);return t}function rg(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:og(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function og(e){const l={},t=e.props||!1;if("component"in e)l.default=t;else for(const n in e.components)l[n]=typeof t=="object"?t[n]:t;return l}function Us(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function cg(e){return e.reduce((l,t)=>he(l,t.meta),{})}function Ws(e,l){const t={};for(const n in e)t[n]=n in l?l[n]:e[n];return t}function Mo(e,l){return l.children.some(t=>t===e||Mo(e,t))}function ug(e){const l={};if(e===""||e==="?")return l;const n=(e[0]==="?"?e.slice(1):e).split("&");for(let a=0;a<n.length;++a){const i=n[a].replace(To," "),s=i.indexOf("="),o=Yt(s<0?i:i.slice(0,s)),c=s<0?null:Yt(i.slice(s+1));if(o in l){let u=l[o];ul(u)||(u=l[o]=[u]),u.push(c)}else l[o]=c}return l}function Zs(e){let l="";for(let t in e){const n=e[t];if(t=Th(t),n==null){n!==void 0&&(l+=(l.length?"&":"")+t);continue}(ul(n)?n.map(i=>i&&Ka(i)):[n&&Ka(n)]).forEach(i=>{i!==void 0&&(l+=(l.length?"&":"")+t,i!=null&&(l+="="+i))})}return l}function pg(e){const l={};for(const t in e){const n=e[t];n!==void 0&&(l[t]=ul(n)?n.map(a=>a==null?null:""+a):n==null?n:""+n)}return l}const dg=Symbol(""),Ys=Symbol(""),ua=Symbol(""),Ri=Symbol(""),Wa=Symbol("");function qt(){let e=[];function l(n){return e.push(n),()=>{const a=e.indexOf(n);a>-1&&e.splice(a,1)}}function t(){e=[]}return{add:l,list:()=>e.slice(),reset:t}}function Ml(e,l,t,n,a,i=s=>s()){const s=n&&(n.enterCallbacks[a]=n.enterCallbacks[a]||[]);return()=>new Promise((o,c)=>{const u=g=>{g===!1?c(xt(4,{from:t,to:l})):g instanceof Error?c(g):Wh(g)?c(xt(2,{from:l,to:g})):(s&&n.enterCallbacks[a]===s&&typeof g=="function"&&s.push(g),o())},d=i(()=>e.call(n&&n.instances[a],l,t,u));let h=Promise.resolve(d);e.length<3&&(h=h.then(u)),h.catch(g=>c(g))})}function Ia(e,l,t,n,a=i=>i()){const i=[];for(const s of e)for(const o in s.components){let c=s.components[o];if(!(l!=="beforeRouteEnter"&&!s.instances[o]))if(hg(c)){const d=(c.__vccOpts||c)[l];d&&i.push(Ml(d,t,n,s,o,a))}else{let u=c();i.push(()=>u.then(d=>{if(!d)return Promise.reject(new Error(`Couldn't resolve component "${o}" at "${s.path}"`));const h=bh(d)?d.default:d;s.components[o]=h;const v=(h.__vccOpts||h)[l];return v&&Ml(v,t,n,s,o,a)()}))}}return i}function hg(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function Xs(e){const l=_e(ua),t=_e(Ri),n=y(()=>l.resolve(tt(e.to))),a=y(()=>{const{matched:c}=n.value,{length:u}=c,d=c[u-1],h=t.matched;if(!d||!h.length)return-1;const g=h.findIndex(Et.bind(null,d));if(g>-1)return g;const v=er(c[u-2]);return u>1&&er(d)===v&&h[h.length-1].path!==v?h.findIndex(Et.bind(null,c[u-2])):g}),i=y(()=>a.value>-1&&mg(t.params,n.value.params)),s=y(()=>a.value>-1&&a.value===t.matched.length-1&&Ro(t.params,n.value.params));function o(c={}){return kg(c)?l[tt(e.replace)?"replace":"push"](tt(e.to)).catch(Nt):Promise.resolve()}return{route:n,href:y(()=>n.value.href),isActive:i,isExactActive:s,navigate:o}}const gg=F({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Xs,setup(e,{slots:l}){const t=rn(Xs(e)),{options:n}=_e(ua),a=y(()=>({[lr(e.activeClass,n.linkActiveClass,"router-link-active")]:t.isActive,[lr(e.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:t.isExactActive}));return()=>{const i=l.default&&l.default(t);return e.custom?i:r("a",{"aria-current":t.isExactActive?e.ariaCurrentValue:null,href:t.href,onClick:t.navigate,class:a.value},i)}}}),vg=gg;function kg(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const l=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(l))return}return e.preventDefault&&e.preventDefault(),!0}}function mg(e,l){for(const t in l){const n=l[t],a=e[t];if(typeof n=="string"){if(n!==a)return!1}else if(!ul(a)||a.length!==n.length||n.some((i,s)=>i!==a[s]))return!1}return!0}function er(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const lr=(e,l,t)=>e??l??t,fg=F({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:l,slots:t}){const n=_e(Wa),a=y(()=>e.route||n.value),i=_e(Ys,0),s=y(()=>{let u=tt(i);const{matched:d}=a.value;let h;for(;(h=d[u])&&!h.components;)u++;return u}),o=y(()=>a.value.matched[s.value]);ol(Ys,y(()=>s.value+1)),ol(dg,o),ol(Wa,a);const c=Y();return pe(()=>[c.value,o.value,e.name],([u,d,h],[g,v,f])=>{d&&(d.instances[h]=u,v&&v!==d&&u&&u===g&&(d.leaveGuards.size||(d.leaveGuards=v.leaveGuards),d.updateGuards.size||(d.updateGuards=v.updateGuards))),u&&d&&(!v||!Et(d,v)||!g)&&(d.enterCallbacks[h]||[]).forEach(E=>E(u))},{flush:"post"}),()=>{const u=a.value,d=e.name,h=o.value,g=h&&h.components[d];if(!g)return tr(t.default,{Component:g,route:u});const v=h.props[d],f=v?v===!0?u.params:typeof v=="function"?v(u):v:null,w=r(g,he({},f,l,{onVnodeUnmounted:b=>{b.component.isUnmounted&&(h.instances[d]=null)},ref:c}));return tr(t.default,{Component:w,route:u})||w}}});function tr(e,l){if(!e)return null;const t=e(l);return t.length===1?t[0]:t}const bg=fg;function _g(e){const l=sg(e.routes,e),t=e.parseQuery||ug,n=e.stringifyQuery||Zs,a=e.history,i=qt(),s=qt(),o=qt(),c=Ce(yl);let u=yl;ht&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=Pa.bind(null,P=>""+P),h=Pa.bind(null,qh),g=Pa.bind(null,Yt);function v(P,z){let B,G;return Oo(P)?(B=l.getRecordMatcher(P),G=z):G=P,l.addRoute(G,B)}function f(P){const z=l.getRecordMatcher(P);z&&l.removeRoute(z)}function E(){return l.getRoutes().map(P=>P.record)}function w(P){return!!l.getRecordMatcher(P)}function b(P,z){if(z=he({},z||c.value),typeof P=="string"){const m=Ta(t,P,z.path),x=l.resolve({path:m.path},z),T=a.createHref(m.fullPath);return he(m,x,{params:g(x.params),hash:Yt(m.hash),redirectedFrom:void 0,href:T})}let B;if(P.path!=null)B=he({},P,{path:Ta(t,P.path,z.path).path});else{const m=he({},P.params);for(const x in m)m[x]==null&&delete m[x];B=he({},P,{params:h(m)}),z.params=h(z.params)}const G=l.resolve(B,z),de=P.hash||"";G.params=d(g(G.params));const me=Ch(n,he({},P,{hash:Ph(de),path:G.path})),k=a.createHref(me);return he({fullPath:me,hash:de,query:n===Zs?pg(P.query):P.query||{}},G,{redirectedFrom:void 0,href:k})}function L(P){return typeof P=="string"?Ta(t,P,c.value.path):he({},P)}function _(P,z){if(u!==P)return xt(8,{from:z,to:P})}function A(P){return H(P)}function O(P){return A(he(L(P),{replace:!0}))}function j(P){const z=P.matched[P.matched.length-1];if(z&&z.redirect){const{redirect:B}=z;let G=typeof B=="function"?B(P):B;return typeof G=="string"&&(G=G.includes("?")||G.includes("#")?G=L(G):{path:G},G.params={}),he({query:P.query,hash:P.hash,params:G.path!=null?{}:P.params},G)}}function H(P,z){const B=u=b(P),G=c.value,de=P.state,me=P.force,k=P.replace===!0,m=j(B);if(m)return H(he(L(m),{state:typeof m=="object"?he({},de,m.state):de,force:me,replace:k}),z||B);const x=B;x.redirectedFrom=z;let T;return!me&&Oh(n,G,B)&&(T=xt(16,{to:x,from:G}),pl(G,G,!0,!1)),(T?Promise.resolve(T):q(x,G)).catch(S=>bl(S)?bl(S,2)?S:Sl(S):Q(S,x,G)).then(S=>{if(S){if(bl(S,2))return H(he({replace:k},L(S.to),{state:typeof S.to=="object"?he({},de,S.to.state):de,force:me}),z||x)}else S=C(x,G,!0,k,de);return W(x,G,S),S})}function M(P,z){const B=_(P,z);return B?Promise.reject(B):Promise.resolve()}function U(P){const z=pt.values().next().value;return z&&typeof z.runWithContext=="function"?z.runWithContext(P):P()}function q(P,z){let B;const[G,de,me]=yg(P,z);B=Ia(G.reverse(),"beforeRouteLeave",P,z);for(const m of G)m.leaveGuards.forEach(x=>{B.push(Ml(x,P,z))});const k=M.bind(null,P,z);return B.push(k),Oe(B).then(()=>{B=[];for(const m of i.list())B.push(Ml(m,P,z));return B.push(k),Oe(B)}).then(()=>{B=Ia(de,"beforeRouteUpdate",P,z);for(const m of de)m.updateGuards.forEach(x=>{B.push(Ml(x,P,z))});return B.push(k),Oe(B)}).then(()=>{B=[];for(const m of me)if(m.beforeEnter)if(ul(m.beforeEnter))for(const x of m.beforeEnter)B.push(Ml(x,P,z));else B.push(Ml(m.beforeEnter,P,z));return B.push(k),Oe(B)}).then(()=>(P.matched.forEach(m=>m.enterCallbacks={}),B=Ia(me,"beforeRouteEnter",P,z,U),B.push(k),Oe(B))).then(()=>{B=[];for(const m of s.list())B.push(Ml(m,P,z));return B.push(k),Oe(B)}).catch(m=>bl(m,8)?m:Promise.reject(m))}function W(P,z,B){o.list().forEach(G=>U(()=>G(P,z,B)))}function C(P,z,B,G,de){const me=_(P,z);if(me)return me;const k=z===yl,m=ht?history.state:{};B&&(G||k?a.replace(P.fullPath,he({scroll:k&&m&&m.scroll},de)):a.push(P.fullPath,de)),c.value=P,pl(P,z,B,k),Sl()}let ee;function Le(){ee||(ee=a.listen((P,z,B)=>{if(!jn.listening)return;const G=b(P),de=j(G);if(de){H(he(de,{replace:!0}),G).catch(Nt);return}u=G;const me=c.value;ht&&Hh(Ns(me.fullPath,B.delta),ca()),q(G,me).catch(k=>bl(k,12)?k:bl(k,2)?(H(k.to,G).then(m=>{bl(m,20)&&!B.delta&&B.type===Xt.pop&&a.go(-1,!1)}).catch(Nt),Promise.reject()):(B.delta&&a.go(-B.delta,!1),Q(k,G,me))).then(k=>{k=k||C(G,me,!1),k&&(B.delta&&!bl(k,8)?a.go(-B.delta,!1):B.type===Xt.pop&&bl(k,20)&&a.go(-1,!1)),W(G,me,k)}).catch(Nt)}))}let je=qt(),$=qt(),ne;function Q(P,z,B){Sl(P);const G=$.list();return G.length?G.forEach(de=>de(P,z,B)):console.error(P),Promise.reject(P)}function al(){return ne&&c.value!==yl?Promise.resolve():new Promise((P,z)=>{je.add([P,z])})}function Sl(P){return ne||(ne=!P,Le(),je.list().forEach(([z,B])=>P?B(P):z()),je.reset()),P}function pl(P,z,B,G){const{scrollBehavior:de}=e;if(!ht||!de)return Promise.resolve();const me=!B&&Gh(Ns(P.fullPath,0))||(G||!B)&&history.state&&history.state.scroll||null;return st().then(()=>de(P,z,me)).then(k=>k&&Nh(k)).catch(k=>Q(k,P,z))}const Ve=P=>a.go(P);let ut;const pt=new Set,jn={currentRoute:c,listening:!0,addRoute:v,removeRoute:f,hasRoute:w,getRoutes:E,resolve:b,options:e,push:A,replace:O,go:Ve,back:()=>Ve(-1),forward:()=>Ve(1),beforeEach:i.add,beforeResolve:s.add,afterEach:o.add,onError:$.add,isReady:al,install(P){const z=this;P.component("RouterLink",vg),P.component("RouterView",bg),P.config.globalProperties.$router=z,Object.defineProperty(P.config.globalProperties,"$route",{enumerable:!0,get:()=>tt(c)}),ht&&!ut&&c.value===yl&&(ut=!0,A(a.location).catch(de=>{}));const B={};for(const de in yl)Object.defineProperty(B,de,{get:()=>c.value[de],enumerable:!0});P.provide(ua,z),P.provide(Ri,Or(B)),P.provide(Wa,c);const G=P.unmount;pt.add(P),P.unmount=function(){pt.delete(P),pt.size<1&&(u=yl,ee&&ee(),ee=null,c.value=yl,ut=!1,ne=!1),G()}}};function Oe(P){return P.reduce((z,B)=>z.then(()=>U(B)),Promise.resolve())}return jn}function yg(e,l){const t=[],n=[],a=[],i=Math.max(l.matched.length,e.matched.length);for(let s=0;s<i;s++){const o=l.matched[s];o&&(e.matched.find(u=>Et(u,o))?n.push(o):t.push(o));const c=e.matched[s];c&&(l.matched.find(u=>Et(u,c))||a.push(c))}return[t,n,a]}function jl(){return _e(ua)}function Al(){return _e(Ri)}var Ci=Symbol(""),ml=()=>{const e=_e(Ci);if(!e)throw new Error("useClientData() is called without provider.");return e},wg=()=>ml().pageComponent,ve=()=>ml().pageData,ke=()=>ml().pageFrontmatter,Eg=()=>ml().pageHead,Fo=()=>ml().pageLang,xg=()=>ml().pageLayout,fl=()=>ml().routeLocale,Lg=()=>ml().routes,Bo=()=>ml().siteData,vn=()=>ml().siteLocaleData,jg=Symbol(""),Za=Ce(mh),en=Ce(fh),Vo=e=>{const l=hh(e);if(en.value[l])return l;const t=encodeURI(l);return en.value[t]?t:Za.value[l]||Za.value[t]||l},St=e=>{const l=Vo(e),t=en.value[l]??{...en.value["/404.html"],notFound:!0};return{path:l,notFound:!1,...t}},pa=F({name:"ClientOnly",setup(e,l){const t=Y(!1);return we(()=>{t.value=!0}),()=>{var n,a;return t.value?(a=(n=l.slots).default)==null?void 0:a.call(n):null}}}),zo=F({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(e){const l=wg(),t=y(()=>{if(!e.path)return l.value;const n=St(e.path);return Op(()=>n.loader().then(({comp:a})=>a))});return()=>r(t.value)}}),We=(e={})=>e,Ee=e=>kl(e)?e:`/learning/${So(e)}`,Ag=e=>{if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget){const l=e.currentTarget.getAttribute("target");if(l!=null&&l.match(/\b_blank\b/i))return}return e.preventDefault(),!0}},Ae=({active:e=!1,activeClass:l="route-link-active",to:t,...n},{slots:a})=>{var c;const i=jl(),s=Vo(t),o=s.startsWith("#")||s.startsWith("?")?s:Ee(s);return r("a",{...n,class:["route-link",{[l]:e}],href:o,onClick:(u={})=>{Ag(u)?i.push(t).catch():Promise.resolve()}},(c=a.default)==null?void 0:c.call(a))};Ae.displayName="RouteLink";Ae.props={active:Boolean,activeClass:String,to:String};var Sg="Layout",Pg="en-US",Wl=rn({resolveLayouts:e=>e.reduce((l,t)=>({...l,...t.layouts}),{}),resolvePageHead:(e,l,t)=>{const n=ye(l.description)?l.description:t.description,a=[...Array.isArray(l.head)?l.head:[],...t.head,["title",{},e],["meta",{name:"description",content:n}]];return uh(a)},resolvePageHeadTitle:(e,l)=>[e.title,l.title].filter(t=>!!t).join(" | "),resolvePageLang:(e,l)=>e.lang||l.lang||Pg,resolvePageLayout:(e,l)=>{const t=ye(e.frontmatter.layout)?e.frontmatter.layout:Sg;if(!l[t])throw new Error(`[vuepress] Cannot resolve layout: ${t}`);return l[t]},resolveRouteLocale:(e,l)=>gh(e,l),resolveSiteLocaleData:(e,l)=>{var t;return{...e,...e.locales[l],head:[...((t=e.locales[l])==null?void 0:t.head)??[],...e.head??[]]}}});const Tg={},Pt=e=>{const l=fl();return y(()=>e[l.value]??{})},cl=(e,l)=>{var n;const t=(n=(l==null?void 0:l._instance)||pn())==null?void 0:n.appContext.components;return t?e in t||nl(e)in t||sn(nl(e))in t:!1},No=e=>new Promise(l=>setTimeout(l,e)),Ig=e=>typeof e<"u",qa=e=>typeof e=="number",Ya=Array.isArray,nt=(e,l)=>ye(e)&&e.startsWith(l),qg=(e,l)=>ye(e)&&e.endsWith(l),kn=Object.entries,xl=Object.keys,Oi=e=>{if(e){if(typeof e=="number")return new Date(e);const l=Date.parse(e.toString());if(!Number.isNaN(l))return new Date(l)}return null},mn=e=>nt(e,"/");function Ho(e,l){let t,n,a;const i=Y(!0),s=()=>{i.value=!0,a()};pe(e,s,{flush:"sync"});const o=typeof l=="function"?l:l.get,c=typeof l=="function"?void 0:l.set,u=Ei((d,h)=>(n=d,a=h,{get(){return i.value&&(t=o(),i.value=!1),n(),t},set(g){c==null||c(g)}}));return Object.isExtensible(u)&&(u.trigger=s),u}function rt(e){return xr()?(Nu(e),!0):!1}function He(e){return typeof e=="function"?e():tt(e)}const fn=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Dg=Object.prototype.toString,Rg=e=>Dg.call(e)==="[object Object]",Lt=()=>{},nr=Cg();function Cg(){var e,l;return fn&&((e=window==null?void 0:window.navigator)==null?void 0:e.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((l=window==null?void 0:window.navigator)==null?void 0:l.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function Ji(e,l){function t(...n){return new Promise((a,i)=>{Promise.resolve(e(()=>l.apply(this,n),{fn:l,thisArg:this,args:n})).then(a).catch(i)})}return t}const Go=e=>e();function Og(e,l={}){let t,n,a=Lt;const i=o=>{clearTimeout(o),a(),a=Lt};return o=>{const c=He(e),u=He(l.maxWait);return t&&i(t),c<=0||u!==void 0&&u<=0?(n&&(i(n),n=null),Promise.resolve(o())):new Promise((d,h)=>{a=l.rejectOnCancel?h:d,u&&!n&&(n=setTimeout(()=>{t&&i(t),n=null,d(o())},u)),t=setTimeout(()=>{n&&i(n),n=null,d(o())},c)})}}function Jg(...e){let l=0,t,n=!0,a=Lt,i,s,o,c,u;!De(e[0])&&typeof e[0]=="object"?{delay:s,trailing:o=!0,leading:c=!0,rejectOnCancel:u=!1}=e[0]:[s,o=!0,c=!0,u=!1]=e;const d=()=>{t&&(clearTimeout(t),t=void 0,a(),a=Lt)};return g=>{const v=He(s),f=Date.now()-l,E=()=>i=g();return d(),v<=0?(l=Date.now(),E()):(f>v&&(c||!n)?(l=Date.now(),E()):o&&(i=new Promise((w,b)=>{a=u?b:w,t=setTimeout(()=>{l=Date.now(),n=!0,w(E()),d()},Math.max(0,v-f))})),!c&&!t&&(t=setTimeout(()=>n=!0,v)),n=!1,i)}}function Mg(e=Go){const l=Y(!0);function t(){l.value=!1}function n(){l.value=!0}const a=(...i)=>{l.value&&e(...i)};return{isActive:Gl(l),pause:t,resume:n,eventFilter:a}}function Fg(e){let l;function t(){return l||(l=e()),l}return t.reset=async()=>{const n=l;l=void 0,n&&await n},t}function Bg(e){return e||pn()}function Vg(...e){if(e.length!==1)return At(...e);const l=e[0];return typeof l=="function"?Gl(Ei(()=>({get:l,set:Lt}))):Y(l)}function zg(e,l=200,t={}){return Ji(Og(l,t),e)}function Ng(e,l=200,t=!1,n=!0,a=!1){return Ji(Jg(l,t,n,a),e)}function Hg(e,l,t={}){const{eventFilter:n=Go,...a}=t;return pe(e,Ji(n,l),a)}function Gg(e,l,t={}){const{eventFilter:n,...a}=t,{eventFilter:i,pause:s,resume:o,isActive:c}=Mg(n);return{stop:Hg(e,l,{...a,eventFilter:i}),pause:s,resume:o,isActive:c}}function da(e,l=!0,t){Bg()?we(e,t):l?e():st(e)}function Qg(e,l,t={}){const{immediate:n=!0}=t,a=Y(!1);let i=null;function s(){i&&(clearTimeout(i),i=null)}function o(){a.value=!1,s()}function c(...u){s(),a.value=!0,i=setTimeout(()=>{a.value=!1,i=null,e(...u)},He(l))}return n&&(a.value=!0,fn&&c()),rt(o),{isPending:Gl(a),start:c,stop:o}}function Xa(e=!1,l={}){const{truthyValue:t=!0,falsyValue:n=!1}=l,a=De(e),i=Y(e);function s(o){if(arguments.length)return i.value=o,i.value;{const c=He(t);return i.value=i.value===c?He(n):c,i.value}}return a?s:[i,s]}function wl(e){var l;const t=He(e);return(l=t==null?void 0:t.$el)!=null?l:t}const Hl=fn?window:void 0,Qo=fn?window.document:void 0,$o=fn?window.navigator:void 0;function Re(...e){let l,t,n,a;if(typeof e[0]=="string"||Array.isArray(e[0])?([t,n,a]=e,l=Hl):[l,t,n,a]=e,!l)return Lt;Array.isArray(t)||(t=[t]),Array.isArray(n)||(n=[n]);const i=[],s=()=>{i.forEach(d=>d()),i.length=0},o=(d,h,g,v)=>(d.addEventListener(h,g,v),()=>d.removeEventListener(h,g,v)),c=pe(()=>[wl(l),He(a)],([d,h])=>{if(s(),!d)return;const g=Rg(h)?{...h}:h;i.push(...t.flatMap(v=>n.map(f=>o(d,v,f,g))))},{immediate:!0,flush:"post"}),u=()=>{c(),s()};return rt(u),u}function $g(){const e=Y(!1),l=pn();return l&&we(()=>{e.value=!0},l),e}function bn(e){const l=$g();return y(()=>(l.value,!!e()))}function Ko(e,l={}){const{window:t=Hl}=l,n=bn(()=>t&&"matchMedia"in t&&typeof t.matchMedia=="function");let a;const i=Y(!1),s=u=>{i.value=u.matches},o=()=>{a&&("removeEventListener"in a?a.removeEventListener("change",s):a.removeListener(s))},c=Li(()=>{n.value&&(o(),a=t.matchMedia(He(e)),"addEventListener"in a?a.addEventListener("change",s):a.addListener(s),i.value=a.matches)});return rt(()=>{c(),o(),a=void 0}),i}function ar(e,l={}){const{controls:t=!1,navigator:n=$o}=l,a=bn(()=>n&&"permissions"in n);let i;const s=typeof e=="string"?{name:e}:e,o=Y(),c=()=>{i&&(o.value=i.state)},u=Fg(async()=>{if(a.value){if(!i)try{i=await n.permissions.query(s),Re(i,"change",c),c()}catch{o.value="prompt"}return i}});return u(),t?{state:o,isSupported:a,query:u}:o}function Kg(e={}){const{navigator:l=$o,read:t=!1,source:n,copiedDuring:a=1500,legacy:i=!1}=e,s=bn(()=>l&&"clipboard"in l),o=ar("clipboard-read"),c=ar("clipboard-write"),u=y(()=>s.value||i),d=Y(""),h=Y(!1),g=Qg(()=>h.value=!1,a);function v(){s.value&&b(o.value)?l.clipboard.readText().then(L=>{d.value=L}):d.value=w()}u.value&&t&&Re(["copy","cut"],v);async function f(L=He(n)){u.value&&L!=null&&(s.value&&b(c.value)?await l.clipboard.writeText(L):E(L),d.value=L,h.value=!0,g.start())}function E(L){const _=document.createElement("textarea");_.value=L??"",_.style.position="absolute",_.style.opacity="0",document.body.appendChild(_),_.select(),document.execCommand("copy"),_.remove()}function w(){var L,_,A;return(A=(_=(L=document==null?void 0:document.getSelection)==null?void 0:L.call(document))==null?void 0:_.toString())!=null?A:""}function b(L){return L==="granted"||L==="prompt"}return{isSupported:u,text:d,copied:h,copy:f}}const On=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Jn="__vueuse_ssr_handlers__",Ug=Wg();function Wg(){return Jn in On||(On[Jn]=On[Jn]||{}),On[Jn]}function Zg(e,l){return Ug[e]||l}function Yg(e){return e==null?"any":e instanceof Set?"set":e instanceof Map?"map":e instanceof Date?"date":typeof e=="boolean"?"boolean":typeof e=="string"?"string":typeof e=="object"?"object":Number.isNaN(e)?"any":"number"}const Xg={boolean:{read:e=>e==="true",write:e=>String(e)},object:{read:e=>JSON.parse(e),write:e=>JSON.stringify(e)},number:{read:e=>Number.parseFloat(e),write:e=>String(e)},any:{read:e=>e,write:e=>String(e)},string:{read:e=>e,write:e=>String(e)},map:{read:e=>new Map(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e.entries()))},set:{read:e=>new Set(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e))},date:{read:e=>new Date(e),write:e=>e.toISOString()}},ir="vueuse-storage";function Uo(e,l,t,n={}){var a;const{flush:i="pre",deep:s=!0,listenToStorageChanges:o=!0,writeDefaults:c=!0,mergeDefaults:u=!1,shallow:d,window:h=Hl,eventFilter:g,onError:v=q=>{console.error(q)},initOnMounted:f}=n,E=(d?Ce:Y)(typeof l=="function"?l():l);if(!t)try{t=Zg("getDefaultStorage",()=>{var q;return(q=Hl)==null?void 0:q.localStorage})()}catch(q){v(q)}if(!t)return E;const w=He(l),b=Yg(w),L=(a=n.serializer)!=null?a:Xg[b],{pause:_,resume:A}=Gg(E,()=>j(E.value),{flush:i,deep:s,eventFilter:g});h&&o&&da(()=>{Re(h,"storage",M),Re(h,ir,U),f&&M()}),f||M();function O(q,W){h&&h.dispatchEvent(new CustomEvent(ir,{detail:{key:e,oldValue:q,newValue:W,storageArea:t}}))}function j(q){try{const W=t.getItem(e);if(q==null)O(W,null),t.removeItem(e);else{const C=L.write(q);W!==C&&(t.setItem(e,C),O(W,C))}}catch(W){v(W)}}function H(q){const W=q?q.newValue:t.getItem(e);if(W==null)return c&&w!=null&&t.setItem(e,L.write(w)),w;if(!q&&u){const C=L.read(W);return typeof u=="function"?u(C,w):b==="object"&&!Array.isArray(C)?{...w,...C}:C}else return typeof W!="string"?W:L.read(W)}function M(q){if(!(q&&q.storageArea!==t)){if(q&&q.key==null){E.value=w;return}if(!(q&&q.key!==e)){_();try{(q==null?void 0:q.newValue)!==L.write(E.value)&&(E.value=H(q))}catch(W){v(W)}finally{q?st(A):A()}}}}function U(q){M(q.detail)}return E}function ev(e){return Ko("(prefers-color-scheme: dark)",e)}function lv(e,l,t={}){const{window:n=Hl,...a}=t;let i;const s=bn(()=>n&&"ResizeObserver"in n),o=()=>{i&&(i.disconnect(),i=void 0)},c=y(()=>Array.isArray(e)?e.map(h=>wl(h)):[wl(e)]),u=pe(c,h=>{if(o(),s.value&&n){i=new ResizeObserver(l);for(const g of h)g&&i.observe(g,a)}},{immediate:!0,flush:"post"}),d=()=>{o(),u()};return rt(d),{isSupported:s,stop:d}}function tv(e,l={width:0,height:0},t={}){const{window:n=Hl,box:a="content-box"}=t,i=y(()=>{var h,g;return(g=(h=wl(e))==null?void 0:h.namespaceURI)==null?void 0:g.includes("svg")}),s=Y(l.width),o=Y(l.height),{stop:c}=lv(e,([h])=>{const g=a==="border-box"?h.borderBoxSize:a==="content-box"?h.contentBoxSize:h.devicePixelContentBoxSize;if(n&&i.value){const v=wl(e);if(v){const f=n.getComputedStyle(v);s.value=Number.parseFloat(f.width),o.value=Number.parseFloat(f.height)}}else if(g){const v=Array.isArray(g)?g:[g];s.value=v.reduce((f,{inlineSize:E})=>f+E,0),o.value=v.reduce((f,{blockSize:E})=>f+E,0)}else s.value=h.contentRect.width,o.value=h.contentRect.height},t);da(()=>{const h=wl(e);h&&(s.value="offsetWidth"in h?h.offsetWidth:l.width,o.value="offsetHeight"in h?h.offsetHeight:l.height)});const u=pe(()=>wl(e),h=>{s.value=h?l.width:0,o.value=h?l.height:0});function d(){c(),u()}return{width:s,height:o,stop:d}}const sr=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function Mi(e,l={}){const{document:t=Qo,autoExit:n=!1}=l,a=y(()=>{var b;return(b=wl(e))!=null?b:t==null?void 0:t.querySelector("html")}),i=Y(!1),s=y(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(b=>t&&b in t||a.value&&b in a.value)),o=y(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(b=>t&&b in t||a.value&&b in a.value)),c=y(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(b=>t&&b in t||a.value&&b in a.value)),u=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(b=>t&&b in t),d=bn(()=>a.value&&t&&s.value!==void 0&&o.value!==void 0&&c.value!==void 0),h=()=>u?(t==null?void 0:t[u])===a.value:!1,g=()=>{if(c.value){if(t&&t[c.value]!=null)return t[c.value];{const b=a.value;if((b==null?void 0:b[c.value])!=null)return!!b[c.value]}}return!1};async function v(){if(!(!d.value||!i.value)){if(o.value)if((t==null?void 0:t[o.value])!=null)await t[o.value]();else{const b=a.value;(b==null?void 0:b[o.value])!=null&&await b[o.value]()}i.value=!1}}async function f(){if(!d.value||i.value)return;g()&&await v();const b=a.value;s.value&&(b==null?void 0:b[s.value])!=null&&(await b[s.value](),i.value=!0)}async function E(){await(i.value?v():f())}const w=()=>{const b=g();(!b||b&&h())&&(i.value=b)};return Re(t,sr,w,!1),Re(()=>wl(a),sr,w,!1),n&&rt(v),{isSupported:d,isFullscreen:i,enter:f,exit:v,toggle:E}}function Da(e){return typeof Window<"u"&&e instanceof Window?e.document.documentElement:typeof Document<"u"&&e instanceof Document?e.documentElement:e}function Wo(e){const l=window.getComputedStyle(e);if(l.overflowX==="scroll"||l.overflowY==="scroll"||l.overflowX==="auto"&&e.clientWidth<e.scrollWidth||l.overflowY==="auto"&&e.clientHeight<e.scrollHeight)return!0;{const t=e.parentNode;return!t||t.tagName==="BODY"?!1:Wo(t)}}function nv(e){const l=e||window.event,t=l.target;return Wo(t)?!1:l.touches.length>1?!0:(l.preventDefault&&l.preventDefault(),!1)}const Mn=new WeakMap;function Zo(e,l=!1){const t=Y(l);let n=null;pe(Vg(e),s=>{const o=Da(He(s));if(o){const c=o;Mn.get(c)||Mn.set(c,c.style.overflow),t.value&&(c.style.overflow="hidden")}},{immediate:!0});const a=()=>{const s=Da(He(e));!s||t.value||(nr&&(n=Re(s,"touchmove",o=>{nv(o)},{passive:!1})),s.style.overflow="hidden",t.value=!0)},i=()=>{var s;const o=Da(He(e));!o||!t.value||(nr&&(n==null||n()),o.style.overflow=(s=Mn.get(o))!=null?s:"",Mn.delete(o),t.value=!1)};return rt(i),y({get(){return t.value},set(s){s?a():i()}})}let av=0;function rr(e,l={}){const t=Y(!1),{document:n=Qo,immediate:a=!0,manual:i=!1,id:s=`vueuse_styletag_${++av}`}=l,o=Y(e);let c=()=>{};const u=()=>{if(!n)return;const h=n.getElementById(s)||n.createElement("style");h.isConnected||(h.id=s,l.media&&(h.media=l.media),n.head.appendChild(h)),!t.value&&(c=pe(o,g=>{h.textContent=g},{immediate:!0}),t.value=!0)},d=()=>{!n||!t.value||(c(),n.head.removeChild(n.getElementById(s)),t.value=!1)};return a&&!i&&da(u),i||rt(d),{id:s,css:o,unload:d,load:u,isLoaded:Gl(t)}}function iv(e={}){const{window:l=Hl,behavior:t="auto"}=e;if(!l)return{x:Y(0),y:Y(0)};const n=Y(l.scrollX),a=Y(l.scrollY),i=y({get(){return n.value},set(o){scrollTo({left:o,behavior:t})}}),s=y({get(){return a.value},set(o){scrollTo({top:o,behavior:t})}});return Re(l,"scroll",()=>{n.value=l.scrollX,a.value=l.scrollY},{capture:!1,passive:!0}),{x:i,y:s}}function sv(e={}){const{window:l=Hl,initialWidth:t=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:a=!0,includeScrollbar:i=!0}=e,s=Y(t),o=Y(n),c=()=>{l&&(i?(s.value=l.innerWidth,o.value=l.innerHeight):(s.value=l.document.documentElement.clientWidth,o.value=l.document.documentElement.clientHeight))};if(c(),da(c),Re("resize",c,{passive:!0}),a){const u=Ko("(orientation: portrait)");pe(u,()=>c())}return{width:s,height:o}}const Yo=({type:e="info",text:l="",vertical:t,color:n},{slots:a})=>{var i;return r("span",{class:["vp-badge",e,{diy:n}],style:{verticalAlign:t??!1,backgroundColor:n??!1}},((i=a.default)==null?void 0:i.call(a))||l)};Yo.displayName="Badge";var rv=F({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(e){const l=y(()=>{const n=["font-icon icon"],a=`iconfont icon-${e.icon}`;return n.push(a),n}),t=y(()=>{const n={};return e.color&&(n.color=e.color),e.size&&(n["font-size"]=Number.isNaN(Number(e.size))?e.size:`${e.size}px`),xl(n).length?n:null});return()=>e.icon?r("span",{key:e.icon,class:l.value,style:t.value}):null}});const ce=({name:e="",color:l="currentColor"},{slots:t})=>{var n;return r("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${e}-icon`],viewBox:"0 0 1024 1024",fill:l,"aria-label":`${e} icon`},(n=t.default)==null?void 0:n.call(t))};ce.displayName="IconBase";const Xo=(e,{slots:l})=>{var t;return(t=l.default)==null?void 0:t.call(l)},ec=()=>r(ce,{name:"github"},()=>r("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));ec.displayName="GitHubIcon";const lc=()=>r(ce,{name:"gitlab"},()=>r("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));lc.displayName="GitLabIcon";const tc=()=>r(ce,{name:"gitee"},()=>r("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));tc.displayName="GiteeIcon";const nc=()=>r(ce,{name:"bitbucket"},()=>r("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));nc.displayName="BitbucketIcon";const ac=()=>r(ce,{name:"source"},()=>r("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));ac.displayName="SourceIcon";const ha=(e,l)=>{let t=1;for(let n=0;n<e.length;n++)t+=e.charCodeAt(n),t+=t<<10,t^=t>>6;return t+=t<<3,t^=t>>11,t%l};let ov=class{constructor(){this.messageElements={};const l="message-container",t=document.getElementById(l);t?this.containerElement=t:(this.containerElement=document.createElement("div"),this.containerElement.id=l,document.body.appendChild(this.containerElement))}pop(l,t=2e3){const n=document.createElement("div"),a=Date.now();return n.className="message move-in",n.innerHTML=l,this.containerElement.appendChild(n),this.messageElements[a]=n,t>0&&setTimeout(()=>{this.close(a)},t),a}close(l){if(l){const t=this.messageElements[l];t.classList.remove("move-in"),t.classList.add("move-out"),t.addEventListener("animationend",()=>{t.remove(),delete this.messageElements[l]})}else xl(this.messageElements).forEach(t=>this.close(Number(t)))}destroy(){document.body.removeChild(this.containerElement)}};const ic=/#.*$/u,cv=e=>{const l=ic.exec(e);return l?l[0]:""},or=e=>decodeURI(e).replace(ic,"").replace(/\/index\.html$/iu,"/").replace(/\.html$/iu,"").replace(/(README|index)?\.md$/iu,""),sc=(e,l)=>{if(!Ig(l))return!1;const t=or(e.path),n=or(l),a=cv(l);return a?a===e.hash&&(!n||t===n):t===n},uv=e=>kl(e)?e:`https://github.com/${e}`,rc=e=>!kl(e)||/github\.com/.test(e)?"GitHub":/bitbucket\.org/.test(e)?"Bitbucket":/gitlab\.com/.test(e)?"GitLab":/gitee\.com/.test(e)?"Gitee":null;var pv=e=>Object.prototype.toString.call(e)==="[object Object]",ln=e=>typeof e=="string";const oc=Array.isArray,cr=e=>pv(e)&&ln(e.name),tn=(e,l=!1)=>e?oc(e)?e.map(t=>ln(t)?{name:t}:cr(t)?t:null).filter(t=>t!==null):ln(e)?[{name:e}]:cr(e)?[e]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${l?"":"| false"} | undefined\`, but got`,e),[]):[],cc=(e,l)=>{if(e){if(oc(e)&&e.every(ln))return e;if(ln(e))return[e];console.error(`Expect ${l||"value"} to be \`string[] | string | undefined\`, but got`,e)}return[]},uc=e=>cc(e,"category"),pc=e=>cc(e,"tag"),dc=()=>r(ce,{name:"close"},()=>r("path",{d:"m925.468 822.294-303.27-310.288L925.51 201.674c34.683-27.842 38.3-75.802 8.122-107.217-30.135-31.37-82.733-34.259-117.408-6.463L512.001 399.257 207.777 87.993C173.1 60.197 120.504 63.087 90.369 94.456c-30.179 31.415-26.561 79.376 8.122 107.217L401.8 512.005l-303.27 310.29c-34.724 27.82-38.34 75.846-8.117 107.194 30.135 31.437 82.729 34.327 117.408 6.486L512 624.756l304.177 311.22c34.68 27.84 87.272 24.95 117.408-6.487 30.223-31.348 26.56-79.375-8.118-107.195z"}));dc.displayName="CloseIcon";var dv=F({name:"NoticeItem",props:{path:{type:String,default:""},match:{type:String,default:""},title:{type:String,required:!0},content:{type:String,required:!0},actions:{type:Array,default:()=>[]},noticeKey:{type:String,default:""},showOnce:Boolean,confirm:Boolean,fullscreen:Boolean},setup(e){const l=Al(),t=jl(),n=Y(!1),a=y(()=>e.noticeKey?`notice-${e.noticeKey}`:`${e.title}${e.content}`),i=y(()=>e.match?new RegExp(e.match).test(l.path):nt(l.path,e.path));we(()=>{const c=(e.showOnce?localStorage:sessionStorage).getItem(a.value);n.value=!c});const s=()=>{n.value=!1,(e.showOnce?localStorage:sessionStorage).setItem(a.value,"true")},o=c=>{c&&(mn(c)?t.push(c):kl(c)&&window.open(c)),s()};return()=>r(Lo,{name:"notice-fade"},()=>i.value&&n.value?[e.fullscreen?r("div",{key:"mask",class:"vp-notice-mask",onClick:()=>{e.confirm||s()}}):null,r("div",{key:"popup",class:["vp-notice-wrapper",{fullscreen:e.fullscreen}]},[r("header",{class:"vp-notice-title"},[e.confirm?null:r(dc,{onClick:()=>s()}),r("span",{innerHTML:e.title})]),r("div",{class:"vp-notice-content",innerHTML:e.content}),r("div",{class:"vp-notice-footer"},e.actions.map(({text:c,link:u,type:d=""})=>r("button",{type:"button",class:["vp-notice-footer-action",d],onClick:()=>o(u),innerHTML:c})))])]:[])}});const ei=({config:e})=>{const l=ve(),t=e.find(n=>"match"in n?new RegExp(n.match).test(l.value.path):nt(l.value.path,n.path));return t?r(dv,t):null};ei.displayName="Notice",ei.props={config:{type:Array,required:!0}};const hv=We({enhance:({app:e})=>{cl("Badge")||e.component("Badge",Yo),cl("FontIcon")||e.component("FontIcon",rv)},setup:()=>{rr(`@import url("//at.alicdn.com/t/c/font_2922463_o9q9dxmps9.css");
`),rr(`@import url("//at.alicdn.com/t/c/font_4538387_jptdkvlxwy.css");
`)},rootComponents:[()=>r(ei,{config:[{path:"/",title:"2023技术年货汇总",showOnce:!0,content:"抽空整理了一些优秀的技术团队公众号 2023 年的优质技术文章汇总，质量都挺高的，强烈建议打开这篇文章看看。",actions:[{text:"开始阅读",link:"https://www.yuque.com/snailclimb/dr6cvl/nt5qc467p3t6s13k?singleDoc# 《2023技术年货》",type:"primary"}]}]})]}),ur=async(e,l)=>{const{path:t,query:n}=e.currentRoute.value,{scrollBehavior:a}=e.options;e.options.scrollBehavior=void 0,await e.replace({path:t,query:n,hash:l}),e.options.scrollBehavior=a},gv=({headerLinkSelector:e,headerAnchorSelector:l,delay:t,offset:n=5})=>{const a=jl();Re("scroll",zg(()=>{var f,E;const s=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(s-0)<n){ur(a,"");return}const c=window.innerHeight+s,u=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),d=Math.abs(u-c)<n,h=Array.from(document.querySelectorAll(e)),v=Array.from(document.querySelectorAll(l)).filter(w=>h.some(b=>b.hash===w.hash));for(let w=0;w<v.length;w++){const b=v[w],L=v[w+1],_=s>=(((f=b.parentElement)==null?void 0:f.offsetTop)??0)-n,A=!L||s<(((E=L.parentElement)==null?void 0:E.offsetTop)??0)-n;if(!(_&&A))continue;const j=decodeURIComponent(a.currentRoute.value.hash),H=decodeURIComponent(b.hash);if(j===H)return;if(d){for(let M=w+1;M<v.length;M++)if(j===decodeURIComponent(v[M].hash))return}ur(a,H);return}},t))},vv=".vp-sidebar-link, .vp-toc-link",kv=".header-anchor",mv=200,fv=5,bv=We({setup(){gv({headerLinkSelector:vv,headerAnchorSelector:kv,delay:mv,offset:fv})}});let hc=e=>ye(e.title)?{title:e.title}:null;const gc=Symbol(""),_v=e=>{hc=e},yv=()=>_e(gc),wv=e=>{e.provide(gc,hc)};var Ev={"/":{title:"目录",empty:"暂无目录"}};const xv=F({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(e){const l=yv(),t=Pt(Ev),n=ve(),a=Lg(),i=Bo(),o=Ce(kn(a.value).map(([u,{meta:d}])=>{const h=l(d);if(!h)return null;const g=u.split("/").length;return{level:qg(u,"/")?g-2:g-1,base:u.replace(/\/[^/]+\/?$/,"/"),path:u,...h}}).filter(u=>gn(u)&&ye(u.title))),c=y(()=>{const u=e.base?ph(jo(e.base)):n.value.path.replace(/\/[^/]+$/,"/"),d=u.split("/").length-2,h=[];return o.value.filter(({level:g,path:v})=>{if(!nt(v,u)||v===u)return!1;if(u==="/"){const f=xl(i.value.locales).filter(E=>E!=="/");if(v==="/404.html"||f.some(E=>nt(v,E)))return!1}return g-d<=e.level}).sort(({title:g,level:v,order:f},{title:E,level:w,order:b})=>{const L=v-w;return L||(qa(f)?qa(b)?f>0?b>0?f-b:-1:b<0?f-b:1:f:qa(b)?b:g.localeCompare(E))}).forEach(g=>{var E;const{base:v,level:f}=g;switch(f-d){case 1:{h.push(g);break}case 2:{const w=h.find(b=>b.path===v);w&&(w.children??(w.children=[])).push(g);break}default:{const w=h.find(b=>b.path===v.replace(/\/[^/]+\/$/,"/"));if(w){const b=(E=w.children)==null?void 0:E.find(L=>L.path===v);b&&(b.children??(b.children=[])).push(g)}}}}),h});return()=>{const u=c.value.some(d=>d.children);return r("div",{class:["vp-catalog-wrapper",{index:e.index}]},[e.hideHeading?null:r("h2",{class:"vp-catalog-main-title"},t.value.title),c.value.length?r(e.index?"ol":"ul",{class:["vp-catalogs",{deep:u}]},c.value.map(({children:d=[],title:h,path:g,content:v})=>{const f=r(Ae,{class:"vp-catalog-title",to:g},()=>v?r(v):h);return r("li",{class:"vp-catalog"},u?[r("h3",{id:h,class:["vp-catalog-child-title",{"has-children":d.length}]},[r("a",{href:`#${h}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),f]),d.length?r(e.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:E=[],content:w,path:b,title:L})=>r("li",{class:"vp-child-catalog"},[r("div",{class:["vp-catalog-sub-title",{"has-children":E.length}]},[r("a",{href:`#${L}`,class:"vp-catalog-header-anchor"},"#"),r(Ae,{class:"vp-catalog-title",to:b},()=>w?r(w):L)]),E.length?r(e.index?"ol":"div",{class:e.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},E.map(({content:_,path:A,title:O})=>e.index?r("li",{class:"vp-sub-catalog"},r(Ae,{to:A},()=>_?r(_):O)):r(Ae,{class:"vp-sub-catalog-link",to:A},()=>_?r(_):O))):null]))):null]:r("div",{class:"vp-catalog-child-title"},f))})):r("p",{class:"vp-empty-catalog"},t.value.empty)])}}}),Lv=We({enhance:({app:e})=>{wv(e),cl("Catalog",e)||e.component("Catalog",xv)}});var jv={"/":{backToTop:"返回顶部"}};const Av=F({name:"BackToTop",setup(e){const l=ke(),t=Pt(jv),n=Ce(),{height:a}=tv(n),{height:i}=sv(),{y:s}=iv(),o=y(()=>l.value.backToTop!==!1&&s.value>100),c=y(()=>s.value/(a.value-i.value)*100);return we(()=>{n.value=document.body}),()=>r(Nl,{name:"back-to-top"},()=>o.value?r("button",{type:"button",class:"vp-back-to-top-button","aria-label":t.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[r("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":c.value},r("svg",r("circle",{cx:"50%",cy:"50%",style:{"stroke-dasharray":`calc(${Math.PI*c.value}% - ${4*Math.PI}px) calc(${Math.PI*100}% - ${4*Math.PI}px)`}}))),r("div",{class:"back-to-top-icon"})]):null)}}),Sv=We({rootComponents:[Av]}),Pv=r("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[r("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),r("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),vc=F({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(e){const l=fl(),t=y(()=>e.locales[l.value]??{openInNewWindow:"open in new window"});return()=>r("span",[Pv,r("span",{class:"external-link-icon-sr-only"},t.value.openInNewWindow)])}});var Tv={};const Iv=Tv,qv=We({enhance({app:e}){e.component("ExternalLinkIcon",r(vc,{locales:Iv}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const re={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:e=>{const l=re.isStarted();e=Ra(e,re.settings.minimum,1),re.status=e===1?null:e;const t=re.render(!l),n=t.querySelector(re.settings.barSelector),a=re.settings.speed,i=re.settings.easing;return t.offsetWidth,Dv(s=>{Fn(n,{transform:"translate3d("+pr(e)+"%,0,0)",transition:"all "+a+"ms "+i}),e===1?(Fn(t,{transition:"none",opacity:"1"}),t.offsetWidth,setTimeout(function(){Fn(t,{transition:"all "+a+"ms linear",opacity:"0"}),setTimeout(function(){re.remove(),s()},a)},a)):setTimeout(()=>s(),a)}),re},isStarted:()=>typeof re.status=="number",start:()=>{re.status||re.set(0);const e=()=>{setTimeout(()=>{re.status&&(re.trickle(),e())},re.settings.trickleSpeed)};return re.settings.trickle&&e(),re},done:e=>!e&&!re.status?re:re.inc(.3+.5*Math.random()).set(1),inc:e=>{let l=re.status;return l?(typeof e!="number"&&(e=(1-l)*Ra(Math.random()*l,.1,.95)),l=Ra(l+e,0,.994),re.set(l)):re.start()},trickle:()=>re.inc(Math.random()*re.settings.trickleRate),render:e=>{if(re.isRendered())return document.getElementById("nprogress");dr(document.documentElement,"nprogress-busy");const l=document.createElement("div");l.id="nprogress",l.innerHTML=re.settings.template;const t=l.querySelector(re.settings.barSelector),n=e?"-100":pr(re.status||0),a=document.querySelector(re.settings.parent);return Fn(t,{transition:"all 0 linear",transform:"translate3d("+n+"%,0,0)"}),a!==document.body&&dr(a,"nprogress-custom-parent"),a==null||a.appendChild(l),l},remove:()=>{hr(document.documentElement,"nprogress-busy"),hr(document.querySelector(re.settings.parent),"nprogress-custom-parent");const e=document.getElementById("nprogress");e&&Rv(e)},isRendered:()=>!!document.getElementById("nprogress")},Ra=(e,l,t)=>e<l?l:e>t?t:e,pr=e=>(-1+e)*100,Dv=function(){const e=[];function l(){const t=e.shift();t&&t(l)}return function(t){e.push(t),e.length===1&&l()}}(),Fn=function(){const e=["Webkit","O","Moz","ms"],l={};function t(s){return s.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(o,c){return c.toUpperCase()})}function n(s){const o=document.body.style;if(s in o)return s;let c=e.length;const u=s.charAt(0).toUpperCase()+s.slice(1);let d;for(;c--;)if(d=e[c]+u,d in o)return d;return s}function a(s){return s=t(s),l[s]??(l[s]=n(s))}function i(s,o,c){o=a(o),s.style[o]=c}return function(s,o){for(const c in o){const u=o[c];u!==void 0&&Object.prototype.hasOwnProperty.call(o,c)&&i(s,c,u)}}}(),kc=(e,l)=>(typeof e=="string"?e:Fi(e)).indexOf(" "+l+" ")>=0,dr=(e,l)=>{const t=Fi(e),n=t+l;kc(t,l)||(e.className=n.substring(1))},hr=(e,l)=>{const t=Fi(e);if(!kc(e,l))return;const n=t.replace(" "+l+" "," ");e.className=n.substring(1,n.length-1)},Fi=e=>(" "+(e.className||"")+" ").replace(/\s+/gi," "),Rv=e=>{e&&e.parentNode&&e.parentNode.removeChild(e)},Cv=()=>{we(()=>{const e=jl(),l=new Set;l.add(e.currentRoute.value.path),e.beforeEach(t=>{l.has(t.path)||re.start()}),e.afterEach(t=>{l.add(t.path),re.done()})})},Ov=We({setup(){Cv()}}),Jv=JSON.parse('{"encrypt":{},"logo":"/logo.png","author":{"name":"Guide","url":"https://javaguide.cn/article/"},"repo":"https://github.com/Snailclimb/JavaGuide","docsDir":"docs","pure":true,"breadcrumb":false,"displayFooter":true,"pageInfo":["Author","Category","Tag","Original","Word","ReadingTime"],"blog":{"intro":"/about-the-author/","sidebarDisplay":"mobile","medias":{"Zhihu":"https://www.zhihu.com/people/javaguide","Github":"https://github.com/Snailclimb","Gitee":"https://gitee.com/SnailClimb"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"面试指南","icon":"java","link":"/home.md"},{"text":"开源项目","icon":"github","link":"/open-source-project/"},{"text":"技术书籍","icon":"book","link":"/books/"},{"text":"项目实践","icon":"computer","link":"/projects/"},{"text":"计算机必备知识","icon":"book","link":"/knowledge/"}],"sidebar":{"/open-source-project/":[{"text":"技术教程","link":"tutorial","icon":"book"},{"text":"实战项目","link":"practical-project","icon":"project"},{"text":"系统设计","link":"system-design","icon":"design"},{"text":"工具类库","link":"tool-library","icon":"codelibrary-fill"},{"text":"开发工具","link":"tools","icon":"tool"},{"text":"机器学习","link":"machine-learning","icon":"a-MachineLearning"},{"text":"大数据","link":"big-data","icon":"big-data"}],"/books/":[{"text":"计算机基础","link":"cs-basics","icon":"computer"},{"text":"数据库","link":"database","icon":"database"},{"text":"搜索引擎","link":"search-engine","icon":"search"},{"text":"Java","link":"java","icon":"java"},{"text":"软件质量","link":"software-quality","icon":"highavailable"},{"text":"分布式","link":"distributed-system","icon":"distributed-network"}],"/about-the-author/":[{"text":"个人经历","icon":"experience","collapsible":false,"children":["internet-addiction-teenager","my-college-life","javaguide-100k-star","feelings-after-one-month-of-induction-training","feelings-of-half-a-year-from-graduation-to-entry"]},{"text":"杂谈","icon":"chat","collapsible":false,"children":["writing-technology-blog-six-years","my-article-was-stolen-and-made-into-video-and-it-became-popular","dog-that-copies-other-people-essay","zhishixingqiu-two-years"]}],"/high-quality-technical-articles/":[{"text":"练级攻略","icon":"et-performance","prefix":"advanced-programmer/","collapsible":false,"children":["programmer-quickly-learn-new-technology","the-growth-strategy-of-the-technological-giant","ten-years-of-dachang-growth-road","meituan-three-year-summary-lesson-10","seven-tips-for-becoming-an-advanced-programmer","20-bad-habits-of-bad-programmers","thinking-about-technology-and-business-after-five-years-of-work"]},{"text":"个人经历","icon":"experience","prefix":"personal-experience/","collapsible":false,"children":["four-year-work-in-tencent-summary","two-years-of-back-end-develop--experience-in-didi-and-toutiao","8-years-programmer-work-summary","huawei-od-275-days"]},{"text":"程序员","icon":"code","prefix":"programmer/","collapsible":false,"children":["how-do-programmers-publish-a-technical-book","efficient-book-publishing-and-practice-guide"]},{"text":"面试","icon":"interview","prefix":"interview/","collapsible":true,"children":["the-experience-of-get-offer-from-over-20-big-companies","the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer","technical-preliminary-preparation","screen-candidates-for-packaging","summary-of-spring-recruitment","my-personal-experience-in-2021","how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology","some-secrets-about-alibaba-interview"]},{"text":"工作","icon":"work","prefix":"work/","collapsible":true,"children":["get-into-work-mode-quickly-when-you-join-a-company","32-tips-improving-career","employee-performance"]}],"/zhuanlan/":["java-mian-shi-zhi-bei","back-end-interview-high-frequency-system-design-and-scenario-questions","handwritten-rpc-framework","source-code-reading"],"/projects/":[{"text":"综合项目实践","link":"general-projects"},{"text":"大创","link":"WebAPI"}],"/":[{"text":"必看","icon":"star","collapsible":true,"prefix":"javaguide/","children":["intro","use-suggestion","contribution-guideline","faq"]},{"text":"面试准备","icon":"interview","collapsible":true,"prefix":"interview-preparation/","children":["teach-you-how-to-prepare-for-the-interview-hand-in-hand","resume-guide","key-points-of-interview","project-experience-guide","interview-experience","self-test-of-common-interview-questions"]},{"text":"Linux","icon":"linux","collapsible":true,"prefix":"linux/","children":["basis","bash","daemon","rpm",{"text":"slurm","icon":"star","collapsible":true,"prefix":"slurm/","children":["basis"]}]},{"text":"Node","icon":"Nodejs","collapsible":true,"prefix":"node/","children":["package-manager",{"text":"markdown扩展","collapsible":true,"prefix":"markdown/","children":["markdownit"]}]},{"text":"Vcs","icon":"banbenkongzhi","collapsible":true,"prefix":"vcs/","children":["git"]},{"text":"神经网络","icon":"shenjingwangluo","collapsible":true,"prefix":"neural-network/","children":["basis",{"text":"Transformer","icon":"Transformer","collapsible":true,"prefix":"transformer/","children":["basis","encoder"]}]},{"text":"Web技术","collapsible":true,"prefix":"web/","children":[{"text":"CSS层叠样式表","collapsible":true,"prefix":"css/","children":["box-model"]},{"text":"JavaScript","collapsible":true,"prefix":"javascript/","children":["javascript-basis","javascript-extension"]},"webrtc"]},{"text":"C++","collapsible":true,"prefix":"c++/","children":["headFile","function","array","stream"]},{"text":".Net","collapsible":true,"prefix":"net/","children":["basis",{"text":"c#","collapsible":true,"prefix":"csharp/","children":["task","delegate"]}]},{"text":"Java","icon":"java","collapsible":true,"prefix":"java/","children":[{"text":"基础","prefix":"basis/","icon":"basic","children":["java-basic-questions-01","java-basic-questions-02","java-basic-questions-03",{"text":"重要知识点","icon":"star","collapsible":true,"children":["why-there-only-value-passing-in-java","serialization","generics-and-wildcards","reflection","proxy","bigdecimal","unsafe","spi","syntactic-sugar"]},{"text":"Java语法","collapsible":true,"children":["syntax"]}]},{"text":"集合","prefix":"collection/","icon":"container","children":["java-collection-questions-01","java-collection-questions-02","java-collection-precautions-for-use",{"text":"源码分析","icon":"star","collapsible":true,"children":["arraylist-source-code","linkedlist-source-code","hashmap-source-code","concurrent-hash-map-source-code","linkedhashmap-source-code","copyonwritearraylist-source-code","arrayblockingqueue-source-code","priorityqueue-source-code","delayqueue-source-code"]}]},{"text":"并发编程","prefix":"concurrent/","icon":"et-performance","children":["java-concurrent-questions-01","java-concurrent-questions-02","java-concurrent-questions-03",{"text":"重要知识点","icon":"star","collapsible":true,"children":["java-thread-point","optimistic-lock-and-pessimistic-lock","jmm","java-thread-pool-summary","java-thread-pool-best-practices","java-concurrent-collections","aqs","atomic-classes","threadlocal","completablefuture-intro","virtual-thread"]}]},{"text":"IO","prefix":"io/","icon":"code","collapsible":true,"children":["io-basis","io-design-patterns","io-model","nio-basis"]},{"text":"JVM","prefix":"jvm/","icon":"virtual_machine","collapsible":true,"children":["memory-area","jvm-garbage-collection","class-file-structure","class-loading-process","classloader","jvm-parameters-intro","jdk-monitoring-and-troubleshooting-tools","jvm-in-action"]},{"text":"新特性","prefix":"new-features/","icon":"featured","collapsible":true,"children":["java8-common-new-features","java8-tutorial-translate","java9","java10","java11","java12-13","java14-15","java16","java17","java18","java19","java20","java21"]},{"text":"servlet","prefix":"servlet/","collapsible":true,"children":["basis"]},{"text":"network","prefix":"network/","collapsible":true,"children":["tcp","udp"]}]},{"text":"软件工程","prefix":"software-project/","collapsible":true,"children":[{"text":"软件项目管理","prefix":"project-management","collapsible":true,"children":["intro","project-estimate","project-process-and-cost-management"]}]},{"text":"计算机基础","icon":"computer","prefix":"cs-basics/","collapsible":true,"children":[{"text":"网络","prefix":"network/","icon":"network","children":["other-network-questions","other-network-questions2",{"text":"Authentication","collapsible":true,"prefix":"authentication/","children":["credential","federated-identity","mobile-device-authentication"]},{"text":"重要知识点","icon":"star","collapsible":true,"children":["osi-and-tcp-ip-model","the-whole-process-of-accessing-web-pages","application-layer-protocol","http-vs-https","http1.0-vs-http1.1","http-status-codes","dns","tcp-basis","tcp-connection-and-disconnection","tcp-reliability-guarantee","arp","nat","network-attack-means"]}]},{"text":"操作系统","prefix":"operating-system/","icon":"caozuoxitong","children":["operating-system-basic-questions-01","operating-system-basic-questions-02",{"text":"Linux","collapsible":true,"icon":"linux","children":["linux-intro","shell-intro"]}]},{"text":"数据结构","prefix":"data-structure/","icon":"people-network-full","collapsible":true,"children":["linear-data-structure","graph","heap","tree","red-black-tree","bloom-filter"]},{"text":"算法","prefix":"algorithms/","icon":"suanfaku","collapsible":true,"children":[{"text":"模版","prefix":"model/","collapsible":true,"children":["math","graph","dp","greedy"]},"classical-algorithm-problems-recommendations","common-data-structures-leetcode-recommendations","string-algorithm-problems","linkedlist-algorithm-problems","the-sword-refers-to-offer","10-classical-sorting-algorithms"]}]},{"text":"数据库","icon":"database","prefix":"database/","collapsible":true,"children":[{"text":"基础","icon":"basic","children":["basis","nosql","character-set",{"text":"SQL","icon":"SQL","prefix":"sql/","collapsible":true,"children":["sql-syntax-summary","sql-questions-01","sql-questions-02","sql-questions-03","sql-questions-04","sql-questions-05"]}]},{"text":"MySQL","prefix":"mysql/","icon":"mysql","children":["mysql-questions-01","mysql-high-performance-optimization-specification-recommendations",{"text":"重要知识点","icon":"star","collapsible":true,"children":["mysql-index",{"text":"MySQL三大日志详解","link":"mysql-logs"},"transaction-isolation-level","innodb-implementation-of-mvcc","how-sql-executed-in-mysql","mysql-query-cache","mysql-query-execution-plan","mysql-auto-increment-primary-key-continuous","some-thoughts-on-database-storage-time","index-invalidation-caused-by-implicit-conversion"]}]},{"text":"Redis","prefix":"redis/","icon":"redis","children":["cache-basics","redis-questions-01","redis-questions-02",{"text":"重要知识点","icon":"star","collapsible":true,"children":["redis-basis","redis-delayed-task","3-commonly-used-cache-read-and-write-strategies","redis-data-structures-01","redis-data-structures-02","redis-skiplist","redis-persistence","redis-memory-fragmentation","redis-common-blocking-problems-summary","redis-cluster"]}]},{"text":"Elasticsearch","prefix":"elasticsearch/","icon":"elasticsearch","collapsible":true,"children":["elasticsearch-questions-01"]},{"text":"MongoDB","prefix":"mongodb/","icon":"mongodb","collapsible":true,"children":["mongodb-questions-01","mongodb-questions-02"]}]},{"text":"开发工具","icon":"tool","prefix":"tools/","collapsible":true,"children":[{"text":"Maven","icon":"configuration","prefix":"maven/","children":["maven-core-concepts","maven-best-practices"]},{"text":"Gradle","icon":"gradle","prefix":"gradle/","children":["gradle-core-concepts"]},{"text":"Git","icon":"git","prefix":"git/","children":["git-intro","github-tips"]},{"text":"Docker","icon":"docker1","prefix":"docker/","children":["docker-intro","docker-in-action"]},{"text":"Genkins","prefix":"genkins/","children":["basis","practice"]},{"text":"IDEA","icon":"intellijidea","link":"https://gitee.com/SnailClimb/awesome-idea-tutorial"}]},{"text":"常用框架","prefix":"system-design/framework/","icon":"component","collapsible":true,"children":[{"text":"Spring&Spring Boot","icon":"bxl-spring-boot","prefix":"spring/","children":["spring-knowledge-and-questions-summary","springboot-knowledge-and-questions-summary","spring-common-annotations","springboot-source-code",{"text":"重要知识点","icon":"star","collapsible":true,"children":["ioc-and-aop","spring-transaction","spring-design-patterns-summary","spring-boot-auto-assembly-principles"]}]},{"text":"Vue","prefix":"vue/","collapsible":true,"children":["storage","slot","typescript"]},"mybatis/mybatis-interview","netty"]},{"text":"系统设计","icon":"design","prefix":"system-design/","collapsible":true,"children":[{"text":"基础知识","prefix":"basis/","icon":"basic","collapsible":true,"children":["RESTfulAPI","software-engineering","naming","refactoring",{"text":"单元测试指南","link":"unit-test"}]},{"text":"设计模式","prefix":"designMode/","collapsible":true,"children":["reactorDesign"]},{"text":"认证授权","prefix":"security/","icon":"security-fill","collapsible":true,"children":["basis-of-authority-certification","jwt-intro","advantages-and-disadvantages-of-jwt","sso-intro","design-of-authority-system"]},{"text":"数据安全","prefix":"security/","icon":"security-fill","collapsible":true,"children":["encryption-algorithms","sentive-words-filter","data-desensitization"]},"system-design-questions","design-pattern","schedule-task","web-real-time-message-push"]},{"text":"分布式","icon":"distributed-network","prefix":"distributed-system/","collapsible":true,"children":[{"text":"理论&算法&协议","icon":"suanfaku","prefix":"protocol/","collapsible":true,"children":["cap-and-base-theorem","paxos-algorithm","raft-algorithm","gossip-protocl"]},{"text":"API网关","icon":"gateway","children":["api-gateway","spring-cloud-gateway-questions"]},{"text":"分布式ID","icon":"id","children":["distributed-id","distributed-id-design"]},{"text":"分布式锁","icon":"lock","children":["distributed-lock","distributed-lock-implementations"]},{"text":"分布式事务","icon":"transanction","children":["distributed-transaction"]},{"text":"分布式配置中心","icon":"configuration","children":["distributed-configuration-center"]},{"text":"RPC","prefix":"rpc/","icon":"network","collapsible":true,"children":["rpc-intro","dubbo"]},{"text":"ZooKeeper","prefix":"distributed-process-coordination/zookeeper/","icon":"framework","collapsible":true,"children":["zookeeper-intro","zookeeper-plus"]}]},{"text":"高性能","icon":"et-performance","prefix":"high-performance/","collapsible":true,"children":[{"text":"CDN","icon":"cdn","children":["cdn"]},{"text":"负载均衡","icon":"fuzaijunheng","children":["load-balancing"]},{"text":"数据库优化","icon":"mysql","children":["read-and-write-separation-and-library-subtable","data-cold-hot-separation","sql-optimization","deep-pagination-optimization"]},{"text":"消息队列","prefix":"message-queue/","icon":"MQ","collapsible":true,"children":["message-queue","disruptor-questions","kafka-questions-01","rocketmq-questions","rabbitmq-questions"]}]},{"text":"高可用","icon":"highavailable","prefix":"high-availability/","collapsible":true,"children":["high-availability-system-design","redundancy","limit-request","fallback-and-circuit-breaker","timeout-and-retry","performance-test"]}]}}}}'),Mv=Y(Jv),mc=()=>Mv,fc=Symbol(""),Fv=()=>{const e=_e(fc);if(!e)throw new Error("useThemeLocaleData() is called without provider.");return e},Bv=(e,l)=>{const{locales:t,...n}=e;return{...n,...t==null?void 0:t[l]}},Vv=We({enhance({app:e}){const l=mc(),t=e._context.provides[Ci],n=y(()=>Bv(l.value,t.routeLocale.value));e.provide(fc,n),Object.defineProperties(e.config.globalProperties,{$theme:{get(){return l.value}},$themeLocale:{get(){return n.value}}})}}),zv=/\b(?:Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini)/i,Nv=()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator&&zv.test(navigator.userAgent),Hv=({delay:e=500,duration:l=2e3,locales:t,selector:n,showInMobile:a})=>{const{copy:i,copied:s}=Kg({legacy:!0,copiedDuring:l}),o=Pt(t),c=ve(),u=g=>{if(!g.hasAttribute("copy-code-registered")){const v=document.createElement("button");v.type="button",v.classList.add("vp-copy-code-button"),v.innerHTML='<div class="vp-copy-icon" />',v.setAttribute("aria-label",o.value.copy),v.setAttribute("data-copied",o.value.copied),g.parentElement&&g.parentElement.insertBefore(v,g),g.setAttribute("copy-code-registered","")}},d=()=>{st().then(()=>No(e)).then(()=>{n.forEach(g=>{document.querySelectorAll(g).forEach(u)})})},h=(g,v,f)=>{let{innerText:E=""}=v;/language-(shellscript|shell|bash|sh|zsh)/.test(g.classList.toString())&&(E=E.replace(/^ *(\$|>) /gm,"")),i(E).then(()=>{f.classList.add("copied"),pe(s,()=>{f.classList.remove("copied"),f.blur()},{once:!0})})};we(()=>{const g=!Nv()||a;g&&d(),Re("click",v=>{const f=v.target;if(f.matches('div[class*="language-"] > button.copy')){const E=f.parentElement,w=f.nextElementSibling;w&&h(E,w,f)}else if(f.matches('div[class*="language-"] div.vp-copy-icon')){const E=f.parentElement,w=E.parentElement,b=E.nextElementSibling;b&&h(w,b,E)}}),pe(()=>c.value.path,()=>{g&&d()})})};var Gv={"/":{copy:"复制代码",copied:"已复制"}},Qv=['.theme-hope-content div[class*="language-"] pre'];const $v=500,Kv=2e3,Uv=Gv,Wv=Qv,Zv=!1,Yv=We({setup:()=>{Hv({selector:Wv,locales:Uv,duration:Kv,delay:$v,showInMobile:Zv})}});var Xv={"/":{author:"著作权归:author所有",license:"基于:license协议",link:"原文链接：:link"}},ek={canonical:"https://javaguide.cn/",author:"JavaGuide(javaguide.cn)",license:"MIT",global:!0,disableCopy:!1,disableSelection:!1,triggerLength:100,maxLength:700};const Dl=ek,{canonical:Bn}=Dl,lk=()=>{const e=ke(),l=Pt(Xv),t=ve(),n=y(()=>!!e.value.copy||e.value.copy!==!1&&Dl.global),a=y(()=>gn(e.value.copy)?e.value.copy:null),i=y(()=>{var v;return((v=a.value)==null?void 0:v.disableCopy)??Dl.disableCopy}),s=y(()=>{var v;return n.value?((v=a.value)==null?void 0:v.disableSelection)??Dl.disableSelection:!1}),o=y(()=>{var v;return n.value?((v=a.value)==null?void 0:v.maxLength)??Dl.maxLength:0}),c=y(()=>{var v;return((v=a.value)==null?void 0:v.triggerLength)??Dl.triggerLength}),u=()=>Bn?`${oa(kl(Bn)?Bn:`https://${Bn}`)}${t.value.path}`:window.location.href,d=(v,f)=>{const{author:E,license:w,link:b}=l.value;return[v?E.replace(":author",v):"",f?w.replace(":license",f):"",b.replace(":link",u())].filter(L=>L).join(`
`)},h=()=>{if(ye(t.value.copyright))return t.value.copyright.replace(":link",u());const{author:v,license:f}=t.value.copyright||{};return d(v??Dl.author,f??Dl.license)},g=v=>{const f=getSelection();if(f){const E=f.getRangeAt(0);if(n.value){const w=E.toString().length;if(i.value||o.value&&w>o.value)return v.preventDefault();if(w>=c.value){v.preventDefault();const b=h(),L=document.createElement("div");L.appendChild(f.getRangeAt(0).cloneContents()),v.clipboardData&&(v.clipboardData.setData("text/html",`${L.innerHTML}<hr><div class="copyright">${b.replace(/\\n/g,"<br>")}</div>`),v.clipboardData.setData("text/plain",`${f.getRangeAt(0).cloneContents().textContent||""}
------
${b}`))}}}};we(()=>{const v=document.querySelector("#app");Re(v,"copy",g),Li(()=>{v.style.userSelect=s.value?"none":"auto"})})},tk=We({setup:()=>{lk()}}),Vn=Uo("VUEPRESS_CODE_TAB_STORE",{});var nk=F({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(e,{slots:l}){const t=Y(e.active),n=Ce([]),a=()=>{e.tabId&&(Vn.value[e.tabId]=e.data[t.value].id)},i=(u=t.value)=>{t.value=u<n.value.length-1?u+1:0,n.value[t.value].focus()},s=(u=t.value)=>{t.value=u>0?u-1:n.value.length-1,n.value[t.value].focus()},o=(u,d)=>{u.key===" "||u.key==="Enter"?(u.preventDefault(),t.value=d):u.key==="ArrowRight"?(u.preventDefault(),i()):u.key==="ArrowLeft"&&(u.preventDefault(),s()),e.tabId&&(Vn.value[e.tabId]=e.data[t.value].id)},c=()=>{if(e.tabId){const u=e.data.findIndex(({id:d})=>Vn.value[e.tabId]===d);if(u!==-1)return u}return e.active};return we(()=>{t.value=c(),pe(()=>Vn.value[e.tabId],(u,d)=>{if(e.tabId&&u!==d){const h=e.data.findIndex(({id:g})=>g===u);h!==-1&&(t.value=h)}})}),()=>e.data.length?r("div",{class:"vp-code-tabs"},[r("div",{class:"vp-code-tabs-nav",role:"tablist"},e.data.map(({id:u},d)=>{const h=d===t.value;return r("button",{type:"button",ref:g=>{g&&(n.value[d]=g)},class:["vp-code-tab-nav",{active:h}],role:"tab","aria-controls":`codetab-${e.id}-${d}`,"aria-selected":h,onClick:()=>{t.value=d,a()},onKeydown:g=>o(g,d)},l[`title${d}`]({value:u,isActive:h}))})),e.data.map(({id:u},d)=>{const h=d===t.value;return r("div",{class:["vp-code-tab",{active:h}],id:`codetab-${e.id}-${d}`,role:"tabpanel","aria-expanded":h},[r("div",{class:"vp-code-tab-title"},l[`title${d}`]({value:u,isActive:h})),l[`tab${d}`]({value:u,isActive:h})])})]):null}});const bc=({active:e=!1},{slots:l})=>{var t;return r("div",{class:["code-group-item",{active:e}],"aria-selected":e},(t=l.default)==null?void 0:t.call(l))};bc.displayName="CodeGroupItem";const ak=F({name:"CodeGroup",slots:Object,setup(e,{slots:l}){const t=Y(-1),n=Ce([]),a=(o=t.value)=>{t.value=o<n.value.length-1?o+1:0,n.value[t.value].focus()},i=(o=t.value)=>{t.value=o>0?o-1:n.value.length-1,n.value[t.value].focus()},s=(o,c)=>{o.key===" "||o.key==="Enter"?(o.preventDefault(),t.value=c):o.key==="ArrowRight"?(o.preventDefault(),a(c)):o.key==="ArrowLeft"&&(o.preventDefault(),i(c))};return()=>{var c;const o=(((c=l.default)==null?void 0:c.call(l))||[]).filter(u=>u.type.name==="CodeGroupItem").map(u=>(u.props===null&&(u.props={}),u));return o.length===0?null:(t.value<0||t.value>o.length-1?(t.value=o.findIndex(u=>"active"in u.props),t.value===-1&&(t.value=0)):o.forEach((u,d)=>{u.props.active=d===t.value}),r("div",{class:"code-group"},[r("div",{class:"code-group-nav"},o.map((u,d)=>{const h=d===t.value;return r("button",{type:"button",ref:g=>{g&&(n.value[d]=g)},class:["code-group-nav-tab",{active:h}],"aria-pressed":h,"aria-expanded":h,onClick:()=>{t.value=d},onKeydown:g=>s(g,d)},u.props.title)})),o]))}}}),ik=()=>{Re("beforeprint",()=>{document.querySelectorAll("details").forEach(e=>{e.open=!0})})},sk=We({enhance:({app:e})=>{e.component("CodeTabs",nk),cl("CodeGroup",e)||e.component("CodeGroup",ak),cl("CodeGroupItem",e)||e.component("CodeGroupItem",bc)},setup:()=>{ik()}});let rk={};const _c=Symbol(""),ok=()=>_e(_c),ck=e=>{e.provide(_c,rk)},uk='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',pk=e=>ye(e)?Array.from(document.querySelectorAll(e)):e.map(l=>Array.from(document.querySelectorAll(l))).flat(),yc=e=>new Promise((l,t)=>{e.complete?l({type:"image",element:e,src:e.src,width:e.naturalWidth,height:e.naturalHeight,alt:e.alt,msrc:e.src}):(e.onload=()=>l(yc(e)),e.onerror=n=>t(n))}),dk=e=>{const{isSupported:l,toggle:t}=Mi();e.on("uiRegister",()=>{l.value&&e.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{t()}}),e.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(n,a)=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),a.on("change",()=>{n.setAttribute("href",a.currSlide.data.src)})}}),e.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(n,a)=>{const i=[];let s=-1;for(let o=0;o<a.getNumItems();o++){const c=document.createElement("div");c.className="photo-swipe-bullet",c.onclick=u=>{a.goTo(i.indexOf(u.target))},i.push(c),n.appendChild(c)}a.on("change",()=>{s>=0&&i[s].classList.remove("active"),i[a.currIndex].classList.add("active"),s=a.currIndex})}})})},hk=(e,l,t=!0)=>p(()=>import("./photoswipe.esm-SzV8tJDW.js"),[]).then(({default:n})=>{let a=null;const i=e.map(s=>({html:uk,element:s,msrc:s.src}));return e.forEach((s,o)=>{const c=()=>{a==null||a.destroy(),a=new n({preloaderDelay:0,showHideAnimationType:"zoom",...l,dataSource:i,index:o,...t?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),dk(a),a.addFilter("thumbEl",()=>s),a.addFilter("placeholderSrc",()=>s.src),a.init()};s.getAttribute("photo-swipe")||(s.style.cursor="zoom-in",s.addEventListener("click",()=>{c()}),s.addEventListener("keypress",({key:u})=>{u==="Enter"&&c()}),s.setAttribute("photo-swipe","")),yc(s).then(u=>{i.splice(o,1,u),a==null||a.refreshSlideContent(o)})}),t?Re("wheel",()=>{a==null||a.close()}):()=>{}}),gk=({selector:e,locales:l,delay:t=500,scrollToClose:n=!0})=>{const a=ok(),i=Pt(l),s=ve(),o=ke();let c=null;const u=()=>{const{photoSwipe:d}=o.value;d!==!1&&st().then(()=>No(t)).then(async()=>{const h=ye(d)?d:e;c=await hk(pk(h),{...a,...i.value},n)})};we(()=>{u(),pe(()=>s.value.path,()=>{c==null||c(),u()})}),un(()=>{c==null||c()})};var vk={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const kk=".theme-hope-content :not(a) > img:not([no-view])",mk=vk,fk=800,bk=!0,_k=We({enhance:({app:e})=>{ck(e)},setup:()=>{gk({selector:kk,delay:fk,locales:mk,scrollToClose:bk})}}),yk=e=>e instanceof Element?document.activeElement===e&&(["TEXTAREA","SELECT","INPUT"].includes(e.tagName)||e.hasAttribute("contenteditable")):!1,wk=(e,l)=>l.some(t=>{if(ye(t))return t===e.key;const{key:n,ctrl:a=!1,shift:i=!1,alt:s=!1}=t;return n===e.key&&a===e.ctrlKey&&i===e.shiftKey&&s===e.altKey}),Ek=/[^\x00-\x7F]/,xk=e=>e.split(/\s+/g).map(l=>l.trim()).filter(l=>!!l),gr=e=>e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"),vr=(e,l)=>{const t=l.join(" "),n=xk(e);if(Ek.test(e))return n.some(s=>t.toLowerCase().indexOf(s)>-1);const a=e.endsWith(" ");return new RegExp(n.map((s,o)=>n.length===o+1&&!a?`(?=.*\\b${gr(s)})`:`(?=.*\\b${gr(s)}\\b)`).join("")+".+","gi").test(t)},Lk=({input:e,hotKeys:l})=>{if(l.value.length===0)return;const t=n=>{e.value&&wk(n,l.value)&&!yk(n.target)&&(n.preventDefault(),e.value.focus())};we(()=>{document.addEventListener("keydown",t)}),Si(()=>{document.removeEventListener("keydown",t)})},jk=[{title:"JavaGuide（Java学习&面试指南）",headers:[{level:2,title:"Java",slug:"java",link:"#java",children:[{level:3,title:"基础",slug:"基础",link:"#基础",children:[]},{level:3,title:"集合",slug:"集合",link:"#集合",children:[]},{level:3,title:"IO",slug:"io",link:"#io",children:[]},{level:3,title:"并发",slug:"并发",link:"#并发",children:[]},{level:3,title:"JVM (必看 👍)",slug:"jvm-必看",link:"#jvm-必看",children:[]},{level:3,title:"新特性",slug:"新特性",link:"#新特性",children:[]}]},{level:2,title:"计算机基础",slug:"计算机基础",link:"#计算机基础",children:[{level:3,title:"操作系统",slug:"操作系统",link:"#操作系统",children:[]},{level:3,title:"网络",slug:"网络",link:"#网络",children:[]},{level:3,title:"数据结构",slug:"数据结构",link:"#数据结构",children:[]},{level:3,title:"算法",slug:"算法",link:"#算法",children:[]}]},{level:2,title:"数据库",slug:"数据库",link:"#数据库",children:[{level:3,title:"基础",slug:"基础-1",link:"#基础-1",children:[]},{level:3,title:"MySQL",slug:"mysql",link:"#mysql",children:[]},{level:3,title:"Redis",slug:"redis",link:"#redis",children:[]},{level:3,title:"MongoDB",slug:"mongodb",link:"#mongodb",children:[]}]},{level:2,title:"搜索引擎",slug:"搜索引擎",link:"#搜索引擎",children:[]},{level:2,title:"开发工具",slug:"开发工具",link:"#开发工具",children:[{level:3,title:"Maven",slug:"maven",link:"#maven",children:[]},{level:3,title:"Gradle",slug:"gradle",link:"#gradle",children:[]},{level:3,title:"Docker",slug:"docker",link:"#docker",children:[]},{level:3,title:"Git",slug:"git",link:"#git",children:[]}]},{level:2,title:"系统设计",slug:"系统设计",link:"#系统设计",children:[{level:3,title:"基础",slug:"基础-2",link:"#基础-2",children:[]},{level:3,title:"常用框架",slug:"常用框架",link:"#常用框架",children:[]},{level:3,title:"安全",slug:"安全",link:"#安全",children:[]},{level:3,title:"定时任务",slug:"定时任务",link:"#定时任务",children:[]},{level:3,title:"Web 实时消息推送",slug:"web-实时消息推送",link:"#web-实时消息推送",children:[]}]},{level:2,title:"分布式",slug:"分布式",link:"#分布式",children:[{level:3,title:"理论&算法&协议",slug:"理论-算法-协议",link:"#理论-算法-协议",children:[]},{level:3,title:"RPC",slug:"rpc",link:"#rpc",children:[]},{level:3,title:"ZooKeeper",slug:"zookeeper",link:"#zookeeper",children:[]},{level:3,title:"API 网关",slug:"api-网关",link:"#api-网关",children:[]},{level:3,title:"分布式 ID",slug:"分布式-id",link:"#分布式-id",children:[]},{level:3,title:"分布式锁",slug:"分布式锁",link:"#分布式锁",children:[]},{level:3,title:"分布式事务",slug:"分布式事务",link:"#分布式事务",children:[]},{level:3,title:"分布式配置中心",slug:"分布式配置中心",link:"#分布式配置中心",children:[]}]},{level:2,title:"高性能",slug:"高性能",link:"#高性能",children:[{level:3,title:"数据库优化",slug:"数据库优化",link:"#数据库优化",children:[]},{level:3,title:"负载均衡",slug:"负载均衡",link:"#负载均衡",children:[]},{level:3,title:"CDN",slug:"cdn",link:"#cdn",children:[]},{level:3,title:"消息队列",slug:"消息队列",link:"#消息队列",children:[]}]},{level:2,title:"高可用",slug:"高可用",link:"#高可用",children:[{level:3,title:"冗余设计",slug:"冗余设计",link:"#冗余设计",children:[]},{level:3,title:"限流",slug:"限流",link:"#限流",children:[]},{level:3,title:"降级&熔断",slug:"降级-熔断",link:"#降级-熔断",children:[]},{level:3,title:"超时&重试",slug:"超时-重试",link:"#超时-重试",children:[]},{level:3,title:"集群",slug:"集群",link:"#集群",children:[]},{level:3,title:"灾备设计和异地多活",slug:"灾备设计和异地多活",link:"#灾备设计和异地多活",children:[]}]},{level:2,title:"Star 趋势",slug:"star-趋势",link:"#star-趋势",children:[]},{level:2,title:"公众号",slug:"公众号",link:"#公众号",children:[]}],path:"/home.html",pathLocale:"/",extraFields:[]},{title:"基本概念",headers:[{level:2,title:"AIoT",slug:"aiot",link:"#aiot",children:[{level:3,title:"cloud-based AIoT",slug:"cloud-based-aiot",link:"#cloud-based-aiot",children:[]},{level:3,title:"edge-base AIoT",slug:"edge-base-aiot",link:"#edge-base-aiot",children:[]}]}],path:"/AloT/basis.html",pathLocale:"/",extraFields:[]},{title:"抄袭狗，你冬天睡觉脚必冷！！！",headers:[],path:"/about-the-author/dog-that-copies-other-people-essay.html",pathLocale:"/",extraFields:[]},{title:"入职培训一个月后的感受",headers:[],path:"/about-the-author/feelings-after-one-month-of-induction-training.html",pathLocale:"/",extraFields:[]},{title:"从毕业到入职半年的感受",headers:[],path:"/about-the-author/feelings-of-half-a-year-from-graduation-to-entry.html",pathLocale:"/",extraFields:[]},{title:"我曾经也是网瘾少年",headers:[{level:2,title:"刚开始接触电脑",slug:"刚开始接触电脑",link:"#刚开始接触电脑",children:[]},{level:2,title:"小学毕业后开始有网瘾",slug:"小学毕业后开始有网瘾",link:"#小学毕业后开始有网瘾",children:[]},{level:2,title:"初二网瘾爆发",slug:"初二网瘾爆发",link:"#初二网瘾爆发",children:[]},{level:2,title:"初三开启学习模式",slug:"初三开启学习模式",link:"#初三开启学习模式",children:[]},{level:2,title:"高中从小班掉到平行班",slug:"高中从小班掉到平行班",link:"#高中从小班掉到平行班",children:[]},{level:2,title:"高二开始奋起直追",slug:"高二开始奋起直追",link:"#高二开始奋起直追",children:[]},{level:2,title:"高考前的失眠",slug:"高考前的失眠",link:"#高考前的失眠",children:[]},{level:2,title:"大学生活",slug:"大学生活",link:"#大学生活",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/about-the-author/internet-addiction-teenager.html",pathLocale:"/",extraFields:[]},{title:"JavaGuide 开源项目 100K Star 了！",headers:[],path:"/about-the-author/javaguide-100k-star.html",pathLocale:"/",extraFields:[]},{title:"某培训机构盗我文章做成视频还上了B站热门",headers:[],path:"/about-the-author/my-article-was-stolen-and-made-into-video-and-it-became-popular.html",pathLocale:"/",extraFields:[]},{title:"害，毕业三年了！",headers:[{level:2,title:"大一",slug:"大一",link:"#大一",children:[{level:3,title:"办补习班",slug:"办补习班",link:"#办补习班",children:[]},{level:3,title:"自己赚钱去孤儿院",slug:"自己赚钱去孤儿院",link:"#自己赚钱去孤儿院",children:[]},{level:3,title:"徒步旅行",slug:"徒步旅行",link:"#徒步旅行",children:[]}]},{level:2,title:"大二",slug:"大二",link:"#大二",children:[{level:3,title:"带社团",slug:"带社团",link:"#带社团",children:[]},{level:3,title:"加入长大在线",slug:"加入长大在线",link:"#加入长大在线",children:[]},{level:3,title:"第一次参加比赛",slug:"第一次参加比赛",link:"#第一次参加比赛",children:[]},{level:3,title:"确定技术方向",slug:"确定技术方向",link:"#确定技术方向",children:[]}]},{level:2,title:"大三",slug:"大三",link:"#大三",children:[{level:3,title:"JavaGuide 诞生",slug:"javaguide-诞生",link:"#javaguide-诞生",children:[]},{level:3,title:"接私活赚钱",slug:"接私活赚钱",link:"#接私活赚钱",children:[]},{level:3,title:"参加软件设计大赛",slug:"参加软件设计大赛",link:"#参加软件设计大赛",children:[]},{level:3,title:"放弃读研",slug:"放弃读研",link:"#放弃读研",children:[]},{level:3,title:"实习",slug:"实习",link:"#实习",children:[]}]},{level:2,title:"大四",slug:"大四",link:"#大四",children:[{level:3,title:"开始找工作",slug:"开始找工作",link:"#开始找工作",children:[]},{level:3,title:"拿到 Offer",slug:"拿到-offer",link:"#拿到-offer",children:[]}]},{level:2,title:"几点建议",slug:"几点建议",link:"#几点建议",children:[]},{level:2,title:"后记",slug:"后记",link:"#后记",children:[]}],path:"/about-the-author/my-college-life.html",pathLocale:"/",extraFields:[]},{title:"个人介绍 Q&A",headers:[{level:2,title:"我是什么时候毕业的？",slug:"我是什么时候毕业的",link:"#我是什么时候毕业的",children:[]},{level:2,title:"我坚持写了多久博客？",slug:"我坚持写了多久博客",link:"#我坚持写了多久博客",children:[]},{level:2,title:"我在大学期间赚了多少钱？",slug:"我在大学期间赚了多少钱",link:"#我在大学期间赚了多少钱",children:[]},{level:2,title:"为什么自称 Guide？",slug:"为什么自称-guide",link:"#为什么自称-guide",children:[]},{level:2,title:"后记",slug:"后记",link:"#后记",children:[]}],path:"/about-the-author/",pathLocale:"/",extraFields:[]},{title:"坚持写技术博客六年了!",headers:[{level:2,title:"写技术博客有哪些好处？",slug:"写技术博客有哪些好处",link:"#写技术博客有哪些好处",children:[{level:3,title:"学习效果更好，加深知识点的认识",slug:"学习效果更好-加深知识点的认识",link:"#学习效果更好-加深知识点的认识",children:[]},{level:3,title:"帮助别人的同时获得成就感",slug:"帮助别人的同时获得成就感",link:"#帮助别人的同时获得成就感",children:[]},{level:3,title:"可能会有额外的收入",slug:"可能会有额外的收入",link:"#可能会有额外的收入",children:[]},{level:3,title:"增加个人影响力",slug:"增加个人影响力",link:"#增加个人影响力",children:[]}]},{level:2,title:"怎样才能坚持写技术博客？",slug:"怎样才能坚持写技术博客",link:"#怎样才能坚持写技术博客",children:[]},{level:2,title:"写哪些方向的博客比较好？",slug:"写哪些方向的博客比较好",link:"#写哪些方向的博客比较好",children:[]},{level:2,title:"有没有什么写作技巧分享？",slug:"有没有什么写作技巧分享",link:"#有没有什么写作技巧分享",children:[{level:3,title:"句子不要过长",slug:"句子不要过长",link:"#句子不要过长",children:[]},{level:3,title:"尽量让文章更加生动有趣",slug:"尽量让文章更加生动有趣",link:"#尽量让文章更加生动有趣",children:[]},{level:3,title:"使用简单明了的语言",slug:"使用简单明了的语言",link:"#使用简单明了的语言",children:[]},{level:3,title:"使用视觉效果",slug:"使用视觉效果",link:"#使用视觉效果",children:[]},{level:3,title:"技术文章配图色彩要鲜明",slug:"技术文章配图色彩要鲜明",link:"#技术文章配图色彩要鲜明",children:[]},{level:3,title:"确定你的读者",slug:"确定你的读者",link:"#确定你的读者",children:[]},{level:3,title:"审查和修改",slug:"审查和修改",link:"#审查和修改",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/about-the-author/writing-technology-blog-six-years.html",pathLocale:"/",extraFields:[]},{title:"我的知识星球快 3 岁了！",headers:[{level:2,title:"什么是知识星球？",slug:"什么是知识星球",link:"#什么是知识星球",children:[]},{level:2,title:"我的知识星球能为你提供什么？",slug:"我的知识星球能为你提供什么",link:"#我的知识星球能为你提供什么",children:[{level:3,title:"专属专栏",slug:"专属专栏",link:"#专属专栏",children:[]},{level:3,title:"PDF 面试手册",slug:"pdf-面试手册",link:"#pdf-面试手册",children:[]},{level:3,title:"优质精华主题沉淀",slug:"优质精华主题沉淀",link:"#优质精华主题沉淀",children:[]},{level:3,title:"简历修改",slug:"简历修改",link:"#简历修改",children:[]},{level:3,title:"一对一提问",slug:"一对一提问",link:"#一对一提问",children:[]},{level:3,title:"学习打卡",slug:"学习打卡",link:"#学习打卡",children:[]},{level:3,title:"读书活动",slug:"读书活动",link:"#读书活动",children:[]},{level:3,title:"不定时福利",slug:"不定时福利",link:"#不定时福利",children:[]}]},{level:2,title:"是否收费？",slug:"是否收费",link:"#是否收费",children:[]},{level:2,title:"如何加入？",slug:"如何加入",link:"#如何加入",children:[]}],path:"/about-the-author/zhishixingqiu-two-years.html",pathLocale:"/",extraFields:[]},{title:"计算机基础必读经典书籍",headers:[{level:2,title:"操作系统",slug:"操作系统",link:"#操作系统",children:[]},{level:2,title:"计算机网络",slug:"计算机网络",link:"#计算机网络",children:[]},{level:2,title:"算法",slug:"算法",link:"#算法",children:[]},{level:2,title:"数据结构",slug:"数据结构",link:"#数据结构",children:[]},{level:2,title:"计算机专业基础课",slug:"计算机专业基础课",link:"#计算机专业基础课",children:[{level:3,title:"数学",slug:"数学",link:"#数学",children:[]},{level:3,title:"英语",slug:"英语",link:"#英语",children:[]},{level:3,title:"编译原理",slug:"编译原理",link:"#编译原理",children:[]}]}],path:"/books/cs-basics.html",pathLocale:"/",extraFields:[]},{title:"数据库必读经典书籍",headers:[{level:2,title:"数据库基础",slug:"数据库基础",link:"#数据库基础",children:[{level:3,title:"《数据库系统概念》",slug:"《数据库系统概念》",link:"#《数据库系统概念》",children:[]},{level:3,title:"《数据库系统实现》",slug:"《数据库系统实现》",link:"#《数据库系统实现》",children:[]}]},{level:2,title:"MySQL",slug:"mysql",link:"#mysql",children:[]},{level:2,title:"PostgreSQL",slug:"postgresql",link:"#postgresql",children:[{level:3,title:"《PostgreSQL 指南：内幕探索》",slug:"《postgresql-指南-内幕探索》",link:"#《postgresql-指南-内幕探索》",children:[]},{level:3,title:"《PostgreSQL 技术内幕：查询优化深度探索》",slug:"《postgresql-技术内幕-查询优化深度探索》",link:"#《postgresql-技术内幕-查询优化深度探索》",children:[]}]},{level:2,title:"Redis",slug:"redis",link:"#redis",children:[]}],path:"/books/database.html",pathLocale:"/",extraFields:[]},{title:"分布式必读经典书籍",headers:[{level:2,title:"《深入理解分布式系统》",slug:"《深入理解分布式系统》",link:"#《深入理解分布式系统》",children:[]},{level:2,title:"《数据密集型应用系统设计》",slug:"《数据密集型应用系统设计》",link:"#《数据密集型应用系统设计》",children:[]},{level:2,title:"《深入理解分布式事务》",slug:"《深入理解分布式事务》",link:"#《深入理解分布式事务》",children:[]},{level:2,title:"《从 Paxos 到 Zookeeper》",slug:"《从-paxos-到-zookeeper》",link:"#《从-paxos-到-zookeeper》",children:[]},{level:2,title:"《微服务架构设计模式》",slug:"《微服务架构设计模式》",link:"#《微服务架构设计模式》",children:[]},{level:2,title:"《凤凰架构》",slug:"《凤凰架构》",link:"#《凤凰架构》",children:[]},{level:2,title:"《架构解密》",slug:"《架构解密》",link:"#《架构解密》",children:[]},{level:2,title:"其他",slug:"其他",link:"#其他",children:[]}],path:"/books/distributed-system.html",pathLocale:"/",extraFields:[]},{title:"Java 必读经典书籍",headers:[{level:2,title:"Java 基础",slug:"java-基础",link:"#java-基础",children:[]},{level:2,title:"Java 并发",slug:"java-并发",link:"#java-并发",children:[]},{level:2,title:"JVM",slug:"jvm",link:"#jvm",children:[]},{level:2,title:"常用工具",slug:"常用工具",link:"#常用工具",children:[]},{level:2,title:"常用框架",slug:"常用框架",link:"#常用框架",children:[{level:3,title:"Spring/SpringBoot",slug:"spring-springboot",link:"#spring-springboot",children:[]},{level:3,title:"MyBatis",slug:"mybatis",link:"#mybatis",children:[]},{level:3,title:"Netty",slug:"netty",link:"#netty",children:[]}]},{level:2,title:"性能调优",slug:"性能调优",link:"#性能调优",children:[]},{level:2,title:"网站架构",slug:"网站架构",link:"#网站架构",children:[]},{level:2,title:"面试",slug:"面试",link:"#面试",children:[]}],path:"/books/java.html",pathLocale:"/",extraFields:[]},{title:"技术书籍精选",headers:[],path:"/books/",pathLocale:"/",extraFields:[]},{title:"搜索引擎必读经典书籍",headers:[{level:2,title:"Lucene",slug:"lucene",link:"#lucene",children:[]},{level:2,title:"Elasticsearch",slug:"elasticsearch",link:"#elasticsearch",children:[]}],path:"/books/search-engine.html",pathLocale:"/",extraFields:[]},{title:"软件质量必读经典书籍",headers:[{level:2,title:"代码整洁之道",slug:"代码整洁之道",link:"#代码整洁之道",children:[]},{level:2,title:"程序员职业素养",slug:"程序员职业素养",link:"#程序员职业素养",children:[]},{level:2,title:"架构整洁之道",slug:"架构整洁之道",link:"#架构整洁之道",children:[]},{level:2,title:"项目管理",slug:"项目管理",link:"#项目管理",children:[]},{level:2,title:"其他",slug:"其他",link:"#其他",children:[]}],path:"/books/software-quality.html",pathLocale:"/",extraFields:[]},{title:"数组",headers:[{level:2,title:"c++数组",slug:"c-数组",link:"#c-数组",children:[]}],path:"/c__/array.html",pathLocale:"/",extraFields:[]},{title:"函数",headers:[{level:2,title:"函数知识点",slug:"函数知识点",link:"#函数知识点",children:[]},{level:2,title:"lambda表达式",slug:"lambda表达式",link:"#lambda表达式",children:[]}],path:"/c__/function.html",pathLocale:"/",extraFields:[]},{title:"头文件",headers:[{level:2,title:"头文件调用",slug:"头文件调用",link:"#头文件调用",children:[{level:3,title:"hpp头文件调用类",slug:"hpp头文件调用类",link:"#hpp头文件调用类",children:[]},{level:3,title:"h头文件调用方法",slug:"h头文件调用方法",link:"#h头文件调用方法",children:[]}]}],path:"/c__/headFile.html",pathLocale:"/",extraFields:[]},{title:"流对象",headers:[{level:2,title:"c语言输入流",slug:"c语言输入流",link:"#c语言输入流",children:[{level:3,title:"具体实现的输入流：",slug:"具体实现的输入流",link:"#具体实现的输入流",children:[]},{level:3,title:"标准输入流cin",slug:"标准输入流cin",link:"#标准输入流cin",children:[]},{level:3,title:"友元函数",slug:"友元函数",link:"#友元函数",children:[]}]}],path:"/c__/stream.html",pathLocale:"/",extraFields:[]},{title:"数据库基础知识总结",headers:[{level:2,title:"什么是数据库, 数据库管理系统, 数据库系统, 数据库管理员?",slug:"什么是数据库-数据库管理系统-数据库系统-数据库管理员",link:"#什么是数据库-数据库管理系统-数据库系统-数据库管理员",children:[]},{level:2,title:"什么是元组, 码, 候选码, 主码, 外码, 主属性, 非主属性？",slug:"什么是元组-码-候选码-主码-外码-主属性-非主属性",link:"#什么是元组-码-候选码-主码-外码-主属性-非主属性",children:[]},{level:2,title:"什么是 ER 图？",slug:"什么是-er-图",link:"#什么是-er-图",children:[]},{level:2,title:"数据库范式了解吗?",slug:"数据库范式了解吗",link:"#数据库范式了解吗",children:[{level:3,title:"1NF(第一范式)",slug:"_1nf-第一范式",link:"#_1nf-第一范式",children:[]},{level:3,title:"2NF(第二范式)",slug:"_2nf-第二范式",link:"#_2nf-第二范式",children:[]},{level:3,title:"3NF(第三范式)",slug:"_3nf-第三范式",link:"#_3nf-第三范式",children:[]}]},{level:2,title:"主键和外键有什么区别?",slug:"主键和外键有什么区别",link:"#主键和外键有什么区别",children:[]},{level:2,title:"为什么不推荐使用外键与级联？",slug:"为什么不推荐使用外键与级联",link:"#为什么不推荐使用外键与级联",children:[]},{level:2,title:"什么是存储过程?",slug:"什么是存储过程",link:"#什么是存储过程",children:[]},{level:2,title:"drop、delete 与 truncate 区别？",slug:"drop、delete-与-truncate-区别",link:"#drop、delete-与-truncate-区别",children:[{level:3,title:"用法不同",slug:"用法不同",link:"#用法不同",children:[]},{level:3,title:"属于不同的数据库语言",slug:"属于不同的数据库语言",link:"#属于不同的数据库语言",children:[]},{level:3,title:"执行速度不同",slug:"执行速度不同",link:"#执行速度不同",children:[]}]},{level:2,title:"数据库设计通常分为哪几步?",slug:"数据库设计通常分为哪几步",link:"#数据库设计通常分为哪几步",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/basis.html",pathLocale:"/",extraFields:[]},{title:"字符集详解",headers:[{level:2,title:"字符集是什么？",slug:"字符集是什么",link:"#字符集是什么",children:[]},{level:2,title:"字符编码是什么？",slug:"字符编码是什么",link:"#字符编码是什么",children:[]},{level:2,title:"有哪些常见的字符集？",slug:"有哪些常见的字符集",link:"#有哪些常见的字符集",children:[{level:3,title:"ASCII",slug:"ascii",link:"#ascii",children:[]},{level:3,title:"GB2312",slug:"gb2312",link:"#gb2312",children:[]},{level:3,title:"GBK",slug:"gbk",link:"#gbk",children:[]},{level:3,title:"GB18030",slug:"gb18030",link:"#gb18030",children:[]},{level:3,title:"BIG5",slug:"big5",link:"#big5",children:[]},{level:3,title:"Unicode & UTF-8",slug:"unicode-utf-8",link:"#unicode-utf-8",children:[]}]},{level:2,title:"MySQL 字符集",slug:"mysql-字符集",link:"#mysql-字符集",children:[{level:3,title:"查看支持的字符集",slug:"查看支持的字符集",link:"#查看支持的字符集",children:[]},{level:3,title:"默认字符集",slug:"默认字符集",link:"#默认字符集",children:[]},{level:3,title:"字符集的层次级别",slug:"字符集的层次级别",link:"#字符集的层次级别",children:[]},{level:3,title:"连接字符集",slug:"连接字符集",link:"#连接字符集",children:[]},{level:3,title:"JDBC 对连接字符集的影响",slug:"jdbc-对连接字符集的影响",link:"#jdbc-对连接字符集的影响",children:[]},{level:3,title:"UTF-8 使用",slug:"utf-8-使用",link:"#utf-8-使用",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/character-set.html",pathLocale:"/",extraFields:[]},{title:"NoSQL基础知识总结",headers:[{level:2,title:"NoSQL 是什么？",slug:"nosql-是什么",link:"#nosql-是什么",children:[]},{level:2,title:"SQL 和 NoSQL 有什么区别？",slug:"sql-和-nosql-有什么区别",link:"#sql-和-nosql-有什么区别",children:[]},{level:2,title:"NoSQL 数据库有什么优势？",slug:"nosql-数据库有什么优势",link:"#nosql-数据库有什么优势",children:[]},{level:2,title:"NoSQL 数据库有哪些类型？",slug:"nosql-数据库有哪些类型",link:"#nosql-数据库有哪些类型",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/nosql.html",pathLocale:"/",extraFields:[]},{title:"API网关基础知识总结",headers:[{level:2,title:"什么是网关？",slug:"什么是网关",link:"#什么是网关",children:[]},{level:2,title:"网关能提供哪些功能？",slug:"网关能提供哪些功能",link:"#网关能提供哪些功能",children:[]},{level:2,title:"有哪些常见的网关系统？",slug:"有哪些常见的网关系统",link:"#有哪些常见的网关系统",children:[{level:3,title:"Netflix Zuul",slug:"netflix-zuul",link:"#netflix-zuul",children:[]},{level:3,title:"Spring Cloud Gateway",slug:"spring-cloud-gateway",link:"#spring-cloud-gateway",children:[]},{level:3,title:"OpenResty",slug:"openresty",link:"#openresty",children:[]},{level:3,title:"Kong",slug:"kong",link:"#kong",children:[]},{level:3,title:"APISIX",slug:"apisix",link:"#apisix",children:[]},{level:3,title:"Shenyu",slug:"shenyu",link:"#shenyu",children:[]}]},{level:2,title:"如何选择？",slug:"如何选择",link:"#如何选择",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/distributed-system/api-gateway.html",pathLocale:"/",extraFields:[]},{title:"分布式配置中心常见问题总结(付费)",headers:[],path:"/distributed-system/distributed-configuration-center.html",pathLocale:"/",extraFields:[]},{title:"分布式ID设计指南",headers:[{level:2,title:"场景一：订单系统",slug:"场景一-订单系统",link:"#场景一-订单系统",children:[{level:3,title:"1、一码付",slug:"_1、一码付",link:"#_1、一码付",children:[]},{level:3,title:"2、订单号",slug:"_2、订单号",link:"#_2、订单号",children:[]},{level:3,title:"3、优惠券和兑换券",slug:"_3、优惠券和兑换券",link:"#_3、优惠券和兑换券",children:[]}]},{level:2,title:"场景二：Tracing",slug:"场景二-tracing",link:"#场景二-tracing",children:[{level:3,title:"1、日志跟踪",slug:"_1、日志跟踪",link:"#_1、日志跟踪",children:[]},{level:3,title:"2、TraceId 生成规则",slug:"_2、traceid-生成规则",link:"#_2、traceid-生成规则",children:[]},{level:3,title:"3、SpanId 生成规则",slug:"_3、spanid-生成规则",link:"#_3、spanid-生成规则",children:[]}]},{level:2,title:"场景三：短网址",slug:"场景三-短网址",link:"#场景三-短网址",children:[]}],path:"/distributed-system/distributed-id-design.html",pathLocale:"/",extraFields:[]},{title:"分布式ID介绍&实现方案总结",headers:[{level:2,title:"分布式 ID 介绍",slug:"分布式-id-介绍",link:"#分布式-id-介绍",children:[{level:3,title:"什么是 ID？",slug:"什么是-id",link:"#什么是-id",children:[]},{level:3,title:"什么是分布式 ID？",slug:"什么是分布式-id",link:"#什么是分布式-id",children:[]},{level:3,title:"分布式 ID 需要满足哪些要求?",slug:"分布式-id-需要满足哪些要求",link:"#分布式-id-需要满足哪些要求",children:[]}]},{level:2,title:"分布式 ID 常见解决方案",slug:"分布式-id-常见解决方案",link:"#分布式-id-常见解决方案",children:[{level:3,title:"数据库",slug:"数据库",link:"#数据库",children:[]},{level:3,title:"算法",slug:"算法",link:"#算法",children:[]},{level:3,title:"开源框架",slug:"开源框架",link:"#开源框架",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/distributed-system/distributed-id.html",pathLocale:"/",extraFields:[]},{title:"分布式锁常见实现方案总结",headers:[{level:2,title:"基于 Redis 实现分布式锁",slug:"基于-redis-实现分布式锁",link:"#基于-redis-实现分布式锁",children:[{level:3,title:"如何基于 Redis 实现一个最简易的分布式锁？",slug:"如何基于-redis-实现一个最简易的分布式锁",link:"#如何基于-redis-实现一个最简易的分布式锁",children:[]},{level:3,title:"为什么要给锁设置一个过期时间？",slug:"为什么要给锁设置一个过期时间",link:"#为什么要给锁设置一个过期时间",children:[]},{level:3,title:"如何实现锁的优雅续期？",slug:"如何实现锁的优雅续期",link:"#如何实现锁的优雅续期",children:[]},{level:3,title:"如何实现可重入锁？",slug:"如何实现可重入锁",link:"#如何实现可重入锁",children:[]},{level:3,title:"Redis 如何解决集群情况下分布式锁的可靠性？",slug:"redis-如何解决集群情况下分布式锁的可靠性",link:"#redis-如何解决集群情况下分布式锁的可靠性",children:[]}]},{level:2,title:"基于 ZooKeeper 实现分布式锁",slug:"基于-zookeeper-实现分布式锁",link:"#基于-zookeeper-实现分布式锁",children:[{level:3,title:"如何基于 ZooKeeper 实现分布式锁？",slug:"如何基于-zookeeper-实现分布式锁",link:"#如何基于-zookeeper-实现分布式锁",children:[]},{level:3,title:"为什么要用临时顺序节点？",slug:"为什么要用临时顺序节点",link:"#为什么要用临时顺序节点",children:[]},{level:3,title:"为什么要设置对前一个节点的监听？",slug:"为什么要设置对前一个节点的监听",link:"#为什么要设置对前一个节点的监听",children:[]},{level:3,title:"如何实现可重入锁？",slug:"如何实现可重入锁-1",link:"#如何实现可重入锁-1",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/distributed-system/distributed-lock-implementations.html",pathLocale:"/",extraFields:[]},{title:"分布式锁介绍",headers:[{level:2,title:"为什么需要分布式锁？",slug:"为什么需要分布式锁",link:"#为什么需要分布式锁",children:[]},{level:2,title:"分布式锁应该具备哪些条件？",slug:"分布式锁应该具备哪些条件",link:"#分布式锁应该具备哪些条件",children:[]},{level:2,title:"分布式锁的常见实现方式有哪些？",slug:"分布式锁的常见实现方式有哪些",link:"#分布式锁的常见实现方式有哪些",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/distributed-system/distributed-lock.html",pathLocale:"/",extraFields:[]},{title:"分布式事务常见解决方案总结(付费)",headers:[],path:"/distributed-system/distributed-transaction.html",pathLocale:"/",extraFields:[]},{title:"Spring Cloud Gateway常见问题总结",headers:[{level:2,title:"什么是 Spring Cloud Gateway？",slug:"什么是-spring-cloud-gateway",link:"#什么是-spring-cloud-gateway",children:[]},{level:2,title:"Spring Cloud Gateway 的工作流程？",slug:"spring-cloud-gateway-的工作流程",link:"#spring-cloud-gateway-的工作流程",children:[]},{level:2,title:"Spring Cloud Gateway 的断言是什么？",slug:"spring-cloud-gateway-的断言是什么",link:"#spring-cloud-gateway-的断言是什么",children:[]},{level:2,title:"Spring Cloud Gateway 的路由和断言是什么关系？",slug:"spring-cloud-gateway-的路由和断言是什么关系",link:"#spring-cloud-gateway-的路由和断言是什么关系",children:[]},{level:2,title:"Spring Cloud Gateway 如何实现动态路由？",slug:"spring-cloud-gateway-如何实现动态路由",link:"#spring-cloud-gateway-如何实现动态路由",children:[]},{level:2,title:"Spring Cloud Gateway 的过滤器有哪些？",slug:"spring-cloud-gateway-的过滤器有哪些",link:"#spring-cloud-gateway-的过滤器有哪些",children:[{level:3,title:"局部过滤器",slug:"局部过滤器",link:"#局部过滤器",children:[]},{level:3,title:"全局过滤器",slug:"全局过滤器",link:"#全局过滤器",children:[]}]},{level:2,title:"Spring Cloud Gateway 支持限流吗？",slug:"spring-cloud-gateway-支持限流吗",link:"#spring-cloud-gateway-支持限流吗",children:[]},{level:2,title:"Spring Cloud Gateway 如何自定义全局异常处理？",slug:"spring-cloud-gateway-如何自定义全局异常处理",link:"#spring-cloud-gateway-如何自定义全局异常处理",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/distributed-system/spring-cloud-gateway-questions.html",pathLocale:"/",extraFields:[]},{title:"降级&熔断详解(付费)",headers:[],path:"/high-availability/fallback-and-circuit-breaker.html",pathLocale:"/",extraFields:[]},{title:"高可用系统设计指南",headers:[{level:2,title:"什么是高可用？可用性的判断标准是啥？",slug:"什么是高可用-可用性的判断标准是啥",link:"#什么是高可用-可用性的判断标准是啥",children:[]},{level:2,title:"哪些情况会导致系统不可用？",slug:"哪些情况会导致系统不可用",link:"#哪些情况会导致系统不可用",children:[]},{level:2,title:"有哪些提高系统可用性的方法？",slug:"有哪些提高系统可用性的方法",link:"#有哪些提高系统可用性的方法",children:[{level:3,title:"注重代码质量，测试严格把关",slug:"注重代码质量-测试严格把关",link:"#注重代码质量-测试严格把关",children:[]},{level:3,title:"使用集群，减少单点故障",slug:"使用集群-减少单点故障",link:"#使用集群-减少单点故障",children:[]},{level:3,title:"限流",slug:"限流",link:"#限流",children:[]},{level:3,title:"超时和重试机制设置",slug:"超时和重试机制设置",link:"#超时和重试机制设置",children:[]},{level:3,title:"熔断机制",slug:"熔断机制",link:"#熔断机制",children:[]},{level:3,title:"异步调用",slug:"异步调用",link:"#异步调用",children:[]},{level:3,title:"使用缓存",slug:"使用缓存",link:"#使用缓存",children:[]},{level:3,title:"其他",slug:"其他",link:"#其他",children:[]}]}],path:"/high-availability/high-availability-system-design.html",pathLocale:"/",extraFields:[]},{title:"服务限流详解",headers:[{level:2,title:"常见限流算法有哪些？",slug:"常见限流算法有哪些",link:"#常见限流算法有哪些",children:[{level:3,title:"固定窗口计数器算法",slug:"固定窗口计数器算法",link:"#固定窗口计数器算法",children:[]},{level:3,title:"滑动窗口计数器算法",slug:"滑动窗口计数器算法",link:"#滑动窗口计数器算法",children:[]},{level:3,title:"漏桶算法",slug:"漏桶算法",link:"#漏桶算法",children:[]},{level:3,title:"令牌桶算法",slug:"令牌桶算法",link:"#令牌桶算法",children:[]}]},{level:2,title:"针对什么来进行限流？",slug:"针对什么来进行限流",link:"#针对什么来进行限流",children:[]},{level:2,title:"单机限流怎么做？",slug:"单机限流怎么做",link:"#单机限流怎么做",children:[]},{level:2,title:"分布式限流怎么做？",slug:"分布式限流怎么做",link:"#分布式限流怎么做",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-availability/limit-request.html",pathLocale:"/",extraFields:[]},{title:"性能测试入门",headers:[{level:2,title:"一 不同角色看网站性能",slug:"一-不同角色看网站性能",link:"#一-不同角色看网站性能",children:[{level:3,title:"1.1 用户",slug:"_1-1-用户",link:"#_1-1-用户",children:[]},{level:3,title:"1.2 开发人员",slug:"_1-2-开发人员",link:"#_1-2-开发人员",children:[]},{level:3,title:"1.3 测试人员",slug:"_1-3-测试人员",link:"#_1-3-测试人员",children:[]},{level:3,title:"1.4 运维人员",slug:"_1-4-运维人员",link:"#_1-4-运维人员",children:[]}]},{level:2,title:"二 性能测试需要注意的点",slug:"二-性能测试需要注意的点",link:"#二-性能测试需要注意的点",children:[{level:3,title:"2.1 了解系统的业务场景",slug:"_2-1-了解系统的业务场景",link:"#_2-1-了解系统的业务场景",children:[]},{level:3,title:"2.2 历史数据非常有用",slug:"_2-2-历史数据非常有用",link:"#_2-2-历史数据非常有用",children:[]},{level:3,title:"三 性能测试的指标",slug:"三-性能测试的指标",link:"#三-性能测试的指标",children:[]},{level:3,title:"3.1 响应时间",slug:"_3-1-响应时间",link:"#_3-1-响应时间",children:[]},{level:3,title:"3.2 并发数",slug:"_3-2-并发数",link:"#_3-2-并发数",children:[]},{level:3,title:"3.3 吞吐量",slug:"_3-3-吞吐量",link:"#_3-3-吞吐量",children:[]},{level:3,title:"3.4 性能计数器",slug:"_3-4-性能计数器",link:"#_3-4-性能计数器",children:[]},{level:3,title:"四 几种常见的性能测试",slug:"四-几种常见的性能测试",link:"#四-几种常见的性能测试",children:[]},{level:3,title:"性能测试",slug:"性能测试",link:"#性能测试",children:[]},{level:3,title:"负载测试",slug:"负载测试",link:"#负载测试",children:[]},{level:3,title:"压力测试",slug:"压力测试",link:"#压力测试",children:[]},{level:3,title:"稳定性测试",slug:"稳定性测试",link:"#稳定性测试",children:[]}]},{level:2,title:"五 常用性能测试工具",slug:"五-常用性能测试工具",link:"#五-常用性能测试工具",children:[{level:3,title:"5.1 后端常用",slug:"_5-1-后端常用",link:"#_5-1-后端常用",children:[]},{level:3,title:"5.2 前端常用",slug:"_5-2-前端常用",link:"#_5-2-前端常用",children:[]}]},{level:2,title:"六 常见的性能优化策略",slug:"六-常见的性能优化策略",link:"#六-常见的性能优化策略",children:[]}],path:"/high-availability/performance-test.html",pathLocale:"/",extraFields:[]},{title:"冗余设计详解",headers:[],path:"/high-availability/redundancy.html",pathLocale:"/",extraFields:[]},{title:"超时&重试详解",headers:[{level:2,title:"超时机制",slug:"超时机制",link:"#超时机制",children:[{level:3,title:"什么是超时机制？",slug:"什么是超时机制",link:"#什么是超时机制",children:[]},{level:3,title:"超时时间应该如何设置？",slug:"超时时间应该如何设置",link:"#超时时间应该如何设置",children:[]}]},{level:2,title:"重试机制",slug:"重试机制",link:"#重试机制",children:[{level:3,title:"什么是重试机制？",slug:"什么是重试机制",link:"#什么是重试机制",children:[]},{level:3,title:"常见的重试策略有哪些？",slug:"常见的重试策略有哪些",link:"#常见的重试策略有哪些",children:[]},{level:3,title:"重试的次数如何设置？",slug:"重试的次数如何设置",link:"#重试的次数如何设置",children:[]},{level:3,title:"什么是重试幂等？",slug:"什么是重试幂等",link:"#什么是重试幂等",children:[]},{level:3,title:"Java 中如何实现重试？",slug:"java-中如何实现重试",link:"#java-中如何实现重试",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-availability/timeout-and-retry.html",pathLocale:"/",extraFields:[]},{title:"CDN工作原理详解",headers:[{level:2,title:"什么是 CDN ？",slug:"什么是-cdn",link:"#什么是-cdn",children:[]},{level:2,title:"CDN 工作原理是什么？",slug:"cdn-工作原理是什么",link:"#cdn-工作原理是什么",children:[{level:3,title:"静态资源是如何被缓存到 CDN 节点中的？",slug:"静态资源是如何被缓存到-cdn-节点中的",link:"#静态资源是如何被缓存到-cdn-节点中的",children:[]},{level:3,title:"如何找到最合适的 CDN 节点？",slug:"如何找到最合适的-cdn-节点",link:"#如何找到最合适的-cdn-节点",children:[]},{level:3,title:"如何防止资源被盗刷？",slug:"如何防止资源被盗刷",link:"#如何防止资源被盗刷",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/cdn.html",pathLocale:"/",extraFields:[]},{title:"数据冷热分离详解",headers:[{level:2,title:"什么是数据冷热分离？",slug:"什么是数据冷热分离",link:"#什么是数据冷热分离",children:[{level:3,title:"冷数据和热数据",slug:"冷数据和热数据",link:"#冷数据和热数据",children:[]},{level:3,title:"冷热分离的思想",slug:"冷热分离的思想",link:"#冷热分离的思想",children:[]},{level:3,title:"数据冷热分离的优缺点",slug:"数据冷热分离的优缺点",link:"#数据冷热分离的优缺点",children:[]}]},{level:2,title:"冷数据如何迁移？",slug:"冷数据如何迁移",link:"#冷数据如何迁移",children:[]},{level:2,title:"冷数据如何存储？",slug:"冷数据如何存储",link:"#冷数据如何存储",children:[]},{level:2,title:"案例分享",slug:"案例分享",link:"#案例分享",children:[]}],path:"/high-performance/data-cold-hot-separation.html",pathLocale:"/",extraFields:[]},{title:"深度分页介绍及优化建议",headers:[{level:2,title:"深度分页介绍",slug:"深度分页介绍",link:"#深度分页介绍",children:[]},{level:2,title:"深度分页优化建议",slug:"深度分页优化建议",link:"#深度分页优化建议",children:[{level:3,title:"范围查询",slug:"范围查询",link:"#范围查询",children:[]},{level:3,title:"子查询",slug:"子查询",link:"#子查询",children:[]},{level:3,title:"延迟关联",slug:"延迟关联",link:"#延迟关联",children:[]},{level:3,title:"覆盖索引",slug:"覆盖索引",link:"#覆盖索引",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/deep-pagination-optimization.html",pathLocale:"/",extraFields:[]},{title:"负载均衡原理及算法详解",headers:[{level:2,title:"什么是负载均衡？",slug:"什么是负载均衡",link:"#什么是负载均衡",children:[]},{level:2,title:"负载均衡分为哪几种？",slug:"负载均衡分为哪几种",link:"#负载均衡分为哪几种",children:[{level:3,title:"服务端负载均衡",slug:"服务端负载均衡",link:"#服务端负载均衡",children:[]},{level:3,title:"客户端负载均衡",slug:"客户端负载均衡",link:"#客户端负载均衡",children:[]}]},{level:2,title:"负载均衡常见的算法有哪些？",slug:"负载均衡常见的算法有哪些",link:"#负载均衡常见的算法有哪些",children:[{level:3,title:"随机法",slug:"随机法",link:"#随机法",children:[]},{level:3,title:"轮询法",slug:"轮询法",link:"#轮询法",children:[]},{level:3,title:"两次随机法",slug:"两次随机法",link:"#两次随机法",children:[]},{level:3,title:"哈希法",slug:"哈希法",link:"#哈希法",children:[]},{level:3,title:"一致性 Hash 法",slug:"一致性-hash-法",link:"#一致性-hash-法",children:[]},{level:3,title:"最小连接法",slug:"最小连接法",link:"#最小连接法",children:[]},{level:3,title:"最少活跃法",slug:"最少活跃法",link:"#最少活跃法",children:[]},{level:3,title:"最快响应时间法",slug:"最快响应时间法",link:"#最快响应时间法",children:[]}]},{level:2,title:"七层负载均衡可以怎么做？",slug:"七层负载均衡可以怎么做",link:"#七层负载均衡可以怎么做",children:[{level:3,title:"DNS 解析",slug:"dns-解析",link:"#dns-解析",children:[]},{level:3,title:"反向代理",slug:"反向代理",link:"#反向代理",children:[]}]},{level:2,title:"客户端负载均衡通常是怎么做的？",slug:"客户端负载均衡通常是怎么做的",link:"#客户端负载均衡通常是怎么做的",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/load-balancing.html",pathLocale:"/",extraFields:[]},{title:"读写分离和分库分表详解",headers:[{level:2,title:"读写分离",slug:"读写分离",link:"#读写分离",children:[{level:3,title:"什么是读写分离？",slug:"什么是读写分离",link:"#什么是读写分离",children:[]},{level:3,title:"如何实现读写分离？",slug:"如何实现读写分离",link:"#如何实现读写分离",children:[]},{level:3,title:"主从复制原理是什么？",slug:"主从复制原理是什么",link:"#主从复制原理是什么",children:[]},{level:3,title:"如何避免主从延迟？",slug:"如何避免主从延迟",link:"#如何避免主从延迟",children:[]},{level:3,title:"什么情况下会出现主从延迟？如何尽量减少延迟？",slug:"什么情况下会出现主从延迟-如何尽量减少延迟",link:"#什么情况下会出现主从延迟-如何尽量减少延迟",children:[]}]},{level:2,title:"分库分表",slug:"分库分表",link:"#分库分表",children:[{level:3,title:"什么是分库？",slug:"什么是分库",link:"#什么是分库",children:[]},{level:3,title:"什么是分表？",slug:"什么是分表",link:"#什么是分表",children:[]},{level:3,title:"什么情况下需要分库分表？",slug:"什么情况下需要分库分表",link:"#什么情况下需要分库分表",children:[]},{level:3,title:"常见的分片算法有哪些？",slug:"常见的分片算法有哪些",link:"#常见的分片算法有哪些",children:[]},{level:3,title:"分片键如何选择？",slug:"分片键如何选择",link:"#分片键如何选择",children:[]},{level:3,title:"分库分表会带来什么问题呢？",slug:"分库分表会带来什么问题呢",link:"#分库分表会带来什么问题呢",children:[]},{level:3,title:"分库分表有没有什么比较推荐的方案？",slug:"分库分表有没有什么比较推荐的方案",link:"#分库分表有没有什么比较推荐的方案",children:[]},{level:3,title:"分库分表后，数据怎么迁移呢？",slug:"分库分表后-数据怎么迁移呢",link:"#分库分表后-数据怎么迁移呢",children:[]}]},{level:2,title:"总结",slug:"总结-1",link:"#总结-1",children:[]}],path:"/high-performance/read-and-write-separation-and-library-subtable.html",pathLocale:"/",extraFields:[]},{title:"常见SQL优化手段总结（付费）",headers:[],path:"/high-performance/sql-optimization.html",pathLocale:"/",extraFields:[]},{title:"程序人生",headers:[{level:2,title:"练级攻略",slug:"练级攻略",link:"#练级攻略",children:[]},{level:2,title:"个人经历",slug:"个人经历",link:"#个人经历",children:[]},{level:2,title:"程序员",slug:"程序员",link:"#程序员",children:[]},{level:2,title:"面试",slug:"面试",link:"#面试",children:[]},{level:2,title:"工作",slug:"工作",link:"#工作",children:[]}],path:"/high-quality-technical-articles/",pathLocale:"/",extraFields:[]},{title:"优质面经汇总(付费)",headers:[],path:"/interview-preparation/interview-experience.html",pathLocale:"/",extraFields:[]},{title:"Java面试重点总结(重要)",headers:[{level:2,title:"Java 后端面试哪些知识点是重点？",slug:"java-后端面试哪些知识点是重点",link:"#java-后端面试哪些知识点是重点",children:[]},{level:2,title:"如何更高效地准备八股文？",slug:"如何更高效地准备八股文",link:"#如何更高效地准备八股文",children:[]}],path:"/interview-preparation/key-points-of-interview.html",pathLocale:"/",extraFields:[]},{title:"项目经验指南",headers:[{level:2,title:"没有项目经验怎么办?",slug:"没有项目经验怎么办",link:"#没有项目经验怎么办",children:[{level:3,title:"实战项目视频/专栏",slug:"实战项目视频-专栏",link:"#实战项目视频-专栏",children:[]},{level:3,title:"实战类开源项目",slug:"实战类开源项目",link:"#实战类开源项目",children:[]},{level:3,title:"从头开始做",slug:"从头开始做",link:"#从头开始做",children:[]},{level:3,title:"参加各种大公司组织的各种大赛",slug:"参加各种大公司组织的各种大赛",link:"#参加各种大公司组织的各种大赛",children:[]},{level:3,title:"参与实际项目",slug:"参与实际项目",link:"#参与实际项目",children:[]}]},{level:2,title:"有没有还不错的项目推荐？",slug:"有没有还不错的项目推荐",link:"#有没有还不错的项目推荐",children:[]},{level:2,title:"我跟着视频做的项目会被面试官嫌弃不？",slug:"我跟着视频做的项目会被面试官嫌弃不",link:"#我跟着视频做的项目会被面试官嫌弃不",children:[]}],path:"/interview-preparation/project-experience-guide.html",pathLocale:"/",extraFields:[]},{title:"程序员简历编写指南(重要)",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"简历模板",slug:"简历模板",link:"#简历模板",children:[]},{level:2,title:"简历内容",slug:"简历内容",link:"#简历内容",children:[{level:3,title:"个人信息",slug:"个人信息",link:"#个人信息",children:[]},{level:3,title:"求职意向",slug:"求职意向",link:"#求职意向",children:[]},{level:3,title:"教育经历",slug:"教育经历",link:"#教育经历",children:[]},{level:3,title:"专业技能",slug:"专业技能",link:"#专业技能",children:[]},{level:3,title:"实习经历/工作经历（重要）",slug:"实习经历-工作经历-重要",link:"#实习经历-工作经历-重要",children:[]},{level:3,title:"项目经历（重要）",slug:"项目经历-重要",link:"#项目经历-重要",children:[]},{level:3,title:"荣誉奖项（可选）",slug:"荣誉奖项-可选",link:"#荣誉奖项-可选",children:[]},{level:3,title:"校园经历（可选）",slug:"校园经历-可选",link:"#校园经历-可选",children:[]},{level:3,title:"个人评价",slug:"个人评价",link:"#个人评价",children:[]}]},{level:2,title:"STAR 法则和 FAB 法则",slug:"star-法则和-fab-法则",link:"#star-法则和-fab-法则",children:[{level:3,title:"STAR 法则（Situation Task Action Result）",slug:"star-法则-situation-task-action-result",link:"#star-法则-situation-task-action-result",children:[]},{level:3,title:"FAB 法则（Feature Advantage Benefit）",slug:"fab-法则-feature-advantage-benefit",link:"#fab-法则-feature-advantage-benefit",children:[]}]},{level:2,title:"建议",slug:"建议",link:"#建议",children:[{level:3,title:"避免页数过多",slug:"避免页数过多",link:"#避免页数过多",children:[]},{level:3,title:"避免语义模糊",slug:"避免语义模糊",link:"#避免语义模糊",children:[]},{level:3,title:"注意简历样式",slug:"注意简历样式",link:"#注意简历样式",children:[]},{level:3,title:"其他",slug:"其他",link:"#其他",children:[]}]},{level:2,title:"简历修改",slug:"简历修改",link:"#简历修改",children:[]}],path:"/interview-preparation/resume-guide.html",pathLocale:"/",extraFields:[]},{title:"常见面试题自测(付费)",headers:[],path:"/interview-preparation/self-test-of-common-interview-questions.html",pathLocale:"/",extraFields:[]},{title:"手把手教你如何准备Java面试(重要)",headers:[{level:2,title:"尽早以求职为导向来学习",slug:"尽早以求职为导向来学习",link:"#尽早以求职为导向来学习",children:[]},{level:2,title:"了解投递简历的黄金时间",slug:"了解投递简历的黄金时间",link:"#了解投递简历的黄金时间",children:[]},{level:2,title:"知道如何获取招聘信息",slug:"知道如何获取招聘信息",link:"#知道如何获取招聘信息",children:[]},{level:2,title:"多花点时间完善简历",slug:"多花点时间完善简历",link:"#多花点时间完善简历",children:[]},{level:2,title:"岗位匹配度很重要",slug:"岗位匹配度很重要",link:"#岗位匹配度很重要",children:[]},{level:2,title:"提前准备技术面试",slug:"提前准备技术面试",link:"#提前准备技术面试",children:[]},{level:2,title:"提前准备手撕算法",slug:"提前准备手撕算法",link:"#提前准备手撕算法",children:[]},{level:2,title:"提前准备自我介绍",slug:"提前准备自我介绍",link:"#提前准备自我介绍",children:[]},{level:2,title:"减少抱怨",slug:"减少抱怨",link:"#减少抱怨",children:[]},{level:2,title:"面试之后及时复盘",slug:"面试之后及时复盘",link:"#面试之后及时复盘",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/interview-preparation/teach-you-how-to-prepare-for-the-interview-hand-in-hand.html",pathLocale:"/",extraFields:[]},{title:"贡献指南",headers:[],path:"/javaguide/contribution-guideline.html",pathLocale:"/",extraFields:[]},{title:"常见问题",headers:[{level:2,title:"JavaGuide 是否支持 RSS？",slug:"javaguide-是否支持-rss",link:"#javaguide-是否支持-rss",children:[]},{level:2,title:"JavaGuide 有没有 PDF 版本？",slug:"javaguide-有没有-pdf-版本",link:"#javaguide-有没有-pdf-版本",children:[]},{level:2,title:"如何看待 JavaGuide 的 star 数量很多？",slug:"如何看待-javaguide-的-star-数量很多",link:"#如何看待-javaguide-的-star-数量很多",children:[]},{level:2,title:"JavaGuide 会不会推出纸质书籍？",slug:"javaguide-会不会推出纸质书籍",link:"#javaguide-会不会推出纸质书籍",children:[]},{level:2,title:"JavaGuide 上为什么有一些付费文章？",slug:"javaguide-上为什么有一些付费文章",link:"#javaguide-上为什么有一些付费文章",children:[]}],path:"/javaguide/faq.html",pathLocale:"/",extraFields:[]},{title:"网站历史",headers:[],path:"/javaguide/history.html",pathLocale:"/",extraFields:[]},{title:"项目介绍",headers:[{level:2,title:"自我介绍",slug:"自我介绍",link:"#自我介绍",children:[]},{level:2,title:"官方知识星球",slug:"官方知识星球",link:"#官方知识星球",children:[]},{level:2,title:"项目说明",slug:"项目说明",link:"#项目说明",children:[]}],path:"/javaguide/intro.html",pathLocale:"/",extraFields:[]},{title:"使用建议",headers:[],path:"/javaguide/use-suggestion.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/knowledge/",pathLocale:"/",extraFields:[]},{title:"Bash和Shell程序",headers:[{level:2,title:"Shell",slug:"shell",link:"#shell",children:[{level:3,title:"Linux提供的shell版本",slug:"linux提供的shell版本",link:"#linux提供的shell版本",children:[]}]},{level:2,title:"Bash",slug:"bash",link:"#bash",children:[{level:3,title:"优势",slug:"优势",link:"#优势",children:[]},{level:3,title:"变量使用",slug:"变量使用",link:"#变量使用",children:[]}]}],path:"/linux/bash.html",pathLocale:"/",extraFields:[]},{title:"基础知识",headers:[{level:2,title:"Linux基础",slug:"linux基础",link:"#linux基础",children:[{level:3,title:"目录配置",slug:"目录配置",link:"#目录配置",children:[]},{level:3,title:"常用命令行工具",slug:"常用命令行工具",link:"#常用命令行工具",children:[]}]}],path:"/linux/basis.html",pathLocale:"/",extraFields:[]},{title:"Daemon和Service",headers:[{level:2,title:"daemon",slug:"daemon",link:"#daemon",children:[]},{level:2,title:"systemd",slug:"systemd",link:"#systemd",children:[{level:3,title:"优势",slug:"优势",link:"#优势",children:[]},{level:3,title:"配置文件目录",slug:"配置文件目录",link:"#配置文件目录",children:[]},{level:3,title:"创建service",slug:"创建service",link:"#创建service",children:[]}]}],path:"/linux/daemon.html",pathLocale:"/",extraFields:[]},{title:"nginx",headers:[],path:"/linux/nginx.html",pathLocale:"/",extraFields:[]},{title:"RPM基础",headers:[{level:3,title:"RPM",slug:"rpm",link:"#rpm",children:[]}],path:"/linux/rpm.html",pathLocale:"/",extraFields:[]},{title:"用户组",headers:[],path:"/linux/usergroup.html",pathLocale:"/",extraFields:[]},{title:".Net基础",headers:[{level:2,title:".Net",slug:"net",link:"#net",children:[{level:3,title:".Net方法",slug:"net方法",link:"#net方法",children:[]}]},{level:2,title:"ASP .Net",slug:"asp-net",link:"#asp-net",children:[]}],path:"/net/basis.html",pathLocale:"/",extraFields:[]},{title:"神经网络基础",headers:[{level:2,title:"顶会期刊",slug:"顶会期刊",link:"#顶会期刊",children:[{level:3,title:"Database",slug:"database",link:"#database",children:[]},{level:3,title:"Machine Learning",slug:"machine-learning",link:"#machine-learning",children:[]},{level:3,title:"Artificial intelligence",slug:"artificial-intelligence",link:"#artificial-intelligence",children:[]},{level:3,title:"计算机领域顶会论文",slug:"计算机领域顶会论文",link:"#计算机领域顶会论文",children:[]}]},{level:2,title:"期刊论文搜索",slug:"期刊论文搜索",link:"#期刊论文搜索",children:[{level:3,title:"A类",slug:"a类",link:"#a类",children:[]},{level:3,title:"其他链接",slug:"其他链接",link:"#其他链接",children:[]}]}],path:"/neural-network/basis.html",pathLocale:"/",extraFields:[]},{title:"论文写作",headers:[{level:2,title:"基本要求",slug:"基本要求",link:"#基本要求",children:[]},{level:2,title:"相关工作",slug:"相关工作",link:"#相关工作",children:[]},{level:2,title:"方法",slug:"方法",link:"#方法",children:[]}],path:"/neural-network/paper-related.html",pathLocale:"/",extraFields:[]},{title:"包管理器",headers:[{level:2,title:"PNPM",slug:"pnpm",link:"#pnpm",children:[]},{level:2,title:"CNPM",slug:"cnpm",link:"#cnpm",children:[]},{level:2,title:"YARN",slug:"yarn",link:"#yarn",children:[]}],path:"/node/package-manager.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源大数据项目",headers:[],path:"/open-source-project/big-data.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源 AI 项目",headers:[],path:"/open-source-project/machine-learning.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源实战项目",headers:[{level:2,title:"快速开发平台",slug:"快速开发平台",link:"#快速开发平台",children:[]},{level:2,title:"博客/论坛系统",slug:"博客-论坛系统",link:"#博客-论坛系统",children:[]},{level:2,title:"Wiki/文档系统",slug:"wiki-文档系统",link:"#wiki-文档系统",children:[]},{level:2,title:"文件管理系统/网盘",slug:"文件管理系统-网盘",link:"#文件管理系统-网盘",children:[]},{level:2,title:"考试/刷题系统",slug:"考试-刷题系统",link:"#考试-刷题系统",children:[]},{level:2,title:"商城系统",slug:"商城系统",link:"#商城系统",children:[]},{level:2,title:"售票系统",slug:"售票系统",link:"#售票系统",children:[]},{level:2,title:"权限管理系统",slug:"权限管理系统",link:"#权限管理系统",children:[]},{level:2,title:"造轮子",slug:"造轮子",link:"#造轮子",children:[]}],path:"/open-source-project/practical-project.html",pathLocale:"/",extraFields:[]},{title:"Java 开源项目精选",headers:[],path:"/open-source-project/",pathLocale:"/",extraFields:[]},{title:"Java 优质开源系统设计项目",headers:[{level:2,title:"基础框架",slug:"基础框架",link:"#基础框架",children:[{level:3,title:"Web 框架",slug:"web-框架",link:"#web-框架",children:[]},{level:3,title:"微服务/云原生",slug:"微服务-云原生",link:"#微服务-云原生",children:[]},{level:3,title:"API 文档",slug:"api-文档",link:"#api-文档",children:[]},{level:3,title:"Bean 映射",slug:"bean-映射",link:"#bean-映射",children:[]},{level:3,title:"其他",slug:"其他",link:"#其他",children:[]}]},{level:2,title:"认证授权",slug:"认证授权",link:"#认证授权",children:[{level:3,title:"权限认证",slug:"权限认证",link:"#权限认证",children:[]},{level:3,title:"第三方登录",slug:"第三方登录",link:"#第三方登录",children:[]},{level:3,title:"单点登录（SSO）",slug:"单点登录-sso",link:"#单点登录-sso",children:[]}]},{level:2,title:"网络通讯",slug:"网络通讯",link:"#网络通讯",children:[]},{level:2,title:"数据库",slug:"数据库",link:"#数据库",children:[{level:3,title:"数据库连接池",slug:"数据库连接池",link:"#数据库连接池",children:[]},{level:3,title:"数据库框架",slug:"数据库框架",link:"#数据库框架",children:[]},{level:3,title:"数据同步",slug:"数据同步",link:"#数据同步",children:[]},{level:3,title:"时序数据库",slug:"时序数据库",link:"#时序数据库",children:[]}]},{level:2,title:"搜索引擎",slug:"搜索引擎",link:"#搜索引擎",children:[]},{level:2,title:"测试",slug:"测试",link:"#测试",children:[{level:3,title:"测试框架",slug:"测试框架",link:"#测试框架",children:[]},{level:3,title:"测试平台",slug:"测试平台",link:"#测试平台",children:[]},{level:3,title:"API 调试",slug:"api-调试",link:"#api-调试",children:[]}]},{level:2,title:"任务调度",slug:"任务调度",link:"#任务调度",children:[]},{level:2,title:"分布式",slug:"分布式",link:"#分布式",children:[{level:3,title:"API 网关",slug:"api-网关",link:"#api-网关",children:[]},{level:3,title:"配置中心",slug:"配置中心",link:"#配置中心",children:[]},{level:3,title:"链路追踪",slug:"链路追踪",link:"#链路追踪",children:[]}]},{level:2,title:"高性能",slug:"高性能",link:"#高性能",children:[{level:3,title:"多线程",slug:"多线程",link:"#多线程",children:[]},{level:3,title:"缓存",slug:"缓存",link:"#缓存",children:[]},{level:3,title:"消息队列",slug:"消息队列",link:"#消息队列",children:[]},{level:3,title:"读写分离和分库分表",slug:"读写分离和分库分表",link:"#读写分离和分库分表",children:[]}]},{level:2,title:"高可用",slug:"高可用",link:"#高可用",children:[{level:3,title:"限流",slug:"限流",link:"#限流",children:[]},{level:3,title:"监控",slug:"监控",link:"#监控",children:[]},{level:3,title:"日志",slug:"日志",link:"#日志",children:[]}]},{level:2,title:"字节码操作",slug:"字节码操作",link:"#字节码操作",children:[]}],path:"/open-source-project/system-design.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源工具类",headers:[{level:2,title:"代码质量",slug:"代码质量",link:"#代码质量",children:[]},{level:2,title:"问题排查和性能优化",slug:"问题排查和性能优化",link:"#问题排查和性能优化",children:[]},{level:2,title:"文档处理",slug:"文档处理",link:"#文档处理",children:[{level:3,title:"Excel",slug:"excel",link:"#excel",children:[]},{level:3,title:"Word",slug:"word",link:"#word",children:[]},{level:3,title:"JSON",slug:"json",link:"#json",children:[]},{level:3,title:"PDF",slug:"pdf",link:"#pdf",children:[]}]},{level:2,title:"图片处理",slug:"图片处理",link:"#图片处理",children:[]},{level:2,title:"验证码",slug:"验证码",link:"#验证码",children:[]},{level:2,title:"在线支付",slug:"在线支付",link:"#在线支付",children:[]},{level:2,title:"其他",slug:"其他",link:"#其他",children:[]}],path:"/open-source-project/tool-library.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源开发工具",headers:[{level:2,title:"项目构建",slug:"项目构建",link:"#项目构建",children:[]},{level:2,title:"反编译",slug:"反编译",link:"#反编译",children:[]},{level:2,title:"数据库",slug:"数据库",link:"#数据库",children:[{level:3,title:"数据库建模",slug:"数据库建模",link:"#数据库建模",children:[]},{level:3,title:"数据库管理",slug:"数据库管理",link:"#数据库管理",children:[]},{level:3,title:"Redis",slug:"redis",link:"#redis",children:[]}]},{level:2,title:"Docker",slug:"docker",link:"#docker",children:[]},{level:2,title:"ZooKeeper",slug:"zookeeper",link:"#zookeeper",children:[]},{level:2,title:"Kafka",slug:"kafka",link:"#kafka",children:[]}],path:"/open-source-project/tools.html",pathLocale:"/",extraFields:[]},{title:"Java 优质开源技术教程",headers:[{level:2,title:"Java",slug:"java",link:"#java",children:[]},{level:2,title:"计算机基础",slug:"计算机基础",link:"#计算机基础",children:[]},{level:2,title:"系统设计",slug:"系统设计",link:"#系统设计",children:[{level:3,title:"SpringBoot",slug:"springboot",link:"#springboot",children:[]},{level:3,title:"SpringCloud",slug:"springcloud",link:"#springcloud",children:[]},{level:3,title:"Nginx",slug:"nginx",link:"#nginx",children:[]}]},{level:2,title:"大数据",slug:"大数据",link:"#大数据",children:[]},{level:2,title:"开源书籍",slug:"开源书籍",link:"#开源书籍",children:[]}],path:"/open-source-project/tutorial.html",pathLocale:"/",extraFields:[]},{title:"大创项目",headers:[{level:2,title:"表达式树",slug:"表达式树",link:"#表达式树",children:[]},{level:2,title:"查询表达式",slug:"查询表达式",link:"#查询表达式",children:[{level:3,title:"自定义的表达式访问器",slug:"自定义的表达式访问器",link:"#自定义的表达式访问器",children:[]}]},{level:2,title:"搜索方法",slug:"搜索方法",link:"#搜索方法",children:[{level:3,title:"条件搜索",slug:"条件搜索",link:"#条件搜索",children:[]}]},{level:2,title:"委托类型",slug:"委托类型",link:"#委托类型",children:[]}],path:"/projects/WebAPI.html",pathLocale:"/",extraFields:[]},{title:"综合项目实践",headers:[],path:"/projects/general-projects.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/projects/",pathLocale:"/",extraFields:[]},{title:"Python基础",headers:[{level:2,title:"为什么Python运行慢",slug:"为什么python运行慢",link:"#为什么python运行慢",children:[]},{level:2,title:"优势",slug:"优势",link:"#优势",children:[]}],path:"/python/basis.html",pathLocale:"/",extraFields:[]},{title:"Servlet 总结",headers:[{level:2,title:"阐述 Servlet 和 CGI 的区别?",slug:"阐述-servlet-和-cgi-的区别",link:"#阐述-servlet-和-cgi-的区别",children:[{level:3,title:"CGI 的不足之处",slug:"cgi-的不足之处",link:"#cgi-的不足之处",children:[]},{level:3,title:"Servlet 的优点",slug:"servlet-的优点",link:"#servlet-的优点",children:[]}]},{level:2,title:"Servlet 接口中有哪些方法及 Servlet 生命周期探秘",slug:"servlet-接口中有哪些方法及-servlet-生命周期探秘",link:"#servlet-接口中有哪些方法及-servlet-生命周期探秘",children:[]},{level:2,title:"GET 和 POST 的区别",slug:"get-和-post-的区别",link:"#get-和-post-的区别",children:[]},{level:2,title:"什么情况下调用 doGet()和 doPost()",slug:"什么情况下调用-doget-和-dopost",link:"#什么情况下调用-doget-和-dopost",children:[]},{level:2,title:"转发(Forward)和重定向(Redirect)的区别",slug:"转发-forward-和重定向-redirect-的区别",link:"#转发-forward-和重定向-redirect-的区别",children:[]},{level:2,title:"自动刷新(Refresh)",slug:"自动刷新-refresh",link:"#自动刷新-refresh",children:[]},{level:2,title:"Servlet 与线程安全",slug:"servlet-与线程安全",link:"#servlet-与线程安全",children:[]},{level:2,title:"JSP 和 Servlet 是什么关系",slug:"jsp-和-servlet-是什么关系",link:"#jsp-和-servlet-是什么关系",children:[]},{level:2,title:"JSP 工作原理",slug:"jsp-工作原理",link:"#jsp-工作原理",children:[]},{level:2,title:"JSP 有哪些内置对象、作用分别是什么",slug:"jsp-有哪些内置对象、作用分别是什么",link:"#jsp-有哪些内置对象、作用分别是什么",children:[]},{level:2,title:"Request 对象的主要方法有哪些",slug:"request-对象的主要方法有哪些",link:"#request-对象的主要方法有哪些",children:[]},{level:2,title:"request.getAttribute()和 request.getParameter()有何区别",slug:"request-getattribute-和-request-getparameter-有何区别",link:"#request-getattribute-和-request-getparameter-有何区别",children:[]},{level:2,title:"include 指令 include 的行为的区别",slug:"include-指令-include-的行为的区别",link:"#include-指令-include-的行为的区别",children:[]},{level:2,title:"JSP 九大内置对象，七大动作，三大指令",slug:"jsp-九大内置对象-七大动作-三大指令",link:"#jsp-九大内置对象-七大动作-三大指令",children:[]},{level:2,title:"讲解 JSP 中的四种作用域",slug:"讲解-jsp-中的四种作用域",link:"#讲解-jsp-中的四种作用域",children:[]},{level:2,title:"如何实现 JSP 或 Servlet 的单线程模式",slug:"如何实现-jsp-或-servlet-的单线程模式",link:"#如何实现-jsp-或-servlet-的单线程模式",children:[]},{level:2,title:"实现会话跟踪的技术有哪些",slug:"实现会话跟踪的技术有哪些",link:"#实现会话跟踪的技术有哪些",children:[]},{level:2,title:"Cookie 和 Session 的区别",slug:"cookie-和-session-的区别",link:"#cookie-和-session-的区别",children:[]}],path:"/system-design/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html",pathLocale:"/",extraFields:[]},{title:"设计模式常见面试题总结",headers:[],path:"/system-design/design-pattern.html",pathLocale:"/",extraFields:[]},{title:"Java 定时任务详解",headers:[{level:2,title:"为什么需要定时任务？",slug:"为什么需要定时任务",link:"#为什么需要定时任务",children:[]},{level:2,title:"单机定时任务",slug:"单机定时任务",link:"#单机定时任务",children:[{level:3,title:"Timer",slug:"timer",link:"#timer",children:[]},{level:3,title:"ScheduledExecutorService",slug:"scheduledexecutorservice",link:"#scheduledexecutorservice",children:[]},{level:3,title:"DelayQueue",slug:"delayqueue",link:"#delayqueue",children:[]},{level:3,title:"Spring Task",slug:"spring-task",link:"#spring-task",children:[]},{level:3,title:"时间轮",slug:"时间轮",link:"#时间轮",children:[]}]},{level:2,title:"分布式定时任务",slug:"分布式定时任务",link:"#分布式定时任务",children:[{level:3,title:"Redis",slug:"redis",link:"#redis",children:[]},{level:3,title:"MQ",slug:"mq",link:"#mq",children:[]}]},{level:2,title:"分布式任务调度框架",slug:"分布式任务调度框架",link:"#分布式任务调度框架",children:[{level:3,title:"Quartz",slug:"quartz",link:"#quartz",children:[]},{level:3,title:"Elastic-Job",slug:"elastic-job",link:"#elastic-job",children:[]},{level:3,title:"XXL-JOB",slug:"xxl-job",link:"#xxl-job",children:[]},{level:3,title:"PowerJob",slug:"powerjob",link:"#powerjob",children:[]}]},{level:2,title:"定时任务方案总结",slug:"定时任务方案总结",link:"#定时任务方案总结",children:[]}],path:"/system-design/schedule-task.html",pathLocale:"/",extraFields:[]},{title:"系统设计常见面试题总结(付费)",headers:[],path:"/system-design/system-design-questions.html",pathLocale:"/",extraFields:[]},{title:"Web 实时消息推送详解",headers:[{level:2,title:"什么是消息推送？",slug:"什么是消息推送",link:"#什么是消息推送",children:[]},{level:2,title:"消息推送常见方案",slug:"消息推送常见方案",link:"#消息推送常见方案",children:[{level:3,title:"短轮询",slug:"短轮询",link:"#短轮询",children:[]},{level:3,title:"长轮询",slug:"长轮询",link:"#长轮询",children:[]},{level:3,title:"iframe 流",slug:"iframe-流",link:"#iframe-流",children:[]},{level:3,title:"SSE (推荐)",slug:"sse-推荐",link:"#sse-推荐",children:[]},{level:3,title:"Websocket",slug:"websocket",link:"#websocket",children:[]},{level:3,title:"MQTT",slug:"mqtt",link:"#mqtt",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/system-design/web-real-time-message-push.html",pathLocale:"/",extraFields:[]},{title:"git版本管理",headers:[{level:2,title:"git基本操作",slug:"git基本操作",link:"#git基本操作",children:[{level:3,title:"merge",slug:"merge",link:"#merge",children:[]},{level:3,title:"pull",slug:"pull",link:"#pull",children:[]},{level:3,title:"fetch",slug:"fetch",link:"#fetch",children:[]}]},{level:2,title:"head",slug:"head",link:"#head",children:[{level:3,title:"基本概念",slug:"基本概念",link:"#基本概念",children:[]},{level:3,title:"实例",slug:"实例",link:"#实例",children:[]}]},{level:2,title:"git分支操作",slug:"git分支操作",link:"#git分支操作",children:[{level:3,title:"重置当前提交记录",slug:"重置当前提交记录",link:"#重置当前提交记录",children:[]},{level:3,title:"解决远程和本地仓库不一致",slug:"解决远程和本地仓库不一致",link:"#解决远程和本地仓库不一致",children:[]}]},{level:2,title:"问题",slug:"问题",link:"#问题",children:[{level:3,title:"未提交先推送",slug:"未提交先推送",link:"#未提交先推送",children:[]}]}],path:"/vcs/git.html",pathLocale:"/",extraFields:[]},{title:"WebRtc",headers:[{level:2,title:"协议",slug:"协议",link:"#协议",children:[{level:3,title:"ICE（Interactive Connectivity Establishment）",slug:"ice-interactive-connectivity-establishment",link:"#ice-interactive-connectivity-establishment",children:[]},{level:3,title:"STUN（Session Traversal Utilities for NAT）",slug:"stun-session-traversal-utilities-for-nat",link:"#stun-session-traversal-utilities-for-nat",children:[]},{level:3,title:"TURN（Traversal Using Relays around NAT）",slug:"turn-traversal-using-relays-around-nat",link:"#turn-traversal-using-relays-around-nat",children:[]},{level:3,title:"NAT（Network Address Translation）",slug:"nat-network-address-translation",link:"#nat-network-address-translation",children:[]},{level:3,title:"SDP（Session Description Protocol）",slug:"sdp-session-description-protocol",link:"#sdp-session-description-protocol",children:[]}]},{level:2,title:"Signaling",slug:"signaling",link:"#signaling",children:[{level:3,title:"session description",slug:"session-description",link:"#session-description",children:[]},{level:3,title:"ICE candidates",slug:"ice-candidates",link:"#ice-candidates",children:[]},{level:3,title:"UDP candidate type",slug:"udp-candidate-type",link:"#udp-candidate-type",children:[]}]}],path:"/web/webrtc.html",pathLocale:"/",extraFields:[]},{title:"《后端面试高频系统设计&场景题》",headers:[{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"内容概览",slug:"内容概览",link:"#内容概览",children:[]},{level:2,title:"星球其他资源",slug:"星球其他资源",link:"#星球其他资源",children:[]},{level:2,title:"星球限时优惠",slug:"星球限时优惠",link:"#星球限时优惠",children:[]}],path:"/zhuanlan/back-end-interview-high-frequency-system-design-and-scenario-questions.html",pathLocale:"/",extraFields:[]},{title:"《手写 RPC 框架》",headers:[{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"内容概览",slug:"内容概览",link:"#内容概览",children:[]},{level:2,title:"星球其他资源",slug:"星球其他资源",link:"#星球其他资源",children:[]},{level:2,title:"星球限时优惠",slug:"星球限时优惠",link:"#星球限时优惠",children:[]}],path:"/zhuanlan/handwritten-rpc-framework.html",pathLocale:"/",extraFields:[]},{title:"《Java 面试指北》",headers:[{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"内容概览",slug:"内容概览",link:"#内容概览",children:[{level:3,title:"面试准备篇",slug:"面试准备篇",link:"#面试准备篇",children:[]},{level:3,title:"技术面试题篇",slug:"技术面试题篇",link:"#技术面试题篇",children:[]},{level:3,title:"面经篇",slug:"面经篇",link:"#面经篇",children:[]},{level:3,title:"技术面试题自测篇",slug:"技术面试题自测篇",link:"#技术面试题自测篇",children:[]},{level:3,title:"练级攻略篇",slug:"练级攻略篇",link:"#练级攻略篇",children:[]},{level:3,title:"工作篇",slug:"工作篇",link:"#工作篇",children:[]}]},{level:2,title:"星球其他资源",slug:"星球其他资源",link:"#星球其他资源",children:[]},{level:2,title:"星球限时优惠",slug:"星球限时优惠",link:"#星球限时优惠",children:[]}],path:"/zhuanlan/java-mian-shi-zhi-bei.html",pathLocale:"/",extraFields:[]},{title:"星球专属优质专栏概览",headers:[{level:2,title:"星球其他资源",slug:"星球其他资源",link:"#星球其他资源",children:[]},{level:2,title:"星球限时优惠",slug:"星球限时优惠",link:"#星球限时优惠",children:[]}],path:"/zhuanlan/",pathLocale:"/",extraFields:[]},{title:"《Java 必读源码系列》",headers:[{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"内容概览",slug:"内容概览",link:"#内容概览",children:[]},{level:2,title:"星球其他资源",slug:"星球其他资源",link:"#星球其他资源",children:[]},{level:2,title:"星球限时优惠",slug:"星球限时优惠",link:"#星球限时优惠",children:[]},{level:2,title:"更多专栏",slug:"更多专栏",link:"#更多专栏",children:[]}],path:"/zhuanlan/source-code-reading.html",pathLocale:"/",extraFields:[]},{title:"MQTT",headers:[{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[{level:3,title:"基本结构",slug:"基本结构",link:"#基本结构",children:[]}]}],path:"/AloT/IoT/MQTT.html",pathLocale:"/",extraFields:[]},{title:"十大经典排序算法总结",headers:[{level:2,title:"引言",slug:"引言",link:"#引言",children:[]},{level:2,title:"简介",slug:"简介",link:"#简介",children:[{level:3,title:"术语说明",slug:"术语说明",link:"#术语说明",children:[]},{level:3,title:"算法分类",slug:"算法分类",link:"#算法分类",children:[]}]},{level:2,title:"冒泡排序 (Bubble Sort)",slug:"冒泡排序-bubble-sort",link:"#冒泡排序-bubble-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤",link:"#算法步骤",children:[]},{level:3,title:"图解算法",slug:"图解算法",link:"#图解算法",children:[]},{level:3,title:"代码实现",slug:"代码实现",link:"#代码实现",children:[]},{level:3,title:"算法分析",slug:"算法分析",link:"#算法分析",children:[]}]},{level:2,title:"选择排序 (Selection Sort)",slug:"选择排序-selection-sort",link:"#选择排序-selection-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-1",link:"#算法步骤-1",children:[]},{level:3,title:"图解算法",slug:"图解算法-1",link:"#图解算法-1",children:[]},{level:3,title:"代码实现",slug:"代码实现-1",link:"#代码实现-1",children:[]},{level:3,title:"算法分析",slug:"算法分析-1",link:"#算法分析-1",children:[]}]},{level:2,title:"插入排序 (Insertion Sort)",slug:"插入排序-insertion-sort",link:"#插入排序-insertion-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-2",link:"#算法步骤-2",children:[]},{level:3,title:"图解算法",slug:"图解算法-2",link:"#图解算法-2",children:[]},{level:3,title:"代码实现",slug:"代码实现-2",link:"#代码实现-2",children:[]},{level:3,title:"算法分析",slug:"算法分析-2",link:"#算法分析-2",children:[]}]},{level:2,title:"希尔排序 (Shell Sort)",slug:"希尔排序-shell-sort",link:"#希尔排序-shell-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-3",link:"#算法步骤-3",children:[]},{level:3,title:"图解算法",slug:"图解算法-3",link:"#图解算法-3",children:[]},{level:3,title:"代码实现",slug:"代码实现-3",link:"#代码实现-3",children:[]},{level:3,title:"算法分析",slug:"算法分析-3",link:"#算法分析-3",children:[]}]},{level:2,title:"归并排序 (Merge Sort)",slug:"归并排序-merge-sort",link:"#归并排序-merge-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-4",link:"#算法步骤-4",children:[]},{level:3,title:"图解算法",slug:"图解算法-4",link:"#图解算法-4",children:[]},{level:3,title:"代码实现",slug:"代码实现-4",link:"#代码实现-4",children:[]},{level:3,title:"算法分析",slug:"算法分析-4",link:"#算法分析-4",children:[]}]},{level:2,title:"快速排序 (Quick Sort)",slug:"快速排序-quick-sort",link:"#快速排序-quick-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-5",link:"#算法步骤-5",children:[]},{level:3,title:"图解算法",slug:"图解算法-5",link:"#图解算法-5",children:[]},{level:3,title:"代码实现",slug:"代码实现-5",link:"#代码实现-5",children:[]},{level:3,title:"算法分析",slug:"算法分析-5",link:"#算法分析-5",children:[]}]},{level:2,title:"堆排序 (Heap Sort)",slug:"堆排序-heap-sort",link:"#堆排序-heap-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-6",link:"#算法步骤-6",children:[]},{level:3,title:"图解算法",slug:"图解算法-6",link:"#图解算法-6",children:[]},{level:3,title:"代码实现",slug:"代码实现-6",link:"#代码实现-6",children:[]},{level:3,title:"算法分析",slug:"算法分析-6",link:"#算法分析-6",children:[]}]},{level:2,title:"计数排序 (Counting Sort)",slug:"计数排序-counting-sort",link:"#计数排序-counting-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-7",link:"#算法步骤-7",children:[]},{level:3,title:"图解算法",slug:"图解算法-7",link:"#图解算法-7",children:[]},{level:3,title:"代码实现",slug:"代码实现-7",link:"#代码实现-7",children:[]}]},{level:2,title:"算法分析",slug:"算法分析-7",link:"#算法分析-7",children:[]},{level:2,title:"桶排序 (Bucket Sort)",slug:"桶排序-bucket-sort",link:"#桶排序-bucket-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-8",link:"#算法步骤-8",children:[]},{level:3,title:"图解算法",slug:"图解算法-8",link:"#图解算法-8",children:[]},{level:3,title:"代码实现",slug:"代码实现-8",link:"#代码实现-8",children:[]},{level:3,title:"算法分析",slug:"算法分析-8",link:"#算法分析-8",children:[]}]},{level:2,title:"基数排序 (Radix Sort)",slug:"基数排序-radix-sort",link:"#基数排序-radix-sort",children:[{level:3,title:"算法步骤",slug:"算法步骤-9",link:"#算法步骤-9",children:[]},{level:3,title:"图解算法",slug:"图解算法-9",link:"#图解算法-9",children:[]},{level:3,title:"代码实现",slug:"代码实现-9",link:"#代码实现-9",children:[]},{level:3,title:"算法分析",slug:"算法分析-9",link:"#算法分析-9",children:[]}]},{level:2,title:"参考文章",slug:"参考文章",link:"#参考文章",children:[]}],path:"/cs-basics/algorithms/10-classical-sorting-algorithms.html",pathLocale:"/",extraFields:[]},{title:"算法训练",headers:[{level:2,title:"LeetCode",slug:"leetcode",link:"#leetcode",children:[]}],path:"/cs-basics/algorithms/Practice.html",pathLocale:"/",extraFields:[]},{title:"经典算法思想总结（含LeetCode题目推荐）",headers:[{level:2,title:"贪心算法",slug:"贪心算法",link:"#贪心算法",children:[{level:3,title:"算法思想",slug:"算法思想",link:"#算法思想",children:[]},{level:3,title:"一般解题步骤",slug:"一般解题步骤",link:"#一般解题步骤",children:[]},{level:3,title:"LeetCode",slug:"leetcode",link:"#leetcode",children:[]}]},{level:2,title:"动态规划",slug:"动态规划",link:"#动态规划",children:[{level:3,title:"算法思想",slug:"算法思想-1",link:"#算法思想-1",children:[]},{level:3,title:"一般解题步骤",slug:"一般解题步骤-1",link:"#一般解题步骤-1",children:[]},{level:3,title:"LeetCode",slug:"leetcode-1",link:"#leetcode-1",children:[]}]},{level:2,title:"回溯算法",slug:"回溯算法",link:"#回溯算法",children:[{level:3,title:"算法思想",slug:"算法思想-2",link:"#算法思想-2",children:[]},{level:3,title:"一般解题步骤",slug:"一般解题步骤-2",link:"#一般解题步骤-2",children:[]},{level:3,title:"leetcode",slug:"leetcode-2",link:"#leetcode-2",children:[]}]},{level:2,title:"分治算法",slug:"分治算法",link:"#分治算法",children:[{level:3,title:"算法思想",slug:"算法思想-3",link:"#算法思想-3",children:[]},{level:3,title:"一般解题步骤",slug:"一般解题步骤-3",link:"#一般解题步骤-3",children:[]},{level:3,title:"LeetCode",slug:"leetcode-3",link:"#leetcode-3",children:[]}]}],path:"/cs-basics/algorithms/classical-algorithm-problems-recommendations.html",pathLocale:"/",extraFields:[]},{title:"常见数据结构经典LeetCode题目推荐",headers:[{level:2,title:"数组",slug:"数组",link:"#数组",children:[]},{level:2,title:"链表",slug:"链表",link:"#链表",children:[]},{level:2,title:"栈与队列",slug:"栈与队列",link:"#栈与队列",children:[]},{level:2,title:"二叉树",slug:"二叉树",link:"#二叉树",children:[]},{level:2,title:"图",slug:"图",link:"#图",children:[]},{level:2,title:"堆",slug:"堆",link:"#堆",children:[]}],path:"/cs-basics/algorithms/common-data-structures-leetcode-recommendations.html",pathLocale:"/",extraFields:[]},{title:"蓝桥杯题目学习",headers:[],path:"/cs-basics/algorithms/lanqiao.html",pathLocale:"/",extraFields:[]},{title:"几道常见的链表算法题",headers:[{level:2,title:"1. 两数相加",slug:"_1-两数相加",link:"#_1-两数相加",children:[{level:3,title:"题目描述",slug:"题目描述",link:"#题目描述",children:[]},{level:3,title:"问题分析",slug:"问题分析",link:"#问题分析",children:[]},{level:3,title:"Solution",slug:"solution",link:"#solution",children:[]}]},{level:2,title:"2. 翻转链表",slug:"_2-翻转链表",link:"#_2-翻转链表",children:[{level:3,title:"题目描述",slug:"题目描述-1",link:"#题目描述-1",children:[]},{level:3,title:"问题分析",slug:"问题分析-1",link:"#问题分析-1",children:[]},{level:3,title:"Solution",slug:"solution-1",link:"#solution-1",children:[]}]},{level:2,title:"3. 链表中倒数第 k 个节点",slug:"_3-链表中倒数第-k-个节点",link:"#_3-链表中倒数第-k-个节点",children:[{level:3,title:"题目描述",slug:"题目描述-2",link:"#题目描述-2",children:[]},{level:3,title:"问题分析",slug:"问题分析-2",link:"#问题分析-2",children:[]},{level:3,title:"Solution",slug:"solution-2",link:"#solution-2",children:[]}]},{level:2,title:"4. 删除链表的倒数第 N 个节点",slug:"_4-删除链表的倒数第-n-个节点",link:"#_4-删除链表的倒数第-n-个节点",children:[{level:3,title:"问题分析",slug:"问题分析-3",link:"#问题分析-3",children:[]},{level:3,title:"Solution",slug:"solution-3",link:"#solution-3",children:[]}]},{level:2,title:"5. 合并两个排序的链表",slug:"_5-合并两个排序的链表",link:"#_5-合并两个排序的链表",children:[{level:3,title:"题目描述",slug:"题目描述-3",link:"#题目描述-3",children:[]},{level:3,title:"问题分析",slug:"问题分析-4",link:"#问题分析-4",children:[]},{level:3,title:"Solution",slug:"solution-4",link:"#solution-4",children:[]}]}],path:"/cs-basics/algorithms/linkedlist-algorithm-problems.html",pathLocale:"/",extraFields:[]},{title:"几道常见的字符串算法题",headers:[{level:2,title:"1. KMP 算法",slug:"_1-kmp-算法",link:"#_1-kmp-算法",children:[]},{level:2,title:"2. 替换空格",slug:"_2-替换空格",link:"#_2-替换空格",children:[]},{level:2,title:"3. 最长公共前缀",slug:"_3-最长公共前缀",link:"#_3-最长公共前缀",children:[]},{level:2,title:"4. 回文串",slug:"_4-回文串",link:"#_4-回文串",children:[{level:3,title:"4.1. 最长回文串",slug:"_4-1-最长回文串",link:"#_4-1-最长回文串",children:[]},{level:3,title:"4.2. 验证回文串",slug:"_4-2-验证回文串",link:"#_4-2-验证回文串",children:[]},{level:3,title:"4.3. 最长回文子串",slug:"_4-3-最长回文子串",link:"#_4-3-最长回文子串",children:[]},{level:3,title:"4.4. 最长回文子序列",slug:"_4-4-最长回文子序列",link:"#_4-4-最长回文子序列",children:[]}]},{level:2,title:"5. 括号匹配深度",slug:"_5-括号匹配深度",link:"#_5-括号匹配深度",children:[]},{level:2,title:"6. 把字符串转换成整数",slug:"_6-把字符串转换成整数",link:"#_6-把字符串转换成整数",children:[]}],path:"/cs-basics/algorithms/string-algorithm-problems.html",pathLocale:"/",extraFields:[]},{title:"剑指offer部分编程题",headers:[{level:2,title:"斐波那契数列",slug:"斐波那契数列",link:"#斐波那契数列",children:[]},{level:2,title:"跳台阶问题",slug:"跳台阶问题",link:"#跳台阶问题",children:[]},{level:2,title:"变态跳台阶问题",slug:"变态跳台阶问题",link:"#变态跳台阶问题",children:[]},{level:2,title:"二维数组查找",slug:"二维数组查找",link:"#二维数组查找",children:[]},{level:2,title:"替换空格",slug:"替换空格",link:"#替换空格",children:[]},{level:2,title:"数值的整数次方",slug:"数值的整数次方",link:"#数值的整数次方",children:[]},{level:2,title:"调整数组顺序使奇数位于偶数前面",slug:"调整数组顺序使奇数位于偶数前面",link:"#调整数组顺序使奇数位于偶数前面",children:[]},{level:2,title:"链表中倒数第 k 个节点",slug:"链表中倒数第-k-个节点",link:"#链表中倒数第-k-个节点",children:[]},{level:2,title:"反转链表",slug:"反转链表",link:"#反转链表",children:[]},{level:2,title:"合并两个排序的链表",slug:"合并两个排序的链表",link:"#合并两个排序的链表",children:[]},{level:2,title:"用两个栈实现队列",slug:"用两个栈实现队列",link:"#用两个栈实现队列",children:[]},{level:2,title:"栈的压入,弹出序列",slug:"栈的压入-弹出序列",link:"#栈的压入-弹出序列",children:[]}],path:"/cs-basics/algorithms/the-sword-refers-to-offer.html",pathLocale:"/",extraFields:[]},{title:"布隆过滤器",headers:[{level:2,title:"什么是布隆过滤器？",slug:"什么是布隆过滤器",link:"#什么是布隆过滤器",children:[]},{level:2,title:"布隆过滤器的原理介绍",slug:"布隆过滤器的原理介绍",link:"#布隆过滤器的原理介绍",children:[]},{level:2,title:"布隆过滤器使用场景",slug:"布隆过滤器使用场景",link:"#布隆过滤器使用场景",children:[]},{level:2,title:"编码实战",slug:"编码实战",link:"#编码实战",children:[{level:3,title:"通过 Java 编程手动实现布隆过滤器",slug:"通过-java-编程手动实现布隆过滤器",link:"#通过-java-编程手动实现布隆过滤器",children:[]},{level:3,title:"利用 Google 开源的 Guava 中自带的布隆过滤器",slug:"利用-google-开源的-guava-中自带的布隆过滤器",link:"#利用-google-开源的-guava-中自带的布隆过滤器",children:[]}]},{level:2,title:"Redis 中的布隆过滤器",slug:"redis-中的布隆过滤器",link:"#redis-中的布隆过滤器",children:[{level:3,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:3,title:"使用 Docker 安装",slug:"使用-docker-安装",link:"#使用-docker-安装",children:[]},{level:3,title:"常用命令一览",slug:"常用命令一览",link:"#常用命令一览",children:[]},{level:3,title:"实际使用",slug:"实际使用",link:"#实际使用",children:[]}]}],path:"/cs-basics/data-structure/bloom-filter.html",pathLocale:"/",extraFields:[]},{title:"图",headers:[{level:2,title:"图的基本概念",slug:"图的基本概念",link:"#图的基本概念",children:[{level:3,title:"顶点",slug:"顶点",link:"#顶点",children:[]},{level:3,title:"边",slug:"边",link:"#边",children:[]},{level:3,title:"度",slug:"度",link:"#度",children:[]},{level:3,title:"无向图和有向图",slug:"无向图和有向图",link:"#无向图和有向图",children:[]},{level:3,title:"无权图和带权图",slug:"无权图和带权图",link:"#无权图和带权图",children:[]}]},{level:2,title:"图的存储",slug:"图的存储",link:"#图的存储",children:[{level:3,title:"邻接矩阵存储",slug:"邻接矩阵存储",link:"#邻接矩阵存储",children:[]},{level:3,title:"邻接表存储",slug:"邻接表存储",link:"#邻接表存储",children:[]}]},{level:2,title:"图的搜索",slug:"图的搜索",link:"#图的搜索",children:[{level:3,title:"广度优先搜索",slug:"广度优先搜索",link:"#广度优先搜索",children:[]},{level:3,title:"深度优先搜索",slug:"深度优先搜索",link:"#深度优先搜索",children:[]}]}],path:"/cs-basics/data-structure/graph.html",pathLocale:"/",extraFields:[]},{title:"堆",headers:[{level:2,title:"什么是堆",slug:"什么是堆",link:"#什么是堆",children:[]},{level:2,title:"堆的用途",slug:"堆的用途",link:"#堆的用途",children:[]},{level:2,title:"堆的分类",slug:"堆的分类",link:"#堆的分类",children:[]},{level:2,title:"堆的存储",slug:"堆的存储",link:"#堆的存储",children:[]},{level:2,title:"堆的操作",slug:"堆的操作",link:"#堆的操作",children:[{level:3,title:"插入元素",slug:"插入元素",link:"#插入元素",children:[]},{level:3,title:"删除堆顶元素",slug:"删除堆顶元素",link:"#删除堆顶元素",children:[]},{level:3,title:"堆的操作总结",slug:"堆的操作总结",link:"#堆的操作总结",children:[]}]},{level:2,title:"堆排序",slug:"堆排序",link:"#堆排序",children:[{level:3,title:"建堆",slug:"建堆",link:"#建堆",children:[]},{level:3,title:"排序",slug:"排序",link:"#排序",children:[]}]}],path:"/cs-basics/data-structure/heap.html",pathLocale:"/",extraFields:[]},{title:"线性数据结构",headers:[{level:2,title:"1. 数组",slug:"_1-数组",link:"#_1-数组",children:[]},{level:2,title:"2. 链表",slug:"_2-链表",link:"#_2-链表",children:[{level:3,title:"2.1. 链表简介",slug:"_2-1-链表简介",link:"#_2-1-链表简介",children:[]},{level:3,title:"2.2. 链表分类",slug:"_2-2-链表分类",link:"#_2-2-链表分类",children:[]},{level:3,title:"2.3. 应用场景",slug:"_2-3-应用场景",link:"#_2-3-应用场景",children:[]},{level:3,title:"2.4. 数组 vs 链表",slug:"_2-4-数组-vs-链表",link:"#_2-4-数组-vs-链表",children:[]}]},{level:2,title:"3. 栈",slug:"_3-栈",link:"#_3-栈",children:[{level:3,title:"3.1. 栈简介",slug:"_3-1-栈简介",link:"#_3-1-栈简介",children:[]},{level:3,title:"3.2. 栈的常见应用场景",slug:"_3-2-栈的常见应用场景",link:"#_3-2-栈的常见应用场景",children:[]},{level:3,title:"3.3. 栈的实现",slug:"_3-3-栈的实现",link:"#_3-3-栈的实现",children:[]}]},{level:2,title:"4. 队列",slug:"_4-队列",link:"#_4-队列",children:[{level:3,title:"4.1. 队列简介",slug:"_4-1-队列简介",link:"#_4-1-队列简介",children:[]},{level:3,title:"4.2. 队列分类",slug:"_4-2-队列分类",link:"#_4-2-队列分类",children:[]},{level:3,title:"4.3. 队列的常见应用场景",slug:"_4-3-队列的常见应用场景",link:"#_4-3-队列的常见应用场景",children:[]}]}],path:"/cs-basics/data-structure/linear-data-structure.html",pathLocale:"/",extraFields:[]},{title:"红黑树",headers:[{level:2,title:"红黑树介绍",slug:"红黑树介绍",link:"#红黑树介绍",children:[]},{level:2,title:"为什么需要红黑树？",slug:"为什么需要红黑树",link:"#为什么需要红黑树",children:[]},{level:2,title:"红黑树特点",slug:"红黑树特点",link:"#红黑树特点",children:[]},{level:2,title:"红黑树数据结构",slug:"红黑树数据结构",link:"#红黑树数据结构",children:[]},{level:2,title:"红黑树结构实现",slug:"红黑树结构实现",link:"#红黑树结构实现",children:[{level:3,title:"1.左倾染色",slug:"_1-左倾染色",link:"#_1-左倾染色",children:[]},{level:3,title:"2.右倾染色",slug:"_2-右倾染色",link:"#_2-右倾染色",children:[]},{level:3,title:"3.左旋调衡",slug:"_3-左旋调衡",link:"#_3-左旋调衡",children:[]},{level:3,title:"4.右旋调衡",slug:"_4-右旋调衡",link:"#_4-右旋调衡",children:[]}]},{level:2,title:"文章推荐",slug:"文章推荐",link:"#文章推荐",children:[]}],path:"/cs-basics/data-structure/red-black-tree.html",pathLocale:"/",extraFields:[]},{title:"树",headers:[{level:2,title:"二叉树的分类",slug:"二叉树的分类",link:"#二叉树的分类",children:[{level:3,title:"满二叉树",slug:"满二叉树",link:"#满二叉树",children:[]},{level:3,title:"完全二叉树",slug:"完全二叉树",link:"#完全二叉树",children:[]},{level:3,title:"平衡二叉树",slug:"平衡二叉树",link:"#平衡二叉树",children:[]}]},{level:2,title:"二叉树的存储",slug:"二叉树的存储",link:"#二叉树的存储",children:[{level:3,title:"链式存储",slug:"链式存储",link:"#链式存储",children:[]},{level:3,title:"顺序存储",slug:"顺序存储",link:"#顺序存储",children:[]}]},{level:2,title:"二叉树的遍历",slug:"二叉树的遍历",link:"#二叉树的遍历",children:[{level:3,title:"先序遍历",slug:"先序遍历",link:"#先序遍历",children:[]},{level:3,title:"中序遍历",slug:"中序遍历",link:"#中序遍历",children:[]},{level:3,title:"后序遍历",slug:"后序遍历",link:"#后序遍历",children:[]}]}],path:"/cs-basics/data-structure/tree.html",pathLocale:"/",extraFields:[]},{title:"应用层常见协议总结（应用层）",headers:[{level:2,title:"HTTP:超文本传输协议",slug:"http-超文本传输协议",link:"#http-超文本传输协议",children:[]},{level:2,title:"Websocket：全双工通信协议",slug:"websocket-全双工通信协议",link:"#websocket-全双工通信协议",children:[]},{level:2,title:"SMTP:简单邮件传输(发送)协议",slug:"smtp-简单邮件传输-发送-协议",link:"#smtp-简单邮件传输-发送-协议",children:[]},{level:2,title:"POP3/IMAP:邮件接收的协议",slug:"pop3-imap-邮件接收的协议",link:"#pop3-imap-邮件接收的协议",children:[]},{level:2,title:"FTP:文件传输协议",slug:"ftp-文件传输协议",link:"#ftp-文件传输协议",children:[]},{level:2,title:"Telnet:远程登陆协议",slug:"telnet-远程登陆协议",link:"#telnet-远程登陆协议",children:[]},{level:2,title:"SSH:安全的网络传输协议",slug:"ssh-安全的网络传输协议",link:"#ssh-安全的网络传输协议",children:[]},{level:2,title:"RTP:实时传输协议",slug:"rtp-实时传输协议",link:"#rtp-实时传输协议",children:[]},{level:2,title:"DNS:域名系统",slug:"dns-域名系统",link:"#dns-域名系统",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/application-layer-protocol.html",pathLocale:"/",extraFields:[]},{title:"ARP 协议详解(网络层)",headers:[{level:2,title:"MAC 地址",slug:"mac-地址",link:"#mac-地址",children:[]},{level:2,title:"ARP 协议工作原理",slug:"arp-协议工作原理",link:"#arp-协议工作原理",children:[{level:3,title:"同一局域网内的 MAC 寻址",slug:"同一局域网内的-mac-寻址",link:"#同一局域网内的-mac-寻址",children:[]},{level:3,title:"不同局域网内的 MAC 寻址",slug:"不同局域网内的-mac-寻址",link:"#不同局域网内的-mac-寻址",children:[]}]}],path:"/cs-basics/network/arp.html",pathLocale:"/",extraFields:[]},{title:"《计算机网络》（谢希仁）内容总结",headers:[{level:2,title:"1. 计算机网络概述",slug:"_1-计算机网络概述",link:"#_1-计算机网络概述",children:[{level:3,title:"1.1. 基本术语",slug:"_1-1-基本术语",link:"#_1-1-基本术语",children:[]},{level:3,title:"1.2. 重要知识点总结",slug:"_1-2-重要知识点总结",link:"#_1-2-重要知识点总结",children:[]}]},{level:2,title:"2. 物理层（Physical Layer）",slug:"_2-物理层-physical-layer",link:"#_2-物理层-physical-layer",children:[{level:3,title:"2.1. 基本术语",slug:"_2-1-基本术语",link:"#_2-1-基本术语",children:[]},{level:3,title:"2.2. 重要知识点总结",slug:"_2-2-重要知识点总结",link:"#_2-2-重要知识点总结",children:[]},{level:3,title:"2.3. 补充",slug:"_2-3-补充",link:"#_2-3-补充",children:[]}]},{level:2,title:"3. 数据链路层（Data Link Layer）",slug:"_3-数据链路层-data-link-layer",link:"#_3-数据链路层-data-link-layer",children:[{level:3,title:"3.1. 基本术语",slug:"_3-1-基本术语",link:"#_3-1-基本术语",children:[]},{level:3,title:"3.2. 重要知识点总结",slug:"_3-2-重要知识点总结",link:"#_3-2-重要知识点总结",children:[]},{level:3,title:"3.3. 补充",slug:"_3-3-补充",link:"#_3-3-补充",children:[]}]},{level:2,title:"4. 网络层（Network Layer）",slug:"_4-网络层-network-layer",link:"#_4-网络层-network-layer",children:[{level:3,title:"4.1. 基本术语",slug:"_4-1-基本术语",link:"#_4-1-基本术语",children:[]},{level:3,title:"4.2. 重要知识点总结",slug:"_4-2-重要知识点总结",link:"#_4-2-重要知识点总结",children:[]}]},{level:2,title:"5. 传输层（Transport Layer）",slug:"_5-传输层-transport-layer",link:"#_5-传输层-transport-layer",children:[{level:3,title:"5.1. 基本术语",slug:"_5-1-基本术语",link:"#_5-1-基本术语",children:[]},{level:3,title:"5.2. 重要知识点总结",slug:"_5-2-重要知识点总结",link:"#_5-2-重要知识点总结",children:[]},{level:3,title:"5.3. 补充（重要）",slug:"_5-3-补充-重要",link:"#_5-3-补充-重要",children:[]}]},{level:2,title:"6. 应用层（Application Layer）",slug:"_6-应用层-application-layer",link:"#_6-应用层-application-layer",children:[{level:3,title:"6.1. 基本术语",slug:"_6-1-基本术语",link:"#_6-1-基本术语",children:[]},{level:3,title:"6.2. 重要知识点总结",slug:"_6-2-重要知识点总结",link:"#_6-2-重要知识点总结",children:[]},{level:3,title:"6.3. 补充（重要）",slug:"_6-3-补充-重要",link:"#_6-3-补充-重要",children:[]}]}],path:"/cs-basics/network/computer-network-xiexiren-summary.html",pathLocale:"/",extraFields:[]},{title:"DNS 域名系统详解（应用层）",headers:[{level:2,title:"DNS 服务器",slug:"dns-服务器",link:"#dns-服务器",children:[]},{level:2,title:"DNS 工作流程",slug:"dns-工作流程",link:"#dns-工作流程",children:[]},{level:2,title:"DNS 报文格式",slug:"dns-报文格式",link:"#dns-报文格式",children:[]},{level:2,title:"DNS 记录",slug:"dns-记录",link:"#dns-记录",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/dns.html",pathLocale:"/",extraFields:[]},{title:"HTTP 常见状态码总结（应用层）",headers:[{level:3,title:"1xx Informational（信息性状态码）",slug:"_1xx-informational-信息性状态码",link:"#_1xx-informational-信息性状态码",children:[]},{level:3,title:"2xx Success（成功状态码）",slug:"_2xx-success-成功状态码",link:"#_2xx-success-成功状态码",children:[]},{level:3,title:"3xx Redirection（重定向状态码）",slug:"_3xx-redirection-重定向状态码",link:"#_3xx-redirection-重定向状态码",children:[]},{level:3,title:"4xx Client Error（客户端错误状态码）",slug:"_4xx-client-error-客户端错误状态码",link:"#_4xx-client-error-客户端错误状态码",children:[]},{level:3,title:"5xx Server Error（服务端错误状态码）",slug:"_5xx-server-error-服务端错误状态码",link:"#_5xx-server-error-服务端错误状态码",children:[]},{level:3,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/http-status-codes.html",pathLocale:"/",extraFields:[]},{title:"HTTP vs HTTPS（应用层）",headers:[{level:2,title:"HTTP 协议",slug:"http-协议",link:"#http-协议",children:[{level:3,title:"HTTP 协议介绍",slug:"http-协议介绍",link:"#http-协议介绍",children:[]},{level:3,title:"HTTP 协议通信过程",slug:"http-协议通信过程",link:"#http-协议通信过程",children:[]},{level:3,title:"HTTP 协议优点",slug:"http-协议优点",link:"#http-协议优点",children:[]}]},{level:2,title:"HTTPS 协议",slug:"https-协议",link:"#https-协议",children:[{level:3,title:"HTTPS 协议介绍",slug:"https-协议介绍",link:"#https-协议介绍",children:[]},{level:3,title:"HTTPS 协议优点",slug:"https-协议优点",link:"#https-协议优点",children:[]}]},{level:2,title:"HTTPS 的核心—SSL/TLS 协议",slug:"https-的核心—ssl-tls-协议",link:"#https-的核心—ssl-tls-协议",children:[{level:3,title:"SSL 和 TLS 的区别？",slug:"ssl-和-tls-的区别",link:"#ssl-和-tls-的区别",children:[]},{level:3,title:"SSL/TLS 的工作原理",slug:"ssl-tls-的工作原理",link:"#ssl-tls-的工作原理",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/cs-basics/network/http-vs-https.html",pathLocale:"/",extraFields:[]},{title:"HTTP 1.0 vs HTTP 1.1（应用层）",headers:[{level:2,title:"响应状态码",slug:"响应状态码",link:"#响应状态码",children:[]},{level:2,title:"缓存处理",slug:"缓存处理",link:"#缓存处理",children:[{level:3,title:"HTTP/1.0",slug:"http-1-0",link:"#http-1-0",children:[]},{level:3,title:"HTTP/1.1",slug:"http-1-1",link:"#http-1-1",children:[]}]},{level:2,title:"连接方式",slug:"连接方式",link:"#连接方式",children:[]},{level:2,title:"Host 头处理",slug:"host-头处理",link:"#host-头处理",children:[]},{level:2,title:"带宽优化",slug:"带宽优化",link:"#带宽优化",children:[{level:3,title:"范围请求",slug:"范围请求",link:"#范围请求",children:[]},{level:3,title:"状态码 100",slug:"状态码-100",link:"#状态码-100",children:[]},{level:3,title:"压缩",slug:"压缩",link:"#压缩",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考资料",slug:"参考资料",link:"#参考资料",children:[]}],path:"/cs-basics/network/http1.0-vs-http1.1.html",pathLocale:"/",extraFields:[]},{title:"NAT 协议详解（网络层）",headers:[{level:2,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]},{level:2,title:"细节",slug:"细节",link:"#细节",children:[]},{level:2,title:"划重点",slug:"划重点",link:"#划重点",children:[]}],path:"/cs-basics/network/nat.html",pathLocale:"/",extraFields:[]},{title:"网络攻击常见手段总结",headers:[{level:2,title:"IP 欺骗",slug:"ip-欺骗",link:"#ip-欺骗",children:[{level:3,title:"IP 是什么?",slug:"ip-是什么",link:"#ip-是什么",children:[]},{level:3,title:"通过 IP 地址我们能知道什么？",slug:"通过-ip-地址我们能知道什么",link:"#通过-ip-地址我们能知道什么",children:[]},{level:3,title:"IP 欺骗技术是什么？",slug:"ip-欺骗技术是什么",link:"#ip-欺骗技术是什么",children:[]},{level:3,title:"如何缓解 IP 欺骗？",slug:"如何缓解-ip-欺骗",link:"#如何缓解-ip-欺骗",children:[]}]},{level:2,title:"SYN Flood(洪水)",slug:"syn-flood-洪水",link:"#syn-flood-洪水",children:[{level:3,title:"SYN Flood 是什么？",slug:"syn-flood-是什么",link:"#syn-flood-是什么",children:[]},{level:3,title:"TCP SYN Flood 攻击原理是什么？",slug:"tcp-syn-flood-攻击原理是什么",link:"#tcp-syn-flood-攻击原理是什么",children:[]},{level:3,title:"SYN Flood 的常见形式有哪些？",slug:"syn-flood-的常见形式有哪些",link:"#syn-flood-的常见形式有哪些",children:[]},{level:3,title:"如何缓解 SYN Flood？",slug:"如何缓解-syn-flood",link:"#如何缓解-syn-flood",children:[]}]},{level:2,title:"UDP Flood(洪水)",slug:"udp-flood-洪水",link:"#udp-flood-洪水",children:[{level:3,title:"UDP Flood 是什么？",slug:"udp-flood-是什么",link:"#udp-flood-是什么",children:[]},{level:3,title:"UDP Flood 攻击原理是什么？",slug:"udp-flood-攻击原理是什么",link:"#udp-flood-攻击原理是什么",children:[]},{level:3,title:"如何缓解 UDP Flooding？",slug:"如何缓解-udp-flooding",link:"#如何缓解-udp-flooding",children:[]}]},{level:2,title:"HTTP Flood(洪水)",slug:"http-flood-洪水",link:"#http-flood-洪水",children:[{level:3,title:"HTTP Flood 是什么？",slug:"http-flood-是什么",link:"#http-flood-是什么",children:[]},{level:3,title:"HTTP Flood 的攻击原理是什么？",slug:"http-flood-的攻击原理是什么",link:"#http-flood-的攻击原理是什么",children:[]},{level:3,title:"如何防护 HTTP Flood？",slug:"如何防护-http-flood",link:"#如何防护-http-flood",children:[]}]},{level:2,title:"DNS Flood(洪水)",slug:"dns-flood-洪水",link:"#dns-flood-洪水",children:[{level:3,title:"DNS Flood 是什么？",slug:"dns-flood-是什么",link:"#dns-flood-是什么",children:[]},{level:3,title:"DNS Flood 的攻击原理是什么？",slug:"dns-flood-的攻击原理是什么",link:"#dns-flood-的攻击原理是什么",children:[]},{level:3,title:"如何防护 DNS Flood?",slug:"如何防护-dns-flood",link:"#如何防护-dns-flood",children:[]}]},{level:2,title:"TCP 重置攻击",slug:"tcp-重置攻击",link:"#tcp-重置攻击",children:[]},{level:2,title:"模拟攻击",slug:"模拟攻击",link:"#模拟攻击",children:[]},{level:2,title:"中间人攻击",slug:"中间人攻击",link:"#中间人攻击",children:[{level:3,title:"什么是中间人?",slug:"什么是中间人",link:"#什么是中间人",children:[]},{level:3,title:"中间人攻击的原理是什么？",slug:"中间人攻击的原理是什么",link:"#中间人攻击的原理是什么",children:[]},{level:3,title:"中间人攻击如何避免?",slug:"中间人攻击如何避免",link:"#中间人攻击如何避免",children:[]}]},{level:2,title:"DDOS",slug:"ddos",link:"#ddos",children:[{level:3,title:"DDoS 攻击究竟是什么？",slug:"ddos-攻击究竟是什么",link:"#ddos-攻击究竟是什么",children:[]},{level:3,title:"如何应对 DDoS 攻击？",slug:"如何应对-ddos-攻击",link:"#如何应对-ddos-攻击",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/network-attack-means.html",pathLocale:"/",extraFields:[]},{title:"OSI 和 TCP/IP 网络分层模型详解（基础）",headers:[{level:2,title:"OSI 七层模型",slug:"osi-七层模型",link:"#osi-七层模型",children:[]},{level:2,title:"TCP/IP 四层模型",slug:"tcp-ip-四层模型",link:"#tcp-ip-四层模型",children:[{level:3,title:"应用层（Application layer）",slug:"应用层-application-layer",link:"#应用层-application-layer",children:[]},{level:3,title:"传输层（Transport layer）",slug:"传输层-transport-layer",link:"#传输层-transport-layer",children:[]},{level:3,title:"网络层（Network layer）",slug:"网络层-network-layer",link:"#网络层-network-layer",children:[]},{level:3,title:"网络接口层（Network interface layer）",slug:"网络接口层-network-interface-layer",link:"#网络接口层-network-interface-layer",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]},{level:2,title:"网络分层的原因",slug:"网络分层的原因",link:"#网络分层的原因",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/osi-and-tcp-ip-model.html",pathLocale:"/",extraFields:[]},{title:"计算机网络常见面试题总结(上)",headers:[{level:2,title:"计算机网络基础",slug:"计算机网络基础",link:"#计算机网络基础",children:[{level:3,title:"网络分层模型",slug:"网络分层模型",link:"#网络分层模型",children:[]},{level:3,title:"常见网络协议",slug:"常见网络协议",link:"#常见网络协议",children:[]}]},{level:2,title:"HTTP",slug:"http",link:"#http",children:[{level:3,title:"从输入 URL 到页面展示到底发生了什么？（非常重要）",slug:"从输入-url-到页面展示到底发生了什么-非常重要",link:"#从输入-url-到页面展示到底发生了什么-非常重要",children:[]},{level:3,title:"HTTP 状态码有哪些？",slug:"http-状态码有哪些",link:"#http-状态码有哪些",children:[]},{level:3,title:"HTTP Header 中常见的字段有哪些？",slug:"http-header-中常见的字段有哪些",link:"#http-header-中常见的字段有哪些",children:[]},{level:3,title:"HTTP 和 HTTPS 有什么区别？（重要）",slug:"http-和-https-有什么区别-重要",link:"#http-和-https-有什么区别-重要",children:[]},{level:3,title:"HTTP/1.0 和 HTTP/1.1 有什么区别？",slug:"http-1-0-和-http-1-1-有什么区别",link:"#http-1-0-和-http-1-1-有什么区别",children:[]},{level:3,title:"HTTP/1.1 和 HTTP/2.0 有什么区别？",slug:"http-1-1-和-http-2-0-有什么区别",link:"#http-1-1-和-http-2-0-有什么区别",children:[]},{level:3,title:"HTTP/2.0 和 HTTP/3.0 有什么区别？",slug:"http-2-0-和-http-3-0-有什么区别",link:"#http-2-0-和-http-3-0-有什么区别",children:[]},{level:3,title:"HTTP 是不保存状态的协议, 如何保存用户状态?",slug:"http-是不保存状态的协议-如何保存用户状态",link:"#http-是不保存状态的协议-如何保存用户状态",children:[]},{level:3,title:"URI 和 URL 的区别是什么?",slug:"uri-和-url-的区别是什么",link:"#uri-和-url-的区别是什么",children:[]},{level:3,title:"Cookie 和 Session 有什么区别？",slug:"cookie-和-session-有什么区别",link:"#cookie-和-session-有什么区别",children:[]},{level:3,title:"GET 和 POST 的区别",slug:"get-和-post-的区别",link:"#get-和-post-的区别",children:[]}]},{level:2,title:"WebSocket",slug:"websocket",link:"#websocket",children:[{level:3,title:"什么是 WebSocket?",slug:"什么是-websocket",link:"#什么是-websocket",children:[]},{level:3,title:"WebSocket 和 HTTP 有什么区别？",slug:"websocket-和-http-有什么区别",link:"#websocket-和-http-有什么区别",children:[]},{level:3,title:"WebSocket 的工作过程是什么样的？",slug:"websocket-的工作过程是什么样的",link:"#websocket-的工作过程是什么样的",children:[]},{level:3,title:"SSE 与 WebSocket 有什么区别？",slug:"sse-与-websocket-有什么区别",link:"#sse-与-websocket-有什么区别",children:[]}]},{level:2,title:"PING",slug:"ping",link:"#ping",children:[{level:3,title:"PING 命令的作用是什么？",slug:"ping-命令的作用是什么",link:"#ping-命令的作用是什么",children:[]},{level:3,title:"PING 命令的工作原理是什么？",slug:"ping-命令的工作原理是什么",link:"#ping-命令的工作原理是什么",children:[]}]},{level:2,title:"DNS",slug:"dns",link:"#dns",children:[{level:3,title:"DNS 的作用是什么？",slug:"dns-的作用是什么",link:"#dns-的作用是什么",children:[]},{level:3,title:"DNS 服务器有哪些？根服务器有多少个？",slug:"dns-服务器有哪些-根服务器有多少个",link:"#dns-服务器有哪些-根服务器有多少个",children:[]},{level:3,title:"DNS 解析的过程是什么样的？",slug:"dns-解析的过程是什么样的",link:"#dns-解析的过程是什么样的",children:[]},{level:3,title:"DNS 劫持了解吗？如何应对？",slug:"dns-劫持了解吗-如何应对",link:"#dns-劫持了解吗-如何应对",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/other-network-questions.html",pathLocale:"/",extraFields:[]},{title:"计算机网络常见面试题总结(下)",headers:[{level:2,title:"TCP 与 UDP",slug:"tcp-与-udp",link:"#tcp-与-udp",children:[{level:3,title:"TCP 与 UDP 的区别（重要）",slug:"tcp-与-udp-的区别-重要",link:"#tcp-与-udp-的区别-重要",children:[]},{level:3,title:"什么时候选择 TCP，什么时候选 UDP?",slug:"什么时候选择-tcp-什么时候选-udp",link:"#什么时候选择-tcp-什么时候选-udp",children:[]},{level:3,title:"HTTP 基于 TCP 还是 UDP？",slug:"http-基于-tcp-还是-udp",link:"#http-基于-tcp-还是-udp",children:[]},{level:3,title:"使用 TCP 的协议有哪些?使用 UDP 的协议有哪些?",slug:"使用-tcp-的协议有哪些-使用-udp-的协议有哪些",link:"#使用-tcp-的协议有哪些-使用-udp-的协议有哪些",children:[]},{level:3,title:"TCP 三次握手和四次挥手（非常重要）",slug:"tcp-三次握手和四次挥手-非常重要",link:"#tcp-三次握手和四次挥手-非常重要",children:[]},{level:3,title:"TCP 如何保证传输的可靠性？（重要）",slug:"tcp-如何保证传输的可靠性-重要",link:"#tcp-如何保证传输的可靠性-重要",children:[]}]},{level:2,title:"IP",slug:"ip",link:"#ip",children:[{level:3,title:"IP 协议的作用是什么？",slug:"ip-协议的作用是什么",link:"#ip-协议的作用是什么",children:[]},{level:3,title:"什么是 IP 地址？IP 寻址如何工作？",slug:"什么是-ip-地址-ip-寻址如何工作",link:"#什么是-ip-地址-ip-寻址如何工作",children:[]},{level:3,title:"什么是 IP 地址过滤？",slug:"什么是-ip-地址过滤",link:"#什么是-ip-地址过滤",children:[]},{level:3,title:"IPv4 和 IPv6 有什么区别？",slug:"ipv4-和-ipv6-有什么区别",link:"#ipv4-和-ipv6-有什么区别",children:[]},{level:3,title:"如何获取客户端真实 IP？",slug:"如何获取客户端真实-ip",link:"#如何获取客户端真实-ip",children:[]},{level:3,title:"NAT 的作用是什么？",slug:"nat-的作用是什么",link:"#nat-的作用是什么",children:[]}]},{level:2,title:"ARP",slug:"arp",link:"#arp",children:[{level:3,title:"什么是 Mac 地址？",slug:"什么是-mac-地址",link:"#什么是-mac-地址",children:[]},{level:3,title:"ARP 协议解决了什么问题？",slug:"arp-协议解决了什么问题",link:"#arp-协议解决了什么问题",children:[]},{level:3,title:"ARP 协议的工作原理？",slug:"arp-协议的工作原理",link:"#arp-协议的工作原理",children:[]}]},{level:2,title:"复习建议",slug:"复习建议",link:"#复习建议",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/other-network-questions2.html",pathLocale:"/",extraFields:[]},{title:"TCP基础",headers:[{level:2,title:"TCP报文格式",slug:"tcp报文格式",link:"#tcp报文格式",children:[]},{level:2,title:"TCP连接建立步骤",slug:"tcp连接建立步骤",link:"#tcp连接建立步骤",children:[]},{level:2,title:"异常情况分析",slug:"异常情况分析",link:"#异常情况分析",children:[{level:3,title:"试图与一个某端口建立连接但该主机已经宕机(主机宕机)",slug:"试图与一个某端口建立连接但该主机已经宕机-主机宕机",link:"#试图与一个某端口建立连接但该主机已经宕机-主机宕机",children:[]},{level:3,title:"建立连接时，服务器应用被阻塞(或者僵死)",slug:"建立连接时-服务器应用被阻塞-或者僵死",link:"#建立连接时-服务器应用被阻塞-或者僵死",children:[]}]}],path:"/cs-basics/network/tcp-basis.html",pathLocale:"/",extraFields:[]},{title:"TCP 三次握手和四次挥手（传输层）",headers:[{level:2,title:"建立连接-TCP 三次握手",slug:"建立连接-tcp-三次握手",link:"#建立连接-tcp-三次握手",children:[{level:3,title:"什么是半连接队列和全连接队列？",slug:"什么是半连接队列和全连接队列",link:"#什么是半连接队列和全连接队列",children:[]},{level:3,title:"为什么要三次握手?",slug:"为什么要三次握手",link:"#为什么要三次握手",children:[]},{level:3,title:"第 2 次握手传回了 ACK，为什么还要传回 SYN？",slug:"第-2-次握手传回了-ack-为什么还要传回-syn",link:"#第-2-次握手传回了-ack-为什么还要传回-syn",children:[]},{level:3,title:"三次握手过程中可以携带数据吗？",slug:"三次握手过程中可以携带数据吗",link:"#三次握手过程中可以携带数据吗",children:[]}]},{level:2,title:"断开连接-TCP 四次挥手",slug:"断开连接-tcp-四次挥手",link:"#断开连接-tcp-四次挥手",children:[{level:3,title:"为什么要四次挥手？",slug:"为什么要四次挥手",link:"#为什么要四次挥手",children:[]},{level:3,title:"为什么不能把服务端发送的 ACK 和 FIN 合并起来，变成三次挥手？",slug:"为什么不能把服务端发送的-ack-和-fin-合并起来-变成三次挥手",link:"#为什么不能把服务端发送的-ack-和-fin-合并起来-变成三次挥手",children:[]},{level:3,title:"如果第二次挥手时服务端的 ACK 没有送达客户端，会怎样？",slug:"如果第二次挥手时服务端的-ack-没有送达客户端-会怎样",link:"#如果第二次挥手时服务端的-ack-没有送达客户端-会怎样",children:[]},{level:3,title:"为什么第四次挥手客户端需要等待 2*MSL（报文段最长寿命）时间后才进入 CLOSED 状态？",slug:"为什么第四次挥手客户端需要等待-2-msl-报文段最长寿命-时间后才进入-closed-状态",link:"#为什么第四次挥手客户端需要等待-2-msl-报文段最长寿命-时间后才进入-closed-状态",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/tcp-connection-and-disconnection.html",pathLocale:"/",extraFields:[]},{title:"TCP 传输可靠性保障（传输层）",headers:[{level:2,title:"TCP 如何保证传输的可靠性？",slug:"tcp-如何保证传输的可靠性",link:"#tcp-如何保证传输的可靠性",children:[]},{level:2,title:"TCP 如何实现流量控制？",slug:"tcp-如何实现流量控制",link:"#tcp-如何实现流量控制",children:[]},{level:2,title:"TCP 的拥塞控制是怎么实现的？",slug:"tcp-的拥塞控制是怎么实现的",link:"#tcp-的拥塞控制是怎么实现的",children:[]},{level:2,title:"ARQ 协议了解吗?",slug:"arq-协议了解吗",link:"#arq-协议了解吗",children:[{level:3,title:"停止等待 ARQ 协议",slug:"停止等待-arq-协议",link:"#停止等待-arq-协议",children:[]},{level:3,title:"连续 ARQ 协议",slug:"连续-arq-协议",link:"#连续-arq-协议",children:[]}]},{level:2,title:"超时重传如何实现？超时重传时间怎么确定？",slug:"超时重传如何实现-超时重传时间怎么确定",link:"#超时重传如何实现-超时重传时间怎么确定",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/network/tcp-reliability-guarantee.html",pathLocale:"/",extraFields:[]},{title:"访问网页的全过程（知识串联）",headers:[{level:2,title:"应用层",slug:"应用层",link:"#应用层",children:[{level:3,title:"URL",slug:"url",link:"#url",children:[]},{level:3,title:"URL 的组成结构",slug:"url-的组成结构",link:"#url-的组成结构",children:[]},{level:3,title:"DNS",slug:"dns",link:"#dns",children:[]},{level:3,title:"HTTP/HTTPS",slug:"http-https",link:"#http-https",children:[]}]},{level:2,title:"传输层",slug:"传输层",link:"#传输层",children:[]},{level:2,title:"网络层",slug:"网络层",link:"#网络层",children:[]}],path:"/cs-basics/network/the-whole-process-of-accessing-web-pages.html",pathLocale:"/",extraFields:[]},{title:"Linux 基础知识总结",headers:[{level:2,title:"初探 Linux",slug:"初探-linux",link:"#初探-linux",children:[{level:3,title:"Linux 简介",slug:"linux-简介",link:"#linux-简介",children:[]},{level:3,title:"Linux 诞生",slug:"linux-诞生",link:"#linux-诞生",children:[]},{level:3,title:"常见的 Linux 发行版本",slug:"常见的-linux-发行版本",link:"#常见的-linux-发行版本",children:[]}]},{level:2,title:"Linux 文件系统",slug:"linux-文件系统",link:"#linux-文件系统",children:[{level:3,title:"Linux 文件系统简介",slug:"linux-文件系统简介",link:"#linux-文件系统简介",children:[]},{level:3,title:"inode 介绍",slug:"inode-介绍",link:"#inode-介绍",children:[]},{level:3,title:"硬链接和软链接",slug:"硬链接和软链接",link:"#硬链接和软链接",children:[]},{level:3,title:"Linux 文件类型",slug:"linux-文件类型",link:"#linux-文件类型",children:[]},{level:3,title:"Linux 目录树",slug:"linux-目录树",link:"#linux-目录树",children:[]}]},{level:2,title:"Linux 常用命令",slug:"linux-常用命令",link:"#linux-常用命令",children:[{level:3,title:"目录切换",slug:"目录切换",link:"#目录切换",children:[]},{level:3,title:"目录操作",slug:"目录操作",link:"#目录操作",children:[]},{level:3,title:"文件操作",slug:"文件操作",link:"#文件操作",children:[]},{level:3,title:"文件压缩",slug:"文件压缩",link:"#文件压缩",children:[]},{level:3,title:"文件传输",slug:"文件传输",link:"#文件传输",children:[]},{level:3,title:"文件权限",slug:"文件权限",link:"#文件权限",children:[]},{level:3,title:"用户管理",slug:"用户管理",link:"#用户管理",children:[]},{level:3,title:"用户组管理",slug:"用户组管理",link:"#用户组管理",children:[]},{level:3,title:"系统状态",slug:"系统状态",link:"#系统状态",children:[]},{level:3,title:"网络通信",slug:"网络通信",link:"#网络通信",children:[]},{level:3,title:"其他",slug:"其他",link:"#其他",children:[]}]},{level:2,title:"Linux 环境变量",slug:"linux-环境变量",link:"#linux-环境变量",children:[{level:3,title:"环境变量分类",slug:"环境变量分类",link:"#环境变量分类",children:[]},{level:3,title:"读取环境变量",slug:"读取环境变量",link:"#读取环境变量",children:[]},{level:3,title:"环境变量修改",slug:"环境变量修改",link:"#环境变量修改",children:[]}]}],path:"/cs-basics/operating-system/linux-intro.html",pathLocale:"/",extraFields:[]},{title:"操作系统常见面试题总结(上)",headers:[{level:2,title:"操作系统基础",slug:"操作系统基础",link:"#操作系统基础",children:[{level:3,title:"什么是操作系统？",slug:"什么是操作系统",link:"#什么是操作系统",children:[]},{level:3,title:"操作系统主要有哪些功能？",slug:"操作系统主要有哪些功能",link:"#操作系统主要有哪些功能",children:[]},{level:3,title:"常见的操作系统有哪些？",slug:"常见的操作系统有哪些",link:"#常见的操作系统有哪些",children:[]},{level:3,title:"用户态和内核态",slug:"用户态和内核态",link:"#用户态和内核态",children:[]},{level:3,title:"系统调用",slug:"系统调用",link:"#系统调用",children:[]}]},{level:2,title:"进程和线程",slug:"进程和线程",link:"#进程和线程",children:[{level:3,title:"什么是进程和线程？",slug:"什么是进程和线程",link:"#什么是进程和线程",children:[]},{level:3,title:"进程和线程的区别是什么？",slug:"进程和线程的区别是什么",link:"#进程和线程的区别是什么",children:[]},{level:3,title:"有了进程为什么还需要线程?",slug:"有了进程为什么还需要线程",link:"#有了进程为什么还需要线程",children:[]},{level:3,title:"为什么要使用多线程?",slug:"为什么要使用多线程",link:"#为什么要使用多线程",children:[]},{level:3,title:"线程间的同步的方式有哪些？",slug:"线程间的同步的方式有哪些",link:"#线程间的同步的方式有哪些",children:[]},{level:3,title:"PCB 是什么？包含哪些信息？",slug:"pcb-是什么-包含哪些信息",link:"#pcb-是什么-包含哪些信息",children:[]},{level:3,title:"进程有哪几种状态?",slug:"进程有哪几种状态",link:"#进程有哪几种状态",children:[]},{level:3,title:"进程间的通信方式有哪些？",slug:"进程间的通信方式有哪些",link:"#进程间的通信方式有哪些",children:[]},{level:3,title:"进程的调度算法有哪些?",slug:"进程的调度算法有哪些",link:"#进程的调度算法有哪些",children:[]},{level:3,title:"什么是僵尸进程和孤儿进程？",slug:"什么是僵尸进程和孤儿进程",link:"#什么是僵尸进程和孤儿进程",children:[]},{level:3,title:"如何查看是否有僵尸进程？",slug:"如何查看是否有僵尸进程",link:"#如何查看是否有僵尸进程",children:[]}]},{level:2,title:"死锁",slug:"死锁",link:"#死锁",children:[{level:3,title:"什么是死锁？",slug:"什么是死锁",link:"#什么是死锁",children:[]},{level:3,title:"能列举一个操作系统发生死锁的例子吗？",slug:"能列举一个操作系统发生死锁的例子吗",link:"#能列举一个操作系统发生死锁的例子吗",children:[]},{level:3,title:"产生死锁的四个必要条件是什么?",slug:"产生死锁的四个必要条件是什么",link:"#产生死锁的四个必要条件是什么",children:[]},{level:3,title:"能写一个模拟产生死锁的代码吗？",slug:"能写一个模拟产生死锁的代码吗",link:"#能写一个模拟产生死锁的代码吗",children:[]},{level:3,title:"解决死锁的方法",slug:"解决死锁的方法",link:"#解决死锁的方法",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/operating-system/operating-system-basic-questions-01.html",pathLocale:"/",extraFields:[]},{title:"操作系统常见面试题总结(下)",headers:[{level:2,title:"内存管理",slug:"内存管理",link:"#内存管理",children:[{level:3,title:"内存管理主要做了什么？",slug:"内存管理主要做了什么",link:"#内存管理主要做了什么",children:[]},{level:3,title:"什么是内存碎片？",slug:"什么是内存碎片",link:"#什么是内存碎片",children:[]},{level:3,title:"常见的内存管理方式有哪些？",slug:"常见的内存管理方式有哪些",link:"#常见的内存管理方式有哪些",children:[]},{level:3,title:"虚拟内存",slug:"虚拟内存",link:"#虚拟内存",children:[]},{level:3,title:"分段机制",slug:"分段机制",link:"#分段机制",children:[]},{level:3,title:"分页机制",slug:"分页机制",link:"#分页机制",children:[]},{level:3,title:"分页机制和分段机制有哪些共同点和区别？",slug:"分页机制和分段机制有哪些共同点和区别",link:"#分页机制和分段机制有哪些共同点和区别",children:[]},{level:3,title:"段页机制",slug:"段页机制",link:"#段页机制",children:[]},{level:3,title:"局部性原理",slug:"局部性原理",link:"#局部性原理",children:[]}]},{level:2,title:"文件系统",slug:"文件系统",link:"#文件系统",children:[{level:3,title:"文件系统主要做了什么？",slug:"文件系统主要做了什么",link:"#文件系统主要做了什么",children:[]},{level:3,title:"硬链接和软链接有什么区别？",slug:"硬链接和软链接有什么区别",link:"#硬链接和软链接有什么区别",children:[]},{level:3,title:"硬链接为什么不能跨文件系统？",slug:"硬链接为什么不能跨文件系统",link:"#硬链接为什么不能跨文件系统",children:[]},{level:3,title:"提高文件系统性能的方式有哪些？",slug:"提高文件系统性能的方式有哪些",link:"#提高文件系统性能的方式有哪些",children:[]},{level:3,title:"常见的磁盘调度算法有哪些？",slug:"常见的磁盘调度算法有哪些",link:"#常见的磁盘调度算法有哪些",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/cs-basics/operating-system/operating-system-basic-questions-02.html",pathLocale:"/",extraFields:[]},{title:"Shell 编程基础知识总结",headers:[{level:2,title:"走进 Shell 编程的大门",slug:"走进-shell-编程的大门",link:"#走进-shell-编程的大门",children:[{level:3,title:"为什么要学 Shell？",slug:"为什么要学-shell",link:"#为什么要学-shell",children:[]},{level:3,title:"什么是 Shell？",slug:"什么是-shell",link:"#什么是-shell",children:[]},{level:3,title:"Shell 编程的 Hello World",slug:"shell-编程的-hello-world",link:"#shell-编程的-hello-world",children:[]}]},{level:2,title:"Shell 变量",slug:"shell-变量",link:"#shell-变量",children:[{level:3,title:"Shell 编程中的变量介绍",slug:"shell-编程中的变量介绍",link:"#shell-编程中的变量介绍",children:[]},{level:3,title:"Shell 字符串入门",slug:"shell-字符串入门",link:"#shell-字符串入门",children:[]},{level:3,title:"Shell 字符串常见操作",slug:"shell-字符串常见操作",link:"#shell-字符串常见操作",children:[]},{level:3,title:"Shell 数组",slug:"shell-数组",link:"#shell-数组",children:[]}]},{level:2,title:"Shell 基本运算符",slug:"shell-基本运算符",link:"#shell-基本运算符",children:[{level:3,title:"算数运算符",slug:"算数运算符",link:"#算数运算符",children:[]},{level:3,title:"关系运算符",slug:"关系运算符",link:"#关系运算符",children:[]},{level:3,title:"逻辑运算符",slug:"逻辑运算符",link:"#逻辑运算符",children:[]},{level:3,title:"布尔运算符",slug:"布尔运算符",link:"#布尔运算符",children:[]},{level:3,title:"字符串运算符",slug:"字符串运算符",link:"#字符串运算符",children:[]},{level:3,title:"文件相关运算符",slug:"文件相关运算符",link:"#文件相关运算符",children:[]}]},{level:2,title:"Shell 流程控制",slug:"shell-流程控制",link:"#shell-流程控制",children:[{level:3,title:"if 条件语句",slug:"if-条件语句",link:"#if-条件语句",children:[]},{level:3,title:"for 循环语句",slug:"for-循环语句",link:"#for-循环语句",children:[]},{level:3,title:"while 语句",slug:"while-语句",link:"#while-语句",children:[]}]},{level:2,title:"Shell 函数",slug:"shell-函数",link:"#shell-函数",children:[{level:3,title:"不带参数没有返回值的函数",slug:"不带参数没有返回值的函数",link:"#不带参数没有返回值的函数",children:[]},{level:3,title:"有返回值的函数",slug:"有返回值的函数",link:"#有返回值的函数",children:[]},{level:3,title:"带参数的函数",slug:"带参数的函数",link:"#带参数的函数",children:[]}]}],path:"/cs-basics/operating-system/shell-intro.html",pathLocale:"/",extraFields:[]},{title:"Elasticsearch常见面试题总结(付费)",headers:[],path:"/database/elasticsearch/elasticsearch-questions-01.html",pathLocale:"/",extraFields:[]},{title:"MongoDB常见面试题总结（上）",headers:[{level:2,title:"MongoDB 基础",slug:"mongodb-基础",link:"#mongodb-基础",children:[{level:3,title:"MongoDB 是什么？",slug:"mongodb-是什么",link:"#mongodb-是什么",children:[]},{level:3,title:"MongoDB 的存储结构是什么？",slug:"mongodb-的存储结构是什么",link:"#mongodb-的存储结构是什么",children:[]},{level:3,title:"MongoDB 有什么特点？",slug:"mongodb-有什么特点",link:"#mongodb-有什么特点",children:[]},{level:3,title:"MongoDB 适合什么应用场景？",slug:"mongodb-适合什么应用场景",link:"#mongodb-适合什么应用场景",children:[]}]},{level:2,title:"MongoDB 存储引擎",slug:"mongodb-存储引擎",link:"#mongodb-存储引擎",children:[{level:3,title:"MongoDB 支持哪些存储引擎？",slug:"mongodb-支持哪些存储引擎",link:"#mongodb-支持哪些存储引擎",children:[]},{level:3,title:"WiredTiger 基于 LSM Tree 还是 B+ Tree？",slug:"wiredtiger-基于-lsm-tree-还是-b-tree",link:"#wiredtiger-基于-lsm-tree-还是-b-tree",children:[]}]},{level:2,title:"MongoDB 聚合",slug:"mongodb-聚合",link:"#mongodb-聚合",children:[{level:3,title:"MongoDB 聚合有什么用？",slug:"mongodb-聚合有什么用",link:"#mongodb-聚合有什么用",children:[]},{level:3,title:"MongoDB 提供了哪几种执行聚合的方法？",slug:"mongodb-提供了哪几种执行聚合的方法",link:"#mongodb-提供了哪几种执行聚合的方法",children:[]}]},{level:2,title:"MongoDB 事务",slug:"mongodb-事务",link:"#mongodb-事务",children:[]},{level:2,title:"MongoDB 数据压缩",slug:"mongodb-数据压缩",link:"#mongodb-数据压缩",children:[]},{level:2,title:"Amazon Document 与 MongoDB 的差异",slug:"amazon-document-与-mongodb-的差异",link:"#amazon-document-与-mongodb-的差异",children:[{level:3,title:"$vectorSearch 运算符",slug:"vectorsearch-运算符",link:"#vectorsearch-运算符",children:[]},{level:3,title:"OpCountersCommand",slug:"opcounterscommand",link:"#opcounterscommand",children:[]},{level:3,title:"管理数据库和集合",slug:"管理数据库和集合",link:"#管理数据库和集合",children:[]},{level:3,title:"cursormaxTimeMS",slug:"cursormaxtimems",link:"#cursormaxtimems",children:[]},{level:3,title:"explain()",slug:"explain",link:"#explain",children:[]},{level:3,title:"字段名称限制",slug:"字段名称限制",link:"#字段名称限制",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mongodb/mongodb-questions-01.html",pathLocale:"/",extraFields:[]},{title:"MongoDB常见面试题总结（下）",headers:[{level:2,title:"MongoDB 索引",slug:"mongodb-索引",link:"#mongodb-索引",children:[{level:3,title:"MongoDB 索引有什么用?",slug:"mongodb-索引有什么用",link:"#mongodb-索引有什么用",children:[]},{level:3,title:"MongoDB 支持哪些类型的索引？",slug:"mongodb-支持哪些类型的索引",link:"#mongodb-支持哪些类型的索引",children:[]},{level:3,title:"复合索引中字段的顺序有影响吗？",slug:"复合索引中字段的顺序有影响吗",link:"#复合索引中字段的顺序有影响吗",children:[]},{level:3,title:"复合索引遵循左前缀原则吗？",slug:"复合索引遵循左前缀原则吗",link:"#复合索引遵循左前缀原则吗",children:[]},{level:3,title:"什么是 TTL 索引？",slug:"什么是-ttl-索引",link:"#什么是-ttl-索引",children:[]},{level:3,title:"什么是覆盖索引查询？",slug:"什么是覆盖索引查询",link:"#什么是覆盖索引查询",children:[]}]},{level:2,title:"MongoDB 高可用",slug:"mongodb-高可用",link:"#mongodb-高可用",children:[{level:3,title:"复制集群",slug:"复制集群",link:"#复制集群",children:[]},{level:3,title:"分片集群",slug:"分片集群",link:"#分片集群",children:[]}]},{level:2,title:"学习资料推荐",slug:"学习资料推荐",link:"#学习资料推荐",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mongodb/mongodb-questions-02.html",pathLocale:"/",extraFields:[]},{title:"一千行 MySQL 学习笔记",headers:[{level:3,title:"基本操作",slug:"基本操作",link:"#基本操作",children:[]},{level:3,title:"数据库操作",slug:"数据库操作",link:"#数据库操作",children:[]},{level:3,title:"表的操作",slug:"表的操作",link:"#表的操作",children:[]},{level:3,title:"数据操作",slug:"数据操作",link:"#数据操作",children:[]},{level:3,title:"字符集编码",slug:"字符集编码",link:"#字符集编码",children:[]},{level:3,title:"数据类型(列类型)",slug:"数据类型-列类型",link:"#数据类型-列类型",children:[]},{level:3,title:"列属性(列约束)",slug:"列属性-列约束",link:"#列属性-列约束",children:[]},{level:3,title:"建表规范",slug:"建表规范",link:"#建表规范",children:[]},{level:3,title:"SELECT",slug:"select",link:"#select",children:[]},{level:3,title:"UNION",slug:"union",link:"#union",children:[]},{level:3,title:"子查询",slug:"子查询",link:"#子查询",children:[]},{level:3,title:"连接查询(join)",slug:"连接查询-join",link:"#连接查询-join",children:[]},{level:3,title:"TRUNCATE",slug:"truncate",link:"#truncate",children:[]},{level:3,title:"备份与还原",slug:"备份与还原",link:"#备份与还原",children:[]},{level:3,title:"视图",slug:"视图",link:"#视图",children:[]},{level:3,title:"事务(transaction)",slug:"事务-transaction",link:"#事务-transaction",children:[]},{level:3,title:"锁表",slug:"锁表",link:"#锁表",children:[]},{level:3,title:"触发器",slug:"触发器",link:"#触发器",children:[]},{level:3,title:"SQL 编程",slug:"sql-编程",link:"#sql-编程",children:[]},{level:3,title:"存储过程",slug:"存储过程",link:"#存储过程",children:[]},{level:3,title:"用户和权限管理",slug:"用户和权限管理",link:"#用户和权限管理",children:[]},{level:3,title:"表维护",slug:"表维护",link:"#表维护",children:[]},{level:3,title:"杂项",slug:"杂项",link:"#杂项",children:[]}],path:"/database/mysql/a-thousand-lines-of-mysql-study-notes.html",pathLocale:"/",extraFields:[]},{title:"SQL语句在MySQL中的执行过程",headers:[{level:2,title:"一 MySQL 基础架构分析",slug:"一-mysql-基础架构分析",link:"#一-mysql-基础架构分析",children:[{level:3,title:"1.1 MySQL 基本架构概览",slug:"_1-1-mysql-基本架构概览",link:"#_1-1-mysql-基本架构概览",children:[]},{level:3,title:"1.2 Server 层基本组件介绍",slug:"_1-2-server-层基本组件介绍",link:"#_1-2-server-层基本组件介绍",children:[]}]},{level:2,title:"二 语句分析",slug:"二-语句分析",link:"#二-语句分析",children:[{level:3,title:"2.1 查询语句",slug:"_2-1-查询语句",link:"#_2-1-查询语句",children:[]},{level:3,title:"2.2 更新语句",slug:"_2-2-更新语句",link:"#_2-2-更新语句",children:[]}]},{level:2,title:"三 总结",slug:"三-总结",link:"#三-总结",children:[]},{level:2,title:"四 参考",slug:"四-参考",link:"#四-参考",children:[]}],path:"/database/mysql/how-sql-executed-in-mysql.html",pathLocale:"/",extraFields:[]},{title:"MySQL隐式转换造成索引失效",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"数据准备",slug:"数据准备",link:"#数据准备",children:[]},{level:2,title:"SQL 测试",slug:"sql-测试",link:"#sql-测试",children:[]},{level:2,title:"分析和总结",slug:"分析和总结",link:"#分析和总结",children:[]}],path:"/database/mysql/index-invalidation-caused-by-implicit-conversion.html",pathLocale:"/",extraFields:[]},{title:"InnoDB存储引擎对MVCC的实现",headers:[{level:2,title:"多版本并发控制 (Multi-Version Concurrency Control)",slug:"多版本并发控制-multi-version-concurrency-control",link:"#多版本并发控制-multi-version-concurrency-control",children:[]},{level:2,title:"一致性非锁定读和锁定读",slug:"一致性非锁定读和锁定读",link:"#一致性非锁定读和锁定读",children:[{level:3,title:"一致性非锁定读",slug:"一致性非锁定读",link:"#一致性非锁定读",children:[]},{level:3,title:"锁定读",slug:"锁定读",link:"#锁定读",children:[]}]},{level:2,title:"InnoDB 对 MVCC 的实现",slug:"innodb-对-mvcc-的实现",link:"#innodb-对-mvcc-的实现",children:[{level:3,title:"隐藏字段",slug:"隐藏字段",link:"#隐藏字段",children:[]},{level:3,title:"ReadView",slug:"readview",link:"#readview",children:[]},{level:3,title:"undo-log",slug:"undo-log",link:"#undo-log",children:[]},{level:3,title:"数据可见性算法",slug:"数据可见性算法",link:"#数据可见性算法",children:[]}]},{level:2,title:"RC 和 RR 隔离级别下 MVCC 的差异",slug:"rc-和-rr-隔离级别下-mvcc-的差异",link:"#rc-和-rr-隔离级别下-mvcc-的差异",children:[]},{level:2,title:"MVCC 解决不可重复读问题",slug:"mvcc-解决不可重复读问题",link:"#mvcc-解决不可重复读问题",children:[{level:3,title:"在 RC 下 ReadView 生成情况",slug:"在-rc-下-readview-生成情况",link:"#在-rc-下-readview-生成情况",children:[]},{level:3,title:"在 RR 下 ReadView 生成情况",slug:"在-rr-下-readview-生成情况",link:"#在-rr-下-readview-生成情况",children:[]}]},{level:2,title:"MVCC➕Next-key-Lock 防止幻读",slug:"mvcc➕next-key-lock-防止幻读",link:"#mvcc➕next-key-lock-防止幻读",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mysql/innodb-implementation-of-mvcc.html",pathLocale:"/",extraFields:[]},{title:"MySQL自增主键一定是连续的吗",headers:[{level:2,title:"自增值保存在哪里？",slug:"自增值保存在哪里",link:"#自增值保存在哪里",children:[]},{level:2,title:"自增值不连续的场景",slug:"自增值不连续的场景",link:"#自增值不连续的场景",children:[{level:3,title:"自增值不连续场景 1",slug:"自增值不连续场景-1",link:"#自增值不连续场景-1",children:[]},{level:3,title:"自增值不连续场景 2",slug:"自增值不连续场景-2",link:"#自增值不连续场景-2",children:[]},{level:3,title:"自增值不连续场景 3",slug:"自增值不连续场景-3",link:"#自增值不连续场景-3",children:[]},{level:3,title:"自增值不连续场景 4",slug:"自增值不连续场景-4",link:"#自增值不连续场景-4",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/database/mysql/mysql-auto-increment-primary-key-continuous.html",pathLocale:"/",extraFields:[]},{title:"MySQL高性能优化规范建议总结",headers:[{level:2,title:"数据库命名规范",slug:"数据库命名规范",link:"#数据库命名规范",children:[]},{level:2,title:"数据库基本设计规范",slug:"数据库基本设计规范",link:"#数据库基本设计规范",children:[{level:3,title:"所有表必须使用 InnoDB 存储引擎",slug:"所有表必须使用-innodb-存储引擎",link:"#所有表必须使用-innodb-存储引擎",children:[]},{level:3,title:"数据库和表的字符集统一使用 UTF8",slug:"数据库和表的字符集统一使用-utf8",link:"#数据库和表的字符集统一使用-utf8",children:[]},{level:3,title:"所有表和字段都需要添加注释",slug:"所有表和字段都需要添加注释",link:"#所有表和字段都需要添加注释",children:[]},{level:3,title:"尽量控制单表数据量的大小，建议控制在 500 万以内",slug:"尽量控制单表数据量的大小-建议控制在-500-万以内",link:"#尽量控制单表数据量的大小-建议控制在-500-万以内",children:[]},{level:3,title:"谨慎使用 MySQL 分区表",slug:"谨慎使用-mysql-分区表",link:"#谨慎使用-mysql-分区表",children:[]},{level:3,title:"经常一起使用的列放到一个表中",slug:"经常一起使用的列放到一个表中",link:"#经常一起使用的列放到一个表中",children:[]},{level:3,title:"禁止在表中建立预留字段",slug:"禁止在表中建立预留字段",link:"#禁止在表中建立预留字段",children:[]},{level:3,title:"禁止在数据库中存储文件（比如图片）这类大的二进制数据",slug:"禁止在数据库中存储文件-比如图片-这类大的二进制数据",link:"#禁止在数据库中存储文件-比如图片-这类大的二进制数据",children:[]},{level:3,title:"不要被数据库范式所束缚",slug:"不要被数据库范式所束缚",link:"#不要被数据库范式所束缚",children:[]},{level:3,title:"禁止在线上做数据库压力测试",slug:"禁止在线上做数据库压力测试",link:"#禁止在线上做数据库压力测试",children:[]},{level:3,title:"禁止从开发环境,测试环境直接连接生产环境数据库",slug:"禁止从开发环境-测试环境直接连接生产环境数据库",link:"#禁止从开发环境-测试环境直接连接生产环境数据库",children:[]}]},{level:2,title:"数据库字段设计规范",slug:"数据库字段设计规范",link:"#数据库字段设计规范",children:[{level:3,title:"优先选择符合存储需要的最小的数据类型",slug:"优先选择符合存储需要的最小的数据类型",link:"#优先选择符合存储需要的最小的数据类型",children:[]},{level:3,title:"避免使用 TEXT,BLOB 数据类型，最常见的 TEXT 类型可以存储 64k 的数据",slug:"避免使用-text-blob-数据类型-最常见的-text-类型可以存储-64k-的数据",link:"#避免使用-text-blob-数据类型-最常见的-text-类型可以存储-64k-的数据",children:[]},{level:3,title:"避免使用 ENUM 类型",slug:"避免使用-enum-类型",link:"#避免使用-enum-类型",children:[]},{level:3,title:"尽可能把所有列定义为 NOT NULL",slug:"尽可能把所有列定义为-not-null",link:"#尽可能把所有列定义为-not-null",children:[]},{level:3,title:"一定不要用字符串存储日期",slug:"一定不要用字符串存储日期",link:"#一定不要用字符串存储日期",children:[]},{level:3,title:"同财务相关的金额类数据必须使用 decimal 类型",slug:"同财务相关的金额类数据必须使用-decimal-类型",link:"#同财务相关的金额类数据必须使用-decimal-类型",children:[]},{level:3,title:"单表不要包含过多字段",slug:"单表不要包含过多字段",link:"#单表不要包含过多字段",children:[]}]},{level:2,title:"索引设计规范",slug:"索引设计规范",link:"#索引设计规范",children:[{level:3,title:"限制每张表上的索引数量,建议单张表索引不超过 5 个",slug:"限制每张表上的索引数量-建议单张表索引不超过-5-个",link:"#限制每张表上的索引数量-建议单张表索引不超过-5-个",children:[]},{level:3,title:"禁止使用全文索引",slug:"禁止使用全文索引",link:"#禁止使用全文索引",children:[]},{level:3,title:"禁止给表中的每一列都建立单独的索引",slug:"禁止给表中的每一列都建立单独的索引",link:"#禁止给表中的每一列都建立单独的索引",children:[]},{level:3,title:"每个 InnoDB 表必须有个主键",slug:"每个-innodb-表必须有个主键",link:"#每个-innodb-表必须有个主键",children:[]},{level:3,title:"常见索引列建议",slug:"常见索引列建议",link:"#常见索引列建议",children:[]},{level:3,title:"如何选择索引列的顺序",slug:"如何选择索引列的顺序",link:"#如何选择索引列的顺序",children:[]},{level:3,title:"避免建立冗余索引和重复索引（增加了查询优化器生成执行计划的时间）",slug:"避免建立冗余索引和重复索引-增加了查询优化器生成执行计划的时间",link:"#避免建立冗余索引和重复索引-增加了查询优化器生成执行计划的时间",children:[]},{level:3,title:"对于频繁的查询优先考虑使用覆盖索引",slug:"对于频繁的查询优先考虑使用覆盖索引",link:"#对于频繁的查询优先考虑使用覆盖索引",children:[]},{level:3,title:"索引 SET 规范",slug:"索引-set-规范",link:"#索引-set-规范",children:[]}]},{level:2,title:"数据库 SQL 开发规范",slug:"数据库-sql-开发规范",link:"#数据库-sql-开发规范",children:[{level:3,title:"尽量不在数据库做运算，复杂运算需移到业务应用里完成",slug:"尽量不在数据库做运算-复杂运算需移到业务应用里完成",link:"#尽量不在数据库做运算-复杂运算需移到业务应用里完成",children:[]},{level:3,title:"优化对性能影响较大的 SQL 语句",slug:"优化对性能影响较大的-sql-语句",link:"#优化对性能影响较大的-sql-语句",children:[]},{level:3,title:"充分利用表上已经存在的索引",slug:"充分利用表上已经存在的索引",link:"#充分利用表上已经存在的索引",children:[]},{level:3,title:"禁止使用 SELECT * 必须使用 SELECT <字段列表> 查询",slug:"禁止使用-select-必须使用-select-字段列表-查询",link:"#禁止使用-select-必须使用-select-字段列表-查询",children:[]},{level:3,title:"禁止使用不含字段列表的 INSERT 语句",slug:"禁止使用不含字段列表的-insert-语句",link:"#禁止使用不含字段列表的-insert-语句",children:[]},{level:3,title:"建议使用预编译语句进行数据库操作",slug:"建议使用预编译语句进行数据库操作",link:"#建议使用预编译语句进行数据库操作",children:[]},{level:3,title:"避免数据类型的隐式转换",slug:"避免数据类型的隐式转换",link:"#避免数据类型的隐式转换",children:[]},{level:3,title:"避免使用子查询，可以把子查询优化为 join 操作",slug:"避免使用子查询-可以把子查询优化为-join-操作",link:"#避免使用子查询-可以把子查询优化为-join-操作",children:[]},{level:3,title:"避免使用 JOIN 关联太多的表",slug:"避免使用-join-关联太多的表",link:"#避免使用-join-关联太多的表",children:[]},{level:3,title:"减少同数据库的交互次数",slug:"减少同数据库的交互次数",link:"#减少同数据库的交互次数",children:[]},{level:3,title:"对应同一列进行 or 判断时，使用 in 代替 or",slug:"对应同一列进行-or-判断时-使用-in-代替-or",link:"#对应同一列进行-or-判断时-使用-in-代替-or",children:[]},{level:3,title:"禁止使用 order by rand() 进行随机排序",slug:"禁止使用-order-by-rand-进行随机排序",link:"#禁止使用-order-by-rand-进行随机排序",children:[]},{level:3,title:"WHERE 从句中禁止对列进行函数转换和计算",slug:"where-从句中禁止对列进行函数转换和计算",link:"#where-从句中禁止对列进行函数转换和计算",children:[]},{level:3,title:"在明显不会有重复值时使用 UNION ALL 而不是 UNION",slug:"在明显不会有重复值时使用-union-all-而不是-union",link:"#在明显不会有重复值时使用-union-all-而不是-union",children:[]},{level:3,title:"拆分复杂的大 SQL 为多个小 SQL",slug:"拆分复杂的大-sql-为多个小-sql",link:"#拆分复杂的大-sql-为多个小-sql",children:[]},{level:3,title:"程序连接不同的数据库使用不同的账号，禁止跨库查询",slug:"程序连接不同的数据库使用不同的账号-禁止跨库查询",link:"#程序连接不同的数据库使用不同的账号-禁止跨库查询",children:[]}]},{level:2,title:"数据库操作行为规范",slug:"数据库操作行为规范",link:"#数据库操作行为规范",children:[{level:3,title:"超 100 万行的批量写 (UPDATE,DELETE,INSERT) 操作,要分批多次进行操作",slug:"超-100-万行的批量写-update-delete-insert-操作-要分批多次进行操作",link:"#超-100-万行的批量写-update-delete-insert-操作-要分批多次进行操作",children:[]},{level:3,title:"对于大表使用 pt-online-schema-change 修改表结构",slug:"对于大表使用-pt-online-schema-change-修改表结构",link:"#对于大表使用-pt-online-schema-change-修改表结构",children:[]},{level:3,title:"禁止为程序使用的账号赋予 super 权限",slug:"禁止为程序使用的账号赋予-super-权限",link:"#禁止为程序使用的账号赋予-super-权限",children:[]},{level:3,title:"对于程序连接数据库账号,遵循权限最小原则",slug:"对于程序连接数据库账号-遵循权限最小原则",link:"#对于程序连接数据库账号-遵循权限最小原则",children:[]}]},{level:2,title:"推荐阅读",slug:"推荐阅读",link:"#推荐阅读",children:[]}],path:"/database/mysql/mysql-high-performance-optimization-specification-recommendations.html",pathLocale:"/",extraFields:[]},{title:"MySQL索引详解",headers:[{level:2,title:"索引介绍",slug:"索引介绍",link:"#索引介绍",children:[]},{level:2,title:"索引的优缺点",slug:"索引的优缺点",link:"#索引的优缺点",children:[]},{level:2,title:"索引底层数据结构选型",slug:"索引底层数据结构选型",link:"#索引底层数据结构选型",children:[{level:3,title:"Hash 表",slug:"hash-表",link:"#hash-表",children:[]},{level:3,title:"二叉查找树(BST)",slug:"二叉查找树-bst",link:"#二叉查找树-bst",children:[]},{level:3,title:"AVL 树",slug:"avl-树",link:"#avl-树",children:[]},{level:3,title:"红黑树",slug:"红黑树",link:"#红黑树",children:[]},{level:3,title:"B 树& B+树",slug:"b-树-b-树",link:"#b-树-b-树",children:[]}]},{level:2,title:"索引类型总结",slug:"索引类型总结",link:"#索引类型总结",children:[]},{level:2,title:"主键索引(Primary Key)",slug:"主键索引-primary-key",link:"#主键索引-primary-key",children:[]},{level:2,title:"二级索引",slug:"二级索引",link:"#二级索引",children:[]},{level:2,title:"聚簇索引与非聚簇索引",slug:"聚簇索引与非聚簇索引",link:"#聚簇索引与非聚簇索引",children:[{level:3,title:"聚簇索引（聚集索引）",slug:"聚簇索引-聚集索引",link:"#聚簇索引-聚集索引",children:[]},{level:3,title:"非聚簇索引（非聚集索引）",slug:"非聚簇索引-非聚集索引",link:"#非聚簇索引-非聚集索引",children:[]}]},{level:2,title:"覆盖索引和联合索引",slug:"覆盖索引和联合索引",link:"#覆盖索引和联合索引",children:[{level:3,title:"覆盖索引",slug:"覆盖索引",link:"#覆盖索引",children:[]},{level:3,title:"联合索引",slug:"联合索引",link:"#联合索引",children:[]},{level:3,title:"最左前缀匹配原则",slug:"最左前缀匹配原则",link:"#最左前缀匹配原则",children:[]}]},{level:2,title:"索引下推",slug:"索引下推",link:"#索引下推",children:[]},{level:2,title:"正确使用索引的一些建议",slug:"正确使用索引的一些建议",link:"#正确使用索引的一些建议",children:[{level:3,title:"选择合适的字段创建索引",slug:"选择合适的字段创建索引",link:"#选择合适的字段创建索引",children:[]},{level:3,title:"被频繁更新的字段应该慎重建立索引",slug:"被频繁更新的字段应该慎重建立索引",link:"#被频繁更新的字段应该慎重建立索引",children:[]},{level:3,title:"限制每张表上的索引数量",slug:"限制每张表上的索引数量",link:"#限制每张表上的索引数量",children:[]},{level:3,title:"尽可能的考虑建立联合索引而不是单列索引",slug:"尽可能的考虑建立联合索引而不是单列索引",link:"#尽可能的考虑建立联合索引而不是单列索引",children:[]},{level:3,title:"注意避免冗余索引",slug:"注意避免冗余索引",link:"#注意避免冗余索引",children:[]},{level:3,title:"字符串类型的字段使用前缀索引代替普通索引",slug:"字符串类型的字段使用前缀索引代替普通索引",link:"#字符串类型的字段使用前缀索引代替普通索引",children:[]},{level:3,title:"避免索引失效",slug:"避免索引失效",link:"#避免索引失效",children:[]},{level:3,title:"删除长期未使用的索引",slug:"删除长期未使用的索引",link:"#删除长期未使用的索引",children:[]},{level:3,title:"知道如何分析语句是否走索引查询",slug:"知道如何分析语句是否走索引查询",link:"#知道如何分析语句是否走索引查询",children:[]}]}],path:"/database/mysql/mysql-index.html",pathLocale:"/",extraFields:[]},{title:"MySQL三大日志(binlog、redo log和undo log)详解",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"redo log",slug:"redo-log",link:"#redo-log",children:[{level:3,title:"刷盘时机",slug:"刷盘时机",link:"#刷盘时机",children:[]},{level:3,title:"日志文件组",slug:"日志文件组",link:"#日志文件组",children:[]},{level:3,title:"redo log 小结",slug:"redo-log-小结",link:"#redo-log-小结",children:[]}]},{level:2,title:"binlog",slug:"binlog",link:"#binlog",children:[{level:3,title:"记录格式",slug:"记录格式",link:"#记录格式",children:[]},{level:3,title:"写入机制",slug:"写入机制",link:"#写入机制",children:[]}]},{level:2,title:"两阶段提交",slug:"两阶段提交",link:"#两阶段提交",children:[]},{level:2,title:"undo log",slug:"undo-log",link:"#undo-log",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mysql/mysql-logs.html",pathLocale:"/",extraFields:[]},{title:"MySQL查询缓存详解",headers:[{level:2,title:"MySQL 查询缓存介绍",slug:"mysql-查询缓存介绍",link:"#mysql-查询缓存介绍",children:[]},{level:2,title:"MySQL 查询缓存管理和配置",slug:"mysql-查询缓存管理和配置",link:"#mysql-查询缓存管理和配置",children:[]},{level:2,title:"MySQL 缓存机制",slug:"mysql-缓存机制",link:"#mysql-缓存机制",children:[{level:3,title:"缓存规则",slug:"缓存规则",link:"#缓存规则",children:[]},{level:3,title:"缓存机制中的内存管理",slug:"缓存机制中的内存管理",link:"#缓存机制中的内存管理",children:[]}]},{level:2,title:"MySQL 查询缓存的优缺点",slug:"mysql-查询缓存的优缺点",link:"#mysql-查询缓存的优缺点",children:[]},{level:2,title:"MySQL 查询缓存对性能的影响",slug:"mysql-查询缓存对性能的影响",link:"#mysql-查询缓存对性能的影响",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mysql/mysql-query-cache.html",pathLocale:"/",extraFields:[]},{title:"MySQL执行计划分析",headers:[{level:2,title:"什么是执行计划？",slug:"什么是执行计划",link:"#什么是执行计划",children:[]},{level:2,title:"如何获取执行计划？",slug:"如何获取执行计划",link:"#如何获取执行计划",children:[]},{level:2,title:"如何分析 EXPLAIN 结果？",slug:"如何分析-explain-结果",link:"#如何分析-explain-结果",children:[{level:3,title:"id",slug:"id",link:"#id",children:[]},{level:3,title:"select_type",slug:"select-type",link:"#select-type",children:[]},{level:3,title:"table",slug:"table",link:"#table",children:[]},{level:3,title:"type（重要）",slug:"type-重要",link:"#type-重要",children:[]},{level:3,title:"possible_keys",slug:"possible-keys",link:"#possible-keys",children:[]},{level:3,title:"key（重要）",slug:"key-重要",link:"#key-重要",children:[]},{level:3,title:"key_len",slug:"key-len",link:"#key-len",children:[]},{level:3,title:"rows",slug:"rows",link:"#rows",children:[]},{level:3,title:"Extra（重要）",slug:"extra-重要",link:"#extra-重要",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mysql/mysql-query-execution-plan.html",pathLocale:"/",extraFields:[]},{title:"MySQL常见面试题总结",headers:[{level:2,title:"MySQL 基础",slug:"mysql-基础",link:"#mysql-基础",children:[{level:3,title:"什么是关系型数据库？",slug:"什么是关系型数据库",link:"#什么是关系型数据库",children:[]},{level:3,title:"什么是 SQL？",slug:"什么是-sql",link:"#什么是-sql",children:[]},{level:3,title:"什么是 MySQL？",slug:"什么是-mysql",link:"#什么是-mysql",children:[]},{level:3,title:"MySQL 有什么优点？",slug:"mysql-有什么优点",link:"#mysql-有什么优点",children:[]}]},{level:2,title:"MySQL 字段类型",slug:"mysql-字段类型",link:"#mysql-字段类型",children:[{level:3,title:"整数类型的 UNSIGNED 属性有什么用？",slug:"整数类型的-unsigned-属性有什么用",link:"#整数类型的-unsigned-属性有什么用",children:[]},{level:3,title:"CHAR 和 VARCHAR 的区别是什么？",slug:"char-和-varchar-的区别是什么",link:"#char-和-varchar-的区别是什么",children:[]},{level:3,title:"VARCHAR(100)和 VARCHAR(10)的区别是什么？",slug:"varchar-100-和-varchar-10-的区别是什么",link:"#varchar-100-和-varchar-10-的区别是什么",children:[]},{level:3,title:"DECIMAL 和 FLOAT/DOUBLE 的区别是什么？",slug:"decimal-和-float-double-的区别是什么",link:"#decimal-和-float-double-的区别是什么",children:[]},{level:3,title:"为什么不推荐使用 TEXT 和 BLOB？",slug:"为什么不推荐使用-text-和-blob",link:"#为什么不推荐使用-text-和-blob",children:[]},{level:3,title:"DATETIME 和 TIMESTAMP 的区别是什么？",slug:"datetime-和-timestamp-的区别是什么",link:"#datetime-和-timestamp-的区别是什么",children:[]},{level:3,title:"NULL 和 '' 的区别是什么？",slug:"null-和-的区别是什么",link:"#null-和-的区别是什么",children:[]},{level:3,title:"Boolean 类型如何表示？",slug:"boolean-类型如何表示",link:"#boolean-类型如何表示",children:[]}]},{level:2,title:"MySQL 基础架构",slug:"mysql-基础架构",link:"#mysql-基础架构",children:[]},{level:2,title:"MySQL 存储引擎",slug:"mysql-存储引擎",link:"#mysql-存储引擎",children:[{level:3,title:"MySQL 支持哪些存储引擎？默认使用哪个？",slug:"mysql-支持哪些存储引擎-默认使用哪个",link:"#mysql-支持哪些存储引擎-默认使用哪个",children:[]},{level:3,title:"MySQL 存储引擎架构了解吗？",slug:"mysql-存储引擎架构了解吗",link:"#mysql-存储引擎架构了解吗",children:[]},{level:3,title:"MyISAM 和 InnoDB 有什么区别？",slug:"myisam-和-innodb-有什么区别",link:"#myisam-和-innodb-有什么区别",children:[]},{level:3,title:"MyISAM 和 InnoDB 如何选择？",slug:"myisam-和-innodb-如何选择",link:"#myisam-和-innodb-如何选择",children:[]}]},{level:2,title:"MySQL 索引",slug:"mysql-索引",link:"#mysql-索引",children:[]},{level:2,title:"MySQL 查询缓存",slug:"mysql-查询缓存",link:"#mysql-查询缓存",children:[]},{level:2,title:"MySQL 日志",slug:"mysql-日志",link:"#mysql-日志",children:[]},{level:2,title:"MySQL 事务",slug:"mysql-事务",link:"#mysql-事务",children:[{level:3,title:"何谓事务？",slug:"何谓事务",link:"#何谓事务",children:[]},{level:3,title:"何谓数据库事务？",slug:"何谓数据库事务",link:"#何谓数据库事务",children:[]},{level:3,title:"并发事务带来了哪些问题?",slug:"并发事务带来了哪些问题",link:"#并发事务带来了哪些问题",children:[]},{level:3,title:"不可重复读和幻读有什么区别？",slug:"不可重复读和幻读有什么区别",link:"#不可重复读和幻读有什么区别",children:[]},{level:3,title:"并发事务的控制方式有哪些？",slug:"并发事务的控制方式有哪些",link:"#并发事务的控制方式有哪些",children:[]},{level:3,title:"SQL 标准定义了哪些事务隔离级别?",slug:"sql-标准定义了哪些事务隔离级别",link:"#sql-标准定义了哪些事务隔离级别",children:[]},{level:3,title:"MySQL 的隔离级别是基于锁实现的吗？",slug:"mysql-的隔离级别是基于锁实现的吗",link:"#mysql-的隔离级别是基于锁实现的吗",children:[]},{level:3,title:"MySQL 的默认隔离级别是什么?",slug:"mysql-的默认隔离级别是什么",link:"#mysql-的默认隔离级别是什么",children:[]}]},{level:2,title:"MySQL 锁",slug:"mysql-锁",link:"#mysql-锁",children:[{level:3,title:"表级锁和行级锁了解吗？有什么区别？",slug:"表级锁和行级锁了解吗-有什么区别",link:"#表级锁和行级锁了解吗-有什么区别",children:[]},{level:3,title:"行级锁的使用有什么注意事项？",slug:"行级锁的使用有什么注意事项",link:"#行级锁的使用有什么注意事项",children:[]},{level:3,title:"InnoDB 有哪几类行锁？",slug:"innodb-有哪几类行锁",link:"#innodb-有哪几类行锁",children:[]},{level:3,title:"共享锁和排他锁呢？",slug:"共享锁和排他锁呢",link:"#共享锁和排他锁呢",children:[]},{level:3,title:"意向锁有什么作用？",slug:"意向锁有什么作用",link:"#意向锁有什么作用",children:[]},{level:3,title:"当前读和快照读有什么区别？",slug:"当前读和快照读有什么区别",link:"#当前读和快照读有什么区别",children:[]},{level:3,title:"自增锁有了解吗？",slug:"自增锁有了解吗",link:"#自增锁有了解吗",children:[]}]},{level:2,title:"MySQL 性能优化",slug:"mysql-性能优化",link:"#mysql-性能优化",children:[{level:3,title:"能用 MySQL 直接存储文件（比如图片）吗？",slug:"能用-mysql-直接存储文件-比如图片-吗",link:"#能用-mysql-直接存储文件-比如图片-吗",children:[]},{level:3,title:"MySQL 如何存储 IP 地址？",slug:"mysql-如何存储-ip-地址",link:"#mysql-如何存储-ip-地址",children:[]},{level:3,title:"有哪些常见的 SQL 优化手段？",slug:"有哪些常见的-sql-优化手段",link:"#有哪些常见的-sql-优化手段",children:[]},{level:3,title:"如何分析 SQL 的性能？",slug:"如何分析-sql-的性能",link:"#如何分析-sql-的性能",children:[]},{level:3,title:"读写分离和分库分表了解吗？",slug:"读写分离和分库分表了解吗",link:"#读写分离和分库分表了解吗",children:[]},{level:3,title:"深度分页如何优化？",slug:"深度分页如何优化",link:"#深度分页如何优化",children:[]},{level:3,title:"数据冷热分离如何做？",slug:"数据冷热分离如何做",link:"#数据冷热分离如何做",children:[]},{level:3,title:"常见的数据库优化方法有哪些？",slug:"常见的数据库优化方法有哪些",link:"#常见的数据库优化方法有哪些",children:[]}]},{level:2,title:"MySQL 学习资料推荐",slug:"mysql-学习资料推荐",link:"#mysql-学习资料推荐",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/mysql/mysql-questions-01.html",pathLocale:"/",extraFields:[]},{title:"MySQL日期类型选择建议",headers:[{level:2,title:"不要用字符串存储日期",slug:"不要用字符串存储日期",link:"#不要用字符串存储日期",children:[]},{level:2,title:"Datetime 和 Timestamp 之间的抉择",slug:"datetime-和-timestamp-之间的抉择",link:"#datetime-和-timestamp-之间的抉择",children:[{level:3,title:"时区信息",slug:"时区信息",link:"#时区信息",children:[]},{level:3,title:"占用空间",slug:"占用空间",link:"#占用空间",children:[]},{level:3,title:"表示范围",slug:"表示范围",link:"#表示范围",children:[]},{level:3,title:"性能",slug:"性能",link:"#性能",children:[]}]},{level:2,title:"数值时间戳是更好的选择吗？",slug:"数值时间戳是更好的选择吗",link:"#数值时间戳是更好的选择吗",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/database/mysql/some-thoughts-on-database-storage-time.html",pathLocale:"/",extraFields:[]},{title:"MySQL事务隔离级别详解",headers:[{level:2,title:"事务隔离级别总结",slug:"事务隔离级别总结",link:"#事务隔离级别总结",children:[]},{level:2,title:"实际情况演示",slug:"实际情况演示",link:"#实际情况演示",children:[{level:3,title:"脏读(读未提交)",slug:"脏读-读未提交",link:"#脏读-读未提交",children:[]},{level:3,title:"避免脏读(读已提交)",slug:"避免脏读-读已提交",link:"#避免脏读-读已提交",children:[]},{level:3,title:"不可重复读",slug:"不可重复读",link:"#不可重复读",children:[]},{level:3,title:"可重复读",slug:"可重复读",link:"#可重复读",children:[]},{level:3,title:"幻读",slug:"幻读",link:"#幻读",children:[]},{level:3,title:"参考",slug:"参考",link:"#参考",children:[]}]}],path:"/database/mysql/transaction-isolation-level.html",pathLocale:"/",extraFields:[]},{title:"3种常用的缓存读写策略详解",headers:[{level:3,title:"Cache Aside Pattern（旁路缓存模式）",slug:"cache-aside-pattern-旁路缓存模式",link:"#cache-aside-pattern-旁路缓存模式",children:[]},{level:3,title:"Read/Write Through Pattern（读写穿透）",slug:"read-write-through-pattern-读写穿透",link:"#read-write-through-pattern-读写穿透",children:[]},{level:3,title:"Write Behind Pattern（异步缓存写入）",slug:"write-behind-pattern-异步缓存写入",link:"#write-behind-pattern-异步缓存写入",children:[]}],path:"/database/redis/3-commonly-used-cache-read-and-write-strategies.html",pathLocale:"/",extraFields:[]},{title:"缓存基础常见面试题总结(付费)",headers:[],path:"/database/redis/cache-basics.html",pathLocale:"/",extraFields:[]},{title:"redis语法基础",headers:[{level:2,title:"Windows使用",slug:"windows使用",link:"#windows使用",children:[]},{level:2,title:"DataStructure",slug:"datastructure",link:"#datastructure",children:[{level:3,title:"Set",slug:"set",link:"#set",children:[]},{level:3,title:"sorted list",slug:"sorted-list",link:"#sorted-list",children:[]},{level:3,title:"Hashes",slug:"hashes",link:"#hashes",children:[]},{level:3,title:"bitmap",slug:"bitmap",link:"#bitmap",children:[]}]}],path:"/database/redis/redis-basis.html",pathLocale:"/",extraFields:[]},{title:"Redis集群详解(付费)",headers:[],path:"/database/redis/redis-cluster.html",pathLocale:"/",extraFields:[]},{title:"Redis常见阻塞原因总结",headers:[{level:2,title:"O(n) 命令",slug:"o-n-命令",link:"#o-n-命令",children:[]},{level:2,title:"SAVE 创建 RDB 快照",slug:"save-创建-rdb-快照",link:"#save-创建-rdb-快照",children:[]},{level:2,title:"AOF",slug:"aof",link:"#aof",children:[{level:3,title:"AOF 日志记录阻塞",slug:"aof-日志记录阻塞",link:"#aof-日志记录阻塞",children:[]},{level:3,title:"AOF 刷盘阻塞",slug:"aof-刷盘阻塞",link:"#aof-刷盘阻塞",children:[]},{level:3,title:"AOF 重写阻塞",slug:"aof-重写阻塞",link:"#aof-重写阻塞",children:[]}]},{level:2,title:"大 Key",slug:"大-key",link:"#大-key",children:[{level:3,title:"查找大 key",slug:"查找大-key",link:"#查找大-key",children:[]},{level:3,title:"删除大 key",slug:"删除大-key",link:"#删除大-key",children:[]}]},{level:2,title:"清空数据库",slug:"清空数据库",link:"#清空数据库",children:[]},{level:2,title:"集群扩容",slug:"集群扩容",link:"#集群扩容",children:[]},{level:2,title:"Swap（内存交换）",slug:"swap-内存交换",link:"#swap-内存交换",children:[]},{level:2,title:"CPU 竞争",slug:"cpu-竞争",link:"#cpu-竞争",children:[]},{level:2,title:"网络问题",slug:"网络问题",link:"#网络问题",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-common-blocking-problems-summary.html",pathLocale:"/",extraFields:[]},{title:"Redis 5 种基本数据类型详解",headers:[{level:2,title:"String（字符串）",slug:"string-字符串",link:"#string-字符串",children:[{level:3,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:3,title:"常用命令",slug:"常用命令",link:"#常用命令",children:[]},{level:3,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]}]},{level:2,title:"List（列表）",slug:"list-列表",link:"#list-列表",children:[{level:3,title:"介绍",slug:"介绍-1",link:"#介绍-1",children:[]},{level:3,title:"常用命令",slug:"常用命令-1",link:"#常用命令-1",children:[]},{level:3,title:"应用场景",slug:"应用场景-1",link:"#应用场景-1",children:[]}]},{level:2,title:"Hash（哈希）",slug:"hash-哈希",link:"#hash-哈希",children:[{level:3,title:"介绍",slug:"介绍-2",link:"#介绍-2",children:[]},{level:3,title:"常用命令",slug:"常用命令-2",link:"#常用命令-2",children:[]},{level:3,title:"应用场景",slug:"应用场景-2",link:"#应用场景-2",children:[]}]},{level:2,title:"Set（集合）",slug:"set-集合",link:"#set-集合",children:[{level:3,title:"介绍",slug:"介绍-3",link:"#介绍-3",children:[]},{level:3,title:"常用命令",slug:"常用命令-3",link:"#常用命令-3",children:[]},{level:3,title:"应用场景",slug:"应用场景-3",link:"#应用场景-3",children:[]}]},{level:2,title:"Sorted Set（有序集合）",slug:"sorted-set-有序集合",link:"#sorted-set-有序集合",children:[{level:3,title:"介绍",slug:"介绍-4",link:"#介绍-4",children:[]},{level:3,title:"常用命令",slug:"常用命令-4",link:"#常用命令-4",children:[]},{level:3,title:"应用场景",slug:"应用场景-4",link:"#应用场景-4",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-data-structures-01.html",pathLocale:"/",extraFields:[]},{title:"Redis 3 种特殊数据类型详解",headers:[{level:2,title:"Bitmap （位图）",slug:"bitmap-位图",link:"#bitmap-位图",children:[{level:3,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:3,title:"常用命令",slug:"常用命令",link:"#常用命令",children:[]},{level:3,title:"应用场景",slug:"应用场景",link:"#应用场景",children:[]}]},{level:2,title:"HyperLogLog（基数统计）",slug:"hyperloglog-基数统计",link:"#hyperloglog-基数统计",children:[{level:3,title:"介绍",slug:"介绍-1",link:"#介绍-1",children:[]},{level:3,title:"常用命令",slug:"常用命令-1",link:"#常用命令-1",children:[]},{level:3,title:"应用场景",slug:"应用场景-1",link:"#应用场景-1",children:[]}]},{level:2,title:"Geospatial (地理位置)",slug:"geospatial-地理位置",link:"#geospatial-地理位置",children:[{level:3,title:"介绍",slug:"介绍-2",link:"#介绍-2",children:[]},{level:3,title:"常用命令",slug:"常用命令-2",link:"#常用命令-2",children:[]},{level:3,title:"应用场景",slug:"应用场景-2",link:"#应用场景-2",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-data-structures-02.html",pathLocale:"/",extraFields:[]},{title:"如何基于Redis实现延时任务",headers:[{level:3,title:"Redis 过期事件监听实现延时任务功能的原理？",slug:"redis-过期事件监听实现延时任务功能的原理",link:"#redis-过期事件监听实现延时任务功能的原理",children:[]},{level:3,title:"Redis 过期事件监听实现延时任务功能有什么缺陷？",slug:"redis-过期事件监听实现延时任务功能有什么缺陷",link:"#redis-过期事件监听实现延时任务功能有什么缺陷",children:[]},{level:3,title:"Redisson 延迟队列原理是什么？有什么优势？",slug:"redisson-延迟队列原理是什么-有什么优势",link:"#redisson-延迟队列原理是什么-有什么优势",children:[]}],path:"/database/redis/redis-delayed-task.html",pathLocale:"/",extraFields:[]},{title:"Redis内存碎片详解",headers:[{level:2,title:"什么是内存碎片?",slug:"什么是内存碎片",link:"#什么是内存碎片",children:[]},{level:2,title:"为什么会有 Redis 内存碎片?",slug:"为什么会有-redis-内存碎片",link:"#为什么会有-redis-内存碎片",children:[]},{level:2,title:"如何查看 Redis 内存碎片的信息？",slug:"如何查看-redis-内存碎片的信息",link:"#如何查看-redis-内存碎片的信息",children:[]},{level:2,title:"如何清理 Redis 内存碎片？",slug:"如何清理-redis-内存碎片",link:"#如何清理-redis-内存碎片",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-memory-fragmentation.html",pathLocale:"/",extraFields:[]},{title:"Redis持久化机制详解",headers:[{level:2,title:"RDB 持久化",slug:"rdb-持久化",link:"#rdb-持久化",children:[{level:3,title:"什么是 RDB 持久化？",slug:"什么是-rdb-持久化",link:"#什么是-rdb-持久化",children:[]},{level:3,title:"RDB 创建快照时会阻塞主线程吗？",slug:"rdb-创建快照时会阻塞主线程吗",link:"#rdb-创建快照时会阻塞主线程吗",children:[]}]},{level:2,title:"AOF 持久化",slug:"aof-持久化",link:"#aof-持久化",children:[{level:3,title:"什么是 AOF 持久化？",slug:"什么是-aof-持久化",link:"#什么是-aof-持久化",children:[]},{level:3,title:"AOF 工作基本流程是怎样的？",slug:"aof-工作基本流程是怎样的",link:"#aof-工作基本流程是怎样的",children:[]},{level:3,title:"AOF 持久化方式有哪些？",slug:"aof-持久化方式有哪些",link:"#aof-持久化方式有哪些",children:[]},{level:3,title:"AOF 为什么是在执行完命令之后记录日志？",slug:"aof-为什么是在执行完命令之后记录日志",link:"#aof-为什么是在执行完命令之后记录日志",children:[]},{level:3,title:"AOF 重写了解吗？",slug:"aof-重写了解吗",link:"#aof-重写了解吗",children:[]},{level:3,title:"AOF 校验机制了解吗？",slug:"aof-校验机制了解吗",link:"#aof-校验机制了解吗",children:[]}]},{level:2,title:"Redis 4.0 对于持久化机制做了什么优化？",slug:"redis-4-0-对于持久化机制做了什么优化",link:"#redis-4-0-对于持久化机制做了什么优化",children:[]},{level:2,title:"如何选择 RDB 和 AOF？",slug:"如何选择-rdb-和-aof",link:"#如何选择-rdb-和-aof",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-persistence.html",pathLocale:"/",extraFields:[]},{title:"Redis常见面试题总结(上)",headers:[{level:2,title:"Redis 基础",slug:"redis-基础",link:"#redis-基础",children:[{level:3,title:"什么是 Redis？",slug:"什么是-redis",link:"#什么是-redis",children:[]},{level:3,title:"Redis 为什么这么快？",slug:"redis-为什么这么快",link:"#redis-为什么这么快",children:[]},{level:3,title:"分布式缓存常见的技术选型方案有哪些？",slug:"分布式缓存常见的技术选型方案有哪些",link:"#分布式缓存常见的技术选型方案有哪些",children:[]},{level:3,title:"说一下 Redis 和 Memcached 的区别和共同点",slug:"说一下-redis-和-memcached-的区别和共同点",link:"#说一下-redis-和-memcached-的区别和共同点",children:[]},{level:3,title:"为什么要用 Redis？",slug:"为什么要用-redis",link:"#为什么要用-redis",children:[]},{level:3,title:"常见的缓存读写策略有哪些？",slug:"常见的缓存读写策略有哪些",link:"#常见的缓存读写策略有哪些",children:[]},{level:3,title:"什么是 Redis Module？有什么用？",slug:"什么是-redis-module-有什么用",link:"#什么是-redis-module-有什么用",children:[]}]},{level:2,title:"Redis 应用",slug:"redis-应用",link:"#redis-应用",children:[{level:3,title:"Redis 除了做缓存，还能做什么？",slug:"redis-除了做缓存-还能做什么",link:"#redis-除了做缓存-还能做什么",children:[]},{level:3,title:"如何基于 Redis 实现分布式锁？",slug:"如何基于-redis-实现分布式锁",link:"#如何基于-redis-实现分布式锁",children:[]},{level:3,title:"Redis 可以做消息队列么？",slug:"redis-可以做消息队列么",link:"#redis-可以做消息队列么",children:[]},{level:3,title:"Redis 可以做搜索引擎么？",slug:"redis-可以做搜索引擎么",link:"#redis-可以做搜索引擎么",children:[]},{level:3,title:"如何基于 Redis 实现延时任务？",slug:"如何基于-redis-实现延时任务",link:"#如何基于-redis-实现延时任务",children:[]}]},{level:2,title:"Redis 数据类型",slug:"redis-数据类型",link:"#redis-数据类型",children:[{level:3,title:"Redis 常用的数据类型有哪些？",slug:"redis-常用的数据类型有哪些",link:"#redis-常用的数据类型有哪些",children:[]},{level:3,title:"String 的应用场景有哪些？",slug:"string-的应用场景有哪些",link:"#string-的应用场景有哪些",children:[]},{level:3,title:"String 还是 Hash 存储对象数据更好呢？",slug:"string-还是-hash-存储对象数据更好呢",link:"#string-还是-hash-存储对象数据更好呢",children:[]},{level:3,title:"String 的底层实现是什么？",slug:"string-的底层实现是什么",link:"#string-的底层实现是什么",children:[]},{level:3,title:"购物车信息用 String 还是 Hash 存储更好呢?",slug:"购物车信息用-string-还是-hash-存储更好呢",link:"#购物车信息用-string-还是-hash-存储更好呢",children:[]},{level:3,title:"使用 Redis 实现一个排行榜怎么做？",slug:"使用-redis-实现一个排行榜怎么做",link:"#使用-redis-实现一个排行榜怎么做",children:[]},{level:3,title:"Redis 的有序集合底层为什么要用跳表，而不用平衡树、红黑树或者 B+树？",slug:"redis-的有序集合底层为什么要用跳表-而不用平衡树、红黑树或者-b-树",link:"#redis-的有序集合底层为什么要用跳表-而不用平衡树、红黑树或者-b-树",children:[]},{level:3,title:"Set 的应用场景是什么？",slug:"set-的应用场景是什么",link:"#set-的应用场景是什么",children:[]},{level:3,title:"使用 Set 实现抽奖系统怎么做？",slug:"使用-set-实现抽奖系统怎么做",link:"#使用-set-实现抽奖系统怎么做",children:[]},{level:3,title:"使用 Bitmap 统计活跃用户怎么做？",slug:"使用-bitmap-统计活跃用户怎么做",link:"#使用-bitmap-统计活跃用户怎么做",children:[]},{level:3,title:"使用 HyperLogLog 统计页面 UV 怎么做？",slug:"使用-hyperloglog-统计页面-uv-怎么做",link:"#使用-hyperloglog-统计页面-uv-怎么做",children:[]}]},{level:2,title:"Redis 持久化机制（重要）",slug:"redis-持久化机制-重要",link:"#redis-持久化机制-重要",children:[]},{level:2,title:"Redis 线程模型（重要）",slug:"redis-线程模型-重要",link:"#redis-线程模型-重要",children:[{level:3,title:"Redis 单线程模型了解吗？",slug:"redis-单线程模型了解吗",link:"#redis-单线程模型了解吗",children:[]},{level:3,title:"Redis6.0 之前为什么不使用多线程？",slug:"redis6-0-之前为什么不使用多线程",link:"#redis6-0-之前为什么不使用多线程",children:[]},{level:3,title:"Redis6.0 之后为何引入了多线程？",slug:"redis6-0-之后为何引入了多线程",link:"#redis6-0-之后为何引入了多线程",children:[]},{level:3,title:"Redis 后台线程了解吗？",slug:"redis-后台线程了解吗",link:"#redis-后台线程了解吗",children:[]}]},{level:2,title:"Redis 内存管理",slug:"redis-内存管理",link:"#redis-内存管理",children:[{level:3,title:"Redis 给缓存数据设置过期时间有啥用？",slug:"redis-给缓存数据设置过期时间有啥用",link:"#redis-给缓存数据设置过期时间有啥用",children:[]},{level:3,title:"Redis 是如何判断数据是否过期的呢？",slug:"redis-是如何判断数据是否过期的呢",link:"#redis-是如何判断数据是否过期的呢",children:[]},{level:3,title:"Redis 过期 key 删除策略了解么？",slug:"redis-过期-key-删除策略了解么",link:"#redis-过期-key-删除策略了解么",children:[]},{level:3,title:"大量 key 集中过期怎么办？",slug:"大量-key-集中过期怎么办",link:"#大量-key-集中过期怎么办",children:[]},{level:3,title:"Redis 内存淘汰策略了解么？",slug:"redis-内存淘汰策略了解么",link:"#redis-内存淘汰策略了解么",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-questions-01.html",pathLocale:"/",extraFields:[]},{title:"Redis常见面试题总结(下)",headers:[{level:2,title:"Redis 事务",slug:"redis-事务",link:"#redis-事务",children:[{level:3,title:"什么是 Redis 事务？",slug:"什么是-redis-事务",link:"#什么是-redis-事务",children:[]},{level:3,title:"如何使用 Redis 事务？",slug:"如何使用-redis-事务",link:"#如何使用-redis-事务",children:[]},{level:3,title:"Redis 事务支持原子性吗？",slug:"redis-事务支持原子性吗",link:"#redis-事务支持原子性吗",children:[]},{level:3,title:"Redis 事务支持持久性吗？",slug:"redis-事务支持持久性吗",link:"#redis-事务支持持久性吗",children:[]},{level:3,title:"如何解决 Redis 事务的缺陷？",slug:"如何解决-redis-事务的缺陷",link:"#如何解决-redis-事务的缺陷",children:[]}]},{level:2,title:"Redis 性能优化（重要）",slug:"redis-性能优化-重要",link:"#redis-性能优化-重要",children:[{level:3,title:"使用批量操作减少网络传输",slug:"使用批量操作减少网络传输",link:"#使用批量操作减少网络传输",children:[]},{level:3,title:"大量 key 集中过期问题",slug:"大量-key-集中过期问题",link:"#大量-key-集中过期问题",children:[]},{level:3,title:"Redis bigkey（大 Key）",slug:"redis-bigkey-大-key",link:"#redis-bigkey-大-key",children:[]},{level:3,title:"Redis hotkey（热 Key）",slug:"redis-hotkey-热-key",link:"#redis-hotkey-热-key",children:[]},{level:3,title:"慢查询命令",slug:"慢查询命令",link:"#慢查询命令",children:[]},{level:3,title:"Redis 内存碎片",slug:"redis-内存碎片",link:"#redis-内存碎片",children:[]}]},{level:2,title:"Redis 生产问题（重要）",slug:"redis-生产问题-重要",link:"#redis-生产问题-重要",children:[{level:3,title:"缓存穿透",slug:"缓存穿透",link:"#缓存穿透",children:[]},{level:3,title:"缓存击穿",slug:"缓存击穿",link:"#缓存击穿",children:[]},{level:3,title:"缓存雪崩",slug:"缓存雪崩",link:"#缓存雪崩",children:[]},{level:3,title:"如何保证缓存和数据库数据的一致性？",slug:"如何保证缓存和数据库数据的一致性",link:"#如何保证缓存和数据库数据的一致性",children:[]},{level:3,title:"哪些情况可能会导致 Redis 阻塞？",slug:"哪些情况可能会导致-redis-阻塞",link:"#哪些情况可能会导致-redis-阻塞",children:[]}]},{level:2,title:"Redis 集群",slug:"redis-集群",link:"#redis-集群",children:[]},{level:2,title:"Redis 使用规范",slug:"redis-使用规范",link:"#redis-使用规范",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-questions-02.html",pathLocale:"/",extraFields:[]},{title:"Redis为什么用跳表实现有序集合",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"跳表在 Redis 中的运用",slug:"跳表在-redis-中的运用",link:"#跳表在-redis-中的运用",children:[]},{level:2,title:"手写一个跳表",slug:"手写一个跳表",link:"#手写一个跳表",children:[{level:3,title:"模板定义",slug:"模板定义",link:"#模板定义",children:[]},{level:3,title:"元素添加",slug:"元素添加",link:"#元素添加",children:[]},{level:3,title:"元素查询",slug:"元素查询",link:"#元素查询",children:[]},{level:3,title:"元素删除",slug:"元素删除",link:"#元素删除",children:[]},{level:3,title:"完整代码以及测试",slug:"完整代码以及测试",link:"#完整代码以及测试",children:[]}]},{level:2,title:"和其余三种数据结构的比较",slug:"和其余三种数据结构的比较",link:"#和其余三种数据结构的比较",children:[{level:3,title:"平衡树 vs 跳表",slug:"平衡树-vs-跳表",link:"#平衡树-vs-跳表",children:[]},{level:3,title:"红黑树 vs 跳表",slug:"红黑树-vs-跳表",link:"#红黑树-vs-跳表",children:[]},{level:3,title:"B+树 vs 跳表",slug:"b-树-vs-跳表",link:"#b-树-vs-跳表",children:[]},{level:3,title:"Redis 作者给出的理由",slug:"redis-作者给出的理由",link:"#redis-作者给出的理由",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/database/redis/redis-skiplist.html",pathLocale:"/",extraFields:[]},{title:"SQL常见面试题总结（1）",headers:[{level:2,title:"检索数据",slug:"检索数据",link:"#检索数据",children:[{level:3,title:"从 Customers 表中检索所有的 ID",slug:"从-customers-表中检索所有的-id",link:"#从-customers-表中检索所有的-id",children:[]},{level:3,title:"检索并列出已订购产品的清单",slug:"检索并列出已订购产品的清单",link:"#检索并列出已订购产品的清单",children:[]},{level:3,title:"检索所有列",slug:"检索所有列",link:"#检索所有列",children:[]}]},{level:2,title:"排序检索数据",slug:"排序检索数据",link:"#排序检索数据",children:[{level:3,title:"检索顾客名称并且排序",slug:"检索顾客名称并且排序",link:"#检索顾客名称并且排序",children:[]},{level:3,title:"对顾客 ID 和日期排序",slug:"对顾客-id-和日期排序",link:"#对顾客-id-和日期排序",children:[]},{level:3,title:"按照数量和价格排序",slug:"按照数量和价格排序",link:"#按照数量和价格排序",children:[]},{level:3,title:"检查 SQL 语句",slug:"检查-sql-语句",link:"#检查-sql-语句",children:[]}]},{level:2,title:"过滤数据",slug:"过滤数据",link:"#过滤数据",children:[{level:3,title:"返回固定价格的产品",slug:"返回固定价格的产品",link:"#返回固定价格的产品",children:[]},{level:3,title:"返回更高价格的产品",slug:"返回更高价格的产品",link:"#返回更高价格的产品",children:[]},{level:3,title:"返回产品并且按照价格排序",slug:"返回产品并且按照价格排序",link:"#返回产品并且按照价格排序",children:[]},{level:3,title:"返回更多的产品",slug:"返回更多的产品",link:"#返回更多的产品",children:[]}]},{level:2,title:"高级数据过滤",slug:"高级数据过滤",link:"#高级数据过滤",children:[{level:3,title:"检索供应商名称",slug:"检索供应商名称",link:"#检索供应商名称",children:[]},{level:3,title:"检索并列出已订购产品的清单",slug:"检索并列出已订购产品的清单-1",link:"#检索并列出已订购产品的清单-1",children:[]},{level:3,title:"返回所有价格在 3 美元到 6 美元之间的产品的名称和价格",slug:"返回所有价格在-3-美元到-6-美元之间的产品的名称和价格",link:"#返回所有价格在-3-美元到-6-美元之间的产品的名称和价格",children:[]},{level:3,title:"检查 SQL 语句",slug:"检查-sql-语句-1",link:"#检查-sql-语句-1",children:[]}]},{level:2,title:"用通配符进行过滤",slug:"用通配符进行过滤",link:"#用通配符进行过滤",children:[{level:3,title:"检索产品名称和描述（一）",slug:"检索产品名称和描述-一",link:"#检索产品名称和描述-一",children:[]},{level:3,title:"检索产品名称和描述（二）",slug:"检索产品名称和描述-二",link:"#检索产品名称和描述-二",children:[]},{level:3,title:"检索产品名称和描述（三）",slug:"检索产品名称和描述-三",link:"#检索产品名称和描述-三",children:[]},{level:3,title:"检索产品名称和描述（四）",slug:"检索产品名称和描述-四",link:"#检索产品名称和描述-四",children:[]}]},{level:2,title:"创建计算字段",slug:"创建计算字段",link:"#创建计算字段",children:[{level:3,title:"别名",slug:"别名",link:"#别名",children:[]},{level:3,title:"打折",slug:"打折",link:"#打折",children:[]}]},{level:2,title:"使用函数处理数据",slug:"使用函数处理数据",link:"#使用函数处理数据",children:[{level:3,title:"顾客登录名",slug:"顾客登录名",link:"#顾客登录名",children:[]},{level:3,title:"返回 2020 年 1 月的所有订单的订单号和订单日期",slug:"返回-2020-年-1-月的所有订单的订单号和订单日期",link:"#返回-2020-年-1-月的所有订单的订单号和订单日期",children:[]}]},{level:2,title:"汇总数据",slug:"汇总数据",link:"#汇总数据",children:[{level:3,title:"确定已售出产品的总数",slug:"确定已售出产品的总数",link:"#确定已售出产品的总数",children:[]},{level:3,title:"确定已售出产品项 BR01 的总数",slug:"确定已售出产品项-br01-的总数",link:"#确定已售出产品项-br01-的总数",children:[]},{level:3,title:"确定 Products 表中价格不超过 10 美元的最贵产品的价格",slug:"确定-products-表中价格不超过-10-美元的最贵产品的价格",link:"#确定-products-表中价格不超过-10-美元的最贵产品的价格",children:[]}]},{level:2,title:"分组数据",slug:"分组数据",link:"#分组数据",children:[{level:3,title:"返回每个订单号各有多少行数",slug:"返回每个订单号各有多少行数",link:"#返回每个订单号各有多少行数",children:[]},{level:3,title:"每个供应商成本最低的产品",slug:"每个供应商成本最低的产品",link:"#每个供应商成本最低的产品",children:[]},{level:3,title:"返回订单数量总和不小于 100 的所有订单的订单号",slug:"返回订单数量总和不小于-100-的所有订单的订单号",link:"#返回订单数量总和不小于-100-的所有订单的订单号",children:[]},{level:3,title:"计算总和",slug:"计算总和",link:"#计算总和",children:[]},{level:3,title:"检查 SQL 语句",slug:"检查-sql-语句-2",link:"#检查-sql-语句-2",children:[]}]},{level:2,title:"使用子查询",slug:"使用子查询",link:"#使用子查询",children:[{level:3,title:"返回购买价格为 10 美元或以上产品的顾客列表",slug:"返回购买价格为-10-美元或以上产品的顾客列表",link:"#返回购买价格为-10-美元或以上产品的顾客列表",children:[]},{level:3,title:"确定哪些订单购买了 prod_id 为 BR01 的产品（一）",slug:"确定哪些订单购买了-prod-id-为-br01-的产品-一",link:"#确定哪些订单购买了-prod-id-为-br01-的产品-一",children:[]},{level:3,title:"返回购买 prod_id 为 BR01 的产品的所有顾客的电子邮件（一）",slug:"返回购买-prod-id-为-br01-的产品的所有顾客的电子邮件-一",link:"#返回购买-prod-id-为-br01-的产品的所有顾客的电子邮件-一",children:[]},{level:3,title:"返回每个顾客不同订单的总金额",slug:"返回每个顾客不同订单的总金额",link:"#返回每个顾客不同订单的总金额",children:[]},{level:3,title:"从 Products 表中检索所有的产品名称以及对应的销售总数",slug:"从-products-表中检索所有的产品名称以及对应的销售总数",link:"#从-products-表中检索所有的产品名称以及对应的销售总数",children:[]}]},{level:2,title:"连接表",slug:"连接表",link:"#连接表",children:[{level:3,title:"返回顾客名称和相关订单号",slug:"返回顾客名称和相关订单号",link:"#返回顾客名称和相关订单号",children:[]},{level:3,title:"返回顾客名称和相关订单号以及每个订单的总价",slug:"返回顾客名称和相关订单号以及每个订单的总价",link:"#返回顾客名称和相关订单号以及每个订单的总价",children:[]},{level:3,title:"确定哪些订单购买了 prod_id 为 BR01 的产品（二）",slug:"确定哪些订单购买了-prod-id-为-br01-的产品-二",link:"#确定哪些订单购买了-prod-id-为-br01-的产品-二",children:[]},{level:3,title:"返回购买 prod_id 为 BR01 的产品的所有顾客的电子邮件（二）",slug:"返回购买-prod-id-为-br01-的产品的所有顾客的电子邮件-二",link:"#返回购买-prod-id-为-br01-的产品的所有顾客的电子邮件-二",children:[]},{level:3,title:"确定最佳顾客的另一种方式（二）",slug:"确定最佳顾客的另一种方式-二",link:"#确定最佳顾客的另一种方式-二",children:[]}]},{level:2,title:"创建高级连接",slug:"创建高级连接",link:"#创建高级连接",children:[{level:3,title:"检索每个顾客的名称和所有的订单号（一）",slug:"检索每个顾客的名称和所有的订单号-一",link:"#检索每个顾客的名称和所有的订单号-一",children:[]},{level:3,title:"检索每个顾客的名称和所有的订单号（二）",slug:"检索每个顾客的名称和所有的订单号-二",link:"#检索每个顾客的名称和所有的订单号-二",children:[]},{level:3,title:"返回产品名称和与之相关的订单号",slug:"返回产品名称和与之相关的订单号",link:"#返回产品名称和与之相关的订单号",children:[]},{level:3,title:"返回产品名称和每一项产品的总订单数",slug:"返回产品名称和每一项产品的总订单数",link:"#返回产品名称和每一项产品的总订单数",children:[]},{level:3,title:"列出供应商及其可供产品的数量",slug:"列出供应商及其可供产品的数量",link:"#列出供应商及其可供产品的数量",children:[]}]},{level:2,title:"组合查询",slug:"组合查询",link:"#组合查询",children:[{level:3,title:"将两个 SELECT 语句结合起来（一）",slug:"将两个-select-语句结合起来-一",link:"#将两个-select-语句结合起来-一",children:[]},{level:3,title:"将两个 SELECT 语句结合起来（二）",slug:"将两个-select-语句结合起来-二",link:"#将两个-select-语句结合起来-二",children:[]},{level:3,title:"组合 Products 表中的产品名称和 Customers 表中的顾客名称",slug:"组合-products-表中的产品名称和-customers-表中的顾客名称",link:"#组合-products-表中的产品名称和-customers-表中的顾客名称",children:[]},{level:3,title:"检查 SQL 语句",slug:"检查-sql-语句-3",link:"#检查-sql-语句-3",children:[]}]}],path:"/database/sql/sql-questions-01.html",pathLocale:"/",extraFields:[]},{title:"SQL常见面试题总结（2）",headers:[{level:2,title:"增删改操作",slug:"增删改操作",link:"#增删改操作",children:[{level:3,title:"插入记录（一）",slug:"插入记录-一",link:"#插入记录-一",children:[]},{level:3,title:"插入记录（二）",slug:"插入记录-二",link:"#插入记录-二",children:[]},{level:3,title:"插入记录（三）",slug:"插入记录-三",link:"#插入记录-三",children:[]},{level:3,title:"更新记录（一）",slug:"更新记录-一",link:"#更新记录-一",children:[]},{level:3,title:"更新记录（二）",slug:"更新记录-二",link:"#更新记录-二",children:[]},{level:3,title:"删除记录（一）",slug:"删除记录-一",link:"#删除记录-一",children:[]},{level:3,title:"删除记录（二）",slug:"删除记录-二",link:"#删除记录-二",children:[]},{level:3,title:"删除记录（三）",slug:"删除记录-三",link:"#删除记录-三",children:[]}]},{level:2,title:"表与索引操作",slug:"表与索引操作",link:"#表与索引操作",children:[{level:3,title:"创建一张新表",slug:"创建一张新表",link:"#创建一张新表",children:[]},{level:3,title:"修改表",slug:"修改表",link:"#修改表",children:[]},{level:3,title:"删除表",slug:"删除表",link:"#删除表",children:[]},{level:3,title:"创建索引",slug:"创建索引",link:"#创建索引",children:[]},{level:3,title:"删除索引",slug:"删除索引",link:"#删除索引",children:[]}]}],path:"/database/sql/sql-questions-02.html",pathLocale:"/",extraFields:[]},{title:"SQL常见面试题总结（3）",headers:[{level:2,title:"聚合函数",slug:"聚合函数",link:"#聚合函数",children:[{level:3,title:"SQL 类别高难度试卷得分的截断平均值（较难）",slug:"sql-类别高难度试卷得分的截断平均值-较难",link:"#sql-类别高难度试卷得分的截断平均值-较难",children:[]},{level:3,title:"统计作答次数",slug:"统计作答次数",link:"#统计作答次数",children:[]},{level:3,title:"得分不小于平均分的最低分",slug:"得分不小于平均分的最低分",link:"#得分不小于平均分的最低分",children:[]}]},{level:2,title:"分组查询",slug:"分组查询",link:"#分组查询",children:[{level:3,title:"平均活跃天数和月活人数",slug:"平均活跃天数和月活人数",link:"#平均活跃天数和月活人数",children:[]},{level:3,title:"月总刷题数和日均刷题数",slug:"月总刷题数和日均刷题数",link:"#月总刷题数和日均刷题数",children:[]},{level:3,title:"未完成试卷数大于 1 的有效用户（较难）",slug:"未完成试卷数大于-1-的有效用户-较难",link:"#未完成试卷数大于-1-的有效用户-较难",children:[]}]},{level:2,title:"嵌套子查询",slug:"嵌套子查询",link:"#嵌套子查询",children:[{level:3,title:"月均完成试卷数不小于 3 的用户爱作答的类别（较难）",slug:"月均完成试卷数不小于-3-的用户爱作答的类别-较难",link:"#月均完成试卷数不小于-3-的用户爱作答的类别-较难",children:[]},{level:3,title:"试卷发布当天作答人数和平均分",slug:"试卷发布当天作答人数和平均分",link:"#试卷发布当天作答人数和平均分",children:[]},{level:3,title:"作答试卷得分大于过 80 的人的用户等级分布",slug:"作答试卷得分大于过-80-的人的用户等级分布",link:"#作答试卷得分大于过-80-的人的用户等级分布",children:[]}]},{level:2,title:"合并查询",slug:"合并查询",link:"#合并查询",children:[{level:3,title:"每个题目和每份试卷被作答的人数和次数",slug:"每个题目和每份试卷被作答的人数和次数",link:"#每个题目和每份试卷被作答的人数和次数",children:[]},{level:3,title:"分别满足两个活动的人",slug:"分别满足两个活动的人",link:"#分别满足两个活动的人",children:[]}]},{level:2,title:"连接查询",slug:"连接查询",link:"#连接查询",children:[{level:3,title:"满足条件的用户的试卷完成数和题目练习数（困难）",slug:"满足条件的用户的试卷完成数和题目练习数-困难",link:"#满足条件的用户的试卷完成数和题目练习数-困难",children:[]},{level:3,title:"每个 6/7 级用户活跃情况（困难）",slug:"每个-6-7-级用户活跃情况-困难",link:"#每个-6-7-级用户活跃情况-困难",children:[]}]}],path:"/database/sql/sql-questions-03.html",pathLocale:"/",extraFields:[]},{title:"SQL常见面试题总结（4）",headers:[{level:2,title:"专用窗口函数",slug:"专用窗口函数",link:"#专用窗口函数",children:[{level:3,title:"每类试卷得分前三名",slug:"每类试卷得分前三名",link:"#每类试卷得分前三名",children:[]},{level:3,title:"第二快/慢用时之差大于试卷时长一半的试卷（较难）",slug:"第二快-慢用时之差大于试卷时长一半的试卷-较难",link:"#第二快-慢用时之差大于试卷时长一半的试卷-较难",children:[]},{level:3,title:"连续两次作答试卷的最大时间窗（较难）",slug:"连续两次作答试卷的最大时间窗-较难",link:"#连续两次作答试卷的最大时间窗-较难",children:[]},{level:3,title:"近三个月未完成为 0 的用户完成情况",slug:"近三个月未完成为-0-的用户完成情况",link:"#近三个月未完成为-0-的用户完成情况",children:[]},{level:3,title:"未完成率较高的 50%用户近三个月答卷情况（困难）",slug:"未完成率较高的-50-用户近三个月答卷情况-困难",link:"#未完成率较高的-50-用户近三个月答卷情况-困难",children:[]},{level:3,title:"试卷完成数同比 2020 年的增长率及排名变化（困难）",slug:"试卷完成数同比-2020-年的增长率及排名变化-困难",link:"#试卷完成数同比-2020-年的增长率及排名变化-困难",children:[]}]},{level:2,title:"聚合窗口函数",slug:"聚合窗口函数",link:"#聚合窗口函数",children:[{level:3,title:"对试卷得分做 min-max 归一化",slug:"对试卷得分做-min-max-归一化",link:"#对试卷得分做-min-max-归一化",children:[]},{level:3,title:"每份试卷每月作答数和截止当月的作答总数",slug:"每份试卷每月作答数和截止当月的作答总数",link:"#每份试卷每月作答数和截止当月的作答总数",children:[]},{level:3,title:"每月及截止当月的答题情况（较难）",slug:"每月及截止当月的答题情况-较难",link:"#每月及截止当月的答题情况-较难",children:[]}]}],path:"/database/sql/sql-questions-04.html",pathLocale:"/",extraFields:[]},{title:"SQL常见面试题总结（5）",headers:[{level:2,title:"空值处理",slug:"空值处理",link:"#空值处理",children:[{level:3,title:"统计有未完成状态的试卷的未完成数和未完成率",slug:"统计有未完成状态的试卷的未完成数和未完成率",link:"#统计有未完成状态的试卷的未完成数和未完成率",children:[]},{level:3,title:"0 级用户高难度试卷的平均用时和平均得分",slug:"_0-级用户高难度试卷的平均用时和平均得分",link:"#_0-级用户高难度试卷的平均用时和平均得分",children:[]}]},{level:2,title:"高级条件语句",slug:"高级条件语句",link:"#高级条件语句",children:[{level:3,title:"筛选限定昵称成就值活跃日期的用户（较难）",slug:"筛选限定昵称成就值活跃日期的用户-较难",link:"#筛选限定昵称成就值活跃日期的用户-较难",children:[]},{level:3,title:"筛选昵称规则和试卷规则的作答记录（较难）",slug:"筛选昵称规则和试卷规则的作答记录-较难",link:"#筛选昵称规则和试卷规则的作答记录-较难",children:[]},{level:3,title:"根据指定记录是否存在输出不同情况（困难）",slug:"根据指定记录是否存在输出不同情况-困难",link:"#根据指定记录是否存在输出不同情况-困难",children:[]},{level:3,title:"各用户等级的不同得分表现占比（较难）",slug:"各用户等级的不同得分表现占比-较难",link:"#各用户等级的不同得分表现占比-较难",children:[]}]},{level:2,title:"限量查询",slug:"限量查询",link:"#限量查询",children:[{level:3,title:"注册时间最早的三个人",slug:"注册时间最早的三个人",link:"#注册时间最早的三个人",children:[]},{level:3,title:"注册当天就完成了试卷的名单第三页（较难）",slug:"注册当天就完成了试卷的名单第三页-较难",link:"#注册当天就完成了试卷的名单第三页-较难",children:[]}]},{level:2,title:"文本转换函数",slug:"文本转换函数",link:"#文本转换函数",children:[{level:3,title:"修复串列了的记录",slug:"修复串列了的记录",link:"#修复串列了的记录",children:[]},{level:3,title:"对过长的昵称截取处理",slug:"对过长的昵称截取处理",link:"#对过长的昵称截取处理",children:[]},{level:3,title:"大小写混乱时的筛选统计（较难）",slug:"大小写混乱时的筛选统计-较难",link:"#大小写混乱时的筛选统计-较难",children:[]}]}],path:"/database/sql/sql-questions-05.html",pathLocale:"/",extraFields:[]},{title:"SQL语法基础知识总结",headers:[{level:2,title:"基本概念",slug:"基本概念",link:"#基本概念",children:[{level:3,title:"数据库术语",slug:"数据库术语",link:"#数据库术语",children:[]},{level:3,title:"SQL 语法",slug:"sql-语法",link:"#sql-语法",children:[]},{level:3,title:"SQL 分类",slug:"sql-分类",link:"#sql-分类",children:[]}]},{level:2,title:"增删改查",slug:"增删改查",link:"#增删改查",children:[{level:3,title:"插入数据",slug:"插入数据",link:"#插入数据",children:[]},{level:3,title:"更新数据",slug:"更新数据",link:"#更新数据",children:[]},{level:3,title:"删除数据",slug:"删除数据",link:"#删除数据",children:[]},{level:3,title:"查询数据",slug:"查询数据",link:"#查询数据",children:[]}]},{level:2,title:"排序",slug:"排序",link:"#排序",children:[]},{level:2,title:"分组",slug:"分组",link:"#分组",children:[]},{level:2,title:"子查询",slug:"子查询",link:"#子查询",children:[{level:3,title:"WHERE",slug:"where",link:"#where",children:[]},{level:3,title:"IN 和 BETWEEN",slug:"in-和-between",link:"#in-和-between",children:[]},{level:3,title:"AND、OR、NOT",slug:"and、or、not",link:"#and、or、not",children:[]},{level:3,title:"LIKE",slug:"like",link:"#like",children:[]}]},{level:2,title:"连接",slug:"连接",link:"#连接",children:[]},{level:2,title:"组合",slug:"组合",link:"#组合",children:[]},{level:2,title:"函数",slug:"函数",link:"#函数",children:[{level:3,title:"文本处理",slug:"文本处理",link:"#文本处理",children:[]},{level:3,title:"日期和时间处理",slug:"日期和时间处理",link:"#日期和时间处理",children:[]},{level:3,title:"数值处理",slug:"数值处理",link:"#数值处理",children:[]},{level:3,title:"汇总",slug:"汇总",link:"#汇总",children:[]}]},{level:2,title:"数据定义",slug:"数据定义",link:"#数据定义",children:[{level:3,title:"数据库（DATABASE）",slug:"数据库-database",link:"#数据库-database",children:[]},{level:3,title:"数据表（TABLE）",slug:"数据表-table",link:"#数据表-table",children:[]},{level:3,title:"视图（VIEW）",slug:"视图-view",link:"#视图-view",children:[]},{level:3,title:"索引（INDEX）",slug:"索引-index",link:"#索引-index",children:[]},{level:3,title:"约束",slug:"约束",link:"#约束",children:[]}]},{level:2,title:"事务处理",slug:"事务处理",link:"#事务处理",children:[]},{level:2,title:"权限控制",slug:"权限控制",link:"#权限控制",children:[{level:3,title:"创建账户",slug:"创建账户",link:"#创建账户",children:[]},{level:3,title:"修改账户名",slug:"修改账户名",link:"#修改账户名",children:[]},{level:3,title:"删除账户",slug:"删除账户",link:"#删除账户",children:[]},{level:3,title:"查看权限",slug:"查看权限",link:"#查看权限",children:[]},{level:3,title:"授予权限",slug:"授予权限",link:"#授予权限",children:[]},{level:3,title:"删除权限",slug:"删除权限",link:"#删除权限",children:[]},{level:3,title:"更改密码",slug:"更改密码",link:"#更改密码",children:[]}]},{level:2,title:"存储过程",slug:"存储过程",link:"#存储过程",children:[{level:3,title:"创建存储过程",slug:"创建存储过程",link:"#创建存储过程",children:[]},{level:3,title:"使用存储过程",slug:"使用存储过程",link:"#使用存储过程",children:[]}]},{level:2,title:"游标",slug:"游标",link:"#游标",children:[]},{level:2,title:"触发器",slug:"触发器",link:"#触发器",children:[{level:3,title:"创建触发器",slug:"创建触发器",link:"#创建触发器",children:[]},{level:3,title:"查看触发器",slug:"查看触发器",link:"#查看触发器",children:[]},{level:3,title:"删除触发器",slug:"删除触发器",link:"#删除触发器",children:[]}]},{level:2,title:"文章推荐",slug:"文章推荐",link:"#文章推荐",children:[]}],path:"/database/sql/sql-syntax-summary.html",pathLocale:"/",extraFields:[]},{title:"CAP & BASE理论详解",headers:[{level:2,title:"CAP 理论",slug:"cap-理论",link:"#cap-理论",children:[{level:3,title:"简介",slug:"简介",link:"#简介",children:[]},{level:3,title:"不是所谓的“3 选 2”",slug:"不是所谓的-3-选-2",link:"#不是所谓的-3-选-2",children:[]},{level:3,title:"CAP 实际应用案例",slug:"cap-实际应用案例",link:"#cap-实际应用案例",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]},{level:3,title:"推荐阅读",slug:"推荐阅读",link:"#推荐阅读",children:[]}]},{level:2,title:"BASE 理论",slug:"base-理论",link:"#base-理论",children:[{level:3,title:"简介",slug:"简介-1",link:"#简介-1",children:[]},{level:3,title:"BASE 理论的核心思想",slug:"base-理论的核心思想",link:"#base-理论的核心思想",children:[]},{level:3,title:"BASE 理论三要素",slug:"base-理论三要素",link:"#base-理论三要素",children:[]},{level:3,title:"总结",slug:"总结-1",link:"#总结-1",children:[]}]}],path:"/distributed-system/protocol/cap-and-base-theorem.html",pathLocale:"/",extraFields:[]},{title:"Gossip 协议详解",headers:[{level:2,title:"背景",slug:"背景",link:"#背景",children:[]},{level:2,title:"Gossip 协议介绍",slug:"gossip-协议介绍",link:"#gossip-协议介绍",children:[]},{level:2,title:"Gossip 协议应用",slug:"gossip-协议应用",link:"#gossip-协议应用",children:[]},{level:2,title:"Gossip 协议消息传播模式",slug:"gossip-协议消息传播模式",link:"#gossip-协议消息传播模式",children:[{level:3,title:"反熵(Anti-entropy)",slug:"反熵-anti-entropy",link:"#反熵-anti-entropy",children:[]},{level:3,title:"谣言传播(Rumor mongering)",slug:"谣言传播-rumor-mongering",link:"#谣言传播-rumor-mongering",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]},{level:2,title:"Gossip 协议优势和缺陷",slug:"gossip-协议优势和缺陷",link:"#gossip-协议优势和缺陷",children:[]},{level:2,title:"总结",slug:"总结-1",link:"#总结-1",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/distributed-system/protocol/gossip-protocl.html",pathLocale:"/",extraFields:[]},{title:"Paxos 算法详解",headers:[{level:2,title:"背景",slug:"背景",link:"#背景",children:[]},{level:2,title:"介绍",slug:"介绍",link:"#介绍",children:[]},{level:2,title:"Basic Paxos 算法",slug:"basic-paxos-算法",link:"#basic-paxos-算法",children:[]},{level:2,title:"Multi Paxos 思想",slug:"multi-paxos-思想",link:"#multi-paxos-思想",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/distributed-system/protocol/paxos-algorithm.html",pathLocale:"/",extraFields:[]},{title:"Raft 算法详解",headers:[{level:2,title:"1 背景",slug:"_1-背景",link:"#_1-背景",children:[{level:3,title:"1.1 拜占庭将军",slug:"_1-1-拜占庭将军",link:"#_1-1-拜占庭将军",children:[]},{level:3,title:"1.2 共识算法",slug:"_1-2-共识算法",link:"#_1-2-共识算法",children:[]}]},{level:2,title:"2 基础",slug:"_2-基础",link:"#_2-基础",children:[{level:3,title:"2.1 节点类型",slug:"_2-1-节点类型",link:"#_2-1-节点类型",children:[]},{level:3,title:"2.2 任期",slug:"_2-2-任期",link:"#_2-2-任期",children:[]},{level:3,title:"2.3 日志",slug:"_2-3-日志",link:"#_2-3-日志",children:[]}]},{level:2,title:"3 领导人选举",slug:"_3-领导人选举",link:"#_3-领导人选举",children:[]},{level:2,title:"4 日志复制",slug:"_4-日志复制",link:"#_4-日志复制",children:[]},{level:2,title:"5 安全性",slug:"_5-安全性",link:"#_5-安全性",children:[{level:3,title:"5.1 选举限制",slug:"_5-1-选举限制",link:"#_5-1-选举限制",children:[]},{level:3,title:"5.2 节点崩溃",slug:"_5-2-节点崩溃",link:"#_5-2-节点崩溃",children:[]},{level:3,title:"5.3 时间与可用性",slug:"_5-3-时间与可用性",link:"#_5-3-时间与可用性",children:[]}]},{level:2,title:"6 参考",slug:"_6-参考",link:"#_6-参考",children:[]}],path:"/distributed-system/protocol/raft-algorithm.html",pathLocale:"/",extraFields:[]},{title:"Dubbo常见问题总结",headers:[{level:2,title:"Dubbo 基础",slug:"dubbo-基础",link:"#dubbo-基础",children:[{level:3,title:"什么是 Dubbo?",slug:"什么是-dubbo",link:"#什么是-dubbo",children:[]},{level:3,title:"为什么要用 Dubbo?",slug:"为什么要用-dubbo",link:"#为什么要用-dubbo",children:[]}]},{level:2,title:"分布式基础",slug:"分布式基础",link:"#分布式基础",children:[{level:3,title:"什么是分布式?",slug:"什么是分布式",link:"#什么是分布式",children:[]},{level:3,title:"为什么要分布式?",slug:"为什么要分布式",link:"#为什么要分布式",children:[]}]},{level:2,title:"Dubbo 架构",slug:"dubbo-架构",link:"#dubbo-架构",children:[{level:3,title:"Dubbo 架构中的核心角色有哪些？",slug:"dubbo-架构中的核心角色有哪些",link:"#dubbo-架构中的核心角色有哪些",children:[]},{level:3,title:"Dubbo 中的 Invoker 概念了解么？",slug:"dubbo-中的-invoker-概念了解么",link:"#dubbo-中的-invoker-概念了解么",children:[]},{level:3,title:"Dubbo 的工作原理了解么？",slug:"dubbo-的工作原理了解么",link:"#dubbo-的工作原理了解么",children:[]},{level:3,title:"Dubbo 的 SPI 机制了解么？ 如何扩展 Dubbo 中的默认实现？",slug:"dubbo-的-spi-机制了解么-如何扩展-dubbo-中的默认实现",link:"#dubbo-的-spi-机制了解么-如何扩展-dubbo-中的默认实现",children:[]},{level:3,title:"Dubbo 的微内核架构了解吗？",slug:"dubbo-的微内核架构了解吗",link:"#dubbo-的微内核架构了解吗",children:[]},{level:3,title:"关于 Dubbo 架构的一些自测小问题",slug:"关于-dubbo-架构的一些自测小问题",link:"#关于-dubbo-架构的一些自测小问题",children:[]}]},{level:2,title:"Dubbo 的负载均衡策略",slug:"dubbo-的负载均衡策略",link:"#dubbo-的负载均衡策略",children:[{level:3,title:"什么是负载均衡？",slug:"什么是负载均衡",link:"#什么是负载均衡",children:[]},{level:3,title:"Dubbo 提供的负载均衡策略有哪些？",slug:"dubbo-提供的负载均衡策略有哪些",link:"#dubbo-提供的负载均衡策略有哪些",children:[]}]},{level:2,title:"Dubbo 序列化协议",slug:"dubbo-序列化协议",link:"#dubbo-序列化协议",children:[{level:3,title:"Dubbo 支持哪些序列化方式呢？",slug:"dubbo-支持哪些序列化方式呢",link:"#dubbo-支持哪些序列化方式呢",children:[]},{level:3,title:"谈谈你对这些序列化协议了解？",slug:"谈谈你对这些序列化协议了解",link:"#谈谈你对这些序列化协议了解",children:[]}]}],path:"/distributed-system/rpc/dubbo.html",pathLocale:"/",extraFields:[]},{title:"有了 HTTP 协议，为什么还要有 RPC ？",headers:[{level:2,title:"从 TCP 聊起",slug:"从-tcp-聊起",link:"#从-tcp-聊起",children:[]},{level:2,title:"使用纯裸 TCP 会有什么问题",slug:"使用纯裸-tcp-会有什么问题",link:"#使用纯裸-tcp-会有什么问题",children:[]},{level:2,title:"HTTP 和 RPC",slug:"http-和-rpc",link:"#http-和-rpc",children:[{level:3,title:"RPC 其实是一种调用方式",slug:"rpc-其实是一种调用方式",link:"#rpc-其实是一种调用方式",children:[]},{level:3,title:"那既然有 RPC 了，为什么还要有 HTTP 呢？",slug:"那既然有-rpc-了-为什么还要有-http-呢",link:"#那既然有-rpc-了-为什么还要有-http-呢",children:[]},{level:3,title:"HTTP 和 RPC 有什么区别",slug:"http-和-rpc-有什么区别",link:"#http-和-rpc-有什么区别",children:[]},{level:3,title:"为什么既然有了 HTTP2，还要有 RPC 协议？",slug:"为什么既然有了-http2-还要有-rpc-协议",link:"#为什么既然有了-http2-还要有-rpc-协议",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/distributed-system/rpc/http_rpc.html",pathLocale:"/",extraFields:[]},{title:"RPC基础知识总结",headers:[{level:2,title:"RPC 是什么?",slug:"rpc-是什么",link:"#rpc-是什么",children:[]},{level:2,title:"RPC 的原理是什么?",slug:"rpc-的原理是什么",link:"#rpc-的原理是什么",children:[]},{level:2,title:"有哪些常见的 RPC 框架？",slug:"有哪些常见的-rpc-框架",link:"#有哪些常见的-rpc-框架",children:[{level:3,title:"Dubbo",slug:"dubbo",link:"#dubbo",children:[]},{level:3,title:"Motan",slug:"motan",link:"#motan",children:[]},{level:3,title:"gRPC",slug:"grpc",link:"#grpc",children:[]},{level:3,title:"Thrift",slug:"thrift",link:"#thrift",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]},{level:2,title:"如何设计并实现一个 RPC 框架？",slug:"如何设计并实现一个-rpc-框架",link:"#如何设计并实现一个-rpc-框架",children:[]},{level:2,title:"既然有了 HTTP 协议，为什么还要有 RPC ？",slug:"既然有了-http-协议-为什么还要有-rpc",link:"#既然有了-http-协议-为什么还要有-rpc",children:[]}],path:"/distributed-system/rpc/rpc-intro.html",pathLocale:"/",extraFields:[]},{title:"Disruptor常见问题总结",headers:[{level:2,title:"Disruptor 是什么？",slug:"disruptor-是什么",link:"#disruptor-是什么",children:[]},{level:2,title:"为什么要用 Disruptor？",slug:"为什么要用-disruptor",link:"#为什么要用-disruptor",children:[]},{level:2,title:"Kafka 和 Disruptor 什么区别？",slug:"kafka-和-disruptor-什么区别",link:"#kafka-和-disruptor-什么区别",children:[]},{level:2,title:"哪些组件用到了 Disruptor？",slug:"哪些组件用到了-disruptor",link:"#哪些组件用到了-disruptor",children:[]},{level:2,title:"Disruptor 核心概念有哪些？",slug:"disruptor-核心概念有哪些",link:"#disruptor-核心概念有哪些",children:[]},{level:2,title:"Disruptor 等待策略有哪些？",slug:"disruptor-等待策略有哪些",link:"#disruptor-等待策略有哪些",children:[]},{level:2,title:"Disruptor 为什么这么快？",slug:"disruptor-为什么这么快",link:"#disruptor-为什么这么快",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/message-queue/disruptor-questions.html",pathLocale:"/",extraFields:[]},{title:"Kafka常见问题总结",headers:[{level:2,title:"Kafka 基础",slug:"kafka-基础",link:"#kafka-基础",children:[{level:3,title:"Kafka 是什么？主要应用场景有哪些？",slug:"kafka-是什么-主要应用场景有哪些",link:"#kafka-是什么-主要应用场景有哪些",children:[]},{level:3,title:"和其他消息队列相比,Kafka 的优势在哪里？",slug:"和其他消息队列相比-kafka-的优势在哪里",link:"#和其他消息队列相比-kafka-的优势在哪里",children:[]},{level:3,title:"队列模型了解吗？Kafka 的消息模型知道吗？",slug:"队列模型了解吗-kafka-的消息模型知道吗",link:"#队列模型了解吗-kafka-的消息模型知道吗",children:[]}]},{level:2,title:"Kafka 核心概念",slug:"kafka-核心概念",link:"#kafka-核心概念",children:[{level:3,title:"什么是 Producer、Consumer、Broker、Topic、Partition？",slug:"什么是-producer、consumer、broker、topic、partition",link:"#什么是-producer、consumer、broker、topic、partition",children:[]},{level:3,title:"Kafka 的多副本机制了解吗？带来了什么好处？",slug:"kafka-的多副本机制了解吗-带来了什么好处",link:"#kafka-的多副本机制了解吗-带来了什么好处",children:[]}]},{level:2,title:"Zookeeper 和 Kafka",slug:"zookeeper-和-kafka",link:"#zookeeper-和-kafka",children:[{level:3,title:"Zookeeper 在 Kafka 中的作用是什么？",slug:"zookeeper-在-kafka-中的作用是什么",link:"#zookeeper-在-kafka-中的作用是什么",children:[]},{level:3,title:"使用 Kafka 能否不引入 Zookeeper?",slug:"使用-kafka-能否不引入-zookeeper",link:"#使用-kafka-能否不引入-zookeeper",children:[]}]},{level:2,title:"Kafka 消费顺序、消息丢失和重复消费",slug:"kafka-消费顺序、消息丢失和重复消费",link:"#kafka-消费顺序、消息丢失和重复消费",children:[{level:3,title:"Kafka 如何保证消息的消费顺序？",slug:"kafka-如何保证消息的消费顺序",link:"#kafka-如何保证消息的消费顺序",children:[]},{level:3,title:"Kafka 如何保证消息不丢失？",slug:"kafka-如何保证消息不丢失",link:"#kafka-如何保证消息不丢失",children:[]},{level:3,title:"Kafka 如何保证消息不重复消费？",slug:"kafka-如何保证消息不重复消费",link:"#kafka-如何保证消息不重复消费",children:[]}]},{level:2,title:"Kafka 重试机制",slug:"kafka-重试机制",link:"#kafka-重试机制",children:[{level:3,title:"消费失败会怎么样？",slug:"消费失败会怎么样",link:"#消费失败会怎么样",children:[]},{level:3,title:"默认会重试多少次？",slug:"默认会重试多少次",link:"#默认会重试多少次",children:[]},{level:3,title:"如何自定义重试次数以及时间间隔?",slug:"如何自定义重试次数以及时间间隔",link:"#如何自定义重试次数以及时间间隔",children:[]},{level:3,title:"如何在重试失败后进行告警?",slug:"如何在重试失败后进行告警",link:"#如何在重试失败后进行告警",children:[]},{level:3,title:"重试失败后的数据如何再次处理?",slug:"重试失败后的数据如何再次处理",link:"#重试失败后的数据如何再次处理",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/message-queue/kafka-questions-01.html",pathLocale:"/",extraFields:[]},{title:"消息队列基础知识总结",headers:[{level:2,title:"什么是消息队列？",slug:"什么是消息队列",link:"#什么是消息队列",children:[]},{level:2,title:"消息队列有什么用？",slug:"消息队列有什么用",link:"#消息队列有什么用",children:[{level:3,title:"通过异步处理提高系统性能（减少响应所需时间）",slug:"通过异步处理提高系统性能-减少响应所需时间",link:"#通过异步处理提高系统性能-减少响应所需时间",children:[]},{level:3,title:"削峰/限流",slug:"削峰-限流",link:"#削峰-限流",children:[]},{level:3,title:"降低系统耦合性",slug:"降低系统耦合性",link:"#降低系统耦合性",children:[]},{level:3,title:"实现分布式事务",slug:"实现分布式事务",link:"#实现分布式事务",children:[]}]},{level:2,title:"使用消息队列会带来哪些问题？",slug:"使用消息队列会带来哪些问题",link:"#使用消息队列会带来哪些问题",children:[]},{level:2,title:"JMS 和 AMQP",slug:"jms-和-amqp",link:"#jms-和-amqp",children:[{level:3,title:"JMS 是什么？",slug:"jms-是什么",link:"#jms-是什么",children:[]},{level:3,title:"JMS 两种消息模型",slug:"jms-两种消息模型",link:"#jms-两种消息模型",children:[]},{level:3,title:"AMQP 是什么？",slug:"amqp-是什么",link:"#amqp-是什么",children:[]},{level:3,title:"JMS vs AMQP",slug:"jms-vs-amqp",link:"#jms-vs-amqp",children:[]}]},{level:2,title:"RPC 和消息队列的区别",slug:"rpc-和消息队列的区别",link:"#rpc-和消息队列的区别",children:[]},{level:2,title:"分布式消息队列技术选型",slug:"分布式消息队列技术选型",link:"#分布式消息队列技术选型",children:[{level:3,title:"常见的消息队列有哪些？",slug:"常见的消息队列有哪些",link:"#常见的消息队列有哪些",children:[]},{level:3,title:"如何选择？",slug:"如何选择",link:"#如何选择",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/high-performance/message-queue/message-queue.html",pathLocale:"/",extraFields:[]},{title:"RabbitMQ常见问题总结",headers:[{level:2,title:"RabbitMQ 是什么？",slug:"rabbitmq-是什么",link:"#rabbitmq-是什么",children:[]},{level:2,title:"RabbitMQ 特点?",slug:"rabbitmq-特点",link:"#rabbitmq-特点",children:[]},{level:2,title:"RabbitMQ 核心概念？",slug:"rabbitmq-核心概念",link:"#rabbitmq-核心概念",children:[{level:3,title:"Producer(生产者) 和 Consumer(消费者)",slug:"producer-生产者-和-consumer-消费者",link:"#producer-生产者-和-consumer-消费者",children:[]},{level:3,title:"Exchange(交换器)",slug:"exchange-交换器",link:"#exchange-交换器",children:[]},{level:3,title:"Queue(消息队列)",slug:"queue-消息队列",link:"#queue-消息队列",children:[]},{level:3,title:"Broker（消息中间件的服务节点）",slug:"broker-消息中间件的服务节点",link:"#broker-消息中间件的服务节点",children:[]},{level:3,title:"Exchange Types(交换器类型)",slug:"exchange-types-交换器类型",link:"#exchange-types-交换器类型",children:[]}]},{level:2,title:"AMQP 是什么?",slug:"amqp-是什么",link:"#amqp-是什么",children:[]},{level:2,title:"说说生产者 Producer 和消费者 Consumer?",slug:"说说生产者-producer-和消费者-consumer",link:"#说说生产者-producer-和消费者-consumer",children:[]},{level:2,title:"说说 Broker 服务节点、Queue 队列、Exchange 交换器？",slug:"说说-broker-服务节点、queue-队列、exchange-交换器",link:"#说说-broker-服务节点、queue-队列、exchange-交换器",children:[]},{level:2,title:"什么是死信队列？如何导致的？",slug:"什么是死信队列-如何导致的",link:"#什么是死信队列-如何导致的",children:[]},{level:2,title:"什么是延迟队列？RabbitMQ 怎么实现延迟队列？",slug:"什么是延迟队列-rabbitmq-怎么实现延迟队列",link:"#什么是延迟队列-rabbitmq-怎么实现延迟队列",children:[]},{level:2,title:"什么是优先级队列？",slug:"什么是优先级队列",link:"#什么是优先级队列",children:[]},{level:2,title:"RabbitMQ 有哪些工作模式？",slug:"rabbitmq-有哪些工作模式",link:"#rabbitmq-有哪些工作模式",children:[]},{level:2,title:"RabbitMQ 消息怎么传输？",slug:"rabbitmq-消息怎么传输",link:"#rabbitmq-消息怎么传输",children:[]},{level:2,title:"如何保证消息的可靠性？",slug:"如何保证消息的可靠性",link:"#如何保证消息的可靠性",children:[]},{level:2,title:"如何保证 RabbitMQ 消息的顺序性？",slug:"如何保证-rabbitmq-消息的顺序性",link:"#如何保证-rabbitmq-消息的顺序性",children:[]},{level:2,title:"如何保证 RabbitMQ 高可用的？",slug:"如何保证-rabbitmq-高可用的",link:"#如何保证-rabbitmq-高可用的",children:[]},{level:2,title:"如何解决消息队列的延时以及过期失效问题？",slug:"如何解决消息队列的延时以及过期失效问题",link:"#如何解决消息队列的延时以及过期失效问题",children:[]}],path:"/high-performance/message-queue/rabbitmq-questions.html",pathLocale:"/",extraFields:[]},{title:"RocketMQ常见问题总结",headers:[{level:2,title:"消息队列扫盲",slug:"消息队列扫盲",link:"#消息队列扫盲",children:[{level:3,title:"消息队列为什么会出现？",slug:"消息队列为什么会出现",link:"#消息队列为什么会出现",children:[]},{level:3,title:"消息队列能用来干什么？",slug:"消息队列能用来干什么",link:"#消息队列能用来干什么",children:[]}]},{level:2,title:"RocketMQ 是什么？",slug:"rocketmq-是什么",link:"#rocketmq-是什么",children:[]},{level:2,title:"队列模型和主题模型是什么？",slug:"队列模型和主题模型是什么",link:"#队列模型和主题模型是什么",children:[{level:3,title:"队列模型",slug:"队列模型",link:"#队列模型",children:[]},{level:3,title:"主题模型",slug:"主题模型",link:"#主题模型",children:[]},{level:3,title:"RocketMQ 中的消息模型",slug:"rocketmq-中的消息模型",link:"#rocketmq-中的消息模型",children:[]}]},{level:2,title:"RocketMQ 的架构图",slug:"rocketmq-的架构图",link:"#rocketmq-的架构图",children:[]},{level:2,title:"RocketMQ 功能特性",slug:"rocketmq-功能特性",link:"#rocketmq-功能特性",children:[{level:3,title:"消息",slug:"消息",link:"#消息",children:[]}]},{level:2,title:"关于发送消息",slug:"关于发送消息",link:"#关于发送消息",children:[{level:3,title:"不建议单一进程创建大量生产者",slug:"不建议单一进程创建大量生产者",link:"#不建议单一进程创建大量生产者",children:[]},{level:3,title:"不建议频繁创建和销毁生产者",slug:"不建议频繁创建和销毁生产者",link:"#不建议频繁创建和销毁生产者",children:[]}]},{level:2,title:"消费者分类",slug:"消费者分类",link:"#消费者分类",children:[{level:3,title:"PushConsumer",slug:"pushconsumer",link:"#pushconsumer",children:[]},{level:3,title:"SimpleConsumer",slug:"simpleconsumer",link:"#simpleconsumer",children:[]},{level:3,title:"PullConsumer",slug:"pullconsumer",link:"#pullconsumer",children:[]}]},{level:2,title:"消费者分组和生产者分组",slug:"消费者分组和生产者分组",link:"#消费者分组和生产者分组",children:[{level:3,title:"生产者分组",slug:"生产者分组",link:"#生产者分组",children:[]},{level:3,title:"消费者分组",slug:"消费者分组",link:"#消费者分组",children:[]}]},{level:2,title:"如何解决顺序消费和重复消费？",slug:"如何解决顺序消费和重复消费",link:"#如何解决顺序消费和重复消费",children:[{level:3,title:"顺序消费",slug:"顺序消费",link:"#顺序消费",children:[]},{level:3,title:"特殊情况处理",slug:"特殊情况处理",link:"#特殊情况处理",children:[]},{level:3,title:"重复消费",slug:"重复消费",link:"#重复消费",children:[]}]},{level:2,title:"RocketMQ 如何实现分布式事务？",slug:"rocketmq-如何实现分布式事务",link:"#rocketmq-如何实现分布式事务",children:[]},{level:2,title:"如何解决消息堆积问题？",slug:"如何解决消息堆积问题",link:"#如何解决消息堆积问题",children:[]},{level:2,title:"什么是回溯消费？",slug:"什么是回溯消费",link:"#什么是回溯消费",children:[]},{level:2,title:"RocketMQ 如何保证高性能读写",slug:"rocketmq-如何保证高性能读写",link:"#rocketmq-如何保证高性能读写",children:[{level:3,title:"传统 IO 方式",slug:"传统-io-方式",link:"#传统-io-方式",children:[]},{level:3,title:"零拷贝技术",slug:"零拷贝技术",link:"#零拷贝技术",children:[]}]},{level:2,title:"RocketMQ 的刷盘机制",slug:"rocketmq-的刷盘机制",link:"#rocketmq-的刷盘机制",children:[{level:3,title:"同步刷盘和异步刷盘",slug:"同步刷盘和异步刷盘",link:"#同步刷盘和异步刷盘",children:[]},{level:3,title:"同步复制和异步复制",slug:"同步复制和异步复制",link:"#同步复制和异步复制",children:[]},{level:3,title:"存储机制",slug:"存储机制",link:"#存储机制",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/high-performance/message-queue/rocketmq-questions.html",pathLocale:"/",extraFields:[]},{title:"糟糕程序员的 20 个坏习惯",headers:[{level:2,title:"1、技术名词拼写不规范",slug:"_1、技术名词拼写不规范",link:"#_1、技术名词拼写不规范",children:[]},{level:2,title:"2、写文档，中英文混排不规范",slug:"_2、写文档-中英文混排不规范",link:"#_2、写文档-中英文混排不规范",children:[]},{level:2,title:"3、重要逻辑不写注释，或写得很拖沓",slug:"_3、重要逻辑不写注释-或写得很拖沓",link:"#_3、重要逻辑不写注释-或写得很拖沓",children:[]},{level:2,title:"4、写复杂冗长的函数",slug:"_4、写复杂冗长的函数",link:"#_4、写复杂冗长的函数",children:[]},{level:2,title:"5、不看官方文档，只看垃圾博客",slug:"_5、不看官方文档-只看垃圾博客",link:"#_5、不看官方文档-只看垃圾博客",children:[]},{level:2,title:"6、宣扬内功无用论",slug:"_6、宣扬内功无用论",link:"#_6、宣扬内功无用论",children:[]},{level:2,title:"7、乐于炫技",slug:"_7、乐于炫技",link:"#_7、乐于炫技",children:[]},{level:2,title:"8、不接受质疑",slug:"_8、不接受质疑",link:"#_8、不接受质疑",children:[]},{level:2,title:"9、接口协议不规范",slug:"_9、接口协议不规范",link:"#_9、接口协议不规范",children:[]},{level:2,title:"10、遇到问题自己死磕",slug:"_10、遇到问题自己死磕",link:"#_10、遇到问题自己死磕",children:[]},{level:2,title:"11、一说就会，一写就废",slug:"_11、一说就会-一写就废",link:"#_11、一说就会-一写就废",children:[]},{level:2,title:"12、表达没有逻辑，不站在对方角度看问题",slug:"_12、表达没有逻辑-不站在对方角度看问题",link:"#_12、表达没有逻辑-不站在对方角度看问题",children:[]},{level:2,title:"13、不主动思考，伸手党",slug:"_13、不主动思考-伸手党",link:"#_13、不主动思考-伸手党",children:[]},{level:2,title:"14、经常犯重复的错误",slug:"_14、经常犯重复的错误",link:"#_14、经常犯重复的错误",children:[]},{level:2,title:"15、加功能不考虑扩展性",slug:"_15、加功能不考虑扩展性",link:"#_15、加功能不考虑扩展性",children:[]},{level:2,title:"16、接口不自测，出问题不打日志",slug:"_16、接口不自测-出问题不打日志",link:"#_16、接口不自测-出问题不打日志",children:[]},{level:2,title:"17、提交代码不规范",slug:"_17、提交代码不规范",link:"#_17、提交代码不规范",children:[]},{level:2,title:"18、手动修改生产环境数据库",slug:"_18、手动修改生产环境数据库",link:"#_18、手动修改生产环境数据库",children:[]},{level:2,title:"19、没理清需求就直接写代码",slug:"_19、没理清需求就直接写代码",link:"#_19、没理清需求就直接写代码",children:[]},{level:2,title:"20、重要设计不写文档",slug:"_20、重要设计不写文档",link:"#_20、重要设计不写文档",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/20-bad-habits-of-bad-programmers.html",pathLocale:"/",extraFields:[]},{title:"美团三年，总结的10条血泪教训",headers:[{level:2,title:"01 结构化思考与表达",slug:"_01-结构化思考与表达",link:"#_01-结构化思考与表达",children:[]},{level:2,title:"02 忘掉职级，该怼就怼",slug:"_02-忘掉职级-该怼就怼",link:"#_02-忘掉职级-该怼就怼",children:[]},{level:2,title:"03 用好平台资源",slug:"_03-用好平台资源",link:"#_03-用好平台资源",children:[]},{level:2,title:"04 一切都是争取来的",slug:"_04-一切都是争取来的",link:"#_04-一切都是争取来的",children:[]},{level:2,title:"05 关注商业",slug:"_05-关注商业",link:"#_05-关注商业",children:[]},{level:2,title:"06 培养数据思维",slug:"_06-培养数据思维",link:"#_06-培养数据思维",children:[]},{level:2,title:'07 做一个好"销售"',slug:"_07-做一个好-销售",link:"#_07-做一个好-销售",children:[]},{level:2,title:"08 少加班多运动",slug:"_08-少加班多运动",link:"#_08-少加班多运动",children:[]},{level:2,title:"09 有随时可以离开的底气",slug:"_09-有随时可以离开的底气",link:"#_09-有随时可以离开的底气",children:[]},{level:2,title:"10 只是一份工作",slug:"_10-只是一份工作",link:"#_10-只是一份工作",children:[]},{level:2,title:"最后",slug:"最后",link:"#最后",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/meituan-three-year-summary-lesson-10.html",pathLocale:"/",extraFields:[]},{title:"程序员如何快速学习新技术",headers:[],path:"/high-quality-technical-articles/advanced-programmer/programmer-quickly-learn-new-technology.html",pathLocale:"/",extraFields:[]},{title:"给想成长为高级别开发同学的七条建议",headers:[{level:3,title:"建议 1：刻意加强需求评审能力",slug:"建议-1-刻意加强需求评审能力",link:"#建议-1-刻意加强需求评审能力",children:[]},{level:3,title:"建议 2：主动思考效率",slug:"建议-2-主动思考效率",link:"#建议-2-主动思考效率",children:[]},{level:3,title:"建议 3：加强内功能力",slug:"建议-3-加强内功能力",link:"#建议-3-加强内功能力",children:[]},{level:3,title:"建议 4：思考性能",slug:"建议-4-思考性能",link:"#建议-4-思考性能",children:[]},{level:3,title:"建议 5：重视线上",slug:"建议-5-重视线上",link:"#建议-5-重视线上",children:[]},{level:3,title:"建议 6：关注全局",slug:"建议-6-关注全局",link:"#建议-6-关注全局",children:[]},{level:3,title:"建议 7：归纳总结能力",slug:"建议-7-归纳总结能力",link:"#建议-7-归纳总结能力",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/seven-tips-for-becoming-an-advanced-programmer.html",pathLocale:"/",extraFields:[]},{title:"十年大厂成长之路",headers:[{level:2,title:"01 十年技术路怎么走",slug:"_01-十年技术路怎么走",link:"#_01-十年技术路怎么走",children:[{level:3,title:"【1-2 年】=> 从“菜鸟”到“职业”",slug:"【1-2-年】-从-菜鸟-到-职业",link:"#【1-2-年】-从-菜鸟-到-职业",children:[]},{level:3,title:"【3-4 年】=> 从“职业”到“尖兵”",slug:"【3-4-年】-从-职业-到-尖兵",link:"#【3-4-年】-从-职业-到-尖兵",children:[]},{level:3,title:"【5-7 年】=> 从“尖兵”到“专家”",slug:"【5-7-年】-从-尖兵-到-专家",link:"#【5-7-年】-从-尖兵-到-专家",children:[]},{level:3,title:"【8-10 年】=> 从“专家”到“TL”",slug:"【8-10-年】-从-专家-到-tl",link:"#【8-10-年】-从-专家-到-tl",children:[]}]},{level:2,title:"02 一些重要选择",slug:"_02-一些重要选择",link:"#_02-一些重要选择",children:[{level:3,title:"我该不该转岗？",slug:"我该不该转岗",link:"#我该不该转岗",children:[]},{level:3,title:"我该不该跳槽？",slug:"我该不该跳槽",link:"#我该不该跳槽",children:[]},{level:3,title:"跳槽该找怎样的工作？",slug:"跳槽该找怎样的工作",link:"#跳槽该找怎样的工作",children:[]}]},{level:2,title:"结语",slug:"结语",link:"#结语",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/ten-years-of-dachang-growth-road.html",pathLocale:"/",extraFields:[]},{title:"程序员的技术成长战略",headers:[{level:2,title:"1. 前言",slug:"_1-前言",link:"#_1-前言",children:[]},{level:2,title:"二. 跟技术大牛学成长战略",slug:"二-跟技术大牛学成长战略",link:"#二-跟技术大牛学成长战略",children:[{level:3,title:"2.1 系统性能专家案例",slug:"_2-1-系统性能专家案例",link:"#_2-1-系统性能专家案例",children:[]},{level:3,title:"2.2 从开源到企业案例",slug:"_2-2-从开源到企业案例",link:"#_2-2-从开源到企业案例",children:[]},{level:3,title:"2.3 技术媒体大 V 案例",slug:"_2-3-技术媒体大-v-案例",link:"#_2-3-技术媒体大-v-案例",children:[]},{level:3,title:"2.4 案例小结",slug:"_2-4-案例小结",link:"#_2-4-案例小结",children:[]}]},{level:2,title:"三、学习金字塔和刻意训练",slug:"三、学习金字塔和刻意训练",link:"#三、学习金字塔和刻意训练",children:[]},{level:2,title:"四、战略思维的诞生",slug:"四、战略思维的诞生",link:"#四、战略思维的诞生",children:[]},{level:2,title:"五、建议",slug:"五、建议",link:"#五、建议",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/the-growth-strategy-of-the-technological-giant.html",pathLocale:"/",extraFields:[]},{title:"工作五年之后，对技术和业务的思考",headers:[{level:2,title:"01 前言",slug:"_01-前言",link:"#_01-前言",children:[]},{level:2,title:"02 学会适应变化，并积累能力",slug:"_02-学会适应变化-并积累能力",link:"#_02-学会适应变化-并积累能力",children:[]},{level:2,title:"03 提高业务能力的积累",slug:"_03-提高业务能力的积累",link:"#_03-提高业务能力的积累",children:[]},{level:2,title:"04 不同的阶段技术和业务的平衡和选择",slug:"_04-不同的阶段技术和业务的平衡和选择",link:"#_04-不同的阶段技术和业务的平衡和选择",children:[]},{level:2,title:"05 学会在职场做选择和生存",slug:"_05-学会在职场做选择和生存",link:"#_05-学会在职场做选择和生存",children:[]}],path:"/high-quality-technical-articles/advanced-programmer/thinking-about-technology-and-business-after-five-years-of-work.html",pathLocale:"/",extraFields:[]},{title:"如何在技术初试中考察程序员的技术能力",headers:[{level:2,title:"灵魂三连问",slug:"灵魂三连问",link:"#灵魂三连问",children:[]},{level:2,title:"考察目标和思路",slug:"考察目标和思路",link:"#考察目标和思路",children:[{level:3,title:"技术基础是什么?",slug:"技术基础是什么",link:"#技术基础是什么",children:[]},{level:3,title:"为什么要考察技术基础?",slug:"为什么要考察技术基础",link:"#为什么要考察技术基础",children:[]},{level:3,title:"为什么不能单考察业务维度？",slug:"为什么不能单考察业务维度",link:"#为什么不能单考察业务维度",children:[]},{level:3,title:"为什么要考察业务维度？",slug:"为什么要考察业务维度",link:"#为什么要考察业务维度",children:[]}]},{level:2,title:"考察方法",slug:"考察方法",link:"#考察方法",children:[{level:3,title:"技术基础考察",slug:"技术基础考察",link:"#技术基础考察",children:[]},{level:3,title:"解决问题能力考察",slug:"解决问题能力考察",link:"#解决问题能力考察",children:[]}]},{level:2,title:"面试过程",slug:"面试过程",link:"#面试过程",children:[{level:3,title:"预先准备",slug:"预先准备",link:"#预先准备",children:[]},{level:3,title:"面试启动",slug:"面试启动",link:"#面试启动",children:[]},{level:3,title:"问题设计",slug:"问题设计",link:"#问题设计",children:[]},{level:3,title:"宽松氛围",slug:"宽松氛围",link:"#宽松氛围",children:[]},{level:3,title:"学会倾听",slug:"学会倾听",link:"#学会倾听",children:[]},{level:3,title:"记录重点",slug:"记录重点",link:"#记录重点",children:[]},{level:3,title:"多练习",slug:"多练习",link:"#多练习",children:[]},{level:3,title:"作出判断",slug:"作出判断",link:"#作出判断",children:[]},{level:3,title:"不同年龄看重的东西不一样",slug:"不同年龄看重的东西不一样",link:"#不同年龄看重的东西不一样",children:[]}]},{level:2,title:"面试初上路",slug:"面试初上路",link:"#面试初上路",children:[]},{level:2,title:"高效考察",slug:"高效考察",link:"#高效考察",children:[]},{level:2,title:"给候选人的话",slug:"给候选人的话",link:"#给候选人的话",children:[]},{level:2,title:"参考资料",slug:"参考资料",link:"#参考资料",children:[]}],path:"/high-quality-technical-articles/interview/how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology.html",pathLocale:"/",extraFields:[]},{title:"校招进入飞书的个人经验",headers:[{level:2,title:"基本情况",slug:"基本情况",link:"#基本情况",children:[]},{level:2,title:"不顺利的春招过程",slug:"不顺利的春招过程",link:"#不顺利的春招过程",children:[{level:3,title:"春招实习对我来说不太顺利",slug:"春招实习对我来说不太顺利",link:"#春招实习对我来说不太顺利",children:[]},{level:3,title:"找实习的过程",slug:"找实习的过程",link:"#找实习的过程",children:[]}]},{level:2,title:"入职字节实习",slug:"入职字节实习",link:"#入职字节实习",children:[]},{level:2,title:"求职经验分享",slug:"求职经验分享",link:"#求职经验分享",children:[{level:3,title:"一些概念",slug:"一些概念",link:"#一些概念",children:[]},{level:3,title:"时间节点",slug:"时间节点",link:"#时间节点",children:[]},{level:3,title:"面试准备",slug:"面试准备",link:"#面试准备",children:[]}]}],path:"/high-quality-technical-articles/interview/my-personal-experience-in-2021.html",pathLocale:"/",extraFields:[]},{title:"如何甄别应聘者的包装程度",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"正文",slug:"正文",link:"#正文",children:[{level:3,title:"1.初选如何鉴别劣质简历",slug:"_1-初选如何鉴别劣质简历",link:"#_1-初选如何鉴别劣质简历",children:[]},{level:3,title:"2. 进入面试阶段，如何甄别对方的水分",slug:"_2-进入面试阶段-如何甄别对方的水分",link:"#_2-进入面试阶段-如何甄别对方的水分",children:[]}]}],path:"/high-quality-technical-articles/interview/screen-candidates-for-packaging.html",pathLocale:"/",extraFields:[]},{title:"阿里技术面试的一些秘密",headers:[{level:2,title:"我是怎么筛选简历的？",slug:"我是怎么筛选简历的",link:"#我是怎么筛选简历的",children:[]},{level:2,title:"面试的时候我会注重哪些方面？",slug:"面试的时候我会注重哪些方面",link:"#面试的时候我会注重哪些方面",children:[{level:3,title:"表达要清楚",slug:"表达要清楚",link:"#表达要清楚",children:[]},{level:3,title:"基础知识要扎实",slug:"基础知识要扎实",link:"#基础知识要扎实",children:[]},{level:3,title:"动手能力很重要",slug:"动手能力很重要",link:"#动手能力很重要",children:[]}]},{level:2,title:"除了上面这些常规的方面",slug:"除了上面这些常规的方面",link:"#除了上面这些常规的方面",children:[]},{level:2,title:"最后",slug:"最后",link:"#最后",children:[]}],path:"/high-quality-technical-articles/interview/some-secrets-about-alibaba-interview.html",pathLocale:"/",extraFields:[]},{title:"普通人的春招总结（阿里、腾讯offer）",headers:[{level:2,title:"背景",slug:"背景",link:"#背景",children:[]},{level:2,title:"写这个帖子的目的",slug:"写这个帖子的目的",link:"#写这个帖子的目的",children:[]},{level:2,title:"我的大学经历",slug:"我的大学经历",link:"#我的大学经历",children:[{level:3,title:"学习路线",slug:"学习路线",link:"#学习路线",children:[]},{level:3,title:"书籍推荐",slug:"书籍推荐",link:"#书籍推荐",children:[]},{level:3,title:"教程推荐",slug:"教程推荐",link:"#教程推荐",children:[]}]},{level:2,title:"找工作",slug:"找工作",link:"#找工作",children:[{level:3,title:"面试准备",slug:"面试准备",link:"#面试准备",children:[]},{level:3,title:"项目",slug:"项目",link:"#项目",children:[]},{level:3,title:"算法",slug:"算法",link:"#算法",children:[]},{level:3,title:"面试建议",slug:"面试建议",link:"#面试建议",children:[]}]},{level:2,title:"经验",slug:"经验",link:"#经验",children:[]},{level:2,title:"建议",slug:"建议",link:"#建议",children:[]},{level:2,title:"闲聊",slug:"闲聊",link:"#闲聊",children:[{level:3,title:"谈谈信息差",slug:"谈谈信息差",link:"#谈谈信息差",children:[]},{level:3,title:"谈谈 Java 的内卷",slug:"谈谈-java-的内卷",link:"#谈谈-java-的内卷",children:[]}]},{level:2,title:"祝福",slug:"祝福",link:"#祝福",children:[]}],path:"/high-quality-technical-articles/interview/summary-of-spring-recruitment.html",pathLocale:"/",extraFields:[]},{title:"从面试官和候选者的角度谈如何准备技术初试",headers:[{level:2,title:"考察目标和思路",slug:"考察目标和思路",link:"#考察目标和思路",children:[]},{level:2,title:"技术基础考察",slug:"技术基础考察",link:"#技术基础考察",children:[{level:3,title:"为什么要考察技术基础?",slug:"为什么要考察技术基础",link:"#为什么要考察技术基础",children:[]},{level:3,title:"技术基础怎么考察？",slug:"技术基础怎么考察",link:"#技术基础怎么考察",children:[]}]},{level:2,title:"业务维度考察",slug:"业务维度考察",link:"#业务维度考察",children:[{level:3,title:"为什么要考察业务维度？",slug:"为什么要考察业务维度",link:"#为什么要考察业务维度",children:[]},{level:3,title:"为什么不能单考察业务维度？",slug:"为什么不能单考察业务维度",link:"#为什么不能单考察业务维度",children:[]}]},{level:2,title:"解决问题能力考察",slug:"解决问题能力考察",link:"#解决问题能力考察",children:[{level:3,title:"设计问题",slug:"设计问题",link:"#设计问题",children:[]},{level:3,title:"项目经历",slug:"项目经历",link:"#项目经历",children:[]}]},{level:2,title:"面试官如何做好一场面试?",slug:"面试官如何做好一场面试",link:"#面试官如何做好一场面试",children:[{level:3,title:"预先准备",slug:"预先准备",link:"#预先准备",children:[]},{level:3,title:"面试启动",slug:"面试启动",link:"#面试启动",children:[]},{level:3,title:"问题设计",slug:"问题设计",link:"#问题设计",children:[]},{level:3,title:"宽松氛围",slug:"宽松氛围",link:"#宽松氛围",children:[]},{level:3,title:"学会倾听",slug:"学会倾听",link:"#学会倾听",children:[]},{level:3,title:"记录重点",slug:"记录重点",link:"#记录重点",children:[]}]},{level:2,title:"作出判断",slug:"作出判断",link:"#作出判断",children:[]},{level:2,title:"给候选人的话",slug:"给候选人的话",link:"#给候选人的话",children:[{level:3,title:"关注技术基础",slug:"关注技术基础",link:"#关注技术基础",children:[]},{level:3,title:"不要在意某个问题回答不上来",slug:"不要在意某个问题回答不上来",link:"#不要在意某个问题回答不上来",children:[]}]}],path:"/high-quality-technical-articles/interview/technical-preliminary-preparation.html",pathLocale:"/",extraFields:[]},{title:"一位大龄程序员所经历的面试的历炼和思考",headers:[{level:2,title:"引子",slug:"引子",link:"#引子",children:[]},{level:2,title:"准备工作",slug:"准备工作",link:"#准备工作",children:[{level:3,title:"简历准备",slug:"简历准备",link:"#简历准备",children:[]},{level:3,title:"个人介绍",slug:"个人介绍",link:"#个人介绍",children:[]},{level:3,title:"公司了解",slug:"公司了解",link:"#公司了解",children:[]},{level:3,title:"技术探索",slug:"技术探索",link:"#技术探索",children:[]},{level:3,title:"表述能力",slug:"表述能力",link:"#表述能力",children:[]},{level:3,title:"常见问题",slug:"常见问题",link:"#常见问题",children:[]},{level:3,title:"中高端职位",slug:"中高端职位",link:"#中高端职位",children:[]},{level:3,title:"好的心态",slug:"好的心态",link:"#好的心态",children:[]}]},{level:2,title:"面试历炼",slug:"面试历炼",link:"#面试历炼",children:[{level:3,title:"接力棒科技-高工",slug:"接力棒科技-高工",link:"#接力棒科技-高工",children:[]},{level:3,title:"网易云音乐-高工",slug:"网易云音乐-高工",link:"#网易云音乐-高工",children:[]},{level:3,title:"铭师堂-技术专家",slug:"铭师堂-技术专家",link:"#铭师堂-技术专家",children:[]},{level:3,title:"字节教育-高工",slug:"字节教育-高工",link:"#字节教育-高工",children:[]},{level:3,title:"咪咕数媒-架构师",slug:"咪咕数媒-架构师",link:"#咪咕数媒-架构师",children:[]},{level:3,title:"涂鸦智能-高工",slug:"涂鸦智能-高工",link:"#涂鸦智能-高工",children:[]},{level:3,title:"跟谁学-技术专家",slug:"跟谁学-技术专家",link:"#跟谁学-技术专家",children:[]},{level:3,title:"亿童文教-架构师",slug:"亿童文教-架构师",link:"#亿童文教-架构师",children:[]},{level:3,title:"新东方-高工",slug:"新东方-高工",link:"#新东方-高工",children:[]},{level:3,title:"ZOOM-高工",slug:"zoom-高工",link:"#zoom-高工",children:[]},{level:3,title:"阿优文化-高工",slug:"阿优文化-高工",link:"#阿优文化-高工",children:[]},{level:3,title:"小米-专家/架构",slug:"小米-专家-架构",link:"#小米-专家-架构",children:[]},{level:3,title:"视觉中国-高工",slug:"视觉中国-高工",link:"#视觉中国-高工",children:[]},{level:3,title:"科大讯飞-架构师",slug:"科大讯飞-架构师",link:"#科大讯飞-架构师",children:[]},{level:3,title:"青藤云-高工",slug:"青藤云-高工",link:"#青藤云-高工",children:[]},{level:3,title:"腾讯会议-高工",slug:"腾讯会议-高工",link:"#腾讯会议-高工",children:[]},{level:3,title:"最终选择",slug:"最终选择",link:"#最终选择",children:[]}]},{level:2,title:"小结",slug:"小结",link:"#小结",children:[]}],path:"/high-quality-technical-articles/interview/the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer.html",pathLocale:"/",extraFields:[]},{title:"斩获 20+ 大厂 offer 的面试经验分享",headers:[{level:2,title:"双方自我介绍",slug:"双方自我介绍",link:"#双方自我介绍",children:[]},{level:2,title:"项目经历",slug:"项目经历",link:"#项目经历",children:[]},{level:2,title:"专业知识考查",slug:"专业知识考查",link:"#专业知识考查",children:[]},{level:2,title:"编码能力考察",slug:"编码能力考察",link:"#编码能力考察",children:[]},{level:2,title:"候选人 Q&A",slug:"候选人-q-a",link:"#候选人-q-a",children:[]},{level:2,title:"加分项",slug:"加分项",link:"#加分项",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/high-quality-technical-articles/interview/the-experience-of-get-offer-from-over-20-big-companies.html",pathLocale:"/",extraFields:[]},{title:"一个中科大差生的 8 年程序员工作总结",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"2013 年",slug:"_2013-年",link:"#_2013-年",children:[{level:3,title:"加入上海航天 x 院某卫星研究所",slug:"加入上海航天-x-院某卫星研究所",link:"#加入上海航天-x-院某卫星研究所",children:[]},{level:3,title:"工作中暂露头角",slug:"工作中暂露头角",link:"#工作中暂露头角",children:[]},{level:3,title:"错失一次暴富的机会",slug:"错失一次暴富的机会",link:"#错失一次暴富的机会",children:[]},{level:3,title:"航天生涯的第一个正式项目",slug:"航天生涯的第一个正式项目",link:"#航天生涯的第一个正式项目",children:[]}]},{level:2,title:"2014 年",slug:"_2014-年",link:"#_2014-年",children:[{level:3,title:"升任主管设计师后的一次波折",slug:"升任主管设计师后的一次波折",link:"#升任主管设计师后的一次波折",children:[]},{level:3,title:"职场软技能的重新认识",slug:"职场软技能的重新认识",link:"#职场软技能的重新认识",children:[]}]},{level:2,title:"2015 年",slug:"_2015-年",link:"#_2015-年",children:[{level:3,title:"升任小组副组长",slug:"升任小组副组长",link:"#升任小组副组长",children:[]},{level:3,title:"学习团队管理技巧",slug:"学习团队管理技巧",link:"#学习团队管理技巧",children:[]}]},{level:2,title:"2016 年",slug:"_2016-年",link:"#_2016-年",children:[{level:3,title:"升任小组副组长",slug:"升任小组副组长-1",link:"#升任小组副组长-1",children:[]},{level:3,title:"买房",slug:"买房",link:"#买房",children:[]}]},{level:2,title:"2017 年",slug:"_2017-年",link:"#_2017-年",children:[{level:3,title:"买了第二套房子",slug:"买了第二套房子",link:"#买了第二套房子",children:[]},{level:3,title:"准备要孩子",slug:"准备要孩子",link:"#准备要孩子",children:[]}]},{level:2,title:"2018 年",slug:"_2018-年",link:"#_2018-年",children:[{level:3,title:"项目结束，离职",slug:"项目结束-离职",link:"#项目结束-离职",children:[]},{level:3,title:"入职华为",slug:"入职华为",link:"#入职华为",children:[]}]},{level:2,title:"2019 年",slug:"_2019-年",link:"#_2019-年",children:[{level:3,title:"成功转正",slug:"成功转正",link:"#成功转正",children:[]},{level:3,title:"备孕成功",slug:"备孕成功",link:"#备孕成功",children:[]},{level:3,title:"宝宝出生",slug:"宝宝出生",link:"#宝宝出生",children:[]}]},{level:2,title:"2020",slug:"_2020",link:"#_2020",children:[{level:3,title:"在家办公",slug:"在家办公",link:"#在家办公",children:[]},{level:3,title:"提出离职",slug:"提出离职",link:"#提出离职",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/high-quality-technical-articles/personal-experience/8-years-programmer-work-summary.html",pathLocale:"/",extraFields:[]},{title:"从校招入职腾讯的四年工作总结",headers:[{level:2,title:"工作情况",slug:"工作情况",link:"#工作情况",children:[]},{level:2,title:"绩效情况",slug:"绩效情况",link:"#绩效情况",children:[]},{level:2,title:"谈谈 EPC",slug:"谈谈-epc",link:"#谈谈-epc",children:[]},{level:2,title:"谈谈嫡系",slug:"谈谈嫡系",link:"#谈谈嫡系",children:[]},{level:2,title:"再谈收获",slug:"再谈收获",link:"#再谈收获",children:[]}],path:"/high-quality-technical-articles/personal-experience/four-year-work-in-tencent-summary.html",pathLocale:"/",extraFields:[]},{title:"华为 OD 275 天后，我进了腾讯！",headers:[{level:2,title:"时间线",slug:"时间线",link:"#时间线",children:[]},{level:2,title:"华为 OD 工作经历总结",slug:"华为-od-工作经历总结",link:"#华为-od-工作经历总结",children:[{level:3,title:"为什么会去华为 OD",slug:"为什么会去华为-od",link:"#为什么会去华为-od",children:[]},{level:3,title:"华为 OD 的工作内容",slug:"华为-od-的工作内容",link:"#华为-od-的工作内容",children:[]},{level:3,title:"OD 与华为自有员工的对比",slug:"od-与华为自有员工的对比",link:"#od-与华为自有员工的对比",children:[]},{level:3,title:"那，到底要不要去华为 OD？",slug:"那-到底要不要去华为-od",link:"#那-到底要不要去华为-od",children:[]},{level:3,title:"网传的 OD 转华为正编，真的假的？",slug:"网传的-od-转华为正编-真的假的",link:"#网传的-od-转华为正编-真的假的",children:[]},{level:3,title:"真的感谢 OD，也感谢华为",slug:"真的感谢-od-也感谢华为",link:"#真的感谢-od-也感谢华为",children:[]}]},{level:2,title:"投简历，找面试官求虐",slug:"投简历-找面试官求虐",link:"#投简历-找面试官求虐",children:[]},{level:2,title:"开始面试",slug:"开始面试",link:"#开始面试",children:[]},{level:2,title:"鹅厂，去还是不去？",slug:"鹅厂-去还是不去",link:"#鹅厂-去还是不去",children:[]},{level:2,title:"我的鹅厂面试",slug:"我的鹅厂面试",link:"#我的鹅厂面试",children:[{level:3,title:"技术一面",slug:"技术一面",link:"#技术一面",children:[]},{level:3,title:"技术二面",slug:"技术二面",link:"#技术二面",children:[]},{level:3,title:"技术三面",slug:"技术三面",link:"#技术三面",children:[]}]},{level:2,title:"文末的絮叨",slug:"文末的絮叨",link:"#文末的絮叨",children:[]}],path:"/high-quality-technical-articles/personal-experience/huawei-od-275-days.html",pathLocale:"/",extraFields:[]},{title:"滴滴和头条两年后端工作经验分享",headers:[{level:2,title:"学会深入思考，总结沉淀",slug:"学会深入思考-总结沉淀",link:"#学会深入思考-总结沉淀",children:[]},{level:2,title:"积极学习，保持技术热情",slug:"积极学习-保持技术热情",link:"#积极学习-保持技术热情",children:[]},{level:2,title:"主动承担，及时交流反馈",slug:"主动承担-及时交流反馈",link:"#主动承担-及时交流反馈",children:[]},{level:2,title:"第一件事建立信任",slug:"第一件事建立信任",link:"#第一件事建立信任",children:[]},{level:2,title:"超出预期",slug:"超出预期",link:"#超出预期",children:[]},{level:2,title:"体系化思考，系统化建设",slug:"体系化思考-系统化建设",link:"#体系化思考-系统化建设",children:[]},{level:2,title:"提升自己的软素质能力",slug:"提升自己的软素质能力",link:"#提升自己的软素质能力",children:[]},{level:2,title:"拍马屁是真的香",slug:"拍马屁是真的香",link:"#拍马屁是真的香",children:[]},{level:2,title:"永不缺席的撕逼甩锅实战",slug:"永不缺席的撕逼甩锅实战",link:"#永不缺席的撕逼甩锅实战",children:[]},{level:2,title:"不要被画饼蒙蔽了双眼",slug:"不要被画饼蒙蔽了双眼",link:"#不要被画饼蒙蔽了双眼",children:[]},{level:2,title:"学会包装",slug:"学会包装",link:"#学会包装",children:[]},{level:2,title:"选择和努力哪个更重要？",slug:"选择和努力哪个更重要",link:"#选择和努力哪个更重要",children:[]},{level:2,title:"后记",slug:"后记",link:"#后记",children:[]}],path:"/high-quality-technical-articles/personal-experience/two-years-of-back-end-develop--experience-in-didi-and-toutiao.html",pathLocale:"/",extraFields:[]},{title:"程序员高效出书避坑和实践指南",headers:[{level:2,title:"1.出书的稿酬收益和所需要的时间",slug:"_1-出书的稿酬收益和所需要的时间",link:"#_1-出书的稿酬收益和所需要的时间",children:[]},{level:2,title:"2.支付稿酬的时间点和加印后的收益",slug:"_2-支付稿酬的时间点和加印后的收益",link:"#_2-支付稿酬的时间点和加印后的收益",children:[]},{level:2,title:"3.同图书公司打交道的所见所闻",slug:"_3-同图书公司打交道的所见所闻",link:"#_3-同图书公司打交道的所见所闻",children:[]},{level:2,title:"4.如何直接同国内计算机图书的知名出版社编辑联系",slug:"_4-如何直接同国内计算机图书的知名出版社编辑联系",link:"#_4-如何直接同国内计算机图书的知名出版社编辑联系",children:[]},{level:2,title:"5.定选题和出书的流程",slug:"_5-定选题和出书的流程",link:"#_5-定选题和出书的流程",children:[]},{level:2,title:"6.出案例书比出经验书要快",slug:"_6-出案例书比出经验书要快",link:"#_6-出案例书比出经验书要快",children:[]},{level:2,title:"7.如何在参考现有内容的基础上避免版权问题",slug:"_7-如何在参考现有内容的基础上避免版权问题",link:"#_7-如何在参考现有内容的基础上避免版权问题",children:[]},{level:2,title:"8.新手作者需要着着重避免的问题",slug:"_8-新手作者需要着着重避免的问题",link:"#_8-新手作者需要着着重避免的问题",children:[]},{level:2,title:"9.总结：在国内知名出版社出书，其实是个体力活",slug:"_9-总结-在国内知名出版社出书-其实是个体力活",link:"#_9-总结-在国内知名出版社出书-其实是个体力活",children:[]}],path:"/high-quality-technical-articles/programmer/efficient-book-publishing-and-practice-guide.html",pathLocale:"/",extraFields:[]},{title:"程序员怎样出版一本技术书",headers:[{level:2,title:"1.不是有能力了再出书，而是在出书过程中升能力",slug:"_1-不是有能力了再出书-而是在出书过程中升能力",link:"#_1-不是有能力了再出书-而是在出书过程中升能力",children:[]},{level:2,title:"2.适合初级开发，高级开发和架构师写的书",slug:"_2-适合初级开发-高级开发和架构师写的书",link:"#_2-适合初级开发-高级开发和架构师写的书",children:[]},{level:2,title:"3.可以直接找出版社，也可以找出版公司",slug:"_3-可以直接找出版社-也可以找出版公司",link:"#_3-可以直接找出版社-也可以找出版公司",children:[]},{level:2,title:"4.如果别人拿你做试错对象，或有不尊重，赶紧止损",slug:"_4-如果别人拿你做试错对象-或有不尊重-赶紧止损",link:"#_4-如果别人拿你做试错对象-或有不尊重-赶紧止损",children:[]},{level:2,title:"5.如何写好 30 页篇幅的章节？",slug:"_5-如何写好-30-页篇幅的章节",link:"#_5-如何写好-30-页篇幅的章节",children:[]},{level:2,title:"6.如何写出一本销量过 5 千的书",slug:"_6-如何写出一本销量过-5-千的书",link:"#_6-如何写出一本销量过-5-千的书",children:[]},{level:2,title:"7.总结，出书仅是一个里程碑，程序员在上进路上应永不停息",slug:"_7-总结-出书仅是一个里程碑-程序员在上进路上应永不停息",link:"#_7-总结-出书仅是一个里程碑-程序员在上进路上应永不停息",children:[]}],path:"/high-quality-technical-articles/programmer/how-do-programmers-publish-a-technical-book.html",pathLocale:"/",extraFields:[]},{title:"32条总结教你提升职场经验",headers:[{level:2,title:"成长的捷径",slug:"成长的捷径",link:"#成长的捷径",children:[]},{level:2,title:"功夫在日常",slug:"功夫在日常",link:"#功夫在日常",children:[]},{level:2,title:"学会被管理",slug:"学会被管理",link:"#学会被管理",children:[]},{level:2,title:"思维转换",slug:"思维转换",link:"#思维转换",children:[]},{level:2,title:"要栓住情绪",slug:"要栓住情绪",link:"#要栓住情绪",children:[]},{level:2,title:"成为 Leader",slug:"成为-leader",link:"#成为-leader",children:[]}],path:"/high-quality-technical-articles/work/32-tips-improving-career.html",pathLocale:"/",extraFields:[]},{title:"聊聊大厂的绩效考核",headers:[{level:2,title:"大厂的绩效到底有多重要？",slug:"大厂的绩效到底有多重要",link:"#大厂的绩效到底有多重要",children:[]},{level:2,title:"你是怎么看待绩效的？",slug:"你是怎么看待绩效的",link:"#你是怎么看待绩效的",children:[]},{level:2,title:"绩效被打 A 和 C 的逻辑是什么？",slug:"绩效被打-a-和-c-的逻辑是什么",link:"#绩效被打-a-和-c-的逻辑是什么",children:[]},{level:2,title:"写在最后",slug:"写在最后",link:"#写在最后",children:[]}],path:"/high-quality-technical-articles/work/employee-performance.html",pathLocale:"/",extraFields:[]},{title:"新入职一家公司如何快速进入工作状态",headers:[{level:2,title:"业务",slug:"业务",link:"#业务",children:[]},{level:2,title:"技术",slug:"技术",link:"#技术",children:[]},{level:2,title:"项目与团队",slug:"项目与团队",link:"#项目与团队",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/high-quality-technical-articles/work/get-into-work-mode-quickly-when-you-join-a-company.html",pathLocale:"/",extraFields:[]},{title:"BigDecimal 详解",headers:[{level:2,title:"BigDecimal 介绍",slug:"bigdecimal-介绍",link:"#bigdecimal-介绍",children:[]},{level:2,title:"BigDecimal 常见方法",slug:"bigdecimal-常见方法",link:"#bigdecimal-常见方法",children:[{level:3,title:"创建",slug:"创建",link:"#创建",children:[]},{level:3,title:"加减乘除",slug:"加减乘除",link:"#加减乘除",children:[]},{level:3,title:"大小比较",slug:"大小比较",link:"#大小比较",children:[]},{level:3,title:"保留几位小数",slug:"保留几位小数",link:"#保留几位小数",children:[]}]},{level:2,title:"BigDecimal 等值比较问题",slug:"bigdecimal-等值比较问题",link:"#bigdecimal-等值比较问题",children:[]},{level:2,title:"BigDecimal 工具类分享",slug:"bigdecimal-工具类分享",link:"#bigdecimal-工具类分享",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/java/basis/bigdecimal.html",pathLocale:"/",extraFields:[]},{title:"泛型&通配符详解",headers:[],path:"/java/basis/generics-and-wildcards.html",pathLocale:"/",extraFields:[]},{title:"Java基础常见面试题总结(上)",headers:[{level:2,title:"基础概念与常识",slug:"基础概念与常识",link:"#基础概念与常识",children:[{level:3,title:"Java 语言有哪些特点?",slug:"java-语言有哪些特点",link:"#java-语言有哪些特点",children:[]},{level:3,title:"Java SE vs Java EE",slug:"java-se-vs-java-ee",link:"#java-se-vs-java-ee",children:[]},{level:3,title:"JVM vs JDK vs JRE",slug:"jvm-vs-jdk-vs-jre",link:"#jvm-vs-jdk-vs-jre",children:[]},{level:3,title:"什么是字节码?采用字节码的好处是什么?",slug:"什么是字节码-采用字节码的好处是什么",link:"#什么是字节码-采用字节码的好处是什么",children:[]},{level:3,title:"为什么说 Java 语言“编译与解释并存”？",slug:"为什么说-java-语言-编译与解释并存",link:"#为什么说-java-语言-编译与解释并存",children:[]},{level:3,title:"AOT 有什么优点？为什么不全部使用 AOT 呢？",slug:"aot-有什么优点-为什么不全部使用-aot-呢",link:"#aot-有什么优点-为什么不全部使用-aot-呢",children:[]},{level:3,title:"Oracle JDK vs OpenJDK",slug:"oracle-jdk-vs-openjdk",link:"#oracle-jdk-vs-openjdk",children:[]},{level:3,title:"Java 和 C++ 的区别?",slug:"java-和-c-的区别",link:"#java-和-c-的区别",children:[]}]},{level:2,title:"基本语法",slug:"基本语法",link:"#基本语法",children:[{level:3,title:"注释有哪几种形式？",slug:"注释有哪几种形式",link:"#注释有哪几种形式",children:[]},{level:3,title:"标识符和关键字的区别是什么？",slug:"标识符和关键字的区别是什么",link:"#标识符和关键字的区别是什么",children:[]},{level:3,title:"Java 语言关键字有哪些？",slug:"java-语言关键字有哪些",link:"#java-语言关键字有哪些",children:[]},{level:3,title:"自增自减运算符",slug:"自增自减运算符",link:"#自增自减运算符",children:[]},{level:3,title:"移位运算符",slug:"移位运算符",link:"#移位运算符",children:[]},{level:3,title:"continue、break 和 return 的区别是什么？",slug:"continue、break-和-return-的区别是什么",link:"#continue、break-和-return-的区别是什么",children:[]}]},{level:2,title:"基本数据类型",slug:"基本数据类型",link:"#基本数据类型",children:[{level:3,title:"Java 中的几种基本数据类型了解么？",slug:"java-中的几种基本数据类型了解么",link:"#java-中的几种基本数据类型了解么",children:[]},{level:3,title:"基本类型和包装类型的区别？",slug:"基本类型和包装类型的区别",link:"#基本类型和包装类型的区别",children:[]},{level:3,title:"包装类型的缓存机制了解么？",slug:"包装类型的缓存机制了解么",link:"#包装类型的缓存机制了解么",children:[]},{level:3,title:"自动装箱与拆箱了解吗？原理是什么？",slug:"自动装箱与拆箱了解吗-原理是什么",link:"#自动装箱与拆箱了解吗-原理是什么",children:[]},{level:3,title:"为什么浮点数运算的时候会有精度丢失的风险？",slug:"为什么浮点数运算的时候会有精度丢失的风险",link:"#为什么浮点数运算的时候会有精度丢失的风险",children:[]},{level:3,title:"如何解决浮点数运算的精度丢失问题？",slug:"如何解决浮点数运算的精度丢失问题",link:"#如何解决浮点数运算的精度丢失问题",children:[]},{level:3,title:"超过 long 整型的数据应该如何表示？",slug:"超过-long-整型的数据应该如何表示",link:"#超过-long-整型的数据应该如何表示",children:[]}]},{level:2,title:"变量",slug:"变量",link:"#变量",children:[{level:3,title:"成员变量与局部变量的区别？",slug:"成员变量与局部变量的区别",link:"#成员变量与局部变量的区别",children:[]},{level:3,title:"静态变量有什么作用？",slug:"静态变量有什么作用",link:"#静态变量有什么作用",children:[]},{level:3,title:"字符型常量和字符串常量的区别?",slug:"字符型常量和字符串常量的区别",link:"#字符型常量和字符串常量的区别",children:[]}]},{level:2,title:"方法",slug:"方法",link:"#方法",children:[{level:3,title:"什么是方法的返回值?方法有哪几种类型？",slug:"什么是方法的返回值-方法有哪几种类型",link:"#什么是方法的返回值-方法有哪几种类型",children:[]},{level:3,title:"静态方法为什么不能调用非静态成员?",slug:"静态方法为什么不能调用非静态成员",link:"#静态方法为什么不能调用非静态成员",children:[]},{level:3,title:"静态方法和实例方法有何不同？",slug:"静态方法和实例方法有何不同",link:"#静态方法和实例方法有何不同",children:[]},{level:3,title:"重载和重写有什么区别？",slug:"重载和重写有什么区别",link:"#重载和重写有什么区别",children:[]},{level:3,title:"什么是可变长参数？",slug:"什么是可变长参数",link:"#什么是可变长参数",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/basis/java-basic-questions-01.html",pathLocale:"/",extraFields:[]},{title:"Java基础常见面试题总结(中)",headers:[{level:2,title:"面向对象基础",slug:"面向对象基础",link:"#面向对象基础",children:[{level:3,title:"面向对象和面向过程的区别",slug:"面向对象和面向过程的区别",link:"#面向对象和面向过程的区别",children:[]},{level:3,title:"创建一个对象用什么运算符?对象实体与对象引用有何不同?",slug:"创建一个对象用什么运算符-对象实体与对象引用有何不同",link:"#创建一个对象用什么运算符-对象实体与对象引用有何不同",children:[]},{level:3,title:"对象的相等和引用相等的区别",slug:"对象的相等和引用相等的区别",link:"#对象的相等和引用相等的区别",children:[]},{level:3,title:"如果一个类没有声明构造方法，该程序能正确执行吗?",slug:"如果一个类没有声明构造方法-该程序能正确执行吗",link:"#如果一个类没有声明构造方法-该程序能正确执行吗",children:[]},{level:3,title:"构造方法有哪些特点？是否可被 override?",slug:"构造方法有哪些特点-是否可被-override",link:"#构造方法有哪些特点-是否可被-override",children:[]},{level:3,title:"面向对象三大特征",slug:"面向对象三大特征",link:"#面向对象三大特征",children:[]},{level:3,title:"接口和抽象类有什么共同点和区别？",slug:"接口和抽象类有什么共同点和区别",link:"#接口和抽象类有什么共同点和区别",children:[]},{level:3,title:"深拷贝和浅拷贝区别了解吗？什么是引用拷贝？",slug:"深拷贝和浅拷贝区别了解吗-什么是引用拷贝",link:"#深拷贝和浅拷贝区别了解吗-什么是引用拷贝",children:[]}]},{level:2,title:"Object",slug:"object",link:"#object",children:[{level:3,title:"Object 类的常见方法有哪些？",slug:"object-类的常见方法有哪些",link:"#object-类的常见方法有哪些",children:[]},{level:3,title:"== 和 equals() 的区别",slug:"和-equals-的区别",link:"#和-equals-的区别",children:[]},{level:3,title:"hashCode() 有什么用？",slug:"hashcode-有什么用",link:"#hashcode-有什么用",children:[]},{level:3,title:"为什么要有 hashCode？",slug:"为什么要有-hashcode",link:"#为什么要有-hashcode",children:[]},{level:3,title:"为什么重写 equals() 时必须重写 hashCode() 方法？",slug:"为什么重写-equals-时必须重写-hashcode-方法",link:"#为什么重写-equals-时必须重写-hashcode-方法",children:[]}]},{level:2,title:"String",slug:"string",link:"#string",children:[{level:3,title:"String、StringBuffer、StringBuilder 的区别？",slug:"string、stringbuffer、stringbuilder-的区别",link:"#string、stringbuffer、stringbuilder-的区别",children:[]},{level:3,title:"String 为什么是不可变的?",slug:"string-为什么是不可变的",link:"#string-为什么是不可变的",children:[]},{level:3,title:"字符串拼接用“+” 还是 StringBuilder?",slug:"字符串拼接用-还是-stringbuilder",link:"#字符串拼接用-还是-stringbuilder",children:[]},{level:3,title:"String#equals() 和 Object#equals() 有何区别？",slug:"string-equals-和-object-equals-有何区别",link:"#string-equals-和-object-equals-有何区别",children:[]},{level:3,title:"字符串常量池的作用了解吗？",slug:"字符串常量池的作用了解吗",link:"#字符串常量池的作用了解吗",children:[]},{level:3,title:'String s1 = new String("abc");这句话创建了几个字符串对象？',slug:"string-s1-new-string-abc-这句话创建了几个字符串对象",link:"#string-s1-new-string-abc-这句话创建了几个字符串对象",children:[]},{level:3,title:"String#intern 方法有什么作用?",slug:"string-intern-方法有什么作用",link:"#string-intern-方法有什么作用",children:[]},{level:3,title:"String 类型的变量和常量做“+”运算时发生了什么？",slug:"string-类型的变量和常量做-运算时发生了什么",link:"#string-类型的变量和常量做-运算时发生了什么",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/basis/java-basic-questions-02.html",pathLocale:"/",extraFields:[]},{title:"Java基础常见面试题总结(下)",headers:[{level:2,title:"异常",slug:"异常",link:"#异常",children:[{level:3,title:"Exception 和 Error 有什么区别？",slug:"exception-和-error-有什么区别",link:"#exception-和-error-有什么区别",children:[]},{level:3,title:"Checked Exception 和 Unchecked Exception 有什么区别？",slug:"checked-exception-和-unchecked-exception-有什么区别",link:"#checked-exception-和-unchecked-exception-有什么区别",children:[]},{level:3,title:"Throwable 类常用方法有哪些？",slug:"throwable-类常用方法有哪些",link:"#throwable-类常用方法有哪些",children:[]},{level:3,title:"try-catch-finally 如何使用？",slug:"try-catch-finally-如何使用",link:"#try-catch-finally-如何使用",children:[]},{level:3,title:"finally 中的代码一定会执行吗？",slug:"finally-中的代码一定会执行吗",link:"#finally-中的代码一定会执行吗",children:[]},{level:3,title:"如何使用 try-with-resources 代替try-catch-finally？",slug:"如何使用-try-with-resources-代替try-catch-finally",link:"#如何使用-try-with-resources-代替try-catch-finally",children:[]},{level:3,title:"异常使用有哪些需要注意的地方？",slug:"异常使用有哪些需要注意的地方",link:"#异常使用有哪些需要注意的地方",children:[]}]},{level:2,title:"泛型",slug:"泛型",link:"#泛型",children:[{level:3,title:"什么是泛型？有什么作用？",slug:"什么是泛型-有什么作用",link:"#什么是泛型-有什么作用",children:[]},{level:3,title:"泛型的使用方式有哪几种？",slug:"泛型的使用方式有哪几种",link:"#泛型的使用方式有哪几种",children:[]},{level:3,title:"项目中哪里用到了泛型？",slug:"项目中哪里用到了泛型",link:"#项目中哪里用到了泛型",children:[]}]},{level:2,title:"反射",slug:"反射",link:"#反射",children:[{level:3,title:"何谓反射？",slug:"何谓反射",link:"#何谓反射",children:[]},{level:3,title:"反射的优缺点？",slug:"反射的优缺点",link:"#反射的优缺点",children:[]},{level:3,title:"反射的应用场景？",slug:"反射的应用场景",link:"#反射的应用场景",children:[]}]},{level:2,title:"注解",slug:"注解",link:"#注解",children:[{level:3,title:"何谓注解？",slug:"何谓注解",link:"#何谓注解",children:[]},{level:3,title:"注解的解析方法有哪几种？",slug:"注解的解析方法有哪几种",link:"#注解的解析方法有哪几种",children:[]}]},{level:2,title:"SPI",slug:"spi",link:"#spi",children:[{level:3,title:"何谓 SPI?",slug:"何谓-spi",link:"#何谓-spi",children:[]},{level:3,title:"SPI 和 API 有什么区别？",slug:"spi-和-api-有什么区别",link:"#spi-和-api-有什么区别",children:[]},{level:3,title:"SPI 的优缺点？",slug:"spi-的优缺点",link:"#spi-的优缺点",children:[]}]},{level:2,title:"序列化和反序列化",slug:"序列化和反序列化",link:"#序列化和反序列化",children:[{level:3,title:"什么是序列化?什么是反序列化?",slug:"什么是序列化-什么是反序列化",link:"#什么是序列化-什么是反序列化",children:[]},{level:3,title:"如果有些字段不想进行序列化怎么办？",slug:"如果有些字段不想进行序列化怎么办",link:"#如果有些字段不想进行序列化怎么办",children:[]},{level:3,title:"常见序列化协议有哪些？",slug:"常见序列化协议有哪些",link:"#常见序列化协议有哪些",children:[]},{level:3,title:"为什么不推荐使用 JDK 自带的序列化？",slug:"为什么不推荐使用-jdk-自带的序列化",link:"#为什么不推荐使用-jdk-自带的序列化",children:[]}]},{level:2,title:"I/O",slug:"i-o",link:"#i-o",children:[{level:3,title:"Java IO 流了解吗？",slug:"java-io-流了解吗",link:"#java-io-流了解吗",children:[]},{level:3,title:"I/O 流为什么要分为字节流和字符流呢?",slug:"i-o-流为什么要分为字节流和字符流呢",link:"#i-o-流为什么要分为字节流和字符流呢",children:[]},{level:3,title:"Java IO 中的设计模式有哪些？",slug:"java-io-中的设计模式有哪些",link:"#java-io-中的设计模式有哪些",children:[]},{level:3,title:"BIO、NIO 和 AIO 的区别？",slug:"bio、nio-和-aio-的区别",link:"#bio、nio-和-aio-的区别",children:[]}]},{level:2,title:"语法糖",slug:"语法糖",link:"#语法糖",children:[{level:3,title:"什么是语法糖？",slug:"什么是语法糖",link:"#什么是语法糖",children:[]},{level:3,title:"Java 中有哪些常见的语法糖？",slug:"java-中有哪些常见的语法糖",link:"#java-中有哪些常见的语法糖",children:[]}]}],path:"/java/basis/java-basic-questions-03.html",pathLocale:"/",extraFields:[]},{title:"final,static,this,super 关键字总结",headers:[{level:2,title:"final 关键字",slug:"final-关键字",link:"#final-关键字",children:[]},{level:2,title:"static 关键字",slug:"static-关键字",link:"#static-关键字",children:[]},{level:2,title:"this 关键字",slug:"this-关键字",link:"#this-关键字",children:[]},{level:2,title:"super 关键字",slug:"super-关键字",link:"#super-关键字",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]},{level:2,title:"static 关键字主要有以下四种使用场景",slug:"static-关键字主要有以下四种使用场景",link:"#static-关键字主要有以下四种使用场景",children:[{level:3,title:"修饰成员变量和成员方法(常用)",slug:"修饰成员变量和成员方法-常用",link:"#修饰成员变量和成员方法-常用",children:[]},{level:3,title:"静态代码块",slug:"静态代码块",link:"#静态代码块",children:[]},{level:3,title:"静态内部类",slug:"静态内部类",link:"#静态内部类",children:[]},{level:3,title:"静态导包",slug:"静态导包",link:"#静态导包",children:[]}]},{level:2,title:"补充内容",slug:"补充内容",link:"#补充内容",children:[{level:3,title:"静态方法与非静态方法",slug:"静态方法与非静态方法",link:"#静态方法与非静态方法",children:[]},{level:3,title:"static{}静态代码块与{}非静态代码块(构造代码块)",slug:"static-静态代码块与-非静态代码块-构造代码块",link:"#static-静态代码块与-非静态代码块-构造代码块",children:[]},{level:3,title:"参考",slug:"参考-1",link:"#参考-1",children:[]}]}],path:"/java/basis/java-keyword-summary.html",pathLocale:"/",extraFields:[]},{title:"Java 代理模式详解",headers:[{level:2,title:"1. 代理模式",slug:"_1-代理模式",link:"#_1-代理模式",children:[]},{level:2,title:"2. 静态代理",slug:"_2-静态代理",link:"#_2-静态代理",children:[]},{level:2,title:"3. 动态代理",slug:"_3-动态代理",link:"#_3-动态代理",children:[{level:3,title:"3.1. JDK 动态代理机制",slug:"_3-1-jdk-动态代理机制",link:"#_3-1-jdk-动态代理机制",children:[]},{level:3,title:"3.2. CGLIB 动态代理机制",slug:"_3-2-cglib-动态代理机制",link:"#_3-2-cglib-动态代理机制",children:[]},{level:3,title:"3.3. JDK 动态代理和 CGLIB 动态代理对比",slug:"_3-3-jdk-动态代理和-cglib-动态代理对比",link:"#_3-3-jdk-动态代理和-cglib-动态代理对比",children:[]}]},{level:2,title:"4. 静态代理和动态代理的对比",slug:"_4-静态代理和动态代理的对比",link:"#_4-静态代理和动态代理的对比",children:[]},{level:2,title:"5. 总结",slug:"_5-总结",link:"#_5-总结",children:[]}],path:"/java/basis/proxy.html",pathLocale:"/",extraFields:[]},{title:"Java 反射机制详解",headers:[{level:2,title:"何为反射？",slug:"何为反射",link:"#何为反射",children:[]},{level:2,title:"反射的应用场景了解么？",slug:"反射的应用场景了解么",link:"#反射的应用场景了解么",children:[]},{level:2,title:"谈谈反射机制的优缺点",slug:"谈谈反射机制的优缺点",link:"#谈谈反射机制的优缺点",children:[]},{level:2,title:"反射实战",slug:"反射实战",link:"#反射实战",children:[{level:3,title:"获取 Class 对象的四种方式",slug:"获取-class-对象的四种方式",link:"#获取-class-对象的四种方式",children:[]},{level:3,title:"反射的一些基本操作",slug:"反射的一些基本操作",link:"#反射的一些基本操作",children:[]}]}],path:"/java/basis/reflection.html",pathLocale:"/",extraFields:[]},{title:"Java 序列化详解",headers:[{level:2,title:"什么是序列化和反序列化?",slug:"什么是序列化和反序列化",link:"#什么是序列化和反序列化",children:[]},{level:2,title:"常见序列化协议有哪些？",slug:"常见序列化协议有哪些",link:"#常见序列化协议有哪些",children:[{level:3,title:"JDK 自带的序列化方式",slug:"jdk-自带的序列化方式",link:"#jdk-自带的序列化方式",children:[]},{level:3,title:"Kryo",slug:"kryo",link:"#kryo",children:[]},{level:3,title:"Protobuf",slug:"protobuf",link:"#protobuf",children:[]},{level:3,title:"ProtoStuff",slug:"protostuff",link:"#protostuff",children:[]},{level:3,title:"Hessian",slug:"hessian",link:"#hessian",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]}],path:"/java/basis/serialization.html",pathLocale:"/",extraFields:[]},{title:"Java SPI 机制详解",headers:[{level:2,title:"SPI 介绍",slug:"spi-介绍",link:"#spi-介绍",children:[{level:3,title:"何谓 SPI?",slug:"何谓-spi",link:"#何谓-spi",children:[]},{level:3,title:"SPI 和 API 有什么区别？",slug:"spi-和-api-有什么区别",link:"#spi-和-api-有什么区别",children:[]}]},{level:2,title:"实战演示",slug:"实战演示",link:"#实战演示",children:[{level:3,title:"Service Provider Interface",slug:"service-provider-interface",link:"#service-provider-interface",children:[]},{level:3,title:"Service Provider",slug:"service-provider",link:"#service-provider",children:[]},{level:3,title:"效果展示",slug:"效果展示",link:"#效果展示",children:[]}]},{level:2,title:"ServiceLoader",slug:"serviceloader",link:"#serviceloader",children:[{level:3,title:"ServiceLoader 具体实现",slug:"serviceloader-具体实现",link:"#serviceloader-具体实现",children:[]},{level:3,title:"自己实现一个 ServiceLoader",slug:"自己实现一个-serviceloader",link:"#自己实现一个-serviceloader",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/java/basis/spi.html",pathLocale:"/",extraFields:[]},{title:"Java 语法糖详解",headers:[{level:2,title:"什么是语法糖？",slug:"什么是语法糖",link:"#什么是语法糖",children:[]},{level:2,title:"Java 中有哪些常见的语法糖？",slug:"java-中有哪些常见的语法糖",link:"#java-中有哪些常见的语法糖",children:[{level:3,title:"switch 支持 String 与枚举",slug:"switch-支持-string-与枚举",link:"#switch-支持-string-与枚举",children:[]},{level:3,title:"泛型",slug:"泛型",link:"#泛型",children:[]},{level:3,title:"自动装箱与拆箱",slug:"自动装箱与拆箱",link:"#自动装箱与拆箱",children:[]},{level:3,title:"可变长参数",slug:"可变长参数",link:"#可变长参数",children:[]},{level:3,title:"枚举",slug:"枚举",link:"#枚举",children:[]},{level:3,title:"内部类",slug:"内部类",link:"#内部类",children:[]},{level:3,title:"条件编译",slug:"条件编译",link:"#条件编译",children:[]},{level:3,title:"断言",slug:"断言",link:"#断言",children:[]},{level:3,title:"数值字面量",slug:"数值字面量",link:"#数值字面量",children:[]},{level:3,title:"for-each",slug:"for-each",link:"#for-each",children:[]},{level:3,title:"try-with-resource",slug:"try-with-resource",link:"#try-with-resource",children:[]},{level:3,title:"Lambda 表达式",slug:"lambda-表达式",link:"#lambda-表达式",children:[]}]},{level:2,title:"可能遇到的坑",slug:"可能遇到的坑",link:"#可能遇到的坑",children:[{level:3,title:"泛型",slug:"泛型-1",link:"#泛型-1",children:[]},{level:3,title:"自动装箱与拆箱",slug:"自动装箱与拆箱-1",link:"#自动装箱与拆箱-1",children:[]},{level:3,title:"增强 for 循环",slug:"增强-for-循环",link:"#增强-for-循环",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/java/basis/syntactic-sugar.html",pathLocale:"/",extraFields:[]},{title:"Java语法",headers:[{level:2,title:"匿名内部类",slug:"匿名内部类",link:"#匿名内部类",children:[{level:3,title:"使用接口实现",slug:"使用接口实现",link:"#使用接口实现",children:[]}]}],path:"/java/basis/syntax.html",pathLocale:"/",extraFields:[]},{title:"Java 魔法类 Unsafe 详解",headers:[{level:2,title:"Unsafe 介绍",slug:"unsafe-介绍",link:"#unsafe-介绍",children:[]},{level:2,title:"Unsafe 创建",slug:"unsafe-创建",link:"#unsafe-创建",children:[]},{level:2,title:"Unsafe 功能",slug:"unsafe-功能",link:"#unsafe-功能",children:[{level:3,title:"内存操作",slug:"内存操作",link:"#内存操作",children:[]},{level:3,title:"内存屏障",slug:"内存屏障",link:"#内存屏障",children:[]},{level:3,title:"对象操作",slug:"对象操作",link:"#对象操作",children:[]},{level:3,title:"数组操作",slug:"数组操作",link:"#数组操作",children:[]},{level:3,title:"CAS 操作",slug:"cas-操作",link:"#cas-操作",children:[]},{level:3,title:"线程调度",slug:"线程调度",link:"#线程调度",children:[]},{level:3,title:"Class 操作",slug:"class-操作",link:"#class-操作",children:[]},{level:3,title:"系统信息",slug:"系统信息",link:"#系统信息",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/java/basis/unsafe.html",pathLocale:"/",extraFields:[]},{title:"Java 值传递详解",headers:[{level:2,title:"形参&实参",slug:"形参-实参",link:"#形参-实参",children:[]},{level:2,title:"值传递&引用传递",slug:"值传递-引用传递",link:"#值传递-引用传递",children:[]},{level:2,title:"为什么 Java 只有值传递？",slug:"为什么-java-只有值传递",link:"#为什么-java-只有值传递",children:[{level:3,title:"案例 1：传递基本类型参数",slug:"案例-1-传递基本类型参数",link:"#案例-1-传递基本类型参数",children:[]},{level:3,title:"案例 2：传递引用类型参数 1",slug:"案例-2-传递引用类型参数-1",link:"#案例-2-传递引用类型参数-1",children:[]},{level:3,title:"案例 3：传递引用类型参数 2",slug:"案例-3-传递引用类型参数-2",link:"#案例-3-传递引用类型参数-2",children:[]}]},{level:2,title:"引用传递是怎么样的？",slug:"引用传递是怎么样的",link:"#引用传递是怎么样的",children:[]},{level:2,title:"为什么 Java 不引入引用传递呢？",slug:"为什么-java-不引入引用传递呢",link:"#为什么-java-不引入引用传递呢",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/basis/why-there-only-value-passing-in-java.html",pathLocale:"/",extraFields:[]},{title:"ArrayBlockingQueue 源码分析",headers:[{level:2,title:"阻塞队列简介",slug:"阻塞队列简介",link:"#阻塞队列简介",children:[{level:3,title:"阻塞队列的历史",slug:"阻塞队列的历史",link:"#阻塞队列的历史",children:[]},{level:3,title:"阻塞队列的思想",slug:"阻塞队列的思想",link:"#阻塞队列的思想",children:[]}]},{level:2,title:"ArrayBlockingQueue 常见方法及测试",slug:"arrayblockingqueue-常见方法及测试",link:"#arrayblockingqueue-常见方法及测试",children:[]},{level:2,title:"ArrayBlockingQueue 源码分析",slug:"arrayblockingqueue-源码分析",link:"#arrayblockingqueue-源码分析",children:[{level:3,title:"整体设计",slug:"整体设计",link:"#整体设计",children:[]},{level:3,title:"初始化",slug:"初始化",link:"#初始化",children:[]},{level:3,title:"阻塞式获取和新增元素",slug:"阻塞式获取和新增元素",link:"#阻塞式获取和新增元素",children:[]},{level:3,title:"非阻塞式获取和新增元素",slug:"非阻塞式获取和新增元素",link:"#非阻塞式获取和新增元素",children:[]},{level:3,title:"指定超时时间内阻塞式获取和新增元素",slug:"指定超时时间内阻塞式获取和新增元素",link:"#指定超时时间内阻塞式获取和新增元素",children:[]},{level:3,title:"判断元素是否存在",slug:"判断元素是否存在",link:"#判断元素是否存在",children:[]}]},{level:2,title:"ArrayBlockingQueue 获取和新增元素的方法对比",slug:"arrayblockingqueue-获取和新增元素的方法对比",link:"#arrayblockingqueue-获取和新增元素的方法对比",children:[]},{level:2,title:"ArrayBlockingQueue 相关面试题",slug:"arrayblockingqueue-相关面试题",link:"#arrayblockingqueue-相关面试题",children:[{level:3,title:"ArrayBlockingQueue 是什么？它的特点是什么？",slug:"arrayblockingqueue-是什么-它的特点是什么",link:"#arrayblockingqueue-是什么-它的特点是什么",children:[]},{level:3,title:"ArrayBlockingQueue 和 LinkedBlockingQueue 有什么区别？",slug:"arrayblockingqueue-和-linkedblockingqueue-有什么区别",link:"#arrayblockingqueue-和-linkedblockingqueue-有什么区别",children:[]},{level:3,title:"ArrayBlockingQueue 和 ConcurrentLinkedQueue 有什么区别？",slug:"arrayblockingqueue-和-concurrentlinkedqueue-有什么区别",link:"#arrayblockingqueue-和-concurrentlinkedqueue-有什么区别",children:[]},{level:3,title:"ArrayBlockingQueue 的实现原理是什么？",slug:"arrayblockingqueue-的实现原理是什么",link:"#arrayblockingqueue-的实现原理是什么",children:[]}]},{level:2,title:"参考文献",slug:"参考文献",link:"#参考文献",children:[]}],path:"/java/collection/arrayblockingqueue-source-code.html",pathLocale:"/",extraFields:[]},{title:"ArrayList 源码分析",headers:[{level:2,title:"ArrayList 简介",slug:"arraylist-简介",link:"#arraylist-简介",children:[{level:3,title:"ArrayList 和 Vector 的区别?（了解即可）",slug:"arraylist-和-vector-的区别-了解即可",link:"#arraylist-和-vector-的区别-了解即可",children:[]},{level:3,title:"ArrayList 可以添加 null 值吗？",slug:"arraylist-可以添加-null-值吗",link:"#arraylist-可以添加-null-值吗",children:[]},{level:3,title:"Arraylist 与 LinkedList 区别?",slug:"arraylist-与-linkedlist-区别",link:"#arraylist-与-linkedlist-区别",children:[]}]},{level:2,title:"ArrayList 核心源码解读",slug:"arraylist-核心源码解读",link:"#arraylist-核心源码解读",children:[]},{level:2,title:"ArrayList 扩容机制分析",slug:"arraylist-扩容机制分析",link:"#arraylist-扩容机制分析",children:[{level:3,title:"先从 ArrayList 的构造函数说起",slug:"先从-arraylist-的构造函数说起",link:"#先从-arraylist-的构造函数说起",children:[]},{level:3,title:"一步一步分析 ArrayList 扩容机制",slug:"一步一步分析-arraylist-扩容机制",link:"#一步一步分析-arraylist-扩容机制",children:[]},{level:3,title:"System.arraycopy() 和 Arrays.copyOf()方法",slug:"system-arraycopy-和-arrays-copyof-方法",link:"#system-arraycopy-和-arrays-copyof-方法",children:[]},{level:3,title:"ensureCapacity方法",slug:"ensurecapacity方法",link:"#ensurecapacity方法",children:[]}]}],path:"/java/collection/arraylist-source-code.html",pathLocale:"/",extraFields:[]},{title:"ConcurrentHashMap 源码分析",headers:[{level:2,title:"1. ConcurrentHashMap 1.7",slug:"_1-concurrenthashmap-1-7",link:"#_1-concurrenthashmap-1-7",children:[{level:3,title:"1. 存储结构",slug:"_1-存储结构",link:"#_1-存储结构",children:[]},{level:3,title:"2. 初始化",slug:"_2-初始化",link:"#_2-初始化",children:[]},{level:3,title:"3. put",slug:"_3-put",link:"#_3-put",children:[]},{level:3,title:"4. 扩容 rehash",slug:"_4-扩容-rehash",link:"#_4-扩容-rehash",children:[]},{level:3,title:"5. get",slug:"_5-get",link:"#_5-get",children:[]}]},{level:2,title:"2. ConcurrentHashMap 1.8",slug:"_2-concurrenthashmap-1-8",link:"#_2-concurrenthashmap-1-8",children:[{level:3,title:"1. 存储结构",slug:"_1-存储结构-1",link:"#_1-存储结构-1",children:[]},{level:3,title:"2. 初始化 initTable",slug:"_2-初始化-inittable",link:"#_2-初始化-inittable",children:[]},{level:3,title:"3. put",slug:"_3-put-1",link:"#_3-put-1",children:[]},{level:3,title:"4. get",slug:"_4-get",link:"#_4-get",children:[]}]},{level:2,title:"3. 总结",slug:"_3-总结",link:"#_3-总结",children:[]}],path:"/java/collection/concurrent-hash-map-source-code.html",pathLocale:"/",extraFields:[]},{title:"CopyOnWriteArrayList 源码分析",headers:[{level:2,title:"CopyOnWriteArrayList 简介",slug:"copyonwritearraylist-简介",link:"#copyonwritearraylist-简介",children:[{level:3,title:"CopyOnWriteArrayList 到底有什么厉害之处？",slug:"copyonwritearraylist-到底有什么厉害之处",link:"#copyonwritearraylist-到底有什么厉害之处",children:[]},{level:3,title:"Copy-On-Write 的思想是什么？",slug:"copy-on-write-的思想是什么",link:"#copy-on-write-的思想是什么",children:[]}]},{level:2,title:"CopyOnWriteArrayList 源码分析",slug:"copyonwritearraylist-源码分析",link:"#copyonwritearraylist-源码分析",children:[{level:3,title:"初始化",slug:"初始化",link:"#初始化",children:[]},{level:3,title:"插入元素",slug:"插入元素",link:"#插入元素",children:[]},{level:3,title:"读取元素",slug:"读取元素",link:"#读取元素",children:[]},{level:3,title:"获取列表中元素的个数",slug:"获取列表中元素的个数",link:"#获取列表中元素的个数",children:[]},{level:3,title:"删除元素",slug:"删除元素",link:"#删除元素",children:[]},{level:3,title:"判断元素是否存在",slug:"判断元素是否存在",link:"#判断元素是否存在",children:[]}]},{level:2,title:"CopyOnWriteArrayList 常用方法测试",slug:"copyonwritearraylist-常用方法测试",link:"#copyonwritearraylist-常用方法测试",children:[]}],path:"/java/collection/copyonwritearraylist-source-code.html",pathLocale:"/",extraFields:[]},{title:"DelayQueue 源码分析",headers:[{level:2,title:"DelayQueue 简介",slug:"delayqueue-简介",link:"#delayqueue-简介",children:[]},{level:2,title:"DelayQueue 发展史",slug:"delayqueue-发展史",link:"#delayqueue-发展史",children:[]},{level:2,title:"DelayQueue 常见使用场景示例",slug:"delayqueue-常见使用场景示例",link:"#delayqueue-常见使用场景示例",children:[]},{level:2,title:"DelayQueue 源码解析",slug:"delayqueue-源码解析",link:"#delayqueue-源码解析",children:[{level:3,title:"核心成员变量",slug:"核心成员变量",link:"#核心成员变量",children:[]},{level:3,title:"构造方法",slug:"构造方法",link:"#构造方法",children:[]},{level:3,title:"添加元素",slug:"添加元素",link:"#添加元素",children:[]},{level:3,title:"获取元素",slug:"获取元素",link:"#获取元素",children:[]},{level:3,title:"查看元素",slug:"查看元素",link:"#查看元素",children:[]}]},{level:2,title:"DelayQueue 常见面试题",slug:"delayqueue-常见面试题",link:"#delayqueue-常见面试题",children:[{level:3,title:"DelayQueue 的实现原理是什么？",slug:"delayqueue-的实现原理是什么",link:"#delayqueue-的实现原理是什么",children:[]},{level:3,title:"DelayQueue 的实现是否线程安全？",slug:"delayqueue-的实现是否线程安全",link:"#delayqueue-的实现是否线程安全",children:[]},{level:3,title:"DelayQueue 的使用场景有哪些？",slug:"delayqueue-的使用场景有哪些",link:"#delayqueue-的使用场景有哪些",children:[]},{level:3,title:"DelayQueue 中 Delayed 接口的作用是什么？",slug:"delayqueue-中-delayed-接口的作用是什么",link:"#delayqueue-中-delayed-接口的作用是什么",children:[]},{level:3,title:"DelayQueue 和 Timer/TimerTask 的区别是什么？",slug:"delayqueue-和-timer-timertask-的区别是什么",link:"#delayqueue-和-timer-timertask-的区别是什么",children:[]}]},{level:2,title:"参考文献",slug:"参考文献",link:"#参考文献",children:[]}],path:"/java/collection/delayqueue-source-code.html",pathLocale:"/",extraFields:[]},{title:"HashMap 源码分析",headers:[{level:2,title:"HashMap 简介",slug:"hashmap-简介",link:"#hashmap-简介",children:[]},{level:2,title:"底层数据结构分析",slug:"底层数据结构分析",link:"#底层数据结构分析",children:[{level:3,title:"JDK1.8 之前",slug:"jdk1-8-之前",link:"#jdk1-8-之前",children:[]},{level:3,title:"JDK1.8 之后",slug:"jdk1-8-之后",link:"#jdk1-8-之后",children:[]}]},{level:2,title:"HashMap 源码分析",slug:"hashmap-源码分析",link:"#hashmap-源码分析",children:[{level:3,title:"构造方法",slug:"构造方法",link:"#构造方法",children:[]},{level:3,title:"put 方法",slug:"put-方法",link:"#put-方法",children:[]},{level:3,title:"get 方法",slug:"get-方法",link:"#get-方法",children:[]},{level:3,title:"resize 方法",slug:"resize-方法",link:"#resize-方法",children:[]}]},{level:2,title:"HashMap 常用方法测试",slug:"hashmap-常用方法测试",link:"#hashmap-常用方法测试",children:[]}],path:"/java/collection/hashmap-source-code.html",pathLocale:"/",extraFields:[]},{title:"Java集合使用注意事项总结",headers:[{level:2,title:"集合判空",slug:"集合判空",link:"#集合判空",children:[]},{level:2,title:"集合转 Map",slug:"集合转-map",link:"#集合转-map",children:[]},{level:2,title:"集合遍历",slug:"集合遍历",link:"#集合遍历",children:[]},{level:2,title:"集合去重",slug:"集合去重",link:"#集合去重",children:[]},{level:2,title:"集合转数组",slug:"集合转数组",link:"#集合转数组",children:[]},{level:2,title:"数组转集合",slug:"数组转集合",link:"#数组转集合",children:[]}],path:"/java/collection/java-collection-precautions-for-use.html",pathLocale:"/",extraFields:[]},{title:"Java集合常见面试题总结(上)",headers:[{level:2,title:"集合概述",slug:"集合概述",link:"#集合概述",children:[{level:3,title:"Java 集合概览",slug:"java-集合概览",link:"#java-集合概览",children:[]},{level:3,title:"说说 List, Set, Queue, Map 四者的区别？",slug:"说说-list-set-queue-map-四者的区别",link:"#说说-list-set-queue-map-四者的区别",children:[]},{level:3,title:"集合框架底层数据结构总结",slug:"集合框架底层数据结构总结",link:"#集合框架底层数据结构总结",children:[]},{level:3,title:"如何选用集合?",slug:"如何选用集合",link:"#如何选用集合",children:[]},{level:3,title:"为什么要使用集合？",slug:"为什么要使用集合",link:"#为什么要使用集合",children:[]}]},{level:2,title:"List",slug:"list-1",link:"#list-1",children:[{level:3,title:"ArrayList 和 Array（数组）的区别？",slug:"arraylist-和-array-数组-的区别",link:"#arraylist-和-array-数组-的区别",children:[]},{level:3,title:"ArrayList 和 Vector 的区别?（了解即可）",slug:"arraylist-和-vector-的区别-了解即可",link:"#arraylist-和-vector-的区别-了解即可",children:[]},{level:3,title:"Vector 和 Stack 的区别?（了解即可）",slug:"vector-和-stack-的区别-了解即可",link:"#vector-和-stack-的区别-了解即可",children:[]},{level:3,title:"ArrayList 可以添加 null 值吗？",slug:"arraylist-可以添加-null-值吗",link:"#arraylist-可以添加-null-值吗",children:[]},{level:3,title:"ArrayList 插入和删除元素的时间复杂度？",slug:"arraylist-插入和删除元素的时间复杂度",link:"#arraylist-插入和删除元素的时间复杂度",children:[]},{level:3,title:"LinkedList 插入和删除元素的时间复杂度？",slug:"linkedlist-插入和删除元素的时间复杂度",link:"#linkedlist-插入和删除元素的时间复杂度",children:[]},{level:3,title:"LinkedList 为什么不能实现 RandomAccess 接口？",slug:"linkedlist-为什么不能实现-randomaccess-接口",link:"#linkedlist-为什么不能实现-randomaccess-接口",children:[]},{level:3,title:"ArrayList 与 LinkedList 区别?",slug:"arraylist-与-linkedlist-区别",link:"#arraylist-与-linkedlist-区别",children:[]},{level:3,title:"说一说 ArrayList 的扩容机制吧",slug:"说一说-arraylist-的扩容机制吧",link:"#说一说-arraylist-的扩容机制吧",children:[]}]},{level:2,title:"Set",slug:"set-1",link:"#set-1",children:[{level:3,title:"Comparable 和 Comparator 的区别",slug:"comparable-和-comparator-的区别",link:"#comparable-和-comparator-的区别",children:[]},{level:3,title:"无序性和不可重复性的含义是什么",slug:"无序性和不可重复性的含义是什么",link:"#无序性和不可重复性的含义是什么",children:[]},{level:3,title:"比较 HashSet、LinkedHashSet 和 TreeSet 三者的异同",slug:"比较-hashset、linkedhashset-和-treeset-三者的异同",link:"#比较-hashset、linkedhashset-和-treeset-三者的异同",children:[]}]},{level:2,title:"Queue",slug:"queue-1",link:"#queue-1",children:[{level:3,title:"Queue 与 Deque 的区别",slug:"queue-与-deque-的区别",link:"#queue-与-deque-的区别",children:[]},{level:3,title:"ArrayDeque 与 LinkedList 的区别",slug:"arraydeque-与-linkedlist-的区别",link:"#arraydeque-与-linkedlist-的区别",children:[]},{level:3,title:"说一说 PriorityQueue",slug:"说一说-priorityqueue",link:"#说一说-priorityqueue",children:[]},{level:3,title:"什么是 BlockingQueue？",slug:"什么是-blockingqueue",link:"#什么是-blockingqueue",children:[]},{level:3,title:"BlockingQueue 的实现类有哪些？",slug:"blockingqueue-的实现类有哪些",link:"#blockingqueue-的实现类有哪些",children:[]},{level:3,title:"ArrayBlockingQueue 和 LinkedBlockingQueue 有什么区别？",slug:"arrayblockingqueue-和-linkedblockingqueue-有什么区别",link:"#arrayblockingqueue-和-linkedblockingqueue-有什么区别",children:[]}]}],path:"/java/collection/java-collection-questions-01.html",pathLocale:"/",extraFields:[]},{title:"Java集合常见面试题总结(下)",headers:[{level:2,title:"Map（重要）",slug:"map-重要",link:"#map-重要",children:[{level:3,title:"HashMap 和 Hashtable 的区别",slug:"hashmap-和-hashtable-的区别",link:"#hashmap-和-hashtable-的区别",children:[]},{level:3,title:"HashMap 和 HashSet 区别",slug:"hashmap-和-hashset-区别",link:"#hashmap-和-hashset-区别",children:[]},{level:3,title:"HashMap 和 TreeMap 区别",slug:"hashmap-和-treemap-区别",link:"#hashmap-和-treemap-区别",children:[]},{level:3,title:"HashSet 如何检查重复?",slug:"hashset-如何检查重复",link:"#hashset-如何检查重复",children:[]},{level:3,title:"HashMap 的底层实现",slug:"hashmap-的底层实现",link:"#hashmap-的底层实现",children:[]},{level:3,title:"HashMap 的长度为什么是 2 的幂次方",slug:"hashmap-的长度为什么是-2-的幂次方",link:"#hashmap-的长度为什么是-2-的幂次方",children:[]},{level:3,title:"HashMap 多线程操作导致死循环问题",slug:"hashmap-多线程操作导致死循环问题",link:"#hashmap-多线程操作导致死循环问题",children:[]},{level:3,title:"HashMap 为什么线程不安全？",slug:"hashmap-为什么线程不安全",link:"#hashmap-为什么线程不安全",children:[]},{level:3,title:"HashMap 常见的遍历方式?",slug:"hashmap-常见的遍历方式",link:"#hashmap-常见的遍历方式",children:[]},{level:3,title:"ConcurrentHashMap 和 Hashtable 的区别",slug:"concurrenthashmap-和-hashtable-的区别",link:"#concurrenthashmap-和-hashtable-的区别",children:[]},{level:3,title:"ConcurrentHashMap 线程安全的具体实现方式/底层具体实现",slug:"concurrenthashmap-线程安全的具体实现方式-底层具体实现",link:"#concurrenthashmap-线程安全的具体实现方式-底层具体实现",children:[]},{level:3,title:"JDK 1.7 和 JDK 1.8 的 ConcurrentHashMap 实现有什么不同？",slug:"jdk-1-7-和-jdk-1-8-的-concurrenthashmap-实现有什么不同",link:"#jdk-1-7-和-jdk-1-8-的-concurrenthashmap-实现有什么不同",children:[]},{level:3,title:"ConcurrentHashMap 为什么 key 和 value 不能为 null？",slug:"concurrenthashmap-为什么-key-和-value-不能为-null",link:"#concurrenthashmap-为什么-key-和-value-不能为-null",children:[]},{level:3,title:"ConcurrentHashMap 能保证复合操作的原子性吗？",slug:"concurrenthashmap-能保证复合操作的原子性吗",link:"#concurrenthashmap-能保证复合操作的原子性吗",children:[]}]},{level:2,title:"Collections 工具类（不重要）",slug:"collections-工具类-不重要",link:"#collections-工具类-不重要",children:[{level:3,title:"排序操作",slug:"排序操作",link:"#排序操作",children:[]},{level:3,title:"查找,替换操作",slug:"查找-替换操作",link:"#查找-替换操作",children:[]},{level:3,title:"同步控制",slug:"同步控制",link:"#同步控制",children:[]}]}],path:"/java/collection/java-collection-questions-02.html",pathLocale:"/",extraFields:[]},{title:"LinkedHashMap 源码分析",headers:[{level:2,title:"LinkedHashMap 简介",slug:"linkedhashmap-简介",link:"#linkedhashmap-简介",children:[]},{level:2,title:"LinkedHashMap 使用示例",slug:"linkedhashmap-使用示例",link:"#linkedhashmap-使用示例",children:[{level:3,title:"插入顺序遍历",slug:"插入顺序遍历",link:"#插入顺序遍历",children:[]},{level:3,title:"访问顺序遍历",slug:"访问顺序遍历",link:"#访问顺序遍历",children:[]},{level:3,title:"LRU 缓存",slug:"lru-缓存",link:"#lru-缓存",children:[]}]},{level:2,title:"LinkedHashMap 源码解析",slug:"linkedhashmap-源码解析",link:"#linkedhashmap-源码解析",children:[{level:3,title:"Node 的设计",slug:"node-的设计",link:"#node-的设计",children:[]},{level:3,title:"构造方法",slug:"构造方法",link:"#构造方法",children:[]},{level:3,title:"get 方法",slug:"get-方法",link:"#get-方法",children:[]},{level:3,title:"remove 方法后置操作——afterNodeRemoval",slug:"remove-方法后置操作——afternoderemoval",link:"#remove-方法后置操作——afternoderemoval",children:[]},{level:3,title:"put 方法后置操作——afterNodeInsertion",slug:"put-方法后置操作——afternodeinsertion",link:"#put-方法后置操作——afternodeinsertion",children:[]}]},{level:2,title:"LinkedHashMap 和 HashMap 遍历性能比较",slug:"linkedhashmap-和-hashmap-遍历性能比较",link:"#linkedhashmap-和-hashmap-遍历性能比较",children:[]},{level:2,title:"LinkedHashMap 常见面试题",slug:"linkedhashmap-常见面试题",link:"#linkedhashmap-常见面试题",children:[{level:3,title:"什么是 LinkedHashMap？",slug:"什么是-linkedhashmap",link:"#什么是-linkedhashmap",children:[]},{level:3,title:"LinkedHashMap 如何按照插入顺序迭代元素？",slug:"linkedhashmap-如何按照插入顺序迭代元素",link:"#linkedhashmap-如何按照插入顺序迭代元素",children:[]},{level:3,title:"LinkedHashMap 如何按照访问顺序迭代元素？",slug:"linkedhashmap-如何按照访问顺序迭代元素",link:"#linkedhashmap-如何按照访问顺序迭代元素",children:[]},{level:3,title:"LinkedHashMap 如何实现 LRU 缓存？",slug:"linkedhashmap-如何实现-lru-缓存",link:"#linkedhashmap-如何实现-lru-缓存",children:[]},{level:3,title:"LinkedHashMap 和 HashMap 有什么区别？",slug:"linkedhashmap-和-hashmap-有什么区别",link:"#linkedhashmap-和-hashmap-有什么区别",children:[]}]},{level:2,title:"参考文献",slug:"参考文献",link:"#参考文献",children:[]}],path:"/java/collection/linkedhashmap-source-code.html",pathLocale:"/",extraFields:[]},{title:"LinkedList 源码分析",headers:[{level:2,title:"LinkedList 简介",slug:"linkedlist-简介",link:"#linkedlist-简介",children:[{level:3,title:"LinkedList 插入和删除元素的时间复杂度？",slug:"linkedlist-插入和删除元素的时间复杂度",link:"#linkedlist-插入和删除元素的时间复杂度",children:[]},{level:3,title:"LinkedList 为什么不能实现 RandomAccess 接口？",slug:"linkedlist-为什么不能实现-randomaccess-接口",link:"#linkedlist-为什么不能实现-randomaccess-接口",children:[]}]},{level:2,title:"LinkedList 源码分析",slug:"linkedlist-源码分析",link:"#linkedlist-源码分析",children:[{level:3,title:"初始化",slug:"初始化",link:"#初始化",children:[]},{level:3,title:"插入元素",slug:"插入元素",link:"#插入元素",children:[]},{level:3,title:"获取元素",slug:"获取元素",link:"#获取元素",children:[]},{level:3,title:"删除元素",slug:"删除元素",link:"#删除元素",children:[]},{level:3,title:"遍历链表",slug:"遍历链表",link:"#遍历链表",children:[]}]},{level:2,title:"LinkedList 常用方法测试",slug:"linkedlist-常用方法测试",link:"#linkedlist-常用方法测试",children:[]}],path:"/java/collection/linkedlist-source-code.html",pathLocale:"/",extraFields:[]},{title:"PriorityQueue 源码分析（付费）",headers:[],path:"/java/collection/priorityqueue-source-code.html",pathLocale:"/",extraFields:[]},{title:"AQS 详解",headers:[{level:2,title:"AQS 介绍",slug:"aqs-介绍",link:"#aqs-介绍",children:[]},{level:2,title:"AQS 原理",slug:"aqs-原理",link:"#aqs-原理",children:[{level:3,title:"AQS 核心思想",slug:"aqs-核心思想",link:"#aqs-核心思想",children:[]},{level:3,title:"AQS 资源共享方式",slug:"aqs-资源共享方式",link:"#aqs-资源共享方式",children:[]},{level:3,title:"自定义同步器",slug:"自定义同步器",link:"#自定义同步器",children:[]}]},{level:2,title:"常见同步工具类",slug:"常见同步工具类",link:"#常见同步工具类",children:[{level:3,title:"Semaphore(信号量)",slug:"semaphore-信号量",link:"#semaphore-信号量",children:[]},{level:3,title:"CountDownLatch （倒计时器）",slug:"countdownlatch-倒计时器",link:"#countdownlatch-倒计时器",children:[]},{level:3,title:"CyclicBarrier(循环栅栏)",slug:"cyclicbarrier-循环栅栏",link:"#cyclicbarrier-循环栅栏",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/aqs.html",pathLocale:"/",extraFields:[]},{title:"Atomic 原子类总结",headers:[{level:2,title:"Atomic 原子类介绍",slug:"atomic-原子类介绍",link:"#atomic-原子类介绍",children:[]},{level:2,title:"基本类型原子类",slug:"基本类型原子类",link:"#基本类型原子类",children:[{level:3,title:"基本数据类型原子类的优势",slug:"基本数据类型原子类的优势",link:"#基本数据类型原子类的优势",children:[]},{level:3,title:"AtomicInteger 线程安全原理简单分析",slug:"atomicinteger-线程安全原理简单分析",link:"#atomicinteger-线程安全原理简单分析",children:[]}]},{level:2,title:"数组类型原子类",slug:"数组类型原子类",link:"#数组类型原子类",children:[]},{level:2,title:"引用类型原子类",slug:"引用类型原子类",link:"#引用类型原子类",children:[]},{level:2,title:"对象的属性修改类型原子类",slug:"对象的属性修改类型原子类",link:"#对象的属性修改类型原子类",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/atomic-classes.html",pathLocale:"/",extraFields:[]},{title:"CompletableFuture 详解",headers:[{level:2,title:"Future 介绍",slug:"future-介绍",link:"#future-介绍",children:[]},{level:2,title:"CompletableFuture 介绍",slug:"completablefuture-介绍",link:"#completablefuture-介绍",children:[]},{level:2,title:"CompletableFuture 常见操作",slug:"completablefuture-常见操作",link:"#completablefuture-常见操作",children:[{level:3,title:"创建 CompletableFuture",slug:"创建-completablefuture",link:"#创建-completablefuture",children:[]},{level:3,title:"处理异步结算的结果",slug:"处理异步结算的结果",link:"#处理异步结算的结果",children:[]},{level:3,title:"异常处理",slug:"异常处理",link:"#异常处理",children:[]},{level:3,title:"组合 CompletableFuture",slug:"组合-completablefuture",link:"#组合-completablefuture",children:[]},{level:3,title:"并行运行多个 CompletableFuture",slug:"并行运行多个-completablefuture",link:"#并行运行多个-completablefuture",children:[]}]},{level:2,title:"CompletableFuture 使用建议",slug:"completablefuture-使用建议",link:"#completablefuture-使用建议",children:[{level:3,title:"使用自定义线程池",slug:"使用自定义线程池",link:"#使用自定义线程池",children:[]},{level:3,title:"尽量避免使用 get()",slug:"尽量避免使用-get",link:"#尽量避免使用-get",children:[]},{level:3,title:"正确进行异常处理",slug:"正确进行异常处理",link:"#正确进行异常处理",children:[]},{level:3,title:"合理组合多个异步任务",slug:"合理组合多个异步任务",link:"#合理组合多个异步任务",children:[]}]},{level:2,title:"后记",slug:"后记",link:"#后记",children:[]}],path:"/java/concurrent/completablefuture-intro.html",pathLocale:"/",extraFields:[]},{title:"Java 常见并发容器总结",headers:[{level:2,title:"ConcurrentHashMap",slug:"concurrenthashmap",link:"#concurrenthashmap",children:[]},{level:2,title:"CopyOnWriteArrayList",slug:"copyonwritearraylist",link:"#copyonwritearraylist",children:[]},{level:2,title:"ConcurrentLinkedQueue",slug:"concurrentlinkedqueue",link:"#concurrentlinkedqueue",children:[]},{level:2,title:"BlockingQueue",slug:"blockingqueue",link:"#blockingqueue",children:[{level:3,title:"BlockingQueue 简介",slug:"blockingqueue-简介",link:"#blockingqueue-简介",children:[]},{level:3,title:"ArrayBlockingQueue",slug:"arrayblockingqueue",link:"#arrayblockingqueue",children:[]},{level:3,title:"LinkedBlockingQueue",slug:"linkedblockingqueue",link:"#linkedblockingqueue",children:[]},{level:3,title:"PriorityBlockingQueue",slug:"priorityblockingqueue",link:"#priorityblockingqueue",children:[]}]},{level:2,title:"ConcurrentSkipListMap",slug:"concurrentskiplistmap",link:"#concurrentskiplistmap",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/java-concurrent-collections.html",pathLocale:"/",extraFields:[]},{title:"Java并发常见面试题总结（上）",headers:[{level:2,title:"线程",slug:"线程",link:"#线程",children:[{level:3,title:"什么是线程和进程?",slug:"什么是线程和进程",link:"#什么是线程和进程",children:[]},{level:3,title:"什么是协程",slug:"什么是协程",link:"#什么是协程",children:[]},{level:3,title:"Java 线程和操作系统的线程有啥区别？",slug:"java-线程和操作系统的线程有啥区别",link:"#java-线程和操作系统的线程有啥区别",children:[]},{level:3,title:"请简要描述线程与进程的关系,区别及优缺点？",slug:"请简要描述线程与进程的关系-区别及优缺点",link:"#请简要描述线程与进程的关系-区别及优缺点",children:[]},{level:3,title:"如何创建线程？",slug:"如何创建线程",link:"#如何创建线程",children:[]},{level:3,title:"说说线程的生命周期和状态?",slug:"说说线程的生命周期和状态",link:"#说说线程的生命周期和状态",children:[]},{level:3,title:"什么是线程上下文切换?",slug:"什么是线程上下文切换",link:"#什么是线程上下文切换",children:[]},{level:3,title:"Thread#sleep() 方法和 Object#wait() 方法对比",slug:"thread-sleep-方法和-object-wait-方法对比",link:"#thread-sleep-方法和-object-wait-方法对比",children:[]},{level:3,title:"为什么 wait() 方法不定义在 Thread 中？",slug:"为什么-wait-方法不定义在-thread-中",link:"#为什么-wait-方法不定义在-thread-中",children:[]},{level:3,title:"可以直接调用 Thread 类的 run 方法吗？",slug:"可以直接调用-thread-类的-run-方法吗",link:"#可以直接调用-thread-类的-run-方法吗",children:[]}]},{level:2,title:"多线程",slug:"多线程",link:"#多线程",children:[{level:3,title:"并发与并行的区别",slug:"并发与并行的区别",link:"#并发与并行的区别",children:[]},{level:3,title:"同步和异步的区别",slug:"同步和异步的区别",link:"#同步和异步的区别",children:[]},{level:3,title:"为什么要使用多线程?",slug:"为什么要使用多线程",link:"#为什么要使用多线程",children:[]},{level:3,title:"使用多线程可能带来什么问题?",slug:"使用多线程可能带来什么问题",link:"#使用多线程可能带来什么问题",children:[]},{level:3,title:"如何理解线程安全和不安全？",slug:"如何理解线程安全和不安全",link:"#如何理解线程安全和不安全",children:[]},{level:3,title:"单核 CPU 上运行多个线程效率一定会高吗？",slug:"单核-cpu-上运行多个线程效率一定会高吗",link:"#单核-cpu-上运行多个线程效率一定会高吗",children:[]}]},{level:2,title:"死锁",slug:"死锁",link:"#死锁",children:[{level:3,title:"什么是线程死锁?",slug:"什么是线程死锁",link:"#什么是线程死锁",children:[]},{level:3,title:"如何检测死锁？",slug:"如何检测死锁",link:"#如何检测死锁",children:[]},{level:3,title:"如何预防和避免线程死锁?",slug:"如何预防和避免线程死锁",link:"#如何预防和避免线程死锁",children:[]}]}],path:"/java/concurrent/java-concurrent-questions-01.html",pathLocale:"/",extraFields:[]},{title:"Java并发常见面试题总结（中）",headers:[{level:2,title:"JMM(Java 内存模型)",slug:"jmm-java-内存模型",link:"#jmm-java-内存模型",children:[]},{level:2,title:"volatile 关键字",slug:"volatile-关键字",link:"#volatile-关键字",children:[{level:3,title:"如何保证变量的可见性？",slug:"如何保证变量的可见性",link:"#如何保证变量的可见性",children:[]},{level:3,title:"如何禁止指令重排序？",slug:"如何禁止指令重排序",link:"#如何禁止指令重排序",children:[]},{level:3,title:"volatile 可以保证原子性么？",slug:"volatile-可以保证原子性么",link:"#volatile-可以保证原子性么",children:[]}]},{level:2,title:"乐观锁和悲观锁",slug:"乐观锁和悲观锁",link:"#乐观锁和悲观锁",children:[{level:3,title:"什么是悲观锁？",slug:"什么是悲观锁",link:"#什么是悲观锁",children:[]},{level:3,title:"什么是乐观锁？",slug:"什么是乐观锁",link:"#什么是乐观锁",children:[]},{level:3,title:"如何实现乐观锁？",slug:"如何实现乐观锁",link:"#如何实现乐观锁",children:[]},{level:3,title:"CAS 算法存在哪些问题？",slug:"cas-算法存在哪些问题",link:"#cas-算法存在哪些问题",children:[]}]},{level:2,title:"synchronized 关键字",slug:"synchronized-关键字",link:"#synchronized-关键字",children:[{level:3,title:"synchronized 是什么？有什么用？",slug:"synchronized-是什么-有什么用",link:"#synchronized-是什么-有什么用",children:[]},{level:3,title:"如何使用 synchronized？",slug:"如何使用-synchronized",link:"#如何使用-synchronized",children:[]},{level:3,title:"构造方法可以用 synchronized 修饰么？",slug:"构造方法可以用-synchronized-修饰么",link:"#构造方法可以用-synchronized-修饰么",children:[]},{level:3,title:"synchronized 底层原理了解吗？",slug:"synchronized-底层原理了解吗",link:"#synchronized-底层原理了解吗",children:[]},{level:3,title:"JDK1.6 之后的 synchronized 底层做了哪些优化？锁升级原理了解吗？",slug:"jdk1-6-之后的-synchronized-底层做了哪些优化-锁升级原理了解吗",link:"#jdk1-6-之后的-synchronized-底层做了哪些优化-锁升级原理了解吗",children:[]},{level:3,title:"synchronized 和 volatile 有什么区别？",slug:"synchronized-和-volatile-有什么区别",link:"#synchronized-和-volatile-有什么区别",children:[]}]},{level:2,title:"ReentrantLock",slug:"reentrantlock",link:"#reentrantlock",children:[{level:3,title:"ReentrantLock 是什么？",slug:"reentrantlock-是什么",link:"#reentrantlock-是什么",children:[]},{level:3,title:"公平锁和非公平锁有什么区别？",slug:"公平锁和非公平锁有什么区别",link:"#公平锁和非公平锁有什么区别",children:[]},{level:3,title:"synchronized 和 ReentrantLock 有什么区别？",slug:"synchronized-和-reentrantlock-有什么区别",link:"#synchronized-和-reentrantlock-有什么区别",children:[]},{level:3,title:"可中断锁和不可中断锁有什么区别？",slug:"可中断锁和不可中断锁有什么区别",link:"#可中断锁和不可中断锁有什么区别",children:[]}]},{level:2,title:"ReentrantReadWriteLock",slug:"reentrantreadwritelock",link:"#reentrantreadwritelock",children:[{level:3,title:"ReentrantReadWriteLock 是什么？",slug:"reentrantreadwritelock-是什么",link:"#reentrantreadwritelock-是什么",children:[]},{level:3,title:"ReentrantReadWriteLock 适合什么场景？",slug:"reentrantreadwritelock-适合什么场景",link:"#reentrantreadwritelock-适合什么场景",children:[]},{level:3,title:"共享锁和独占锁有什么区别？",slug:"共享锁和独占锁有什么区别",link:"#共享锁和独占锁有什么区别",children:[]},{level:3,title:"线程持有读锁还能获取写锁吗？",slug:"线程持有读锁还能获取写锁吗",link:"#线程持有读锁还能获取写锁吗",children:[]},{level:3,title:"读锁为什么不能升级为写锁？",slug:"读锁为什么不能升级为写锁",link:"#读锁为什么不能升级为写锁",children:[]}]},{level:2,title:"StampedLock",slug:"stampedlock",link:"#stampedlock",children:[{level:3,title:"StampedLock 是什么？",slug:"stampedlock-是什么",link:"#stampedlock-是什么",children:[]},{level:3,title:"StampedLock 的性能为什么更好？",slug:"stampedlock-的性能为什么更好",link:"#stampedlock-的性能为什么更好",children:[]},{level:3,title:"StampedLock 适合什么场景？",slug:"stampedlock-适合什么场景",link:"#stampedlock-适合什么场景",children:[]},{level:3,title:"StampedLock 的底层原理了解吗？",slug:"stampedlock-的底层原理了解吗",link:"#stampedlock-的底层原理了解吗",children:[]}]},{level:2,title:"Atomic 原子类",slug:"atomic-原子类",link:"#atomic-原子类",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/java-concurrent-questions-02.html",pathLocale:"/",extraFields:[]},{title:"Java并发常见面试题总结（下）",headers:[{level:2,title:"ThreadLocal",slug:"threadlocal",link:"#threadlocal",children:[{level:3,title:"ThreadLocal 有什么用？",slug:"threadlocal-有什么用",link:"#threadlocal-有什么用",children:[]},{level:3,title:"如何使用 ThreadLocal？",slug:"如何使用-threadlocal",link:"#如何使用-threadlocal",children:[]},{level:3,title:"ThreadLocal 原理了解吗？",slug:"threadlocal-原理了解吗",link:"#threadlocal-原理了解吗",children:[]},{level:3,title:"ThreadLocal 内存泄露问题是怎么导致的？",slug:"threadlocal-内存泄露问题是怎么导致的",link:"#threadlocal-内存泄露问题是怎么导致的",children:[]}]},{level:2,title:"线程池",slug:"线程池",link:"#线程池",children:[{level:3,title:"什么是线程池?",slug:"什么是线程池",link:"#什么是线程池",children:[]},{level:3,title:"为什么要用线程池？",slug:"为什么要用线程池",link:"#为什么要用线程池",children:[]},{level:3,title:"如何创建线程池？",slug:"如何创建线程池",link:"#如何创建线程池",children:[]},{level:3,title:"为什么不推荐使用内置线程池？",slug:"为什么不推荐使用内置线程池",link:"#为什么不推荐使用内置线程池",children:[]},{level:3,title:"线程池常见参数有哪些？如何解释？",slug:"线程池常见参数有哪些-如何解释",link:"#线程池常见参数有哪些-如何解释",children:[]},{level:3,title:"线程池的拒绝策略有哪些？",slug:"线程池的拒绝策略有哪些",link:"#线程池的拒绝策略有哪些",children:[]},{level:3,title:"如果不允许丢弃任务任务，应该选择哪个拒绝策略？",slug:"如果不允许丢弃任务任务-应该选择哪个拒绝策略",link:"#如果不允许丢弃任务任务-应该选择哪个拒绝策略",children:[]},{level:3,title:"CallerRunsPolicy 拒绝策略有什么风险？如何解决？",slug:"callerrunspolicy-拒绝策略有什么风险-如何解决",link:"#callerrunspolicy-拒绝策略有什么风险-如何解决",children:[]},{level:3,title:"线程池常用的阻塞队列有哪些？",slug:"线程池常用的阻塞队列有哪些",link:"#线程池常用的阻塞队列有哪些",children:[]},{level:3,title:"线程池处理任务的流程了解吗？",slug:"线程池处理任务的流程了解吗",link:"#线程池处理任务的流程了解吗",children:[]},{level:3,title:"如何给线程池命名？",slug:"如何给线程池命名",link:"#如何给线程池命名",children:[]},{level:3,title:"如何设定线程池的大小？",slug:"如何设定线程池的大小",link:"#如何设定线程池的大小",children:[]},{level:3,title:"如何动态修改线程池的参数？",slug:"如何动态修改线程池的参数",link:"#如何动态修改线程池的参数",children:[]},{level:3,title:"如何设计一个能够根据任务的优先级来执行的线程池？",slug:"如何设计一个能够根据任务的优先级来执行的线程池",link:"#如何设计一个能够根据任务的优先级来执行的线程池",children:[]}]},{level:2,title:"Future",slug:"future",link:"#future",children:[{level:3,title:"Future 类有什么用？",slug:"future-类有什么用",link:"#future-类有什么用",children:[]},{level:3,title:"Callable 和 Future 有什么关系？",slug:"callable-和-future-有什么关系",link:"#callable-和-future-有什么关系",children:[]},{level:3,title:"CompletableFuture 类有什么用？",slug:"completablefuture-类有什么用",link:"#completablefuture-类有什么用",children:[]}]},{level:2,title:"AQS",slug:"aqs",link:"#aqs",children:[{level:3,title:"AQS 是什么？",slug:"aqs-是什么",link:"#aqs-是什么",children:[]},{level:3,title:"AQS 的原理是什么？",slug:"aqs-的原理是什么",link:"#aqs-的原理是什么",children:[]},{level:3,title:"Semaphore 有什么用？",slug:"semaphore-有什么用",link:"#semaphore-有什么用",children:[]},{level:3,title:"Semaphore 的原理是什么？",slug:"semaphore-的原理是什么",link:"#semaphore-的原理是什么",children:[]},{level:3,title:"CountDownLatch 有什么用？",slug:"countdownlatch-有什么用",link:"#countdownlatch-有什么用",children:[]},{level:3,title:"CountDownLatch 的原理是什么？",slug:"countdownlatch-的原理是什么",link:"#countdownlatch-的原理是什么",children:[]},{level:3,title:"用过 CountDownLatch 么？什么场景下用的？",slug:"用过-countdownlatch-么-什么场景下用的",link:"#用过-countdownlatch-么-什么场景下用的",children:[]},{level:3,title:"CyclicBarrier 有什么用？",slug:"cyclicbarrier-有什么用",link:"#cyclicbarrier-有什么用",children:[]},{level:3,title:"CyclicBarrier 的原理是什么？",slug:"cyclicbarrier-的原理是什么",link:"#cyclicbarrier-的原理是什么",children:[]}]},{level:2,title:"虚拟线程",slug:"虚拟线程",link:"#虚拟线程",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/java-concurrent-questions-03.html",pathLocale:"/",extraFields:[]},{title:"Java 线程练习",headers:[{level:2,title:"守护进程",slug:"守护进程",link:"#守护进程",children:[]},{level:2,title:"同步锁(synchronized)",slug:"同步锁-synchronized",link:"#同步锁-synchronized",children:[{level:3,title:"基本写法",slug:"基本写法",link:"#基本写法",children:[]},{level:3,title:"wait和notify方法",slug:"wait和notify方法",link:"#wait和notify方法",children:[]}]},{level:2,title:"ReentrantLock",slug:"reentrantlock",link:"#reentrantlock",children:[]}],path:"/java/concurrent/java-thread-point.html",pathLocale:"/",extraFields:[]},{title:"Java 线程池最佳实践",headers:[{level:2,title:"1、正确声明线程池",slug:"_1、正确声明线程池",link:"#_1、正确声明线程池",children:[]},{level:2,title:"2、监测线程池运行状态",slug:"_2、监测线程池运行状态",link:"#_2、监测线程池运行状态",children:[]},{level:2,title:"3、建议不同类别的业务用不同的线程池",slug:"_3、建议不同类别的业务用不同的线程池",link:"#_3、建议不同类别的业务用不同的线程池",children:[]},{level:2,title:"4、别忘记给线程池命名",slug:"_4、别忘记给线程池命名",link:"#_4、别忘记给线程池命名",children:[]},{level:2,title:"5、正确配置线程池参数",slug:"_5、正确配置线程池参数",link:"#_5、正确配置线程池参数",children:[{level:3,title:"常规操作",slug:"常规操作",link:"#常规操作",children:[]},{level:3,title:"美团的骚操作",slug:"美团的骚操作",link:"#美团的骚操作",children:[]}]},{level:2,title:"6、别忘记关闭线程池",slug:"_6、别忘记关闭线程池",link:"#_6、别忘记关闭线程池",children:[]},{level:2,title:"7、线程池尽量不要放耗时任务",slug:"_7、线程池尽量不要放耗时任务",link:"#_7、线程池尽量不要放耗时任务",children:[]},{level:2,title:"8、线程池使用的一些小坑",slug:"_8、线程池使用的一些小坑",link:"#_8、线程池使用的一些小坑",children:[{level:3,title:"重复创建线程池的坑",slug:"重复创建线程池的坑",link:"#重复创建线程池的坑",children:[]},{level:3,title:"Spring 内部线程池的坑",slug:"spring-内部线程池的坑",link:"#spring-内部线程池的坑",children:[]},{level:3,title:"线程池和 ThreadLocal 共用的坑",slug:"线程池和-threadlocal-共用的坑",link:"#线程池和-threadlocal-共用的坑",children:[]}]}],path:"/java/concurrent/java-thread-pool-best-practices.html",pathLocale:"/",extraFields:[]},{title:"Java 线程池详解",headers:[{level:2,title:"线程池介绍",slug:"线程池介绍",link:"#线程池介绍",children:[]},{level:2,title:"Executor 框架介绍",slug:"executor-框架介绍",link:"#executor-框架介绍",children:[]},{level:2,title:"ThreadPoolExecutor 类介绍（重要）",slug:"threadpoolexecutor-类介绍-重要",link:"#threadpoolexecutor-类介绍-重要",children:[{level:3,title:"线程池参数分析",slug:"线程池参数分析",link:"#线程池参数分析",children:[]},{level:3,title:"线程池创建的两种方式",slug:"线程池创建的两种方式",link:"#线程池创建的两种方式",children:[]},{level:3,title:"线程池常用的阻塞队列总结",slug:"线程池常用的阻塞队列总结",link:"#线程池常用的阻塞队列总结",children:[]}]},{level:2,title:"线程池原理分析（重要）",slug:"线程池原理分析-重要",link:"#线程池原理分析-重要",children:[{level:3,title:"线程池示例代码",slug:"线程池示例代码",link:"#线程池示例代码",children:[]},{level:3,title:"线程池原理分析",slug:"线程池原理分析",link:"#线程池原理分析",children:[]},{level:3,title:"几个常见的对比",slug:"几个常见的对比",link:"#几个常见的对比",children:[]}]},{level:2,title:"几种常见的内置线程池",slug:"几种常见的内置线程池",link:"#几种常见的内置线程池",children:[{level:3,title:"FixedThreadPool",slug:"fixedthreadpool",link:"#fixedthreadpool",children:[]},{level:3,title:"SingleThreadExecutor",slug:"singlethreadexecutor",link:"#singlethreadexecutor",children:[]},{level:3,title:"CachedThreadPool",slug:"cachedthreadpool",link:"#cachedthreadpool",children:[]},{level:3,title:"ScheduledThreadPool",slug:"scheduledthreadpool",link:"#scheduledthreadpool",children:[]}]},{level:2,title:"线程池最佳实践",slug:"线程池最佳实践",link:"#线程池最佳实践",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/java-thread-pool-summary.html",pathLocale:"/",extraFields:[]},{title:"JMM（Java 内存模型）详解",headers:[{level:2,title:"从 CPU 缓存模型说起",slug:"从-cpu-缓存模型说起",link:"#从-cpu-缓存模型说起",children:[]},{level:2,title:"指令重排序",slug:"指令重排序",link:"#指令重排序",children:[]},{level:2,title:"JMM(Java Memory Model)",slug:"jmm-java-memory-model",link:"#jmm-java-memory-model",children:[{level:3,title:"什么是 JMM？为什么需要 JMM？",slug:"什么是-jmm-为什么需要-jmm",link:"#什么是-jmm-为什么需要-jmm",children:[]},{level:3,title:"JMM 是如何抽象线程和主内存之间的关系？",slug:"jmm-是如何抽象线程和主内存之间的关系",link:"#jmm-是如何抽象线程和主内存之间的关系",children:[]},{level:3,title:"Java 内存区域和 JMM 有何区别？",slug:"java-内存区域和-jmm-有何区别",link:"#java-内存区域和-jmm-有何区别",children:[]},{level:3,title:"happens-before 原则是什么？",slug:"happens-before-原则是什么",link:"#happens-before-原则是什么",children:[]},{level:3,title:"happens-before 常见规则有哪些？谈谈你的理解？",slug:"happens-before-常见规则有哪些-谈谈你的理解",link:"#happens-before-常见规则有哪些-谈谈你的理解",children:[]},{level:3,title:"happens-before 和 JMM 什么关系？",slug:"happens-before-和-jmm-什么关系",link:"#happens-before-和-jmm-什么关系",children:[]}]},{level:2,title:"再看并发编程三个重要特性",slug:"再看并发编程三个重要特性",link:"#再看并发编程三个重要特性",children:[{level:3,title:"原子性",slug:"原子性",link:"#原子性",children:[]},{level:3,title:"可见性",slug:"可见性",link:"#可见性",children:[]},{level:3,title:"有序性",slug:"有序性",link:"#有序性",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/jmm.html",pathLocale:"/",extraFields:[]},{title:"乐观锁和悲观锁详解",headers:[{level:2,title:"什么是悲观锁？",slug:"什么是悲观锁",link:"#什么是悲观锁",children:[]},{level:2,title:"什么是乐观锁？",slug:"什么是乐观锁",link:"#什么是乐观锁",children:[]},{level:2,title:"如何实现乐观锁？",slug:"如何实现乐观锁",link:"#如何实现乐观锁",children:[{level:3,title:"版本号机制",slug:"版本号机制",link:"#版本号机制",children:[]},{level:3,title:"CAS 算法",slug:"cas-算法",link:"#cas-算法",children:[]}]},{level:2,title:"CAS 算法存在哪些问题？",slug:"cas-算法存在哪些问题",link:"#cas-算法存在哪些问题",children:[{level:3,title:"ABA 问题",slug:"aba-问题",link:"#aba-问题",children:[]},{level:3,title:"循环时间长开销大",slug:"循环时间长开销大",link:"#循环时间长开销大",children:[]},{level:3,title:"只能保证一个共享变量的原子操作",slug:"只能保证一个共享变量的原子操作",link:"#只能保证一个共享变量的原子操作",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/concurrent/optimistic-lock-and-pessimistic-lock.html",pathLocale:"/",extraFields:[]},{title:"从ReentrantLock的实现看AQS的原理及应用",headers:[{level:2,title:"1 ReentrantLock",slug:"_1-reentrantlock",link:"#_1-reentrantlock",children:[{level:3,title:"1.1 ReentrantLock 特性概览",slug:"_1-1-reentrantlock-特性概览",link:"#_1-1-reentrantlock-特性概览",children:[]},{level:3,title:"1.2 ReentrantLock 与 AQS 的关联",slug:"_1-2-reentrantlock-与-aqs-的关联",link:"#_1-2-reentrantlock-与-aqs-的关联",children:[]}]},{level:2,title:"2 AQS",slug:"_2-aqs",link:"#_2-aqs",children:[{level:3,title:"2.1 原理概览",slug:"_2-1-原理概览",link:"#_2-1-原理概览",children:[]},{level:3,title:"2.2 AQS 重要方法与 ReentrantLock 的关联",slug:"_2-2-aqs-重要方法与-reentrantlock-的关联",link:"#_2-2-aqs-重要方法与-reentrantlock-的关联",children:[]}]},{level:2,title:"3 通过 ReentrantLock 理解 AQS",slug:"_3-通过-reentrantlock-理解-aqs",link:"#_3-通过-reentrantlock-理解-aqs",children:[{level:3,title:"3.1 线程加入等待队列",slug:"_3-1-线程加入等待队列",link:"#_3-1-线程加入等待队列",children:[]},{level:3,title:"3.2 CANCELLED 状态节点生成",slug:"_3-2-cancelled-状态节点生成",link:"#_3-2-cancelled-状态节点生成",children:[]},{level:3,title:"3.3 如何解锁",slug:"_3-3-如何解锁",link:"#_3-3-如何解锁",children:[]},{level:3,title:"3.4 中断恢复后的执行流程",slug:"_3-4-中断恢复后的执行流程",link:"#_3-4-中断恢复后的执行流程",children:[]},{level:3,title:"3.5 小结",slug:"_3-5-小结",link:"#_3-5-小结",children:[]}]},{level:2,title:"4 AQS 应用",slug:"_4-aqs-应用",link:"#_4-aqs-应用",children:[{level:3,title:"4.1 ReentrantLock 的可重入应用",slug:"_4-1-reentrantlock-的可重入应用",link:"#_4-1-reentrantlock-的可重入应用",children:[]},{level:3,title:"4.2 JUC 中的应用场景",slug:"_4-2-juc-中的应用场景",link:"#_4-2-juc-中的应用场景",children:[]},{level:3,title:"4.3 自定义同步工具",slug:"_4-3-自定义同步工具",link:"#_4-3-自定义同步工具",children:[]}]},{level:2,title:"5 总结",slug:"_5-总结",link:"#_5-总结",children:[]},{level:2,title:"参考资料",slug:"参考资料",link:"#参考资料",children:[]}],path:"/java/concurrent/reentrantlock.html",pathLocale:"/",extraFields:[]},{title:"ThreadLocal 详解",headers:[{level:3,title:"前言",slug:"前言",link:"#前言",children:[]},{level:3,title:"目录",slug:"目录",link:"#目录",children:[]},{level:3,title:"ThreadLocal代码演示",slug:"threadlocal代码演示",link:"#threadlocal代码演示",children:[]},{level:3,title:"ThreadLocal的数据结构",slug:"threadlocal的数据结构",link:"#threadlocal的数据结构",children:[]},{level:3,title:"GC 之后 key 是否为 null？",slug:"gc-之后-key-是否为-null",link:"#gc-之后-key-是否为-null",children:[]},{level:3,title:"ThreadLocal.set()方法源码详解",slug:"threadlocal-set-方法源码详解",link:"#threadlocal-set-方法源码详解",children:[]},{level:3,title:"ThreadLocalMap Hash 算法",slug:"threadlocalmap-hash-算法",link:"#threadlocalmap-hash-算法",children:[]},{level:3,title:"ThreadLocalMap Hash 冲突",slug:"threadlocalmap-hash-冲突",link:"#threadlocalmap-hash-冲突",children:[]},{level:3,title:"ThreadLocalMap.set()详解",slug:"threadlocalmap-set-详解",link:"#threadlocalmap-set-详解",children:[]},{level:3,title:"ThreadLocalMap过期 key 的探测式清理流程",slug:"threadlocalmap过期-key-的探测式清理流程",link:"#threadlocalmap过期-key-的探测式清理流程",children:[]},{level:3,title:"ThreadLocalMap扩容机制",slug:"threadlocalmap扩容机制",link:"#threadlocalmap扩容机制",children:[]},{level:3,title:"ThreadLocalMap.get()详解",slug:"threadlocalmap-get-详解",link:"#threadlocalmap-get-详解",children:[]},{level:3,title:"ThreadLocalMap过期 key 的启发式清理流程",slug:"threadlocalmap过期-key-的启发式清理流程",link:"#threadlocalmap过期-key-的启发式清理流程",children:[]},{level:3,title:"InheritableThreadLocal",slug:"inheritablethreadlocal",link:"#inheritablethreadlocal",children:[]},{level:3,title:"ThreadLocal项目中使用实战",slug:"threadlocal项目中使用实战",link:"#threadlocal项目中使用实战",children:[]}],path:"/java/concurrent/threadlocal.html",pathLocale:"/",extraFields:[]},{title:"虚拟线程极简入门",headers:[{level:2,title:"什么是虚拟线程？",slug:"什么是虚拟线程",link:"#什么是虚拟线程",children:[]},{level:2,title:"虚拟线程和平台线程有什么关系？",slug:"虚拟线程和平台线程有什么关系",link:"#虚拟线程和平台线程有什么关系",children:[]},{level:2,title:"虚拟线程有什么优点和缺点？",slug:"虚拟线程有什么优点和缺点",link:"#虚拟线程有什么优点和缺点",children:[{level:3,title:"优点",slug:"优点",link:"#优点",children:[]},{level:3,title:"缺点",slug:"缺点",link:"#缺点",children:[]}]},{level:2,title:"四种创建虚拟线程的方法",slug:"四种创建虚拟线程的方法",link:"#四种创建虚拟线程的方法",children:[]},{level:2,title:"虚拟线程和平台线程性能对比",slug:"虚拟线程和平台线程性能对比",link:"#虚拟线程和平台线程性能对比",children:[]}],path:"/java/concurrent/virtual-thread.html",pathLocale:"/",extraFields:[]},{title:"Java IO 基础知识总结",headers:[{level:2,title:"IO 流简介",slug:"io-流简介",link:"#io-流简介",children:[]},{level:2,title:"字节流",slug:"字节流",link:"#字节流",children:[{level:3,title:"InputStream（字节输入流）",slug:"inputstream-字节输入流",link:"#inputstream-字节输入流",children:[]},{level:3,title:"OutputStream（字节输出流）",slug:"outputstream-字节输出流",link:"#outputstream-字节输出流",children:[]}]},{level:2,title:"字符流",slug:"字符流",link:"#字符流",children:[{level:3,title:"Reader（字符输入流）",slug:"reader-字符输入流",link:"#reader-字符输入流",children:[]},{level:3,title:"Writer（字符输出流）",slug:"writer-字符输出流",link:"#writer-字符输出流",children:[]}]},{level:2,title:"字节缓冲流",slug:"字节缓冲流",link:"#字节缓冲流",children:[{level:3,title:"BufferedInputStream（字节缓冲输入流）",slug:"bufferedinputstream-字节缓冲输入流",link:"#bufferedinputstream-字节缓冲输入流",children:[]},{level:3,title:"BufferedOutputStream（字节缓冲输出流）",slug:"bufferedoutputstream-字节缓冲输出流",link:"#bufferedoutputstream-字节缓冲输出流",children:[]}]},{level:2,title:"字符缓冲流",slug:"字符缓冲流",link:"#字符缓冲流",children:[]},{level:2,title:"打印流",slug:"打印流",link:"#打印流",children:[]},{level:2,title:"随机访问流",slug:"随机访问流",link:"#随机访问流",children:[]}],path:"/java/io/io-basis.html",pathLocale:"/",extraFields:[]},{title:"Java IO 设计模式总结",headers:[{level:2,title:"装饰器模式",slug:"装饰器模式",link:"#装饰器模式",children:[]},{level:2,title:"适配器模式",slug:"适配器模式",link:"#适配器模式",children:[]},{level:2,title:"工厂模式",slug:"工厂模式",link:"#工厂模式",children:[]},{level:2,title:"观察者模式",slug:"观察者模式",link:"#观察者模式",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/io/io-design-patterns.html",pathLocale:"/",extraFields:[]},{title:"Java IO 模型详解",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"I/O",slug:"i-o",link:"#i-o",children:[{level:3,title:"何为 I/O?",slug:"何为-i-o",link:"#何为-i-o",children:[]},{level:3,title:"有哪些常见的 IO 模型?",slug:"有哪些常见的-io-模型",link:"#有哪些常见的-io-模型",children:[]}]},{level:2,title:"Java 中 3 种常见 IO 模型",slug:"java-中-3-种常见-io-模型",link:"#java-中-3-种常见-io-模型",children:[{level:3,title:"BIO (Blocking I/O)",slug:"bio-blocking-i-o",link:"#bio-blocking-i-o",children:[]},{level:3,title:"NIO (Non-blocking/New I/O)",slug:"nio-non-blocking-new-i-o",link:"#nio-non-blocking-new-i-o",children:[]},{level:3,title:"AIO (Asynchronous I/O)",slug:"aio-asynchronous-i-o",link:"#aio-asynchronous-i-o",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/io/io-model.html",pathLocale:"/",extraFields:[]},{title:"Java NIO 核心知识总结",headers:[{level:2,title:"NIO 简介",slug:"nio-简介",link:"#nio-简介",children:[]},{level:2,title:"NIO 核心组件",slug:"nio-核心组件",link:"#nio-核心组件",children:[{level:3,title:"Buffer（缓冲区）",slug:"buffer-缓冲区",link:"#buffer-缓冲区",children:[]},{level:3,title:"Channel（通道）",slug:"channel-通道",link:"#channel-通道",children:[]},{level:3,title:"Selector（选择器）",slug:"selector-选择器",link:"#selector-选择器",children:[]}]},{level:2,title:"NIO 零拷贝",slug:"nio-零拷贝",link:"#nio-零拷贝",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/io/nio-basis.html",pathLocale:"/",extraFields:[]},{title:"类文件结构详解",headers:[{level:2,title:"回顾一下字节码",slug:"回顾一下字节码",link:"#回顾一下字节码",children:[]},{level:2,title:"Class 文件结构总结",slug:"class-文件结构总结",link:"#class-文件结构总结",children:[{level:3,title:"魔数（Magic Number）",slug:"魔数-magic-number",link:"#魔数-magic-number",children:[]},{level:3,title:"Class 文件版本号（Minor&Major Version）",slug:"class-文件版本号-minor-major-version",link:"#class-文件版本号-minor-major-version",children:[]},{level:3,title:"常量池（Constant Pool）",slug:"常量池-constant-pool",link:"#常量池-constant-pool",children:[]},{level:3,title:"访问标志(Access Flags)",slug:"访问标志-access-flags",link:"#访问标志-access-flags",children:[]},{level:3,title:"当前类（This Class）、父类（Super Class）、接口（Interfaces）索引集合",slug:"当前类-this-class-、父类-super-class-、接口-interfaces-索引集合",link:"#当前类-this-class-、父类-super-class-、接口-interfaces-索引集合",children:[]},{level:3,title:"字段表集合（Fields）",slug:"字段表集合-fields",link:"#字段表集合-fields",children:[]},{level:3,title:"方法表集合（Methods）",slug:"方法表集合-methods",link:"#方法表集合-methods",children:[]},{level:3,title:"属性表集合（Attributes）",slug:"属性表集合-attributes",link:"#属性表集合-attributes",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/jvm/class-file-structure.html",pathLocale:"/",extraFields:[]},{title:"类加载过程详解",headers:[{level:2,title:"类的生命周期",slug:"类的生命周期",link:"#类的生命周期",children:[]},{level:2,title:"类加载过程",slug:"类加载过程",link:"#类加载过程",children:[{level:3,title:"加载",slug:"加载",link:"#加载",children:[]},{level:3,title:"验证",slug:"验证",link:"#验证",children:[]},{level:3,title:"准备",slug:"准备",link:"#准备",children:[]},{level:3,title:"解析",slug:"解析",link:"#解析",children:[]},{level:3,title:"初始化",slug:"初始化",link:"#初始化",children:[]}]},{level:2,title:"类卸载",slug:"类卸载",link:"#类卸载",children:[]}],path:"/java/jvm/class-loading-process.html",pathLocale:"/",extraFields:[]},{title:"类加载器详解（重点）",headers:[{level:2,title:"回顾一下类加载过程",slug:"回顾一下类加载过程",link:"#回顾一下类加载过程",children:[]},{level:2,title:"类加载器",slug:"类加载器",link:"#类加载器",children:[{level:3,title:"类加载器介绍",slug:"类加载器介绍",link:"#类加载器介绍",children:[]},{level:3,title:"类加载器加载规则",slug:"类加载器加载规则",link:"#类加载器加载规则",children:[]},{level:3,title:"类加载器总结",slug:"类加载器总结",link:"#类加载器总结",children:[]},{level:3,title:"自定义类加载器",slug:"自定义类加载器",link:"#自定义类加载器",children:[]}]},{level:2,title:"双亲委派模型",slug:"双亲委派模型",link:"#双亲委派模型",children:[{level:3,title:"双亲委派模型介绍",slug:"双亲委派模型介绍",link:"#双亲委派模型介绍",children:[]},{level:3,title:"双亲委派模型的执行流程",slug:"双亲委派模型的执行流程",link:"#双亲委派模型的执行流程",children:[]},{level:3,title:"双亲委派模型的好处",slug:"双亲委派模型的好处",link:"#双亲委派模型的好处",children:[]},{level:3,title:"打破双亲委派模型方法",slug:"打破双亲委派模型方法",link:"#打破双亲委派模型方法",children:[]}]},{level:2,title:"推荐阅读",slug:"推荐阅读",link:"#推荐阅读",children:[]}],path:"/java/jvm/classloader.html",pathLocale:"/",extraFields:[]},{title:"JDK监控和故障处理工具总结",headers:[{level:2,title:"JDK 命令行工具",slug:"jdk-命令行工具",link:"#jdk-命令行工具",children:[{level:3,title:"jps:查看所有 Java 进程",slug:"jps-查看所有-java-进程",link:"#jps-查看所有-java-进程",children:[]},{level:3,title:"jstat: 监视虚拟机各种运行状态信息",slug:"jstat-监视虚拟机各种运行状态信息",link:"#jstat-监视虚拟机各种运行状态信息",children:[]},{level:3,title:"jinfo: 实时地查看和调整虚拟机各项参数",slug:"jinfo-实时地查看和调整虚拟机各项参数",link:"#jinfo-实时地查看和调整虚拟机各项参数",children:[]},{level:3,title:"jmap:生成堆转储快照",slug:"jmap-生成堆转储快照",link:"#jmap-生成堆转储快照",children:[]},{level:3,title:"jhat: 分析 heapdump 文件",slug:"jhat-分析-heapdump-文件",link:"#jhat-分析-heapdump-文件",children:[]},{level:3,title:"jstack :生成虚拟机当前时刻的线程快照",slug:"jstack-生成虚拟机当前时刻的线程快照",link:"#jstack-生成虚拟机当前时刻的线程快照",children:[]}]},{level:2,title:"JDK 可视化分析工具",slug:"jdk-可视化分析工具",link:"#jdk-可视化分析工具",children:[{level:3,title:"JConsole:Java 监视与管理控制台",slug:"jconsole-java-监视与管理控制台",link:"#jconsole-java-监视与管理控制台",children:[]},{level:3,title:"Visual VM:多合一故障处理工具",slug:"visual-vm-多合一故障处理工具",link:"#visual-vm-多合一故障处理工具",children:[]},{level:3,title:"MAT：内存分析器工具",slug:"mat-内存分析器工具",link:"#mat-内存分析器工具",children:[]}]}],path:"/java/jvm/jdk-monitoring-and-troubleshooting-tools.html",pathLocale:"/",extraFields:[]},{title:"JVM垃圾回收详解（重点）",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"堆空间的基本结构",slug:"堆空间的基本结构",link:"#堆空间的基本结构",children:[]},{level:2,title:"内存分配和回收原则",slug:"内存分配和回收原则",link:"#内存分配和回收原则",children:[{level:3,title:"对象优先在 Eden 区分配",slug:"对象优先在-eden-区分配",link:"#对象优先在-eden-区分配",children:[]},{level:3,title:"大对象直接进入老年代",slug:"大对象直接进入老年代",link:"#大对象直接进入老年代",children:[]},{level:3,title:"长期存活的对象将进入老年代",slug:"长期存活的对象将进入老年代",link:"#长期存活的对象将进入老年代",children:[]},{level:3,title:"主要进行 gc 的区域",slug:"主要进行-gc-的区域",link:"#主要进行-gc-的区域",children:[]},{level:3,title:"空间分配担保",slug:"空间分配担保",link:"#空间分配担保",children:[]}]},{level:2,title:"死亡对象判断方法",slug:"死亡对象判断方法",link:"#死亡对象判断方法",children:[{level:3,title:"引用计数法",slug:"引用计数法",link:"#引用计数法",children:[]},{level:3,title:"可达性分析算法",slug:"可达性分析算法",link:"#可达性分析算法",children:[]},{level:3,title:"引用类型总结",slug:"引用类型总结",link:"#引用类型总结",children:[]},{level:3,title:"如何判断一个常量是废弃常量？",slug:"如何判断一个常量是废弃常量",link:"#如何判断一个常量是废弃常量",children:[]},{level:3,title:"如何判断一个类是无用的类？",slug:"如何判断一个类是无用的类",link:"#如何判断一个类是无用的类",children:[]}]},{level:2,title:"垃圾收集算法",slug:"垃圾收集算法",link:"#垃圾收集算法",children:[{level:3,title:"标记-清除算法",slug:"标记-清除算法",link:"#标记-清除算法",children:[]},{level:3,title:"复制算法",slug:"复制算法",link:"#复制算法",children:[]},{level:3,title:"标记-整理算法",slug:"标记-整理算法",link:"#标记-整理算法",children:[]},{level:3,title:"分代收集算法",slug:"分代收集算法",link:"#分代收集算法",children:[]}]},{level:2,title:"垃圾收集器",slug:"垃圾收集器",link:"#垃圾收集器",children:[{level:3,title:"Serial 收集器",slug:"serial-收集器",link:"#serial-收集器",children:[]},{level:3,title:"ParNew 收集器",slug:"parnew-收集器",link:"#parnew-收集器",children:[]},{level:3,title:"Parallel Scavenge 收集器",slug:"parallel-scavenge-收集器",link:"#parallel-scavenge-收集器",children:[]},{level:3,title:"Serial Old 收集器",slug:"serial-old-收集器",link:"#serial-old-收集器",children:[]},{level:3,title:"Parallel Old 收集器",slug:"parallel-old-收集器",link:"#parallel-old-收集器",children:[]},{level:3,title:"CMS 收集器",slug:"cms-收集器",link:"#cms-收集器",children:[]},{level:3,title:"G1 收集器",slug:"g1-收集器",link:"#g1-收集器",children:[]},{level:3,title:"ZGC 收集器",slug:"zgc-收集器",link:"#zgc-收集器",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/jvm/jvm-garbage-collection.html",pathLocale:"/",extraFields:[]},{title:"JVM线上问题排查和性能调优案例",headers:[],path:"/java/jvm/jvm-in-action.html",pathLocale:"/",extraFields:[]},{title:"大白话带你认识 JVM",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"一、JVM 的基本介绍",slug:"一、jvm-的基本介绍",link:"#一、jvm-的基本介绍",children:[{level:3,title:"1.1 Java 文件是如何被运行的",slug:"_1-1-java-文件是如何被运行的",link:"#_1-1-java-文件是如何被运行的",children:[]},{level:3,title:"1.2 简单的代码例子",slug:"_1-2-简单的代码例子",link:"#_1-2-简单的代码例子",children:[]}]},{level:2,title:"二、类加载器的介绍",slug:"二、类加载器的介绍",link:"#二、类加载器的介绍",children:[{level:3,title:"2.1 类加载器的流程",slug:"_2-1-类加载器的流程",link:"#_2-1-类加载器的流程",children:[]},{level:3,title:"2.2 类加载器的加载顺序",slug:"_2-2-类加载器的加载顺序",link:"#_2-2-类加载器的加载顺序",children:[]},{level:3,title:"2.3 双亲委派机制",slug:"_2-3-双亲委派机制",link:"#_2-3-双亲委派机制",children:[]}]},{level:2,title:"三、运行时数据区",slug:"三、运行时数据区",link:"#三、运行时数据区",children:[{level:3,title:"3.1 本地方法栈和程序计数器",slug:"_3-1-本地方法栈和程序计数器",link:"#_3-1-本地方法栈和程序计数器",children:[]},{level:3,title:"3.2 方法区",slug:"_3-2-方法区",link:"#_3-2-方法区",children:[]},{level:3,title:"3.3 虚拟机栈和虚拟机堆",slug:"_3-3-虚拟机栈和虚拟机堆",link:"#_3-3-虚拟机栈和虚拟机堆",children:[]},{level:3,title:"3.4 垃圾回收算法",slug:"_3-4-垃圾回收算法",link:"#_3-4-垃圾回收算法",children:[]},{level:3,title:"3.5 （了解）各种各样的垃圾回收器",slug:"_3-5-了解-各种各样的垃圾回收器",link:"#_3-5-了解-各种各样的垃圾回收器",children:[]},{level:3,title:"3.6 （了解）JVM 的常用参数",slug:"_3-6-了解-jvm-的常用参数",link:"#_3-6-了解-jvm-的常用参数",children:[]}]},{level:2,title:"四、关于 JVM 调优的一些方面",slug:"四、关于-jvm-调优的一些方面",link:"#四、关于-jvm-调优的一些方面",children:[{level:3,title:"4.1 调整最大堆内存和最小堆内存",slug:"_4-1-调整最大堆内存和最小堆内存",link:"#_4-1-调整最大堆内存和最小堆内存",children:[]},{level:3,title:"4.2 调整新生代和老年代的比值",slug:"_4-2-调整新生代和老年代的比值",link:"#_4-2-调整新生代和老年代的比值",children:[]},{level:3,title:"4.3 调整 Survivor 区和 Eden 区的比值",slug:"_4-3-调整-survivor-区和-eden-区的比值",link:"#_4-3-调整-survivor-区和-eden-区的比值",children:[]},{level:3,title:"4.4 设置年轻代和老年代的大小",slug:"_4-4-设置年轻代和老年代的大小",link:"#_4-4-设置年轻代和老年代的大小",children:[]},{level:3,title:"4.5 小总结",slug:"_4-5-小总结",link:"#_4-5-小总结",children:[]},{level:3,title:"4.6 永久区的设置",slug:"_4-6-永久区的设置",link:"#_4-6-永久区的设置",children:[]},{level:3,title:"4.7 JVM 的栈参数调优",slug:"_4-7-jvm-的栈参数调优",link:"#_4-7-jvm-的栈参数调优",children:[]},{level:3,title:"4.8 (可以直接跳过了)JVM 其他参数介绍",slug:"_4-8-可以直接跳过了-jvm-其他参数介绍",link:"#_4-8-可以直接跳过了-jvm-其他参数介绍",children:[]}]},{level:2,title:"finally",slug:"finally",link:"#finally",children:[]}],path:"/java/jvm/jvm-intro.html",pathLocale:"/",extraFields:[]},{title:"最重要的JVM参数总结",headers:[{level:2,title:"1.概述",slug:"_1-概述",link:"#_1-概述",children:[]},{level:2,title:"2.堆内存相关",slug:"_2-堆内存相关",link:"#_2-堆内存相关",children:[{level:3,title:"2.1.显式指定堆内存–Xms和-Xmx",slug:"_2-1-显式指定堆内存–xms和-xmx",link:"#_2-1-显式指定堆内存–xms和-xmx",children:[]},{level:3,title:"2.2.显式新生代内存(Young Generation)",slug:"_2-2-显式新生代内存-young-generation",link:"#_2-2-显式新生代内存-young-generation",children:[]},{level:3,title:"2.3.显式指定永久代/元空间的大小",slug:"_2-3-显式指定永久代-元空间的大小",link:"#_2-3-显式指定永久代-元空间的大小",children:[]}]},{level:2,title:"3.垃圾收集相关",slug:"_3-垃圾收集相关",link:"#_3-垃圾收集相关",children:[{level:3,title:"3.1.垃圾回收器",slug:"_3-1-垃圾回收器",link:"#_3-1-垃圾回收器",children:[]},{level:3,title:"3.2.GC 日志记录",slug:"_3-2-gc-日志记录",link:"#_3-2-gc-日志记录",children:[]}]},{level:2,title:"4.处理 OOM",slug:"_4-处理-oom",link:"#_4-处理-oom",children:[]},{level:2,title:"5.其他",slug:"_5-其他",link:"#_5-其他",children:[]},{level:2,title:"文章推荐",slug:"文章推荐",link:"#文章推荐",children:[]}],path:"/java/jvm/jvm-parameters-intro.html",pathLocale:"/",extraFields:[]},{title:"Java内存区域详解（重点）",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"运行时数据区域",slug:"运行时数据区域",link:"#运行时数据区域",children:[{level:3,title:"程序计数器",slug:"程序计数器",link:"#程序计数器",children:[]},{level:3,title:"Java 虚拟机栈",slug:"java-虚拟机栈",link:"#java-虚拟机栈",children:[]},{level:3,title:"本地方法栈",slug:"本地方法栈",link:"#本地方法栈",children:[]},{level:3,title:"堆",slug:"堆",link:"#堆",children:[]},{level:3,title:"方法区",slug:"方法区",link:"#方法区",children:[]},{level:3,title:"运行时常量池",slug:"运行时常量池",link:"#运行时常量池",children:[]},{level:3,title:"字符串常量池",slug:"字符串常量池",link:"#字符串常量池",children:[]},{level:3,title:"直接内存",slug:"直接内存",link:"#直接内存",children:[]}]},{level:2,title:"HotSpot 虚拟机对象探秘",slug:"hotspot-虚拟机对象探秘",link:"#hotspot-虚拟机对象探秘",children:[{level:3,title:"对象的创建",slug:"对象的创建",link:"#对象的创建",children:[]},{level:3,title:"对象的内存布局",slug:"对象的内存布局",link:"#对象的内存布局",children:[]},{level:3,title:"锁的升级",slug:"锁的升级",link:"#锁的升级",children:[]},{level:3,title:"对象的访问定位",slug:"对象的访问定位",link:"#对象的访问定位",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/jvm/memory-area.html",pathLocale:"/",extraFields:[]},{title:"TCP编程",headers:[{level:2,title:"Socket",slug:"socket",link:"#socket",children:[{level:3,title:"服务端",slug:"服务端",link:"#服务端",children:[]},{level:3,title:"客户端",slug:"客户端",link:"#客户端",children:[]}]},{level:2,title:"Socket流",slug:"socket流",link:"#socket流",children:[]}],path:"/java/network/tcp.html",pathLocale:"/",extraFields:[]},{title:"UDP编程",headers:[{level:2,title:"UDP",slug:"udp",link:"#udp",children:[]},{level:2,title:"服务端",slug:"服务端",link:"#服务端",children:[]},{level:2,title:"DatagramPacket",slug:"datagrampacket",link:"#datagrampacket",children:[{level:3,title:"用于接收数据的构造函数",slug:"用于接收数据的构造函数",link:"#用于接收数据的构造函数",children:[]},{level:3,title:"用于发送数据的构造函数",slug:"用于发送数据的构造函数",link:"#用于发送数据的构造函数",children:[]},{level:3,title:"主要方法",slug:"主要方法",link:"#主要方法",children:[]}]},{level:2,title:"客户端",slug:"客户端",link:"#客户端",children:[]}],path:"/java/network/udp.html",pathLocale:"/",extraFields:[]},{title:"Java 10 新特性概览",headers:[{level:2,title:"局部变量类型推断(var)",slug:"局部变量类型推断-var",link:"#局部变量类型推断-var",children:[]},{level:2,title:"垃圾回收器接口",slug:"垃圾回收器接口",link:"#垃圾回收器接口",children:[]},{level:2,title:"G1 并行 Full GC",slug:"g1-并行-full-gc",link:"#g1-并行-full-gc",children:[]},{level:2,title:"集合增强",slug:"集合增强",link:"#集合增强",children:[]},{level:2,title:"Optional 增强",slug:"optional-增强",link:"#optional-增强",children:[]},{level:2,title:"应用程序类数据共享(扩展 CDS 功能)",slug:"应用程序类数据共享-扩展-cds-功能",link:"#应用程序类数据共享-扩展-cds-功能",children:[]},{level:2,title:"实验性的基于 Java 的 JIT 编译器",slug:"实验性的基于-java-的-jit-编译器",link:"#实验性的基于-java-的-jit-编译器",children:[]},{level:2,title:"其他",slug:"其他",link:"#其他",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/new-features/java10.html",pathLocale:"/",extraFields:[]},{title:"Java 11 新特性概览",headers:[{level:2,title:"HTTP Client 标准化",slug:"http-client-标准化",link:"#http-client-标准化",children:[]},{level:2,title:"String 增强",slug:"string-增强",link:"#string-增强",children:[]},{level:2,title:"Optional 增强",slug:"optional-增强",link:"#optional-增强",children:[]},{level:2,title:"ZGC(可伸缩低延迟垃圾收集器)",slug:"zgc-可伸缩低延迟垃圾收集器",link:"#zgc-可伸缩低延迟垃圾收集器",children:[]},{level:2,title:"Lambda 参数的局部变量语法",slug:"lambda-参数的局部变量语法",link:"#lambda-参数的局部变量语法",children:[]},{level:2,title:"启动单文件源代码程序",slug:"启动单文件源代码程序",link:"#启动单文件源代码程序",children:[]},{level:2,title:"其他新特性",slug:"其他新特性",link:"#其他新特性",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/new-features/java11.html",pathLocale:"/",extraFields:[]},{title:"Java 12  & 13 新特性概览",headers:[{level:2,title:"Java12",slug:"java12",link:"#java12",children:[{level:3,title:"String 增强",slug:"string-增强",link:"#string-增强",children:[]},{level:3,title:"Files 增强（文件比较）",slug:"files-增强-文件比较",link:"#files-增强-文件比较",children:[]},{level:3,title:"数字格式化工具类",slug:"数字格式化工具类",link:"#数字格式化工具类",children:[]},{level:3,title:"Shenandoah GC",slug:"shenandoah-gc",link:"#shenandoah-gc",children:[]},{level:3,title:"G1 收集器优化",slug:"g1-收集器优化",link:"#g1-收集器优化",children:[]},{level:3,title:"预览新特性",slug:"预览新特性",link:"#预览新特性",children:[]}]},{level:2,title:"Java13",slug:"java13",link:"#java13",children:[{level:3,title:"增强 ZGC(释放未使用内存)",slug:"增强-zgc-释放未使用内存",link:"#增强-zgc-释放未使用内存",children:[]},{level:3,title:"SocketAPI 重构",slug:"socketapi-重构",link:"#socketapi-重构",children:[]},{level:3,title:"FileSystems",slug:"filesystems",link:"#filesystems",children:[]},{level:3,title:"动态 CDS 存档",slug:"动态-cds-存档",link:"#动态-cds-存档",children:[]},{level:3,title:"预览新特性",slug:"预览新特性-1",link:"#预览新特性-1",children:[]}]},{level:2,title:"补充",slug:"补充",link:"#补充",children:[{level:3,title:"关于预览特性",slug:"关于预览特性",link:"#关于预览特性",children:[]},{level:3,title:"JVM 虚拟机优化",slug:"jvm-虚拟机优化",link:"#jvm-虚拟机优化",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/new-features/java12-13.html",pathLocale:"/",extraFields:[]},{title:"Java 14  & 15 新特性概览",headers:[{level:2,title:"Java14",slug:"java14",link:"#java14",children:[{level:3,title:"空指针异常精准提示",slug:"空指针异常精准提示",link:"#空指针异常精准提示",children:[]},{level:3,title:"switch 的增强(转正)",slug:"switch-的增强-转正",link:"#switch-的增强-转正",children:[]},{level:3,title:"预览新特性",slug:"预览新特性",link:"#预览新特性",children:[]},{level:3,title:"其他",slug:"其他",link:"#其他",children:[]}]},{level:2,title:"Java15",slug:"java15",link:"#java15",children:[{level:3,title:"CharSequence",slug:"charsequence",link:"#charsequence",children:[]},{level:3,title:"TreeMap",slug:"treemap",link:"#treemap",children:[]},{level:3,title:"ZGC(转正)",slug:"zgc-转正",link:"#zgc-转正",children:[]},{level:3,title:"EdDSA(数字签名算法)",slug:"eddsa-数字签名算法",link:"#eddsa-数字签名算法",children:[]},{level:3,title:"文本块(转正)",slug:"文本块-转正",link:"#文本块-转正",children:[]},{level:3,title:"隐藏类(Hidden Classes)",slug:"隐藏类-hidden-classes",link:"#隐藏类-hidden-classes",children:[]},{level:3,title:"预览新特性",slug:"预览新特性-1",link:"#预览新特性-1",children:[]},{level:3,title:"其他",slug:"其他-1",link:"#其他-1",children:[]}]}],path:"/java/new-features/java14-15.html",pathLocale:"/",extraFields:[]},{title:"Java 16 新特性概览",headers:[{level:2,title:"JEP 338:向量 API(第一次孵化)",slug:"jep-338-向量-api-第一次孵化",link:"#jep-338-向量-api-第一次孵化",children:[]},{level:2,title:"JEP 347:启用 C++ 14 语言特性",slug:"jep-347-启用-c-14-语言特性",link:"#jep-347-启用-c-14-语言特性",children:[]},{level:2,title:"JEP 376:ZGC 并发线程堆栈处理",slug:"jep-376-zgc-并发线程堆栈处理",link:"#jep-376-zgc-并发线程堆栈处理",children:[]},{level:2,title:"JEP 387:弹性元空间",slug:"jep-387-弹性元空间",link:"#jep-387-弹性元空间",children:[]},{level:2,title:"JEP 390:对基于值的类发出警告",slug:"jep-390-对基于值的类发出警告",link:"#jep-390-对基于值的类发出警告",children:[]},{level:2,title:"JEP 392:打包工具",slug:"jep-392-打包工具",link:"#jep-392-打包工具",children:[]},{level:2,title:"JEP 393:外部内存访问 API(第三次孵化)",slug:"jep-393-外部内存访问-api-第三次孵化",link:"#jep-393-外部内存访问-api-第三次孵化",children:[]},{level:2,title:"JEP 394:instanceof 模式匹配(转正)",slug:"jep-394-instanceof-模式匹配-转正",link:"#jep-394-instanceof-模式匹配-转正",children:[]},{level:2,title:"JEP 395:记录类型(转正)",slug:"jep-395-记录类型-转正",link:"#jep-395-记录类型-转正",children:[]},{level:2,title:"JEP 396:默认强封装 JDK 内部元素",slug:"jep-396-默认强封装-jdk-内部元素",link:"#jep-396-默认强封装-jdk-内部元素",children:[]},{level:2,title:"JEP 397:密封类(预览)",slug:"jep-397-密封类-预览",link:"#jep-397-密封类-预览",children:[]},{level:2,title:"其他优化与改进",slug:"其他优化与改进",link:"#其他优化与改进",children:[]},{level:2,title:"参考文献",slug:"参考文献",link:"#参考文献",children:[]}],path:"/java/new-features/java16.html",pathLocale:"/",extraFields:[]},{title:"Java 17 新特性概览（重要）",headers:[{level:2,title:"JEP 356:增强的伪随机数生成器",slug:"jep-356-增强的伪随机数生成器",link:"#jep-356-增强的伪随机数生成器",children:[]},{level:2,title:"JEP 398:弃用 Applet API 以进行删除",slug:"jep-398-弃用-applet-api-以进行删除",link:"#jep-398-弃用-applet-api-以进行删除",children:[]},{level:2,title:"JEP 406:switch 的类型匹配（预览）",slug:"jep-406-switch-的类型匹配-预览",link:"#jep-406-switch-的类型匹配-预览",children:[]},{level:2,title:"JEP 407:删除远程方法调用激活机制",slug:"jep-407-删除远程方法调用激活机制",link:"#jep-407-删除远程方法调用激活机制",children:[]},{level:2,title:"JEP 409:密封类（转正）",slug:"jep-409-密封类-转正",link:"#jep-409-密封类-转正",children:[]},{level:2,title:"JEP 410:删除实验性的 AOT 和 JIT 编译器",slug:"jep-410-删除实验性的-aot-和-jit-编译器",link:"#jep-410-删除实验性的-aot-和-jit-编译器",children:[]},{level:2,title:"JEP 411:弃用安全管理器以进行删除",slug:"jep-411-弃用安全管理器以进行删除",link:"#jep-411-弃用安全管理器以进行删除",children:[]},{level:2,title:"JEP 412:外部函数和内存 API（孵化）",slug:"jep-412-外部函数和内存-api-孵化",link:"#jep-412-外部函数和内存-api-孵化",children:[]},{level:2,title:"JEP 414:向量 API（第二次孵化）",slug:"jep-414-向量-api-第二次孵化",link:"#jep-414-向量-api-第二次孵化",children:[]}],path:"/java/new-features/java17.html",pathLocale:"/",extraFields:[]},{title:"Java 18 新特性概览",headers:[{level:2,title:"JEP 400:默认字符集为 UTF-8",slug:"jep-400-默认字符集为-utf-8",link:"#jep-400-默认字符集为-utf-8",children:[]},{level:2,title:"JEP 408:简易的 Web 服务器",slug:"jep-408-简易的-web-服务器",link:"#jep-408-简易的-web-服务器",children:[]},{level:2,title:"JEP 413:优化 Java API 文档中的代码片段",slug:"jep-413-优化-java-api-文档中的代码片段",link:"#jep-413-优化-java-api-文档中的代码片段",children:[]},{level:2,title:"JEP 416:使用方法句柄重新实现反射核心",slug:"jep-416-使用方法句柄重新实现反射核心",link:"#jep-416-使用方法句柄重新实现反射核心",children:[]},{level:2,title:"JEP 417: 向量 API（第三次孵化）",slug:"jep-417-向量-api-第三次孵化",link:"#jep-417-向量-api-第三次孵化",children:[]},{level:2,title:"JEP 418:互联网地址解析 SPI",slug:"jep-418-互联网地址解析-spi",link:"#jep-418-互联网地址解析-spi",children:[]},{level:2,title:"JEP 419:Foreign Function & Memory API（第二次孵化）",slug:"jep-419-foreign-function-memory-api-第二次孵化",link:"#jep-419-foreign-function-memory-api-第二次孵化",children:[]}],path:"/java/new-features/java18.html",pathLocale:"/",extraFields:[]},{title:"Java 19 新特性概览",headers:[{level:2,title:"JEP 424: 外部函数和内存 API（预览）",slug:"jep-424-外部函数和内存-api-预览",link:"#jep-424-外部函数和内存-api-预览",children:[]},{level:2,title:"JEP 425: 虚拟线程（预览）",slug:"jep-425-虚拟线程-预览",link:"#jep-425-虚拟线程-预览",children:[]},{level:2,title:"JEP 426: 向量 API（第四次孵化）",slug:"jep-426-向量-api-第四次孵化",link:"#jep-426-向量-api-第四次孵化",children:[]},{level:2,title:"JEP 428: 结构化并发(孵化)",slug:"jep-428-结构化并发-孵化",link:"#jep-428-结构化并发-孵化",children:[]}],path:"/java/new-features/java19.html",pathLocale:"/",extraFields:[]},{title:"Java 20 新特性概览",headers:[{level:2,title:"JEP 429：作用域值（第一次孵化）",slug:"jep-429-作用域值-第一次孵化",link:"#jep-429-作用域值-第一次孵化",children:[]},{level:2,title:"JEP 432：记录模式（第二次预览）",slug:"jep-432-记录模式-第二次预览",link:"#jep-432-记录模式-第二次预览",children:[]},{level:2,title:"JEP 433：switch 模式匹配（第四次预览）",slug:"jep-433-switch-模式匹配-第四次预览",link:"#jep-433-switch-模式匹配-第四次预览",children:[]},{level:2,title:"JEP 434: 外部函数和内存 API（第二次预览）",slug:"jep-434-外部函数和内存-api-第二次预览",link:"#jep-434-外部函数和内存-api-第二次预览",children:[]},{level:2,title:"JEP 436: 虚拟线程（第二次预览）",slug:"jep-436-虚拟线程-第二次预览",link:"#jep-436-虚拟线程-第二次预览",children:[]},{level:2,title:"JEP 437: 结构化并发(第二次孵化)",slug:"jep-437-结构化并发-第二次孵化",link:"#jep-437-结构化并发-第二次孵化",children:[]},{level:2,title:"JEP 432：向量 API（第五次孵化）",slug:"jep-432-向量-api-第五次孵化",link:"#jep-432-向量-api-第五次孵化",children:[]}],path:"/java/new-features/java20.html",pathLocale:"/",extraFields:[]},{title:"Java 21 新特性概览(重要)",headers:[{level:2,title:"JEP 430：字符串模板（预览）",slug:"jep-430-字符串模板-预览",link:"#jep-430-字符串模板-预览",children:[]},{level:2,title:"JEP431：序列化集合",slug:"jep431-序列化集合",link:"#jep431-序列化集合",children:[]},{level:2,title:"JEP 439：分代 ZGC",slug:"jep-439-分代-zgc",link:"#jep-439-分代-zgc",children:[]},{level:2,title:"JEP 440：记录模式",slug:"jep-440-记录模式",link:"#jep-440-记录模式",children:[]},{level:2,title:"JEP 441：switch 的模式匹配",slug:"jep-441-switch-的模式匹配",link:"#jep-441-switch-的模式匹配",children:[]},{level:2,title:"JEP 442: 外部函数和内存 API（第三次预览）",slug:"jep-442-外部函数和内存-api-第三次预览",link:"#jep-442-外部函数和内存-api-第三次预览",children:[]},{level:2,title:"JEP 443：未命名模式和变量（预览）",slug:"jep-443-未命名模式和变量-预览",link:"#jep-443-未命名模式和变量-预览",children:[]},{level:2,title:"JEP 444：虚拟线程",slug:"jep-444-虚拟线程",link:"#jep-444-虚拟线程",children:[]},{level:2,title:"JEP 445：未命名类和实例 main 方法 （预览）",slug:"jep-445-未命名类和实例-main-方法-预览",link:"#jep-445-未命名类和实例-main-方法-预览",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/new-features/java21.html",pathLocale:"/",extraFields:[]},{title:"Java8 新特性实战",headers:[{level:2,title:"Interface",slug:"interface",link:"#interface",children:[]},{level:2,title:"functional interface 函数式接口",slug:"functional-interface-函数式接口",link:"#functional-interface-函数式接口",children:[]},{level:2,title:"Lambda 表达式",slug:"lambda-表达式",link:"#lambda-表达式",children:[{level:3,title:"语法格式",slug:"语法格式",link:"#语法格式",children:[]},{level:3,title:"Lambda 实战",slug:"lambda-实战",link:"#lambda-实战",children:[]}]},{level:2,title:"Stream",slug:"stream",link:"#stream",children:[{level:3,title:"流类型",slug:"流类型",link:"#流类型",children:[]},{level:3,title:"常用方法",slug:"常用方法",link:"#常用方法",children:[]},{level:3,title:"实战",slug:"实战",link:"#实战",children:[]},{level:3,title:"延迟执行",slug:"延迟执行",link:"#延迟执行",children:[]},{level:3,title:"小结",slug:"小结",link:"#小结",children:[]}]},{level:2,title:"Optional",slug:"optional",link:"#optional",children:[{level:3,title:"如何创建一个 Optional",slug:"如何创建一个-optional",link:"#如何创建一个-optional",children:[]},{level:3,title:"判断 value 是否为 null",slug:"判断-value-是否为-null",link:"#判断-value-是否为-null",children:[]},{level:3,title:"获取 value",slug:"获取-value",link:"#获取-value",children:[]},{level:3,title:"过滤值",slug:"过滤值",link:"#过滤值",children:[]},{level:3,title:"小结",slug:"小结-1",link:"#小结-1",children:[]}]},{level:2,title:"Date-Time API",slug:"date-time-api",link:"#date-time-api",children:[{level:3,title:"java.time 主要类",slug:"java-time-主要类",link:"#java-time-主要类",children:[]},{level:3,title:"格式化",slug:"格式化",link:"#格式化",children:[]},{level:3,title:"字符串转日期格式",slug:"字符串转日期格式",link:"#字符串转日期格式",children:[]},{level:3,title:"日期计算",slug:"日期计算",link:"#日期计算",children:[]},{level:3,title:"获取指定日期",slug:"获取指定日期",link:"#获取指定日期",children:[]},{level:3,title:"JDBC 和 java8",slug:"jdbc-和-java8",link:"#jdbc-和-java8",children:[]},{level:3,title:"时区",slug:"时区",link:"#时区",children:[]},{level:3,title:"小结",slug:"小结-2",link:"#小结-2",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/java/new-features/java8-common-new-features.html",pathLocale:"/",extraFields:[]},{title:"《Java8 指南》中文翻译",headers:[{level:2,title:"接口的默认方法(Default Methods for Interfaces)",slug:"接口的默认方法-default-methods-for-interfaces",link:"#接口的默认方法-default-methods-for-interfaces",children:[]},{level:2,title:"Lambda 表达式(Lambda expressions)",slug:"lambda-表达式-lambda-expressions",link:"#lambda-表达式-lambda-expressions",children:[]},{level:2,title:"函数式接口(Functional Interfaces)",slug:"函数式接口-functional-interfaces",link:"#函数式接口-functional-interfaces",children:[]},{level:2,title:"方法和构造函数引用(Method and Constructor References)",slug:"方法和构造函数引用-method-and-constructor-references",link:"#方法和构造函数引用-method-and-constructor-references",children:[]},{level:2,title:"Lambda 表达式作用域(Lambda Scopes)",slug:"lambda-表达式作用域-lambda-scopes",link:"#lambda-表达式作用域-lambda-scopes",children:[{level:3,title:"访问局部变量",slug:"访问局部变量",link:"#访问局部变量",children:[]},{level:3,title:"访问字段和静态变量",slug:"访问字段和静态变量",link:"#访问字段和静态变量",children:[]},{level:3,title:"访问默认接口方法",slug:"访问默认接口方法",link:"#访问默认接口方法",children:[]}]},{level:2,title:"内置函数式接口(Built-in Functional Interfaces)",slug:"内置函数式接口-built-in-functional-interfaces",link:"#内置函数式接口-built-in-functional-interfaces",children:[{level:3,title:"Predicate",slug:"predicate",link:"#predicate",children:[]},{level:3,title:"Function",slug:"function",link:"#function",children:[]},{level:3,title:"Supplier",slug:"supplier",link:"#supplier",children:[]},{level:3,title:"Consumer",slug:"consumer",link:"#consumer",children:[]},{level:3,title:"Comparator",slug:"comparator",link:"#comparator",children:[]}]},{level:2,title:"Optional",slug:"optional",link:"#optional",children:[]},{level:2,title:"Streams(流)",slug:"streams-流",link:"#streams-流",children:[{level:3,title:"Filter(过滤)",slug:"filter-过滤",link:"#filter-过滤",children:[]},{level:3,title:"Sorted(排序)",slug:"sorted-排序",link:"#sorted-排序",children:[]},{level:3,title:"Map(映射)",slug:"map-映射",link:"#map-映射",children:[]},{level:3,title:"Match(匹配)",slug:"match-匹配",link:"#match-匹配",children:[]},{level:3,title:"Count(计数)",slug:"count-计数",link:"#count-计数",children:[]},{level:3,title:"Reduce(规约)",slug:"reduce-规约",link:"#reduce-规约",children:[]}]},{level:2,title:"Parallel Streams(并行流)",slug:"parallel-streams-并行流",link:"#parallel-streams-并行流",children:[{level:3,title:"Sequential Sort(串行排序)",slug:"sequential-sort-串行排序",link:"#sequential-sort-串行排序",children:[]},{level:3,title:"Parallel Sort(并行排序)",slug:"parallel-sort-并行排序",link:"#parallel-sort-并行排序",children:[]}]},{level:2,title:"Maps",slug:"maps",link:"#maps",children:[]},{level:2,title:"Date API(日期相关 API)",slug:"date-api-日期相关-api",link:"#date-api-日期相关-api",children:[{level:3,title:"Clock",slug:"clock",link:"#clock",children:[]},{level:3,title:"Timezones(时区)",slug:"timezones-时区",link:"#timezones-时区",children:[]},{level:3,title:"LocalTime(本地时间)",slug:"localtime-本地时间",link:"#localtime-本地时间",children:[]},{level:3,title:"LocalDate(本地日期)",slug:"localdate-本地日期",link:"#localdate-本地日期",children:[]},{level:3,title:"LocalDateTime(本地日期时间)",slug:"localdatetime-本地日期时间",link:"#localdatetime-本地日期时间",children:[]}]},{level:2,title:"Annotations(注解)",slug:"annotations-注解",link:"#annotations-注解",children:[]},{level:2,title:"Where to go from here?",slug:"where-to-go-from-here",link:"#where-to-go-from-here",children:[]}],path:"/java/new-features/java8-tutorial-translate.html",pathLocale:"/",extraFields:[]},{title:"Java 9 新特性概览",headers:[{level:2,title:"JShell",slug:"jshell",link:"#jshell",children:[]},{level:2,title:"模块化系统",slug:"模块化系统",link:"#模块化系统",children:[]},{level:2,title:"G1 成为默认垃圾回收器",slug:"g1-成为默认垃圾回收器",link:"#g1-成为默认垃圾回收器",children:[]},{level:2,title:"快速创建不可变集合",slug:"快速创建不可变集合",link:"#快速创建不可变集合",children:[]},{level:2,title:"String 存储结构优化",slug:"string-存储结构优化",link:"#string-存储结构优化",children:[]},{level:2,title:"接口私有方法",slug:"接口私有方法",link:"#接口私有方法",children:[]},{level:2,title:"try-with-resources 增强",slug:"try-with-resources-增强",link:"#try-with-resources-增强",children:[]},{level:2,title:"Stream & Optional 增强",slug:"stream-optional-增强",link:"#stream-optional-增强",children:[]},{level:2,title:"进程 API",slug:"进程-api",link:"#进程-api",children:[]},{level:2,title:"响应式流 （ Reactive Streams ）",slug:"响应式流-reactive-streams",link:"#响应式流-reactive-streams",children:[]},{level:2,title:"变量句柄",slug:"变量句柄",link:"#变量句柄",children:[]},{level:2,title:"其它",slug:"其它",link:"#其它",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/java/new-features/java9.html",pathLocale:"/",extraFields:[]},{title:"servlet基础",headers:[{level:2,title:"What is Servlet",slug:"what-is-servlet",link:"#what-is-servlet",children:[]},{level:2,title:"Servlet容器",slug:"servlet容器",link:"#servlet容器",children:[]},{level:2,title:"Tomcat",slug:"tomcat",link:"#tomcat",children:[]}],path:"/java/servlet/basis.html",pathLocale:"/",extraFields:[]},{title:"曲面曲线方程",headers:[{level:2,title:"椭球面",slug:"椭球面",link:"#椭球面",children:[]},{level:2,title:"二次柱面",slug:"二次柱面",link:"#二次柱面",children:[]}],path:"/knowledge/further-math/curve.html",pathLocale:"/",extraFields:[]},{title:"slurm基础知识",headers:[{level:2,title:"slurm介绍",slug:"slurm介绍",link:"#slurm介绍",children:[]},{level:2,title:"slurm指令",slug:"slurm指令",link:"#slurm指令",children:[{level:3,title:"sbatch指令",slug:"sbatch指令",link:"#sbatch指令",children:[]},{level:3,title:"其他指令",slug:"其他指令",link:"#其他指令",children:[]}]}],path:"/linux/slurm/basis.html",pathLocale:"/",extraFields:[]},{title:"委托",headers:[{level:2,title:"基础知识",slug:"基础知识",link:"#基础知识",children:[]},{level:2,title:"匿名方法",slug:"匿名方法",link:"#匿名方法",children:[]},{level:2,title:"lambda表达式",slug:"lambda表达式",link:"#lambda表达式",children:[]},{level:2,title:"委托类型",slug:"委托类型",link:"#委托类型",children:[]}],path:"/net/csharp/delegate.html",pathLocale:"/",extraFields:[]},{title:"多线程",headers:[{level:2,title:"Task任务",slug:"task任务",link:"#task任务",children:[]},{level:2,title:"异步调用",slug:"异步调用",link:"#异步调用",children:[]}],path:"/net/csharp/task.html",pathLocale:"/",extraFields:[]},{title:"Transformer基础",headers:[{level:2,title:"掩码",slug:"掩码",link:"#掩码",children:[]}],path:"/neural-network/transformer/basis.html",pathLocale:"/",extraFields:[]},{title:"Encoder层介绍",headers:[{level:2,title:"Encoder",slug:"encoder",link:"#encoder",children:[{level:3,title:"Code Example",slug:"code-example",link:"#code-example",children:[]}]}],path:"/neural-network/transformer/encoder.html",pathLocale:"/",extraFields:[]},{title:"markdownit扩展语法",headers:[{level:2,title:"footnote",slug:"footnote",link:"#footnote",children:[]}],path:"/node/markdown/markdownit.html",pathLocale:"/",extraFields:[]},{title:"软件项目管理介绍",headers:[],path:"/software-project/project-management/intro.html",pathLocale:"/",extraFields:[]},{title:"项目估算",headers:[{level:2,title:"基本内容",slug:"基本内容",link:"#基本内容",children:[]},{level:2,title:"基本估算方法",slug:"基本估算方法",link:"#基本估算方法",children:[]},{level:2,title:"软件规模估算",slug:"软件规模估算",link:"#软件规模估算",children:[{level:3,title:"德尔菲法",slug:"德尔菲法",link:"#德尔菲法",children:[]},{level:3,title:"代码行估算法",slug:"代码行估算法",link:"#代码行估算法",children:[]}]},{level:2,title:"工作量估算",slug:"工作量估算",link:"#工作量估算",children:[{level:3,title:"COCOMO模型",slug:"cocomo模型",link:"#cocomo模型",children:[]},{level:3,title:"COCOMO基本变量",slug:"cocomo基本变量",link:"#cocomo基本变量",children:[]},{level:3,title:"COCOMO计算公式",slug:"cocomo计算公式",link:"#cocomo计算公式",children:[]}]}],path:"/software-project/project-management/project-estimate.html",pathLocale:"/",extraFields:[]},{title:"项目进度和成本管理",headers:[{level:2,title:"项目活动",slug:"项目活动",link:"#项目活动",children:[]},{level:2,title:"关键路径分析",slug:"关键路径分析",link:"#关键路径分析",children:[{level:3,title:"关键路径",slug:"关键路径",link:"#关键路径",children:[]},{level:3,title:"活动缓冲期",slug:"活动缓冲期",link:"#活动缓冲期",children:[]},{level:3,title:"压缩工期",slug:"压缩工期",link:"#压缩工期",children:[]}]},{level:2,title:"网络模型的遍历",slug:"网络模型的遍历",link:"#网络模型的遍历",children:[{level:3,title:"正向遍历",slug:"正向遍历",link:"#正向遍历",children:[]},{level:3,title:"反向遍历",slug:"反向遍历",link:"#反向遍历",children:[]}]},{level:2,title:"作业",slug:"作业",link:"#作业",children:[]}],path:"/software-project/project-management/project-process-and-cost-management.html",pathLocale:"/",extraFields:[]},{title:"RestFul API 简明教程",headers:[{level:2,title:"何为 API？",slug:"何为-api",link:"#何为-api",children:[]},{level:2,title:"何为 RESTful API？",slug:"何为-restful-api",link:"#何为-restful-api",children:[]},{level:2,title:"解读 REST",slug:"解读-rest",link:"#解读-rest",children:[]},{level:2,title:"RESTful API 规范",slug:"restful-api-规范",link:"#restful-api-规范",children:[{level:3,title:"动作",slug:"动作",link:"#动作",children:[]},{level:3,title:"路径（接口命名）",slug:"路径-接口命名",link:"#路径-接口命名",children:[]},{level:3,title:"过滤信息（Filtering）",slug:"过滤信息-filtering",link:"#过滤信息-filtering",children:[]},{level:3,title:"状态码（Status Codes）",slug:"状态码-status-codes",link:"#状态码-status-codes",children:[]}]},{level:2,title:"RESTful 的极致 HATEOAS",slug:"restful-的极致-hateoas",link:"#restful-的极致-hateoas",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/basis/RESTfulAPI.html",pathLocale:"/",extraFields:[]},{title:"代码命名指南",headers:[{level:2,title:"为什么需要重视命名？",slug:"为什么需要重视命名",link:"#为什么需要重视命名",children:[]},{level:2,title:"常见命名规则以及适用场景",slug:"常见命名规则以及适用场景",link:"#常见命名规则以及适用场景",children:[{level:3,title:"驼峰命名法（CamelCase）",slug:"驼峰命名法-camelcase",link:"#驼峰命名法-camelcase",children:[]},{level:3,title:"蛇形命名法（snake_case）",slug:"蛇形命名法-snake-case",link:"#蛇形命名法-snake-case",children:[]},{level:3,title:"串式命名法（kebab-case）",slug:"串式命名法-kebab-case",link:"#串式命名法-kebab-case",children:[]}]},{level:2,title:"常见命名规范",slug:"常见命名规范",link:"#常见命名规范",children:[{level:3,title:"Java 语言基本命名规范",slug:"java-语言基本命名规范",link:"#java-语言基本命名规范",children:[]},{level:3,title:"命名易读性规范",slug:"命名易读性规范",link:"#命名易读性规范",children:[]}]},{level:2,title:"Codelf:变量命名神器?",slug:"codelf-变量命名神器",link:"#codelf-变量命名神器",children:[]},{level:2,title:"相关阅读推荐",slug:"相关阅读推荐",link:"#相关阅读推荐",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/system-design/basis/naming.html",pathLocale:"/",extraFields:[]},{title:"代码重构指南",headers:[{level:2,title:"何谓重构？",slug:"何谓重构",link:"#何谓重构",children:[]},{level:2,title:"为什么要重构？",slug:"为什么要重构",link:"#为什么要重构",children:[]},{level:2,title:"何时进行重构？",slug:"何时进行重构",link:"#何时进行重构",children:[{level:3,title:"提交代码之前",slug:"提交代码之前",link:"#提交代码之前",children:[]},{level:3,title:"开发一个新功能之后&之前",slug:"开发一个新功能之后-之前",link:"#开发一个新功能之后-之前",children:[]},{level:3,title:"Code Review 之后",slug:"code-review-之后",link:"#code-review-之后",children:[]},{level:3,title:"捡垃圾式重构",slug:"捡垃圾式重构",link:"#捡垃圾式重构",children:[]},{level:3,title:"阅读理解代码的时候",slug:"阅读理解代码的时候",link:"#阅读理解代码的时候",children:[]}]},{level:2,title:"重构有哪些注意事项？",slug:"重构有哪些注意事项",link:"#重构有哪些注意事项",children:[{level:3,title:"单元测试是重构的保护网",slug:"单元测试是重构的保护网",link:"#单元测试是重构的保护网",children:[]},{level:3,title:"不要为了重构而重构",slug:"不要为了重构而重构",link:"#不要为了重构而重构",children:[]},{level:3,title:"遵循方法",slug:"遵循方法",link:"#遵循方法",children:[]}]},{level:2,title:"如何练习重构？",slug:"如何练习重构",link:"#如何练习重构",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/basis/refactoring.html",pathLocale:"/",extraFields:[]},{title:"软件工程简明教程",headers:[{level:2,title:"何为软件工程？",slug:"何为软件工程",link:"#何为软件工程",children:[]},{level:2,title:"软件开发过程",slug:"软件开发过程",link:"#软件开发过程",children:[]},{level:2,title:"软件开发模型",slug:"软件开发模型",link:"#软件开发模型",children:[]},{level:2,title:"软件开发的基本策略",slug:"软件开发的基本策略",link:"#软件开发的基本策略",children:[{level:3,title:"软件复用",slug:"软件复用",link:"#软件复用",children:[]},{level:3,title:"分而治之",slug:"分而治之",link:"#分而治之",children:[]},{level:3,title:"逐步演进",slug:"逐步演进",link:"#逐步演进",children:[]},{level:3,title:"优化折中",slug:"优化折中",link:"#优化折中",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/basis/software-engineering.html",pathLocale:"/",extraFields:[]},{title:"单元测试到底是什么？应该怎么做？",headers:[{level:2,title:"何谓单元测试？",slug:"何谓单元测试",link:"#何谓单元测试",children:[]},{level:2,title:"为什么需要单元测试？",slug:"为什么需要单元测试",link:"#为什么需要单元测试",children:[{level:3,title:"为重构保驾护航",slug:"为重构保驾护航",link:"#为重构保驾护航",children:[]},{level:3,title:"提高代码质量",slug:"提高代码质量",link:"#提高代码质量",children:[]},{level:3,title:"减少 bug",slug:"减少-bug",link:"#减少-bug",children:[]},{level:3,title:"快速定位 bug",slug:"快速定位-bug",link:"#快速定位-bug",children:[]},{level:3,title:"持续集成依赖单元测试",slug:"持续集成依赖单元测试",link:"#持续集成依赖单元测试",children:[]}]},{level:2,title:"谁逼你写单元测试？",slug:"谁逼你写单元测试",link:"#谁逼你写单元测试",children:[{level:3,title:"领导要求",slug:"领导要求",link:"#领导要求",children:[]},{level:3,title:"大牛都写单元测试",slug:"大牛都写单元测试",link:"#大牛都写单元测试",children:[]},{level:3,title:"保住面子",slug:"保住面子",link:"#保住面子",children:[]},{level:3,title:"心虚",slug:"心虚",link:"#心虚",children:[]}]},{level:2,title:"TDD 测试驱动开发",slug:"tdd-测试驱动开发",link:"#tdd-测试驱动开发",children:[{level:3,title:"何谓 TDD？",slug:"何谓-tdd",link:"#何谓-tdd",children:[]},{level:3,title:"TDD 优缺点分析",slug:"tdd-优缺点分析",link:"#tdd-优缺点分析",children:[]}]},{level:2,title:"单测框架如何选择？",slug:"单测框架如何选择",link:"#单测框架如何选择",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/system-design/basis/unit-test.html",pathLocale:"/",extraFields:[]},{title:"Reactor模式",headers:[{level:2,title:"Reactor模式",slug:"reactor模式",link:"#reactor模式",children:[{level:3,title:"单Reactor多线程",slug:"单reactor多线程",link:"#单reactor多线程",children:[]},{level:3,title:"主从Reactor多线程",slug:"主从reactor多线程",link:"#主从reactor多线程",children:[]}]}],path:"/system-design/designMode/reactorDesign.html",pathLocale:"/",extraFields:[]},{title:"Netty常见面试题总结(付费)",headers:[],path:"/system-design/framework/netty.html",pathLocale:"/",extraFields:[]},{title:"JWT 身份认证优缺点分析",headers:[{level:2,title:"JWT 的优势",slug:"jwt-的优势",link:"#jwt-的优势",children:[{level:3,title:"无状态",slug:"无状态",link:"#无状态",children:[]},{level:3,title:"有效避免了 CSRF 攻击",slug:"有效避免了-csrf-攻击",link:"#有效避免了-csrf-攻击",children:[]},{level:3,title:"适合移动端应用",slug:"适合移动端应用",link:"#适合移动端应用",children:[]},{level:3,title:"单点登录友好",slug:"单点登录友好",link:"#单点登录友好",children:[]}]},{level:2,title:"JWT 身份认证常见问题及解决办法",slug:"jwt-身份认证常见问题及解决办法",link:"#jwt-身份认证常见问题及解决办法",children:[{level:3,title:"注销登录等场景下 JWT 还有效",slug:"注销登录等场景下-jwt-还有效",link:"#注销登录等场景下-jwt-还有效",children:[]},{level:3,title:"JWT 的续签问题",slug:"jwt-的续签问题",link:"#jwt-的续签问题",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/security/advantages-and-disadvantages-of-jwt.html",pathLocale:"/",extraFields:[]},{title:"认证授权基础概念详解",headers:[{level:2,title:"认证 (Authentication) 和授权 (Authorization)的区别是什么？",slug:"认证-authentication-和授权-authorization-的区别是什么",link:"#认证-authentication-和授权-authorization-的区别是什么",children:[]},{level:2,title:"RBAC 模型了解吗？",slug:"rbac-模型了解吗",link:"#rbac-模型了解吗",children:[]},{level:2,title:"什么是 Cookie ? Cookie 的作用是什么?",slug:"什么是-cookie-cookie-的作用是什么",link:"#什么是-cookie-cookie-的作用是什么",children:[]},{level:2,title:"如何在项目中使用 Cookie 呢？",slug:"如何在项目中使用-cookie-呢",link:"#如何在项目中使用-cookie-呢",children:[]},{level:2,title:"Cookie 和 Session 有什么区别？",slug:"cookie-和-session-有什么区别",link:"#cookie-和-session-有什么区别",children:[]},{level:2,title:"如何使用 Session-Cookie 方案进行身份验证？",slug:"如何使用-session-cookie-方案进行身份验证",link:"#如何使用-session-cookie-方案进行身份验证",children:[]},{level:2,title:"多服务器节点下 Session-Cookie 方案如何做？",slug:"多服务器节点下-session-cookie-方案如何做",link:"#多服务器节点下-session-cookie-方案如何做",children:[]},{level:2,title:"如果没有 Cookie 的话 Session 还能用吗？",slug:"如果没有-cookie-的话-session-还能用吗",link:"#如果没有-cookie-的话-session-还能用吗",children:[]},{level:2,title:"为什么 Cookie 无法防止 CSRF 攻击，而 Token 可以？",slug:"为什么-cookie-无法防止-csrf-攻击-而-token-可以",link:"#为什么-cookie-无法防止-csrf-攻击-而-token-可以",children:[]},{level:2,title:"什么是 JWT?JWT 由哪些部分组成？",slug:"什么是-jwt-jwt-由哪些部分组成",link:"#什么是-jwt-jwt-由哪些部分组成",children:[]},{level:2,title:"如何基于 JWT 进行身份验证？ 如何防止 JWT 被篡改？",slug:"如何基于-jwt-进行身份验证-如何防止-jwt-被篡改",link:"#如何基于-jwt-进行身份验证-如何防止-jwt-被篡改",children:[]},{level:2,title:"什么是 SSO?",slug:"什么是-sso",link:"#什么是-sso",children:[]},{level:2,title:"SSO 有什么好处？",slug:"sso-有什么好处",link:"#sso-有什么好处",children:[]},{level:2,title:"如何设计实现一个 SSO 系统?",slug:"如何设计实现一个-sso-系统",link:"#如何设计实现一个-sso-系统",children:[]},{level:2,title:"什么是 OAuth 2.0？",slug:"什么是-oauth-2-0",link:"#什么是-oauth-2-0",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/security/basis-of-authority-certification.html",pathLocale:"/",extraFields:[]},{title:"数据脱敏方案总结",headers:[{level:2,title:"什么是数据脱敏",slug:"什么是数据脱敏",link:"#什么是数据脱敏",children:[{level:3,title:"数据脱敏的定义",slug:"数据脱敏的定义",link:"#数据脱敏的定义",children:[]},{level:3,title:"常用脱敏规则",slug:"常用脱敏规则",link:"#常用脱敏规则",children:[]}]},{level:2,title:"常用脱敏工具",slug:"常用脱敏工具",link:"#常用脱敏工具",children:[{level:3,title:"Hutool",slug:"hutool",link:"#hutool",children:[]},{level:3,title:"Apache ShardingSphere",slug:"apache-shardingsphere",link:"#apache-shardingsphere",children:[]},{level:3,title:"FastJSON",slug:"fastjson",link:"#fastjson",children:[]},{level:3,title:"Mybatis-mate",slug:"mybatis-mate",link:"#mybatis-mate",children:[]},{level:3,title:"MyBatis-Flex",slug:"mybatis-flex",link:"#mybatis-flex",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"推荐阅读",slug:"推荐阅读",link:"#推荐阅读",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/security/data-desensitization.html",pathLocale:"/",extraFields:[]},{title:"权限系统设计详解",headers:[{level:2,title:"老权限系统的问题与现状",slug:"老权限系统的问题与现状",link:"#老权限系统的问题与现状",children:[]},{level:2,title:"业界权限系统的设计方式",slug:"业界权限系统的设计方式",link:"#业界权限系统的设计方式",children:[{level:3,title:"RBAC 模型",slug:"rbac-模型",link:"#rbac-模型",children:[]},{level:3,title:"ABAC 模型",slug:"abac-模型",link:"#abac-模型",children:[]}]},{level:2,title:"新权限系统的设计思想",slug:"新权限系统的设计思想",link:"#新权限系统的设计思想",children:[{level:3,title:"权限系统自身的权限管理",slug:"权限系统自身的权限管理",link:"#权限系统自身的权限管理",children:[]},{level:3,title:"权限类型的定义",slug:"权限类型的定义",link:"#权限类型的定义",children:[]},{level:3,title:"默认角色的分类",slug:"默认角色的分类",link:"#默认角色的分类",children:[]}]},{level:2,title:"新权限系统的核心模块设计",slug:"新权限系统的核心模块设计",link:"#新权限系统的核心模块设计",children:[{level:3,title:"系统/菜单/数据权限管理",slug:"系统-菜单-数据权限管理",link:"#系统-菜单-数据权限管理",children:[]},{level:3,title:"角色与用户管理",slug:"角色与用户管理",link:"#角色与用户管理",children:[]},{level:3,title:"权限申请",slug:"权限申请",link:"#权限申请",children:[]},{level:3,title:"操作日志",slug:"操作日志",link:"#操作日志",children:[]}]},{level:2,title:"总结与展望",slug:"总结与展望",link:"#总结与展望",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/security/design-of-authority-system.html",pathLocale:"/",extraFields:[]},{title:"常见加密算法总结",headers:[{level:2,title:"哈希算法",slug:"哈希算法",link:"#哈希算法",children:[{level:3,title:"MD",slug:"md",link:"#md",children:[]},{level:3,title:"SHA",slug:"sha",link:"#sha",children:[]},{level:3,title:"Bcrypt",slug:"bcrypt",link:"#bcrypt",children:[]}]},{level:2,title:"对称加密",slug:"对称加密",link:"#对称加密",children:[{level:3,title:"DES 和 3DES",slug:"des-和-3des",link:"#des-和-3des",children:[]},{level:3,title:"AES",slug:"aes",link:"#aes",children:[]}]},{level:2,title:"非对称加密",slug:"非对称加密",link:"#非对称加密",children:[{level:3,title:"RSA",slug:"rsa",link:"#rsa",children:[]},{level:3,title:"DSA",slug:"dsa",link:"#dsa",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/security/encryption-algorithms.html",pathLocale:"/",extraFields:[]},{title:"JWT 基础概念详解",headers:[{level:2,title:"什么是 JWT?",slug:"什么是-jwt",link:"#什么是-jwt",children:[]},{level:2,title:"JWT 由哪些部分组成？",slug:"jwt-由哪些部分组成",link:"#jwt-由哪些部分组成",children:[{level:3,title:"Header",slug:"header",link:"#header",children:[]},{level:3,title:"Payload",slug:"payload",link:"#payload",children:[]},{level:3,title:"Signature",slug:"signature",link:"#signature",children:[]}]},{level:2,title:"如何基于 JWT 进行身份验证？",slug:"如何基于-jwt-进行身份验证",link:"#如何基于-jwt-进行身份验证",children:[]},{level:2,title:"如何防止 JWT 被篡改？",slug:"如何防止-jwt-被篡改",link:"#如何防止-jwt-被篡改",children:[]},{level:2,title:"如何加强 JWT 的安全性？",slug:"如何加强-jwt-的安全性",link:"#如何加强-jwt-的安全性",children:[]}],path:"/system-design/security/jwt-intro.html",pathLocale:"/",extraFields:[]},{title:"敏感词过滤方案总结",headers:[{level:2,title:"算法实现",slug:"算法实现",link:"#算法实现",children:[{level:3,title:"Trie 树",slug:"trie-树",link:"#trie-树",children:[]},{level:3,title:"AC 自动机",slug:"ac-自动机",link:"#ac-自动机",children:[]},{level:3,title:"DFA",slug:"dfa",link:"#dfa",children:[]}]},{level:2,title:"开源项目",slug:"开源项目",link:"#开源项目",children:[]},{level:2,title:"论文",slug:"论文",link:"#论文",children:[]}],path:"/system-design/security/sentive-words-filter.html",pathLocale:"/",extraFields:[]},{title:"SSO 单点登录详解",headers:[{level:2,title:"SSO 介绍",slug:"sso-介绍",link:"#sso-介绍",children:[{level:3,title:"什么是 SSO？",slug:"什么是-sso",link:"#什么是-sso",children:[]},{level:3,title:"SSO 有什么好处？",slug:"sso-有什么好处",link:"#sso-有什么好处",children:[]}]},{level:2,title:"SSO 设计与实现",slug:"sso-设计与实现",link:"#sso-设计与实现",children:[{level:3,title:"核心应用与依赖",slug:"核心应用与依赖",link:"#核心应用与依赖",children:[]},{level:3,title:"用户登录状态的存储与校验",slug:"用户登录状态的存储与校验",link:"#用户登录状态的存储与校验",children:[]},{level:3,title:"用户登录/登录校验",slug:"用户登录-登录校验",link:"#用户登录-登录校验",children:[]},{level:3,title:"用户登出",slug:"用户登出",link:"#用户登出",children:[]},{level:3,title:"跨域登录、登出",slug:"跨域登录、登出",link:"#跨域登录、登出",children:[]}]},{level:2,title:"说明",slug:"说明",link:"#说明",children:[]}],path:"/system-design/security/sso-intro.html",pathLocale:"/",extraFields:[]},{title:"Docker实战",headers:[{level:2,title:"Docker 介绍",slug:"docker-介绍",link:"#docker-介绍",children:[{level:3,title:"什么是 Docker？",slug:"什么是-docker",link:"#什么是-docker",children:[]},{level:3,title:"为什么要用 Docker?",slug:"为什么要用-docker",link:"#为什么要用-docker",children:[]}]},{level:2,title:"Docker 的安装",slug:"docker-的安装",link:"#docker-的安装",children:[{level:3,title:"Windows",slug:"windows",link:"#windows",children:[]},{level:3,title:"Mac",slug:"mac",link:"#mac",children:[]},{level:3,title:"Linux",slug:"linux",link:"#linux",children:[]}]},{level:2,title:"Docker 中的几个概念",slug:"docker-中的几个概念",link:"#docker-中的几个概念",children:[{level:3,title:"镜像",slug:"镜像",link:"#镜像",children:[]},{level:3,title:"容器",slug:"容器",link:"#容器",children:[]},{level:3,title:"仓库",slug:"仓库",link:"#仓库",children:[]},{level:3,title:"总结",slug:"总结",link:"#总结",children:[]}]},{level:2,title:"Docker 初体验",slug:"docker-初体验",link:"#docker-初体验",children:[]},{level:2,title:"Docker 镜像指令",slug:"docker-镜像指令",link:"#docker-镜像指令",children:[{level:3,title:"Docker镜像服务创建（SpringBoot）",slug:"docker镜像服务创建-springboot",link:"#docker镜像服务创建-springboot",children:[]}]},{level:2,title:"Docker 容器指令",slug:"docker-容器指令",link:"#docker-容器指令",children:[]},{level:2,title:"Docker 数据卷",slug:"docker-数据卷",link:"#docker-数据卷",children:[]}],path:"/tools/docker/docker-in-action.html",pathLocale:"/",extraFields:[]},{title:"Docker核心概念总结",headers:[{level:2,title:"一 认识容器",slug:"一-认识容器",link:"#一-认识容器",children:[{level:3,title:"1.1 什么是容器?",slug:"_1-1-什么是容器",link:"#_1-1-什么是容器",children:[]},{level:3,title:"1.2 图解物理机,虚拟机与容器",slug:"_1-2-图解物理机-虚拟机与容器",link:"#_1-2-图解物理机-虚拟机与容器",children:[]}]},{level:2,title:"二 再来谈谈 Docker 的一些概念",slug:"二-再来谈谈-docker-的一些概念",link:"#二-再来谈谈-docker-的一些概念",children:[{level:3,title:"2.1 什么是 Docker?",slug:"_2-1-什么是-docker",link:"#_2-1-什么是-docker",children:[]},{level:3,title:"2.2 Docker 思想",slug:"_2-2-docker-思想",link:"#_2-2-docker-思想",children:[]},{level:3,title:"2.3 Docker 容器的特点",slug:"_2-3-docker-容器的特点",link:"#_2-3-docker-容器的特点",children:[]},{level:3,title:"2.4 为什么要用 Docker ?",slug:"_2-4-为什么要用-docker",link:"#_2-4-为什么要用-docker",children:[]}]},{level:2,title:"三 容器 VS 虚拟机",slug:"三-容器-vs-虚拟机",link:"#三-容器-vs-虚拟机",children:[{level:3,title:"3.1 两者对比图",slug:"_3-1-两者对比图",link:"#_3-1-两者对比图",children:[]},{level:3,title:"3.2 容器与虚拟机总结",slug:"_3-2-容器与虚拟机总结",link:"#_3-2-容器与虚拟机总结",children:[]},{level:3,title:"3.3 容器与虚拟机两者是可以共存的",slug:"_3-3-容器与虚拟机两者是可以共存的",link:"#_3-3-容器与虚拟机两者是可以共存的",children:[]}]},{level:2,title:"四 Docker 基本概念",slug:"四-docker-基本概念",link:"#四-docker-基本概念",children:[{level:3,title:"4.1 镜像(Image):一个特殊的文件系统",slug:"_4-1-镜像-image-一个特殊的文件系统",link:"#_4-1-镜像-image-一个特殊的文件系统",children:[]},{level:3,title:"4.2 容器(Container):镜像运行时的实体",slug:"_4-2-容器-container-镜像运行时的实体",link:"#_4-2-容器-container-镜像运行时的实体",children:[]},{level:3,title:"4.3 仓库(Repository):集中存放镜像文件的地方",slug:"_4-3-仓库-repository-集中存放镜像文件的地方",link:"#_4-3-仓库-repository-集中存放镜像文件的地方",children:[]}]},{level:2,title:"五 常见命令",slug:"五-常见命令",link:"#五-常见命令",children:[{level:3,title:"5.1 基本命令",slug:"_5-1-基本命令",link:"#_5-1-基本命令",children:[]},{level:3,title:"5.2 拉取镜像",slug:"_5-2-拉取镜像",link:"#_5-2-拉取镜像",children:[]},{level:3,title:"5.3 删除镜像",slug:"_5-3-删除镜像",link:"#_5-3-删除镜像",children:[]}]},{level:2,title:"六 Build Ship and Run",slug:"六-build-ship-and-run",link:"#六-build-ship-and-run",children:[]},{level:2,title:"七 简单了解一下 Docker 底层原理",slug:"七-简单了解一下-docker-底层原理",link:"#七-简单了解一下-docker-底层原理",children:[{level:3,title:"7.1 虚拟化技术",slug:"_7-1-虚拟化技术",link:"#_7-1-虚拟化技术",children:[]},{level:3,title:"7.2 Docker 基于 LXC 虚拟容器技术",slug:"_7-2-docker-基于-lxc-虚拟容器技术",link:"#_7-2-docker-基于-lxc-虚拟容器技术",children:[]}]},{level:2,title:"八 总结",slug:"八-总结",link:"#八-总结",children:[]},{level:2,title:"九 推荐阅读",slug:"九-推荐阅读",link:"#九-推荐阅读",children:[]},{level:2,title:"十 参考",slug:"十-参考",link:"#十-参考",children:[]}],path:"/tools/docker/docker-intro.html",pathLocale:"/",extraFields:[]},{title:"genkins基础知识",headers:[{level:2,title:"概念",slug:"概念",link:"#概念",children:[]},{level:2,title:"安装",slug:"安装",link:"#安装",children:[{level:3,title:"apt-get安装",slug:"apt-get安装",link:"#apt-get安装",children:[]},{level:3,title:"docker安装",slug:"docker安装",link:"#docker安装",children:[]},{level:3,title:"安装细节",slug:"安装细节",link:"#安装细节",children:[]}]},{level:2,title:"启动服务",slug:"启动服务",link:"#启动服务",children:[]},{level:2,title:"配置文件",slug:"配置文件",link:"#配置文件",children:[{level:3,title:"Jenkins主目录",slug:"jenkins主目录",link:"#jenkins主目录",children:[]},{level:3,title:"Jenkins的配置文件",slug:"jenkins的配置文件",link:"#jenkins的配置文件",children:[]}]}],path:"/tools/genkins/basis.html",pathLocale:"/",extraFields:[]},{title:"genkins实践",headers:[{level:2,title:"配置Github源代码",slug:"配置github源代码",link:"#配置github源代码",children:[]},{level:2,title:"jenkins触发器",slug:"jenkins触发器",link:"#jenkins触发器",children:[{level:3,title:"github webhooks",slug:"github-webhooks",link:"#github-webhooks",children:[]}]},{level:2,title:"jenkins构建后步骤",slug:"jenkins构建后步骤",link:"#jenkins构建后步骤",children:[{level:3,title:"Shell",slug:"shell",link:"#shell",children:[]}]}],path:"/tools/genkins/practice.html",pathLocale:"/",extraFields:[]},{title:"Git核心概念总结",headers:[{level:2,title:"版本控制",slug:"版本控制",link:"#版本控制",children:[{level:3,title:"什么是版本控制",slug:"什么是版本控制",link:"#什么是版本控制",children:[]},{level:3,title:"为什么要版本控制",slug:"为什么要版本控制",link:"#为什么要版本控制",children:[]},{level:3,title:"本地版本控制系统",slug:"本地版本控制系统",link:"#本地版本控制系统",children:[]},{level:3,title:"集中化的版本控制系统",slug:"集中化的版本控制系统",link:"#集中化的版本控制系统",children:[]},{level:3,title:"分布式版本控制系统",slug:"分布式版本控制系统",link:"#分布式版本控制系统",children:[]}]},{level:2,title:"认识 Git",slug:"认识-git",link:"#认识-git",children:[{level:3,title:"Git 简史",slug:"git-简史",link:"#git-简史",children:[]},{level:3,title:"Git 与其他版本管理系统的主要区别",slug:"git-与其他版本管理系统的主要区别",link:"#git-与其他版本管理系统的主要区别",children:[]},{level:3,title:"Git 的三种状态",slug:"git-的三种状态",link:"#git-的三种状态",children:[]}]},{level:2,title:"Git 使用快速入门",slug:"git-使用快速入门",link:"#git-使用快速入门",children:[{level:3,title:"获取 Git 仓库",slug:"获取-git-仓库",link:"#获取-git-仓库",children:[]},{level:3,title:"记录每次更新到仓库",slug:"记录每次更新到仓库",link:"#记录每次更新到仓库",children:[]},{level:3,title:"一个好的 Git 提交消息",slug:"一个好的-git-提交消息",link:"#一个好的-git-提交消息",children:[]},{level:3,title:"推送改动到远程仓库",slug:"推送改动到远程仓库",link:"#推送改动到远程仓库",children:[]},{level:3,title:"远程仓库的移除与重命名",slug:"远程仓库的移除与重命名",link:"#远程仓库的移除与重命名",children:[]},{level:3,title:"查看提交历史",slug:"查看提交历史",link:"#查看提交历史",children:[]},{level:3,title:"撤销操作",slug:"撤销操作",link:"#撤销操作",children:[]},{level:3,title:"分支",slug:"分支",link:"#分支",children:[]}]},{level:2,title:"学习资料推荐",slug:"学习资料推荐",link:"#学习资料推荐",children:[]}],path:"/tools/git/git-intro.html",pathLocale:"/",extraFields:[]},{title:"Github实用小技巧总结",headers:[{level:2,title:"一键生成 Github 简历 & Github 年报",slug:"一键生成-github-简历-github-年报",link:"#一键生成-github-简历-github-年报",children:[]},{level:2,title:"个性化 Github 首页",slug:"个性化-github-首页",link:"#个性化-github-首页",children:[]},{level:2,title:"自定义项目徽章",slug:"自定义项目徽章",link:"#自定义项目徽章",children:[]},{level:2,title:"自动为项目添加贡献情况图标",slug:"自动为项目添加贡献情况图标",link:"#自动为项目添加贡献情况图标",children:[]},{level:2,title:"Github 表情",slug:"github-表情",link:"#github-表情",children:[]},{level:2,title:"高效阅读 Github 项目的源代码",slug:"高效阅读-github-项目的源代码",link:"#高效阅读-github-项目的源代码",children:[{level:3,title:"Chrome 插件 Octotree",slug:"chrome-插件-octotree",link:"#chrome-插件-octotree",children:[]},{level:3,title:"Chrome 插件 SourceGraph",slug:"chrome-插件-sourcegraph",link:"#chrome-插件-sourcegraph",children:[]},{level:3,title:"克隆项目到本地",slug:"克隆项目到本地",link:"#克隆项目到本地",children:[]}]},{level:2,title:"扩展 Github 的功能",slug:"扩展-github-的功能",link:"#扩展-github-的功能",children:[]},{level:2,title:"自动为 Markdown 文件生成目录",slug:"自动为-markdown-文件生成目录",link:"#自动为-markdown-文件生成目录",children:[]},{level:2,title:"善用 Github Explore",slug:"善用-github-explore",link:"#善用-github-explore",children:[]},{level:2,title:"GitHub Actions 很强大",slug:"github-actions-很强大",link:"#github-actions-很强大",children:[]},{level:2,title:"后记",slug:"后记",link:"#后记",children:[]}],path:"/tools/git/github-tips.html",pathLocale:"/",extraFields:[]},{title:"Gradle核心概念总结",headers:[{level:2,title:"Gradle 介绍",slug:"gradle-介绍",link:"#gradle-介绍",children:[]},{level:2,title:"Groovy 介绍",slug:"groovy-介绍",link:"#groovy-介绍",children:[]},{level:2,title:"Gradle 优势",slug:"gradle-优势",link:"#gradle-优势",children:[]},{level:2,title:"Gradle Wrapper 介绍",slug:"gradle-wrapper-介绍",link:"#gradle-wrapper-介绍",children:[{level:3,title:"生成 Gradle Wrapper",slug:"生成-gradle-wrapper",link:"#生成-gradle-wrapper",children:[]},{level:3,title:"更新 Gradle Wrapper",slug:"更新-gradle-wrapper",link:"#更新-gradle-wrapper",children:[]},{level:3,title:"自定义 Gradle Wrapper",slug:"自定义-gradle-wrapper",link:"#自定义-gradle-wrapper",children:[]}]},{level:2,title:"Gradle 任务",slug:"gradle-任务",link:"#gradle-任务",children:[]},{level:2,title:"Gradle 插件",slug:"gradle-插件",link:"#gradle-插件",children:[]},{level:2,title:"Gradle 构建生命周期",slug:"gradle-构建生命周期",link:"#gradle-构建生命周期",children:[{level:3,title:"初始化阶段",slug:"初始化阶段",link:"#初始化阶段",children:[]},{level:3,title:"配置阶段",slug:"配置阶段",link:"#配置阶段",children:[]},{level:3,title:"运行阶段",slug:"运行阶段",link:"#运行阶段",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/tools/gradle/gradle-core-concepts.html",pathLocale:"/",extraFields:[]},{title:"Maven最佳实践",headers:[{level:2,title:"Maven 标准目录结构",slug:"maven-标准目录结构",link:"#maven-标准目录结构",children:[]},{level:2,title:"指定 Maven 编译器插件",slug:"指定-maven-编译器插件",link:"#指定-maven-编译器插件",children:[]},{level:2,title:"有效管理依赖关系",slug:"有效管理依赖关系",link:"#有效管理依赖关系",children:[]},{level:2,title:"针对不同环境使用配置文件",slug:"针对不同环境使用配置文件",link:"#针对不同环境使用配置文件",children:[]},{level:2,title:"保持 pom.xml 干净且井然有序",slug:"保持-pom-xml-干净且井然有序",link:"#保持-pom-xml-干净且井然有序",children:[]},{level:2,title:"使用 Maven Wrapper",slug:"使用-maven-wrapper",link:"#使用-maven-wrapper",children:[]},{level:2,title:"通过持续集成实现构建自动化",slug:"通过持续集成实现构建自动化",link:"#通过持续集成实现构建自动化",children:[]},{level:2,title:"利用 Maven 插件获得附加功能",slug:"利用-maven-插件获得附加功能",link:"#利用-maven-插件获得附加功能",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/tools/maven/maven-best-practices.html",pathLocale:"/",extraFields:[]},{title:"Maven核心概念总结",headers:[{level:2,title:"Maven 介绍",slug:"maven-介绍",link:"#maven-介绍",children:[]},{level:2,title:"Maven 坐标",slug:"maven-坐标",link:"#maven-坐标",children:[]},{level:2,title:"Maven 依赖",slug:"maven-依赖",link:"#maven-依赖",children:[{level:3,title:"依赖配置",slug:"依赖配置",link:"#依赖配置",children:[]},{level:3,title:"依赖范围",slug:"依赖范围",link:"#依赖范围",children:[]},{level:3,title:"传递依赖性",slug:"传递依赖性",link:"#传递依赖性",children:[]},{level:3,title:"依赖冲突",slug:"依赖冲突",link:"#依赖冲突",children:[]},{level:3,title:"排除依赖",slug:"排除依赖",link:"#排除依赖",children:[]}]},{level:2,title:"Maven 仓库",slug:"maven-仓库",link:"#maven-仓库",children:[]},{level:2,title:"Maven 生命周期",slug:"maven-生命周期",link:"#maven-生命周期",children:[{level:3,title:"default 生命周期",slug:"default-生命周期",link:"#default-生命周期",children:[]},{level:3,title:"clean 生命周期",slug:"clean-生命周期",link:"#clean-生命周期",children:[]},{level:3,title:"site 生命周期",slug:"site-生命周期",link:"#site-生命周期",children:[]}]},{level:2,title:"Maven 插件",slug:"maven-插件",link:"#maven-插件",children:[]},{level:2,title:"Maven 多模块管理",slug:"maven-多模块管理",link:"#maven-多模块管理",children:[]},{level:2,title:"文章推荐",slug:"文章推荐",link:"#文章推荐",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/tools/maven/maven-core-concepts.html",pathLocale:"/",extraFields:[]},{title:"盒模型",headers:[{level:2,title:"区块盒子和行内盒子",slug:"区块盒子和行内盒子",link:"#区块盒子和行内盒子",children:[]},{level:2,title:"外部显示类型",slug:"外部显示类型",link:"#外部显示类型",children:[]},{level:2,title:"内部显示类型",slug:"内部显示类型",link:"#内部显示类型",children:[]},{level:2,title:"盒模型的各个部分",slug:"盒模型的各个部分",link:"#盒模型的各个部分",children:[{level:3,title:"CSS标准盒模型",slug:"css标准盒模型",link:"#css标准盒模型",children:[]},{level:3,title:"CSS替代盒模型",slug:"css替代盒模型",link:"#css替代盒模型",children:[]}]},{level:2,title:"外边距",slug:"外边距",link:"#外边距",children:[{level:3,title:"外边距折叠",slug:"外边距折叠",link:"#外边距折叠",children:[]}]}],path:"/web/css/box-model.html",pathLocale:"/",extraFields:[]},{title:"JavaScript",headers:[{level:2,title:"变量类型",slug:"变量类型",link:"#变量类型",children:[]},{level:2,title:"异步JavaScript",slug:"异步javascript",link:"#异步javascript",children:[{level:3,title:"事件处理程序",slug:"事件处理程序",link:"#事件处理程序",children:[]}]},{level:2,title:"Promise",slug:"promise",link:"#promise",children:[{level:3,title:"Promise链",slug:"promise链",link:"#promise链",children:[]},{level:3,title:"错误捕获",slug:"错误捕获",link:"#错误捕获",children:[]},{level:3,title:"状态",slug:"状态",link:"#状态",children:[]},{level:3,title:"合并使用多个 Promise",slug:"合并使用多个-promise",link:"#合并使用多个-promise",children:[]}]},{level:2,title:"async 和 await",slug:"async-和-await",link:"#async-和-await",children:[]}],path:"/web/javascript/javascript-basis.html",pathLocale:"/",extraFields:[]},{title:"JavaScript扩展",headers:[{level:2,title:"Chunk Error",slug:"chunk-error",link:"#chunk-error",children:[{level:3,title:"Basis knowledge",slug:"basis-knowledge",link:"#basis-knowledge",children:[]},{level:3,title:"Reason for the error",slug:"reason-for-the-error",link:"#reason-for-the-error",children:[]},{level:3,title:"Example of the Chunk Load Error",slug:"example-of-the-chunk-load-error",link:"#example-of-the-chunk-load-error",children:[]},{level:3,title:"Reproducing the Error",slug:"reproducing-the-error",link:"#reproducing-the-error",children:[]}]}],path:"/web/javascript/javascript-extension.html",pathLocale:"/",extraFields:[]},{title:"acwing题目",headers:[],path:"/cs-basics/algorithms/acwing/acwing.html",pathLocale:"/",extraFields:[]},{title:"动态规划",headers:[],path:"/cs-basics/algorithms/model/dp.html",pathLocale:"/",extraFields:[]},{title:"图论",headers:[{level:2,title:"二分图最大匹配",slug:"二分图最大匹配",link:"#二分图最大匹配",children:[{level:3,title:"匈牙利算法",slug:"匈牙利算法",link:"#匈牙利算法",children:[]}]},{level:2,title:"最短路径",slug:"最短路径",link:"#最短路径",children:[{level:3,title:"迪杰斯特拉算法",slug:"迪杰斯特拉算法",link:"#迪杰斯特拉算法",children:[]},{level:3,title:"floyd算法",slug:"floyd算法",link:"#floyd算法",children:[]}]}],path:"/cs-basics/algorithms/model/graph.html",pathLocale:"/",extraFields:[]},{title:"贪心",headers:[],path:"/cs-basics/algorithms/model/greedy.html",pathLocale:"/",extraFields:[]},{title:"数论",headers:[{level:2,title:"约数个数和约数之和",slug:"约数个数和约数之和",link:"#约数个数和约数之和",children:[]},{level:2,title:"裴蜀定理",slug:"裴蜀定理",link:"#裴蜀定理",children:[]},{level:2,title:"卡特兰数",slug:"卡特兰数",link:"#卡特兰数",children:[]},{level:2,title:"欧几里得算法",slug:"欧几里得算法",link:"#欧几里得算法",children:[{level:3,title:"扩展欧几里得算法",slug:"扩展欧几里得算法",link:"#扩展欧几里得算法",children:[]}]},{level:2,title:"中国剩余定理",slug:"中国剩余定理",link:"#中国剩余定理",children:[{level:3,title:"过程",slug:"过程",link:"#过程",children:[]}]},{level:2,title:"Python库函数",slug:"python库函数",link:"#python库函数",children:[]}],path:"/cs-basics/algorithms/model/math.html",pathLocale:"/",extraFields:[]},{title:"网页凭证",headers:[{level:2,title:"What is Credential",slug:"what-is-credential",link:"#what-is-credential",children:[]},{level:2,title:"Credential Management API",slug:"credential-management-api",link:"#credential-management-api",children:[{level:3,title:"存储凭证",slug:"存储凭证",link:"#存储凭证",children:[]},{level:3,title:"检索凭证",slug:"检索凭证",link:"#检索凭证",children:[]},{level:3,title:"删除凭证",slug:"删除凭证",link:"#删除凭证",children:[]}]}],path:"/cs-basics/network/authentication/credential.html",pathLocale:"/",extraFields:[]},{title:"第三方登录",headers:[],path:"/cs-basics/network/authentication/federated-identity.html",pathLocale:"/",extraFields:[]},{title:"移动设备身份认证",headers:[],path:"/cs-basics/network/authentication/mobile-device-authentication.html",pathLocale:"/",extraFields:[]},{title:"ZooKeeper 实战",headers:[{level:2,title:"ZooKeeper 安装",slug:"zookeeper-安装",link:"#zookeeper-安装",children:[{level:3,title:"使用 Docker 安装 zookeeper",slug:"使用-docker-安装-zookeeper",link:"#使用-docker-安装-zookeeper",children:[]},{level:3,title:"连接 ZooKeeper 服务",slug:"连接-zookeeper-服务",link:"#连接-zookeeper-服务",children:[]}]},{level:2,title:"ZooKeeper 常用命令演示",slug:"zookeeper-常用命令演示",link:"#zookeeper-常用命令演示",children:[{level:3,title:"查看常用命令(help 命令)",slug:"查看常用命令-help-命令",link:"#查看常用命令-help-命令",children:[]},{level:3,title:"创建节点(create 命令)",slug:"创建节点-create-命令",link:"#创建节点-create-命令",children:[]},{level:3,title:"更新节点数据内容(set 命令)",slug:"更新节点数据内容-set-命令",link:"#更新节点数据内容-set-命令",children:[]},{level:3,title:"获取节点的数据(get 命令)",slug:"获取节点的数据-get-命令",link:"#获取节点的数据-get-命令",children:[]},{level:3,title:"查看某个目录下的子节点(ls 命令)",slug:"查看某个目录下的子节点-ls-命令",link:"#查看某个目录下的子节点-ls-命令",children:[]},{level:3,title:"查看节点状态(stat 命令)",slug:"查看节点状态-stat-命令",link:"#查看节点状态-stat-命令",children:[]},{level:3,title:"查看节点信息和状态(ls2 命令)",slug:"查看节点信息和状态-ls2-命令",link:"#查看节点信息和状态-ls2-命令",children:[]},{level:3,title:"删除节点(delete 命令)",slug:"删除节点-delete-命令",link:"#删除节点-delete-命令",children:[]}]},{level:2,title:"ZooKeeper Java 客户端 Curator 简单使用",slug:"zookeeper-java-客户端-curator-简单使用",link:"#zookeeper-java-客户端-curator-简单使用",children:[{level:3,title:"连接 ZooKeeper 客户端",slug:"连接-zookeeper-客户端",link:"#连接-zookeeper-客户端",children:[]},{level:3,title:"数据节点的增删改查",slug:"数据节点的增删改查",link:"#数据节点的增删改查",children:[]}]}],path:"/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.html",pathLocale:"/",extraFields:[]},{title:"ZooKeeper相关概念总结(入门)",headers:[{level:2,title:"ZooKeeper 介绍",slug:"zookeeper-介绍",link:"#zookeeper-介绍",children:[{level:3,title:"ZooKeeper 由来",slug:"zookeeper-由来",link:"#zookeeper-由来",children:[]},{level:3,title:"ZooKeeper 概览",slug:"zookeeper-概览",link:"#zookeeper-概览",children:[]},{level:3,title:"ZooKeeper 特点",slug:"zookeeper-特点",link:"#zookeeper-特点",children:[]},{level:3,title:"ZooKeeper 应用场景",slug:"zookeeper-应用场景",link:"#zookeeper-应用场景",children:[]}]},{level:2,title:"ZooKeeper 重要概念",slug:"zookeeper-重要概念",link:"#zookeeper-重要概念",children:[{level:3,title:"Data model（数据模型）",slug:"data-model-数据模型",link:"#data-model-数据模型",children:[]},{level:3,title:"znode（数据节点）",slug:"znode-数据节点",link:"#znode-数据节点",children:[]},{level:3,title:"版本（version）",slug:"版本-version",link:"#版本-version",children:[]},{level:3,title:"ACL（权限控制）",slug:"acl-权限控制",link:"#acl-权限控制",children:[]},{level:3,title:"Watcher（事件监听器）",slug:"watcher-事件监听器",link:"#watcher-事件监听器",children:[]},{level:3,title:"会话（Session）",slug:"会话-session",link:"#会话-session",children:[]}]},{level:2,title:"ZooKeeper 集群",slug:"zookeeper-集群",link:"#zookeeper-集群",children:[{level:3,title:"ZooKeeper 集群角色",slug:"zookeeper-集群角色",link:"#zookeeper-集群角色",children:[]},{level:3,title:"ZooKeeper 集群 Leader 选举过程",slug:"zookeeper-集群-leader-选举过程",link:"#zookeeper-集群-leader-选举过程",children:[]},{level:3,title:"ZooKeeper 集群为啥最好奇数台？",slug:"zookeeper-集群为啥最好奇数台",link:"#zookeeper-集群为啥最好奇数台",children:[]},{level:3,title:"ZooKeeper 选举的过半机制防止脑裂",slug:"zookeeper-选举的过半机制防止脑裂",link:"#zookeeper-选举的过半机制防止脑裂",children:[]}]},{level:2,title:"ZAB 协议和 Paxos 算法",slug:"zab-协议和-paxos-算法",link:"#zab-协议和-paxos-算法",children:[{level:3,title:"ZAB 协议介绍",slug:"zab-协议介绍",link:"#zab-协议介绍",children:[]},{level:3,title:"ZAB 协议两种基本的模式：崩溃恢复和消息广播",slug:"zab-协议两种基本的模式-崩溃恢复和消息广播",link:"#zab-协议两种基本的模式-崩溃恢复和消息广播",children:[]},{level:3,title:"ZAB 协议&Paxos 算法文章推荐",slug:"zab-协议-paxos-算法文章推荐",link:"#zab-协议-paxos-算法文章推荐",children:[]}]},{level:2,title:"ZooKeeper VS ETCD",slug:"zookeeper-vs-etcd",link:"#zookeeper-vs-etcd",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.html",pathLocale:"/",extraFields:[]},{title:"ZooKeeper相关概念总结(进阶)",headers:[{level:2,title:"什么是 ZooKeeper",slug:"什么是-zookeeper",link:"#什么是-zookeeper",children:[]},{level:2,title:"一致性问题",slug:"一致性问题",link:"#一致性问题",children:[]},{level:2,title:"一致性协议和算法",slug:"一致性协议和算法",link:"#一致性协议和算法",children:[{level:3,title:"2PC（两阶段提交）",slug:"_2pc-两阶段提交",link:"#_2pc-两阶段提交",children:[]},{level:3,title:"3PC（三阶段提交）",slug:"_3pc-三阶段提交",link:"#_3pc-三阶段提交",children:[]},{level:3,title:"Paxos 算法",slug:"paxos-算法",link:"#paxos-算法",children:[]}]},{level:2,title:"引出 ZAB",slug:"引出-zab",link:"#引出-zab",children:[{level:3,title:"Zookeeper 架构",slug:"zookeeper-架构",link:"#zookeeper-架构",children:[]},{level:3,title:"ZAB 中的三个角色",slug:"zab-中的三个角色",link:"#zab-中的三个角色",children:[]},{level:3,title:"消息广播模式",slug:"消息广播模式",link:"#消息广播模式",children:[]},{level:3,title:"崩溃恢复模式",slug:"崩溃恢复模式",link:"#崩溃恢复模式",children:[]}]},{level:2,title:"Zookeeper 的几个理论知识",slug:"zookeeper-的几个理论知识",link:"#zookeeper-的几个理论知识",children:[{level:3,title:"数据模型",slug:"数据模型",link:"#数据模型",children:[]},{level:3,title:"会话",slug:"会话",link:"#会话",children:[]},{level:3,title:"ACL",slug:"acl",link:"#acl",children:[]},{level:3,title:"Watcher 机制",slug:"watcher-机制",link:"#watcher-机制",children:[]}]},{level:2,title:"Zookeeper 的几个典型应用场景",slug:"zookeeper-的几个典型应用场景",link:"#zookeeper-的几个典型应用场景",children:[{level:3,title:"选主",slug:"选主",link:"#选主",children:[]},{level:3,title:"数据发布/订阅",slug:"数据发布-订阅",link:"#数据发布-订阅",children:[]},{level:3,title:"负载均衡",slug:"负载均衡",link:"#负载均衡",children:[]},{level:3,title:"分布式锁",slug:"分布式锁",link:"#分布式锁",children:[]},{level:3,title:"命名服务",slug:"命名服务",link:"#命名服务",children:[]},{level:3,title:"集群管理和注册中心",slug:"集群管理和注册中心",link:"#集群管理和注册中心",children:[]}]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.html",pathLocale:"/",extraFields:[]},{title:"MyBatis常见面试题总结",headers:[{level:3,title:"#{} 和 ${} 的区别是什么？",slug:"和-的区别是什么",link:"#和-的区别是什么",children:[]},{level:3,title:"xml 映射文件中，除了常见的 select、insert、update、delete 标签之外，还有哪些标签？",slug:"xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签",link:"#xml-映射文件中-除了常见的-select、insert、update、delete-标签之外-还有哪些标签",children:[]},{level:3,title:"Dao 接口的工作原理是什么？Dao 接口里的方法，参数不同时，方法能重载吗？",slug:"dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗",link:"#dao-接口的工作原理是什么-dao-接口里的方法-参数不同时-方法能重载吗",children:[]},{level:3,title:"MyBatis 是如何进行分页的？分页插件的原理是什么？",slug:"mybatis-是如何进行分页的-分页插件的原理是什么",link:"#mybatis-是如何进行分页的-分页插件的原理是什么",children:[]},{level:3,title:"简述 MyBatis 的插件运行原理，以及如何编写一个插件",slug:"简述-mybatis-的插件运行原理-以及如何编写一个插件",link:"#简述-mybatis-的插件运行原理-以及如何编写一个插件",children:[]},{level:3,title:"MyBatis 执行批量插入，能返回数据库主键列表吗？",slug:"mybatis-执行批量插入-能返回数据库主键列表吗",link:"#mybatis-执行批量插入-能返回数据库主键列表吗",children:[]},{level:3,title:"MyBatis 动态 sql 是做什么的？都有哪些动态 sql？能简述一下动态 sql 的执行原理不？",slug:"mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不",link:"#mybatis-动态-sql-是做什么的-都有哪些动态-sql-能简述一下动态-sql-的执行原理不",children:[]},{level:3,title:"MyBatis 是如何将 sql 执行结果封装为目标对象并返回的？都有哪些映射形式？",slug:"mybatis-是如何将-sql-执行结果封装为目标对象并返回的-都有哪些映射形式",link:"#mybatis-是如何将-sql-执行结果封装为目标对象并返回的-都有哪些映射形式",children:[]},{level:3,title:"MyBatis 能执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别",slug:"mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区别",link:"#mybatis-能执行一对一、一对多的关联查询吗-都有哪些实现方式-以及它们之间的区别",children:[]},{level:3,title:"MyBatis 是否支持延迟加载？如果支持，它的实现原理是什么？",slug:"mybatis-是否支持延迟加载-如果支持-它的实现原理是什么",link:"#mybatis-是否支持延迟加载-如果支持-它的实现原理是什么",children:[]},{level:3,title:"MyBatis 的 xml 映射文件中，不同的 xml 映射文件，id 是否可以重复？",slug:"mybatis-的-xml-映射文件中-不同的-xml-映射文件-id-是否可以重复",link:"#mybatis-的-xml-映射文件中-不同的-xml-映射文件-id-是否可以重复",children:[]},{level:3,title:"MyBatis 中如何执行批处理？",slug:"mybatis-中如何执行批处理",link:"#mybatis-中如何执行批处理",children:[]},{level:3,title:"MyBatis 都有哪些 Executor 执行器？它们之间的区别是什么？",slug:"mybatis-都有哪些-executor-执行器-它们之间的区别是什么",link:"#mybatis-都有哪些-executor-执行器-它们之间的区别是什么",children:[]},{level:3,title:"MyBatis 中如何指定使用哪一种 Executor 执行器？",slug:"mybatis-中如何指定使用哪一种-executor-执行器",link:"#mybatis-中如何指定使用哪一种-executor-执行器",children:[]},{level:3,title:"MyBatis 是否可以映射 Enum 枚举类？",slug:"mybatis-是否可以映射-enum-枚举类",link:"#mybatis-是否可以映射-enum-枚举类",children:[]},{level:3,title:"MyBatis 映射文件中，如果 A 标签通过 include 引用了 B 标签的内容，请问，B 标签能否定义在 A 标签的后面，还是说必须定义在 A 标签的前面？",slug:"mybatis-映射文件中-如果-a-标签通过-include-引用了-b-标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在-a-标签的前面",link:"#mybatis-映射文件中-如果-a-标签通过-include-引用了-b-标签的内容-请问-b-标签能否定义在-a-标签的后面-还是说必须定义在-a-标签的前面",children:[]},{level:3,title:"简述 MyBatis 的 xml 映射文件和 MyBatis 内部数据结构之间的映射关系？",slug:"简述-mybatis-的-xml-映射文件和-mybatis-内部数据结构之间的映射关系",link:"#简述-mybatis-的-xml-映射文件和-mybatis-内部数据结构之间的映射关系",children:[]},{level:3,title:"为什么说 MyBatis 是半自动 ORM 映射工具？它与全自动的区别在哪里？",slug:"为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里",link:"#为什么说-mybatis-是半自动-orm-映射工具-它与全自动的区别在哪里",children:[]},{level:3,title:"文章推荐",slug:"文章推荐",link:"#文章推荐",children:[]}],path:"/system-design/framework/mybatis/mybatis-interview.html",pathLocale:"/",extraFields:[]},{title:"IoC & AOP详解（快速搞懂）",headers:[{level:2,title:"IoC （Inversion of control ）",slug:"ioc-inversion-of-control",link:"#ioc-inversion-of-control",children:[{level:3,title:"什么是 IoC?",slug:"什么是-ioc",link:"#什么是-ioc",children:[]},{level:3,title:"IoC 解决了什么问题?",slug:"ioc-解决了什么问题",link:"#ioc-解决了什么问题",children:[]},{level:3,title:"IoC 和 DI 有区别吗？",slug:"ioc-和-di-有区别吗",link:"#ioc-和-di-有区别吗",children:[]}]},{level:2,title:"AOP（Aspect oriented programming）",slug:"aop-aspect-oriented-programming",link:"#aop-aspect-oriented-programming",children:[{level:3,title:"什么是 AOP？",slug:"什么是-aop",link:"#什么是-aop",children:[]},{level:3,title:"AOP 为什么叫面向切面编程？",slug:"aop-为什么叫面向切面编程",link:"#aop-为什么叫面向切面编程",children:[]},{level:3,title:"AOP 解决了什么问题？",slug:"aop-解决了什么问题",link:"#aop-解决了什么问题",children:[]},{level:3,title:"AOP 的应用场景有哪些？",slug:"aop-的应用场景有哪些",link:"#aop-的应用场景有哪些",children:[]},{level:3,title:"AOP 实现方式有哪些？",slug:"aop-实现方式有哪些",link:"#aop-实现方式有哪些",children:[]}]}],path:"/system-design/framework/spring/ioc-and-aop.html",pathLocale:"/",extraFields:[]},{title:"SpringBoot 自动装配原理详解",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"什么是 SpringBoot 自动装配？",slug:"什么是-springboot-自动装配",link:"#什么是-springboot-自动装配",children:[]},{level:2,title:"SpringBoot 是如何实现自动装配的？",slug:"springboot-是如何实现自动装配的",link:"#springboot-是如何实现自动装配的",children:[{level:3,title:"@EnableAutoConfiguration:实现自动装配的核心注解",slug:"enableautoconfiguration-实现自动装配的核心注解",link:"#enableautoconfiguration-实现自动装配的核心注解",children:[]},{level:3,title:"AutoConfigurationImportSelector:加载自动装配类",slug:"autoconfigurationimportselector-加载自动装配类",link:"#autoconfigurationimportselector-加载自动装配类",children:[]}]},{level:2,title:"如何实现一个 Starter",slug:"如何实现一个-starter",link:"#如何实现一个-starter",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]}],path:"/system-design/framework/spring/spring-boot-auto-assembly-principles.html",pathLocale:"/",extraFields:[]},{title:"Spring&SpringBoot常用注解总结",headers:[{level:3,title:"0.前言",slug:"_0-前言",link:"#_0-前言",children:[]},{level:3,title:"1. @SpringBootApplication",slug:"_1-springbootapplication",link:"#_1-springbootapplication",children:[]},{level:3,title:"2. Spring Bean 相关",slug:"_2-spring-bean-相关",link:"#_2-spring-bean-相关",children:[]},{level:3,title:"3. 处理常见的 HTTP 请求类型",slug:"_3-处理常见的-http-请求类型",link:"#_3-处理常见的-http-请求类型",children:[]},{level:3,title:"4. 前后端传值",slug:"_4-前后端传值",link:"#_4-前后端传值",children:[]},{level:3,title:"5. 读取配置信息",slug:"_5-读取配置信息",link:"#_5-读取配置信息",children:[]},{level:3,title:"6. 参数校验",slug:"_6-参数校验",link:"#_6-参数校验",children:[]},{level:3,title:"7. 全局处理 Controller 层异常",slug:"_7-全局处理-controller-层异常",link:"#_7-全局处理-controller-层异常",children:[]},{level:3,title:"8. JPA 相关",slug:"_8-jpa-相关",link:"#_8-jpa-相关",children:[]},{level:3,title:"9. 事务 @Transactional",slug:"_9-事务-transactional",link:"#_9-事务-transactional",children:[]},{level:3,title:"10. json 数据处理",slug:"_10-json-数据处理",link:"#_10-json-数据处理",children:[]},{level:3,title:"11. 测试相关",slug:"_11-测试相关",link:"#_11-测试相关",children:[]}],path:"/system-design/framework/spring/spring-common-annotations.html",pathLocale:"/",extraFields:[]},{title:"Spring 中的设计模式详解",headers:[{level:2,title:"控制反转(IoC)和依赖注入(DI)",slug:"控制反转-ioc-和依赖注入-di",link:"#控制反转-ioc-和依赖注入-di",children:[]},{level:2,title:"工厂设计模式",slug:"工厂设计模式",link:"#工厂设计模式",children:[]},{level:2,title:"单例设计模式",slug:"单例设计模式",link:"#单例设计模式",children:[]},{level:2,title:"代理设计模式",slug:"代理设计模式",link:"#代理设计模式",children:[{level:3,title:"代理模式在 AOP 中的应用",slug:"代理模式在-aop-中的应用",link:"#代理模式在-aop-中的应用",children:[]},{level:3,title:"Spring AOP 和 AspectJ AOP 有什么区别?",slug:"spring-aop-和-aspectj-aop-有什么区别",link:"#spring-aop-和-aspectj-aop-有什么区别",children:[]}]},{level:2,title:"模板方法",slug:"模板方法",link:"#模板方法",children:[]},{level:2,title:"观察者模式",slug:"观察者模式",link:"#观察者模式",children:[{level:3,title:"Spring 事件驱动模型中的三种角色",slug:"spring-事件驱动模型中的三种角色",link:"#spring-事件驱动模型中的三种角色",children:[]},{level:3,title:"Spring 的事件流程总结",slug:"spring-的事件流程总结",link:"#spring-的事件流程总结",children:[]}]},{level:2,title:"适配器模式",slug:"适配器模式",link:"#适配器模式",children:[{level:3,title:"Spring AOP 中的适配器模式",slug:"spring-aop-中的适配器模式",link:"#spring-aop-中的适配器模式",children:[]},{level:3,title:"Spring MVC 中的适配器模式",slug:"spring-mvc-中的适配器模式",link:"#spring-mvc-中的适配器模式",children:[]}]},{level:2,title:"装饰者模式",slug:"装饰者模式",link:"#装饰者模式",children:[]},{level:2,title:"总结",slug:"总结",link:"#总结",children:[]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/framework/spring/spring-design-patterns-summary.html",pathLocale:"/",extraFields:[]},{title:"Spring常见面试题总结",headers:[{level:2,title:"Spring 基础",slug:"spring-基础",link:"#spring-基础",children:[{level:3,title:"什么是 Spring 框架?",slug:"什么是-spring-框架",link:"#什么是-spring-框架",children:[]},{level:3,title:"Spring 包含的模块有哪些？",slug:"spring-包含的模块有哪些",link:"#spring-包含的模块有哪些",children:[]},{level:3,title:"Spring,Spring MVC,Spring Boot 之间什么关系?",slug:"spring-spring-mvc-spring-boot-之间什么关系",link:"#spring-spring-mvc-spring-boot-之间什么关系",children:[]}]},{level:2,title:"Spring IoC",slug:"spring-ioc",link:"#spring-ioc",children:[{level:3,title:"谈谈自己对于 Spring IoC 的了解",slug:"谈谈自己对于-spring-ioc-的了解",link:"#谈谈自己对于-spring-ioc-的了解",children:[]},{level:3,title:"什么是 Spring Bean？",slug:"什么是-spring-bean",link:"#什么是-spring-bean",children:[]},{level:3,title:"将一个类声明为 Bean 的注解有哪些?",slug:"将一个类声明为-bean-的注解有哪些",link:"#将一个类声明为-bean-的注解有哪些",children:[]},{level:3,title:"@Component 和 @Bean 的区别是什么？",slug:"component-和-bean-的区别是什么",link:"#component-和-bean-的区别是什么",children:[]},{level:3,title:"注入 Bean 的注解有哪些？",slug:"注入-bean-的注解有哪些",link:"#注入-bean-的注解有哪些",children:[]},{level:3,title:"@Autowired 和 @Resource 的区别是什么？",slug:"autowired-和-resource-的区别是什么",link:"#autowired-和-resource-的区别是什么",children:[]},{level:3,title:"Bean 的作用域有哪些?",slug:"bean-的作用域有哪些",link:"#bean-的作用域有哪些",children:[]},{level:3,title:"Bean 是线程安全的吗？",slug:"bean-是线程安全的吗",link:"#bean-是线程安全的吗",children:[]},{level:3,title:"Bean 的生命周期了解么?",slug:"bean-的生命周期了解么",link:"#bean-的生命周期了解么",children:[]}]},{level:2,title:"Spring AOP",slug:"spring-aop",link:"#spring-aop",children:[{level:3,title:"谈谈自己对于 AOP 的了解",slug:"谈谈自己对于-aop-的了解",link:"#谈谈自己对于-aop-的了解",children:[]},{level:3,title:"Spring AOP 和 AspectJ AOP 有什么区别？",slug:"spring-aop-和-aspectj-aop-有什么区别",link:"#spring-aop-和-aspectj-aop-有什么区别",children:[]},{level:3,title:"AspectJ 定义的通知类型有哪些？",slug:"aspectj-定义的通知类型有哪些",link:"#aspectj-定义的通知类型有哪些",children:[]},{level:3,title:"多个切面的执行顺序如何控制？",slug:"多个切面的执行顺序如何控制",link:"#多个切面的执行顺序如何控制",children:[]}]},{level:2,title:"Spring MVC",slug:"spring-mvc",link:"#spring-mvc",children:[{level:3,title:"说说自己对于 Spring MVC 了解?",slug:"说说自己对于-spring-mvc-了解",link:"#说说自己对于-spring-mvc-了解",children:[]},{level:3,title:"Spring MVC 的核心组件有哪些？",slug:"spring-mvc-的核心组件有哪些",link:"#spring-mvc-的核心组件有哪些",children:[]},{level:3,title:"SpringMVC 工作原理了解吗?",slug:"springmvc-工作原理了解吗",link:"#springmvc-工作原理了解吗",children:[]},{level:3,title:"统一异常处理怎么做？",slug:"统一异常处理怎么做",link:"#统一异常处理怎么做",children:[]}]},{level:2,title:"Spring 框架中用到了哪些设计模式？",slug:"spring-框架中用到了哪些设计模式",link:"#spring-框架中用到了哪些设计模式",children:[]},{level:2,title:"Spring 的循环依赖",slug:"spring-的循环依赖",link:"#spring-的循环依赖",children:[{level:3,title:"Spring 循环依赖了解吗，怎么解决？",slug:"spring-循环依赖了解吗-怎么解决",link:"#spring-循环依赖了解吗-怎么解决",children:[]},{level:3,title:"@Lazy 能解决循环依赖吗？",slug:"lazy-能解决循环依赖吗",link:"#lazy-能解决循环依赖吗",children:[]},{level:3,title:"SpringBoot 允许循环依赖发生么？",slug:"springboot-允许循环依赖发生么",link:"#springboot-允许循环依赖发生么",children:[]}]},{level:2,title:"Spring 事务",slug:"spring-事务",link:"#spring-事务",children:[{level:3,title:"Spring 管理事务的方式有几种？",slug:"spring-管理事务的方式有几种",link:"#spring-管理事务的方式有几种",children:[]},{level:3,title:"Spring 事务中哪几种事务传播行为?",slug:"spring-事务中哪几种事务传播行为",link:"#spring-事务中哪几种事务传播行为",children:[]},{level:3,title:"Spring 事务中的隔离级别有哪几种?",slug:"spring-事务中的隔离级别有哪几种",link:"#spring-事务中的隔离级别有哪几种",children:[]},{level:3,title:"@Transactional(rollbackFor = Exception.class)注解了解吗？",slug:"transactional-rollbackfor-exception-class-注解了解吗",link:"#transactional-rollbackfor-exception-class-注解了解吗",children:[]}]},{level:2,title:"Spring Data JPA",slug:"spring-data-jpa",link:"#spring-data-jpa",children:[{level:3,title:"如何使用 JPA 在数据库中非持久化一个字段？",slug:"如何使用-jpa-在数据库中非持久化一个字段",link:"#如何使用-jpa-在数据库中非持久化一个字段",children:[]},{level:3,title:"JPA 的审计功能是做什么的？有什么用？",slug:"jpa-的审计功能是做什么的-有什么用",link:"#jpa-的审计功能是做什么的-有什么用",children:[]},{level:3,title:"实体之间的关联关系注解有哪些？",slug:"实体之间的关联关系注解有哪些",link:"#实体之间的关联关系注解有哪些",children:[]}]},{level:2,title:"Spring Security",slug:"spring-security",link:"#spring-security",children:[{level:3,title:"有哪些控制请求访问权限的方法？",slug:"有哪些控制请求访问权限的方法",link:"#有哪些控制请求访问权限的方法",children:[]},{level:3,title:"hasRole 和 hasAuthority 有区别吗？",slug:"hasrole-和-hasauthority-有区别吗",link:"#hasrole-和-hasauthority-有区别吗",children:[]},{level:3,title:"如何对密码进行加密？",slug:"如何对密码进行加密",link:"#如何对密码进行加密",children:[]},{level:3,title:"如何优雅更换系统使用的加密算法？",slug:"如何优雅更换系统使用的加密算法",link:"#如何优雅更换系统使用的加密算法",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/framework/spring/spring-knowledge-and-questions-summary.html",pathLocale:"/",extraFields:[]},{title:"Spring 事务详解",headers:[{level:2,title:"什么是事务？",slug:"什么是事务",link:"#什么是事务",children:[]},{level:2,title:"事务的特性（ACID）了解么?",slug:"事务的特性-acid-了解么",link:"#事务的特性-acid-了解么",children:[]},{level:2,title:"详谈 Spring 对事务的支持",slug:"详谈-spring-对事务的支持",link:"#详谈-spring-对事务的支持",children:[{level:3,title:"Spring 支持两种方式的事务管理",slug:"spring-支持两种方式的事务管理",link:"#spring-支持两种方式的事务管理",children:[]},{level:3,title:"Spring 事务管理接口介绍",slug:"spring-事务管理接口介绍",link:"#spring-事务管理接口介绍",children:[]},{level:3,title:"事务属性详解",slug:"事务属性详解",link:"#事务属性详解",children:[]},{level:3,title:"@Transactional 注解使用详解",slug:"transactional-注解使用详解",link:"#transactional-注解使用详解",children:[]}]},{level:2,title:"参考",slug:"参考",link:"#参考",children:[]}],path:"/system-design/framework/spring/spring-transaction.html",pathLocale:"/",extraFields:[]},{title:"SpringBoot常见面试题总结(付费)",headers:[],path:"/system-design/framework/spring/springboot-knowledge-and-questions-summary.html",pathLocale:"/",extraFields:[]},{title:"Spring Boot核心源码解读（付费）",headers:[],path:"/system-design/framework/spring/springboot-source-code.html",pathLocale:"/",extraFields:[]},{title:"SFC",headers:[],path:"/system-design/framework/vue/Single-File-Components.html",pathLocale:"/",extraFields:[]},{title:"slot使用",headers:[{level:2,title:"Slot",slug:"slot",link:"#slot",children:[]}],path:"/system-design/framework/vue/slot.html",pathLocale:"/",extraFields:[]},{title:"vue中storage解析",headers:[{level:2,title:"localStorage和sessionStorage",slug:"localstorage和sessionstorage",link:"#localstorage和sessionstorage",children:[{level:3,title:"我们已经有了 cookie。为什么还要其他存储对象呢？",slug:"我们已经有了-cookie。为什么还要其他存储对象呢",link:"#我们已经有了-cookie。为什么还要其他存储对象呢",children:[]},{level:3,title:"方法和属性",slug:"方法和属性",link:"#方法和属性",children:[]}]},{level:2,title:"localStorage",slug:"localstorage",link:"#localstorage",children:[{level:3,title:"遍历键",slug:"遍历键",link:"#遍历键",children:[]}]},{level:2,title:"sessionStorage",slug:"sessionstorage",link:"#sessionstorage",children:[]},{level:2,title:"Storage事件",slug:"storage事件",link:"#storage事件",children:[]}],path:"/system-design/framework/vue/storage.html",pathLocale:"/",extraFields:[]},{title:"TypeScript介绍",headers:[{level:2,title:"Basis",slug:"basis",link:"#basis",children:[{level:3,title:"Project Setup",slug:"project-setup",link:"#project-setup",children:[]},{level:3,title:"Configuring tsconfig.json",slug:"configuring-tsconfig-json",link:"#configuring-tsconfig-json",children:[]}]},{level:2,title:"Vue usage with TS",slug:"vue-usage-with-ts",link:"#vue-usage-with-ts",children:[{level:3,title:"defineComponent()",slug:"definecomponent",link:"#definecomponent",children:[]}]},{level:2,title:"TypeScript with Composition API",slug:"typescript-with-composition-api",link:"#typescript-with-composition-api",children:[{level:3,title:"Typing Component Props",slug:"typing-component-props",link:"#typing-component-props",children:[]},{level:3,title:"Typing Component Emits",slug:"typing-component-emits",link:"#typing-component-emits",children:[]},{level:3,title:"Typing Ref()",slug:"typing-ref",link:"#typing-ref",children:[]}]},{level:2,title:"TypeScript with Options API",slug:"typescript-with-options-api",link:"#typescript-with-options-api",children:[]}],path:"/system-design/framework/vue/typescript.html",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"Alo T",headers:[],path:"/AloT/",pathLocale:"/",extraFields:[]},{title:"C",headers:[],path:"/c__/",pathLocale:"/",extraFields:[]},{title:"Database",headers:[],path:"/database/",pathLocale:"/",extraFields:[]},{title:"Distributed System",headers:[],path:"/distributed-system/",pathLocale:"/",extraFields:[]},{title:"High Availability",headers:[],path:"/high-availability/",pathLocale:"/",extraFields:[]},{title:"High Performance",headers:[],path:"/high-performance/",pathLocale:"/",extraFields:[]},{title:"Interview Preparation",headers:[],path:"/interview-preparation/",pathLocale:"/",extraFields:[]},{title:"Javaguide",headers:[],path:"/javaguide/",pathLocale:"/",extraFields:[]},{title:"Linux",headers:[],path:"/linux/",pathLocale:"/",extraFields:[]},{title:"Net",headers:[],path:"/net/",pathLocale:"/",extraFields:[]},{title:"Neural Network",headers:[],path:"/neural-network/",pathLocale:"/",extraFields:[]},{title:"Node",headers:[],path:"/node/",pathLocale:"/",extraFields:[]},{title:"Python",headers:[],path:"/python/",pathLocale:"/",extraFields:[]},{title:"System Design",headers:[],path:"/system-design/",pathLocale:"/",extraFields:[]},{title:"Vcs",headers:[],path:"/vcs/",pathLocale:"/",extraFields:[]},{title:"Web",headers:[],path:"/web/",pathLocale:"/",extraFields:[]},{title:"Io T",headers:[],path:"/AloT/IoT/",pathLocale:"/",extraFields:[]},{title:"Algorithms",headers:[],path:"/cs-basics/algorithms/",pathLocale:"/",extraFields:[]},{title:"Cs Basics",headers:[],path:"/cs-basics/",pathLocale:"/",extraFields:[]},{title:"Data Structure",headers:[],path:"/cs-basics/data-structure/",pathLocale:"/",extraFields:[]},{title:"Network",headers:[],path:"/cs-basics/network/",pathLocale:"/",extraFields:[]},{title:"Operating System",headers:[],path:"/cs-basics/operating-system/",pathLocale:"/",extraFields:[]},{title:"Elasticsearch",headers:[],path:"/database/elasticsearch/",pathLocale:"/",extraFields:[]},{title:"Mongodb",headers:[],path:"/database/mongodb/",pathLocale:"/",extraFields:[]},{title:"Mysql",headers:[],path:"/database/mysql/",pathLocale:"/",extraFields:[]},{title:"Redis",headers:[],path:"/database/redis/",pathLocale:"/",extraFields:[]},{title:"Sql",headers:[],path:"/database/sql/",pathLocale:"/",extraFields:[]},{title:"Protocol",headers:[],path:"/distributed-system/protocol/",pathLocale:"/",extraFields:[]},{title:"Rpc",headers:[],path:"/distributed-system/rpc/",pathLocale:"/",extraFields:[]},{title:"Message Queue",headers:[],path:"/high-performance/message-queue/",pathLocale:"/",extraFields:[]},{title:"Advanced Programmer",headers:[],path:"/high-quality-technical-articles/advanced-programmer/",pathLocale:"/",extraFields:[]},{title:"Interview",headers:[],path:"/high-quality-technical-articles/interview/",pathLocale:"/",extraFields:[]},{title:"Personal Experience",headers:[],path:"/high-quality-technical-articles/personal-experience/",pathLocale:"/",extraFields:[]},{title:"Programmer",headers:[],path:"/high-quality-technical-articles/programmer/",pathLocale:"/",extraFields:[]},{title:"Work",headers:[],path:"/high-quality-technical-articles/work/",pathLocale:"/",extraFields:[]},{title:"Basis",headers:[],path:"/java/basis/",pathLocale:"/",extraFields:[]},{title:"Java",headers:[],path:"/java/",pathLocale:"/",extraFields:[]},{title:"Collection",headers:[],path:"/java/collection/",pathLocale:"/",extraFields:[]},{title:"Concurrent",headers:[],path:"/java/concurrent/",pathLocale:"/",extraFields:[]},{title:"Io",headers:[],path:"/java/io/",pathLocale:"/",extraFields:[]},{title:"Jvm",headers:[],path:"/java/jvm/",pathLocale:"/",extraFields:[]},{title:"Network",headers:[],path:"/java/network/",pathLocale:"/",extraFields:[]},{title:"New Features",headers:[],path:"/java/new-features/",pathLocale:"/",extraFields:[]},{title:"Servlet",headers:[],path:"/java/servlet/",pathLocale:"/",extraFields:[]},{title:"Further Math",headers:[],path:"/knowledge/further-math/",pathLocale:"/",extraFields:[]},{title:"Slurm",headers:[],path:"/linux/slurm/",pathLocale:"/",extraFields:[]},{title:"Csharp",headers:[],path:"/net/csharp/",pathLocale:"/",extraFields:[]},{title:"Transformer",headers:[],path:"/neural-network/transformer/",pathLocale:"/",extraFields:[]},{title:"Markdown",headers:[],path:"/node/markdown/",pathLocale:"/",extraFields:[]},{title:"Project Management",headers:[],path:"/software-project/project-management/",pathLocale:"/",extraFields:[]},{title:"Software Project",headers:[],path:"/software-project/",pathLocale:"/",extraFields:[]},{title:"Basis",headers:[],path:"/system-design/basis/",pathLocale:"/",extraFields:[]},{title:"Design Mode",headers:[],path:"/system-design/designMode/",pathLocale:"/",extraFields:[]},{title:"Framework",headers:[],path:"/system-design/framework/",pathLocale:"/",extraFields:[]},{title:"Security",headers:[],path:"/system-design/security/",pathLocale:"/",extraFields:[]},{title:"Docker",headers:[],path:"/tools/docker/",pathLocale:"/",extraFields:[]},{title:"Tools",headers:[],path:"/tools/",pathLocale:"/",extraFields:[]},{title:"Genkins",headers:[],path:"/tools/genkins/",pathLocale:"/",extraFields:[]},{title:"Git",headers:[],path:"/tools/git/",pathLocale:"/",extraFields:[]},{title:"Gradle",headers:[],path:"/tools/gradle/",pathLocale:"/",extraFields:[]},{title:"Maven",headers:[],path:"/tools/maven/",pathLocale:"/",extraFields:[]},{title:"Css",headers:[],path:"/web/css/",pathLocale:"/",extraFields:[]},{title:"Javascript",headers:[],path:"/web/javascript/",pathLocale:"/",extraFields:[]},{title:"Acwing",headers:[],path:"/cs-basics/algorithms/acwing/",pathLocale:"/",extraFields:[]},{title:"Model",headers:[],path:"/cs-basics/algorithms/model/",pathLocale:"/",extraFields:[]},{title:"Authentication",headers:[],path:"/cs-basics/network/authentication/",pathLocale:"/",extraFields:[]},{title:"Zookeeper",headers:[],path:"/distributed-system/distributed-process-coordination/zookeeper/",pathLocale:"/",extraFields:[]},{title:"Distributed Process Coordination",headers:[],path:"/distributed-system/distributed-process-coordination/",pathLocale:"/",extraFields:[]},{title:"Mybatis",headers:[],path:"/system-design/framework/mybatis/",pathLocale:"/",extraFields:[]},{title:"Spring",headers:[],path:"/system-design/framework/spring/",pathLocale:"/",extraFields:[]},{title:"Vue",headers:[],path:"/system-design/framework/vue/",pathLocale:"/",extraFields:[]},{title:"分类",headers:[],path:"/category/",pathLocale:"/",extraFields:[]},{title:"走近作者 分类",headers:[],path:"/category/%E8%B5%B0%E8%BF%91%E4%BD%9C%E8%80%85/",pathLocale:"/",extraFields:[]},{title:"知识星球 分类",headers:[],path:"/category/%E7%9F%A5%E8%AF%86%E6%98%9F%E7%90%83/",pathLocale:"/",extraFields:[]},{title:"计算机书籍 分类",headers:[],path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B9%A6%E7%B1%8D/",pathLocale:"/",extraFields:[]},{title:"数据库 分类",headers:[],path:"/category/%E6%95%B0%E6%8D%AE%E5%BA%93/",pathLocale:"/",extraFields:[]},{title:"分布式 分类",headers:[],path:"/category/%E5%88%86%E5%B8%83%E5%BC%8F/",pathLocale:"/",extraFields:[]},{title:"高可用 分类",headers:[],path:"/category/%E9%AB%98%E5%8F%AF%E7%94%A8/",pathLocale:"/",extraFields:[]},{title:"高性能 分类",headers:[],path:"/category/%E9%AB%98%E6%80%A7%E8%83%BD/",pathLocale:"/",extraFields:[]},{title:"面试准备 分类",headers:[],path:"/category/%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",pathLocale:"/",extraFields:[]},{title:"走近项目 分类",headers:[],path:"/category/%E8%B5%B0%E8%BF%91%E9%A1%B9%E7%9B%AE/",pathLocale:"/",extraFields:[]},{title:"Linux 分类",headers:[],path:"/category/linux/",pathLocale:"/",extraFields:[]},{title:"linux 分类",headers:[],path:"/category/linux/",pathLocale:"/",extraFields:[]},{title:"神经网络 分类",headers:[],path:"/category/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"论文 分类",headers:[],path:"/category/%E8%AE%BA%E6%96%87/",pathLocale:"/",extraFields:[]},{title:"node.js 分类",headers:[],path:"/category/node.js/",pathLocale:"/",extraFields:[]},{title:"开源项目 分类",headers:[],path:"/category/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/",pathLocale:"/",extraFields:[]},{title:"projects 分类",headers:[],path:"/category/projects/",pathLocale:"/",extraFields:[]},{title:"系统设计 分类",headers:[],path:"/category/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/",pathLocale:"/",extraFields:[]},{title:"Java面试指北 分类",headers:[],path:"/category/java%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8C%97/",pathLocale:"/",extraFields:[]},{title:"vcs 分类",headers:[],path:"/category/vcs/",pathLocale:"/",extraFields:[]},{title:"web 分类",headers:[],path:"/category/web/",pathLocale:"/",extraFields:[]},{title:"计算机基础 分类",headers:[],path:"/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"技术文章精选集 分类",headers:[],path:"/category/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E7%B2%BE%E9%80%89%E9%9B%86/",pathLocale:"/",extraFields:[]},{title:"Java 分类",headers:[],path:"/category/java/",pathLocale:"/",extraFields:[]},{title:"java 分类",headers:[],path:"/category/java/",pathLocale:"/",extraFields:[]},{title:"Transformer 分类",headers:[],path:"/category/transformer/",pathLocale:"/",extraFields:[]},{title:"markdown 分类",headers:[],path:"/category/markdown/",pathLocale:"/",extraFields:[]},{title:"代码质量 分类",headers:[],path:"/category/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/",pathLocale:"/",extraFields:[]},{title:"框架 分类",headers:[],path:"/category/%E6%A1%86%E6%9E%B6/",pathLocale:"/",extraFields:[]},{title:"开发工具 分类",headers:[],path:"/category/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/",pathLocale:"/",extraFields:[]},{title:"genkins 分类",headers:[],path:"/category/genkins/",pathLocale:"/",extraFields:[]},{title:"cs-basis 分类",headers:[],path:"/category/cs-basis/",pathLocale:"/",extraFields:[]},{title:"network 分类",headers:[],path:"/category/network/",pathLocale:"/",extraFields:[]},{title:"vue 分类",headers:[],path:"/category/vue/",pathLocale:"/",extraFields:[]},{title:"标签",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"标签: 杂谈",headers:[],path:"/tag/%E6%9D%82%E8%B0%88/",pathLocale:"/",extraFields:[]},{title:"标签: 个人经历",headers:[],path:"/tag/%E4%B8%AA%E4%BA%BA%E7%BB%8F%E5%8E%86/",pathLocale:"/",extraFields:[]},{title:"标签: 数据库基础",headers:[],path:"/tag/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"标签: NoSQL",headers:[],path:"/tag/nosql/",pathLocale:"/",extraFields:[]},{title:"标签: MongoDB",headers:[],path:"/tag/mongodb/",pathLocale:"/",extraFields:[]},{title:"标签: Redis",headers:[],path:"/tag/redis/",pathLocale:"/",extraFields:[]},{title:"标签: nginx",headers:[],path:"/tag/nginx/",pathLocale:"/",extraFields:[]},{title:"标签: 算法",headers:[],path:"/tag/%E7%AE%97%E6%B3%95/",pathLocale:"/",extraFields:[]},{title:"标签: 数据结构",headers:[],path:"/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",pathLocale:"/",extraFields:[]},{title:"标签: 计算机网络",headers:[],path:"/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",pathLocale:"/",extraFields:[]},{title:"标签: 操作系统",headers:[],path:"/tag/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",pathLocale:"/",extraFields:[]},{title:"标签: Linux",headers:[],path:"/tag/linux/",pathLocale:"/",extraFields:[]},{title:"标签: Elasticsearch",headers:[],path:"/tag/elasticsearch/",pathLocale:"/",extraFields:[]},{title:"标签: MySQL",headers:[],path:"/tag/mysql/",pathLocale:"/",extraFields:[]},{title:"标签: 性能优化",headers:[],path:"/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",pathLocale:"/",extraFields:[]},{title:"标签: 大厂面试",headers:[],path:"/tag/%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95/",pathLocale:"/",extraFields:[]},{title:"标签: SQL",headers:[],path:"/tag/sql/",pathLocale:"/",extraFields:[]},{title:"标签: 分布式理论",headers:[],path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/",pathLocale:"/",extraFields:[]},{title:"标签: 分布式协议&算法",headers:[],path:"/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%AE%AE_%E7%AE%97%E6%B3%95/",pathLocale:"/",extraFields:[]},{title:"标签: 共识算法",headers:[],path:"/tag/%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95/",pathLocale:"/",extraFields:[]},{title:"标签: rpc",headers:[],path:"/tag/rpc/",pathLocale:"/",extraFields:[]},{title:"标签: 消息队列",headers:[],path:"/tag/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/",pathLocale:"/",extraFields:[]},{title:"标签: RocketMQ",headers:[],path:"/tag/rocketmq/",pathLocale:"/",extraFields:[]},{title:"标签: 练级攻略",headers:[],path:"/tag/%E7%BB%83%E7%BA%A7%E6%94%BB%E7%95%A5/",pathLocale:"/",extraFields:[]},{title:"标签: 面试",headers:[],path:"/tag/%E9%9D%A2%E8%AF%95/",pathLocale:"/",extraFields:[]},{title:"标签: 程序员",headers:[],path:"/tag/%E7%A8%8B%E5%BA%8F%E5%91%98/",pathLocale:"/",extraFields:[]},{title:"标签: 工作",headers:[],path:"/tag/%E5%B7%A5%E4%BD%9C/",pathLocale:"/",extraFields:[]},{title:"标签: Java基础",headers:[],path:"/tag/java%E5%9F%BA%E7%A1%80/",pathLocale:"/",extraFields:[]},{title:"标签: Java集合",headers:[],path:"/tag/java%E9%9B%86%E5%90%88/",pathLocale:"/",extraFields:[]},{title:"标签: Java并发",headers:[],path:"/tag/java%E5%B9%B6%E5%8F%91/",pathLocale:"/",extraFields:[]},{title:"标签: Java多线程",headers:[],path:"/tag/java%E5%A4%9A%E7%BA%BF%E7%A8%8B/",pathLocale:"/",extraFields:[]},{title:"标签: Java IO",headers:[],path:"/tag/java-io/",pathLocale:"/",extraFields:[]},{title:"标签: JVM",headers:[],path:"/tag/jvm/",pathLocale:"/",extraFields:[]},{title:"标签: socket",headers:[],path:"/tag/socket/",pathLocale:"/",extraFields:[]},{title:"标签: tcp",headers:[],path:"/tag/tcp/",pathLocale:"/",extraFields:[]},{title:"标签: udp",headers:[],path:"/tag/udp/",pathLocale:"/",extraFields:[]},{title:"标签: Java新特性",headers:[],path:"/tag/java%E6%96%B0%E7%89%B9%E6%80%A7/",pathLocale:"/",extraFields:[]},{title:"标签: servlet",headers:[],path:"/tag/servlet/",pathLocale:"/",extraFields:[]},{title:"标签: further-math",headers:[],path:"/tag/further-math/",pathLocale:"/",extraFields:[]},{title:"标签: 安全",headers:[],path:"/tag/%E5%AE%89%E5%85%A8/",pathLocale:"/",extraFields:[]},{title:"标签: Docker",headers:[],path:"/tag/docker/",pathLocale:"/",extraFields:[]},{title:"标签: Git",headers:[],path:"/tag/git/",pathLocale:"/",extraFields:[]},{title:"标签: javascript",headers:[],path:"/tag/javascript/",pathLocale:"/",extraFields:[]},{title:"标签: credential",headers:[],path:"/tag/credential/",pathLocale:"/",extraFields:[]},{title:"标签: authentication",headers:[],path:"/tag/authentication/",pathLocale:"/",extraFields:[]},{title:"标签: ZooKeeper",headers:[],path:"/tag/zookeeper/",pathLocale:"/",extraFields:[]},{title:"标签: MyBatis",headers:[],path:"/tag/mybatis/",pathLocale:"/",extraFields:[]},{title:"标签: Spring",headers:[],path:"/tag/spring/",pathLocale:"/",extraFields:[]},{title:"标签: SpringBoot",headers:[],path:"/tag/springboot/",pathLocale:"/",extraFields:[]},{title:"文章",headers:[],path:"/article/",pathLocale:"/",extraFields:[]},{title:"星标",headers:[],path:"/star/",pathLocale:"/",extraFields:[]},{title:"时间轴",headers:[],path:"/timeline/",pathLocale:"/",extraFields:[]}],Ak=Y(jk),Sk=()=>Ak,Pk=({searchIndex:e,routeLocale:l,query:t,maxSuggestions:n})=>{const a=y(()=>e.value.filter(i=>i.pathLocale===l.value));return y(()=>{const i=t.value.trim().toLowerCase();if(!i)return[];const s=[],o=(c,u)=>{vr(i,[u.title])&&s.push({link:`${c.path}#${u.slug}`,title:c.title,header:u.title});for(const d of u.children){if(s.length>=n.value)return;o(c,d)}};for(const c of a.value){if(s.length>=n.value)break;if(vr(i,[c.title,...c.extraFields])){s.push({link:c.path,title:c.title});continue}for(const u of c.headers){if(s.length>=n.value)break;o(c,u)}}return s})},Tk=e=>{const l=Y(0);return{focusIndex:l,focusNext:()=>{l.value<e.value.length-1?l.value+=1:l.value=0},focusPrev:()=>{l.value>0?l.value-=1:l.value=e.value.length-1}}},Ik=F({name:"SearchBox",props:{locales:{type:Object,required:!1,default:()=>({})},hotKeys:{type:Array,required:!1,default:()=>[]},maxSuggestions:{type:Number,required:!1,default:5}},setup(e){const{locales:l,hotKeys:t,maxSuggestions:n}=gp(e),a=jl(),i=fl(),s=Sk(),o=Y(null),c=Y(!1),u=Y(""),d=y(()=>l.value[i.value]??{}),h=Pk({searchIndex:s,routeLocale:i,query:u,maxSuggestions:n}),{focusIndex:g,focusNext:v,focusPrev:f}=Tk(h);Lk({input:o,hotKeys:t});const E=y(()=>c.value&&!!h.value.length),w=()=>{E.value&&f()},b=()=>{E.value&&v()},L=_=>{if(!E.value)return;const A=h.value[_];A&&a.push(A.link).then(()=>{u.value="",g.value=0})};return()=>r("form",{class:"search-box",role:"search"},[r("input",{ref:o,type:"search",placeholder:d.value.placeholder,autocomplete:"off",spellcheck:!1,value:u.value,onFocus:()=>c.value=!0,onBlur:()=>c.value=!1,onInput:_=>u.value=_.target.value,onKeydown:_=>{switch(_.key){case"ArrowUp":{w();break}case"ArrowDown":{b();break}case"Enter":{_.preventDefault(),L(g.value);break}}}}),E.value&&r("ul",{class:"suggestions",onMouseleave:()=>g.value=-1},h.value.map(({link:_,title:A,header:O},j)=>r("li",{class:["suggestion",{focus:g.value===j}],onMouseenter:()=>g.value=j,onMousedown:()=>L(j)},r("a",{href:_,onClick:H=>H.preventDefault()},[r("span",{class:"page-title"},A),O&&r("span",{class:"page-header"},`> ${O}`)]))))])}});var qk=["s","/"],Dk={"/":{placeholder:"搜索"}};const Rk=Dk,Ck=qk,Ok=10,Jk=We({enhance({app:e}){e.component("SearchBox",l=>r(Ik,{locales:Rk,hotKeys:Ck,maxSuggestions:Ok,...l}))}}),wc=()=>{const e=ve();return y(()=>e.value.readingTime??null)},Ec=(e,l)=>{const{minutes:t,words:n}=e,{less1Minute:a,word:i,time:s}=l;return{time:t<1?a:s.replace("$time",Math.round(t).toString()),words:i.replace("$word",n.toString())}};var kr={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const mr={words:"",time:""},li=typeof kr>"u"?null:kr,xc=()=>li?Pt(li):y(()=>null),Mk=()=>{if(typeof li>"u")return y(()=>mr);const e=wc(),l=xc();return y(()=>e.value&&l.value?Ec(e.value,l.value):mr)},Ql=()=>mc(),se=()=>Fv(),ot=()=>{const e=Ql();return y(()=>!!e.value.pure)},Ca=()=>null,Fk="719px",Bk="1440px",Vk="false",Lc={mobileBreakPoint:Fk,pcBreakPoint:Bk,enableThemeColor:Vk},Bi={},jc=e=>{const{icon:l="",color:t,size:n}=e,a=t||n?{}:null;return t&&(a.color=t),n&&(a.height=Number.isNaN(Number(n))?n:`${n}px`),kl(l)?r("img",{class:"icon",src:l,alt:"","no-view":"",style:a}):mn(l)?r("img",{class:"icon",src:Ee(l),alt:"","aria-hidden":"","no-view":"",style:a}):r(tl("FontIcon"),e)};jc.displayName="HopeIcon";var Fe=jc;const zk="http://.",ct=()=>{const e=jl(),l=Al();return t=>{if(t)if(mn(t))l.path!==t&&e.push(t);else if(Ao(t))window&&window.open(t);else{const n=l.path.slice(0,l.path.lastIndexOf("/"));e.push(new URL(`${n}/${encodeURI(t)}`,zk).pathname)}}},Ac=()=>{const e=se(),l=ke();return y(()=>{const{author:t}=l.value;return t?tn(t):t===!1?[]:tn(e.value.author,!1)})},Nk=()=>{const e=ke(),l=_e(Symbol.for("categoryMap"));return y(()=>uc(e.value.category).map(t=>{var n;return{name:t,path:((n=l==null?void 0:l.value.map[t])==null?void 0:n.path)||""}}))},Hk=()=>{const e=ke(),l=_e(Symbol.for("tagMap"));return y(()=>pc(e.value.tag).map(t=>{var n;return{name:t,path:((n=l==null?void 0:l.value.map[t])==null?void 0:n.path)||""}}))},Gk=()=>{const e=ke(),l=ve();return y(()=>{const t=Oi(e.value.date);if(t)return t;const{createdTime:n}=l.value.git||{};return n?new Date(n):null})},Qk=()=>{const e=se(),l=ve(),t=ke(),n=Ac(),a=Nk(),i=Hk(),s=Gk(),o=wc(),c=Mk(),u=y(()=>({author:n.value,category:a.value,date:s.value,localizedDate:l.value.localizedDate,tag:i.value,isOriginal:t.value.isOriginal||!1,readingTime:o.value,readingTimeLocale:c.value,pageview:"pageview"in t.value?t.value.pageview:!0})),d=y(()=>"pageInfo"in t.value?t.value.pageInfo:"pageInfo"in e.value?e.value.pageInfo:null);return{info:u,items:d}},{mobileBreakPoint:$k,pcBreakPoint:Kk}=Lc,fr=e=>e.endsWith("px")?Number(e.slice(0,-2)):null,_n=()=>{const e=Y(!1),l=Y(!1),t=()=>{e.value=window.innerWidth<=(fr($k)??719),l.value=window.innerWidth>=(fr(Kk)??1440)};return we(()=>{t(),Re("resize",t,!1),Re("orientationchange",t,!1)}),{isMobile:e,isPC:l}},Sc=Symbol(""),yn=()=>{const e=_e(Sc);if(!e)throw new Error("useDarkmode() is called without provider.");return e},Uk=e=>{const l=Ql(),t=ev(),n=y(()=>l.value.darkmode||"switch"),a=Uo("vuepress-theme-hope-scheme","auto"),i=y(()=>{const o=n.value;return o==="disable"?!1:o==="enable"?!0:o==="auto"?t.value:o==="toggle"?a.value==="dark":a.value==="dark"||a.value==="auto"&&t.value}),s=y(()=>{const o=n.value;return o==="switch"||o==="toggle"});e.provide(Sc,{canToggle:s,config:n,isDarkmode:i,status:a}),Object.defineProperties(e.config.globalProperties,{$isDarkmode:{get:()=>i.value}})},Wk=()=>{const{config:e,isDarkmode:l,status:t}=yn();Li(()=>{e.value==="disable"?t.value="light":e.value==="enable"?t.value="dark":e.value==="toggle"&&t.value==="auto"&&(t.value="light")}),we(()=>{pe(l,n=>document.documentElement.setAttribute("data-theme",n?"dark":"light"),{immediate:!0})})};var Ne=(e=>(e.title="t",e.shortTitle="s",e.icon="i",e.index="I",e.order="O",e.breadcrumbExclude="b",e))(Ne||{}),Me=(e=>(e.type="y",e.author="a",e.date="d",e.localizedDate="l",e.category="c",e.tag="g",e.isEncrypted="n",e.isOriginal="o",e.readingTime="r",e.excerpt="e",e.sticky="u",e.cover="v",e))(Me||{}),Pc=(e=>(e.article="a",e.home="h",e.slide="s",e.page="p",e))(Pc||{});const Xl=(e="",l="")=>mn(l)?l:`${jo(e)}${l}`,bt=(e,l=!1)=>{const{meta:t,path:n,notFound:a}=St(e);return a?{text:n,link:n}:{text:!l&&t[Ne.shortTitle]?t[Ne.shortTitle]:t[Ne.title]||n,link:n,...t[Ne.icon]?{icon:t[Ne.icon]}:{}}},ti=({config:e,prefix:l=""})=>{const t=(n,a=l)=>{const i=ye(n)?bt(Xl(a,n)):n.link?{...n,...Zt(n.link)?{}:{link:bt(Xl(a,n.link)).link}}:n;if("children"in i){const s=Xl(a,i.prefix),o=i.children==="structure"?Bi[s]:i.children;return{type:"group",...i,prefix:s,children:o.map(c=>t(c,s))}}return{type:"page",...i}};return e.map(n=>t(n))},Zk=({config:e,page:l,headerDepth:t})=>{const n=xl(e).sort((a,i)=>i.length-a.length);for(const a of n)if(nt(decodeURI(l.path),a)){const i=e[a];return i?ti({config:i==="structure"?Bi[a]:i,page:l,headerDepth:t,prefix:a}):[]}return console.warn(`${l.path} is missing sidebar config.`),[]},Yk=({config:e,routeLocale:l,page:t,headerDepth:n})=>e==="structure"?ti({config:Bi[l],page:t,headerDepth:n,prefix:l}):Ya(e)?ti({config:e,page:t,headerDepth:n}):gn(e)?Zk({config:e,page:t,headerDepth:n}):[],Tc=Symbol(""),Xk=()=>{const e=ke(),l=se(),t=ve(),n=fl(),a=y(()=>e.value.home?!1:e.value.sidebar??l.value.sidebar??"structure"),i=y(()=>e.value.headerDepth??l.value.headerDepth??2),s=Ho(()=>[a.value,i.value,t.value.path,null],()=>Yk({config:a.value,routeLocale:n.value,page:t.value,headerDepth:i.value}));ol(Tc,s)},Vi=()=>{const e=_e(Tc);if(!e)throw new Error("useSidebarItems() is called without provider.");return e};var em=F({name:"PageFooter",setup(){const e=Ql(),l=se(),t=ke(),n=Ac(),a=y(()=>{const{copyright:u,footer:d}=t.value;return d!==!1&&!!(u||d||l.value.displayFooter)}),i=y(()=>{const{footer:u}=t.value;return u===!1?!1:ye(u)?u:l.value.footer||""}),s=y(()=>n.value.map(({name:u})=>u).join(", ")),o=u=>`Copyright © ${new Date().getFullYear()} ${s.value} ${u?`${u} Licensed`:""}`,c=y(()=>{const{copyright:u,license:d=""}=t.value,{license:h}=e.value,{copyright:g}=l.value;return u??(d?o(d):ye(g)?g:s.value||h?o(h):!1)});return()=>a.value?r("footer",{class:"vp-footer-wrapper"},[i.value?r("div",{class:"vp-footer",innerHTML:i.value}):null,c.value?r("div",{class:"vp-copyright",innerHTML:c.value}):null]):null}}),Ge=F({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],slots:Object,setup(e,{attrs:l,emit:t,slots:n}){const a=Al(),i=Bo(),s=At(e,"config"),o=y(()=>kl(s.value.link)),c=y(()=>!o.value&&Ao(s.value.link)),u=y(()=>s.value.target||(o.value?"_blank":void 0)),d=y(()=>u.value==="_blank"),h=y(()=>!o.value&&!c.value&&!d.value),g=y(()=>s.value.rel||(d.value?"noopener noreferrer":null)),v=y(()=>s.value.ariaLabel||s.value.text),f=y(()=>{if(e.exact)return!1;const w=xl(i.value.locales);return w.length?w.every(b=>b!==s.value.link):s.value.link!=="/"}),E=y(()=>h.value?s.value.activeMatch?new RegExp(s.value.activeMatch,"u").test(a.path):f.value?nt(a.path,s.value.link):a.path===s.value.link:!1);return()=>{const{before:w,after:b,default:L}=n,{text:_,icon:A,link:O}=s.value;return h.value?r(Ae,{to:O,"aria-label":v.value,...l,class:["nav-link",{active:E.value},l.class],onFocusout:()=>t("focusout")},()=>L?L():[w?w():r(Fe,{icon:A}),_,b==null?void 0:b()]):r("a",{href:O,rel:g.value,target:u.value,"aria-label":v.value,...l,class:["nav-link",l.class],onFocusout:()=>t("focusout")},L?L():[w?w():r(Fe,{icon:A}),_,e.noExternalLinkIcon?null:r(vc),b==null?void 0:b()])}}}),lm=F({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},slots:Object,setup(e,{slots:l}){const t=ve(),n=At(e,"config"),a=y(()=>n.value.ariaLabel||n.value.text),i=Y(!1);pe(()=>t.value.path,()=>{i.value=!1});const s=o=>{o.detail===0&&(i.value=!i.value)};return()=>{var o;return r("div",{class:["dropdown-wrapper",{open:i.value}]},[r("button",{type:"button",class:"dropdown-title","aria-label":a.value,onClick:s},[((o=l.title)==null?void 0:o.call(l))||r("span",{class:"title"},[r(Fe,{icon:n.value.icon}),e.config.text]),r("span",{class:"arrow"}),r("ul",{class:"nav-dropdown"},n.value.children.map((c,u)=>{const d=u===n.value.children.length-1;return r("li",{class:"dropdown-item"},"children"in c?[r("h4",{class:"dropdown-subtitle"},c.link?r(Ge,{config:c,onFocusout:()=>{c.children.length===0&&d&&(i.value=!1)}}):r("span",c.text)),r("ul",{class:"dropdown-subitem-wrapper"},c.children.map((h,g)=>r("li",{class:"dropdown-subitem"},r(Ge,{config:h,onFocusout:()=>{g===c.children.length-1&&d&&(i.value=!1)}}))))]:r(Ge,{config:c,onFocusout:()=>{d&&(i.value=!1)}}))}))])])}}});const Ic=(e,l="")=>ye(e)?bt(Xl(l,e)):"children"in e?{...e,...e.link&&!Zt(e.link)?bt(Xl(l,e.link)):{},children:e.children.map(t=>Ic(t,Xl(l,e.prefix)))}:{...e,link:Zt(e.link)?e.link:bt(Xl(l,e.link)).link},qc=()=>{const e=se(),l=()=>(e.value.navbar||[]).map(t=>Ic(t));return Ho(()=>e.value.navbar,()=>l())},tm=()=>{const e=se(),l=y(()=>e.value.repo||null),t=y(()=>l.value?uv(l.value):null),n=y(()=>l.value?rc(l.value):null),a=y(()=>t.value?e.value.repoLabel??(n.value===null?"Source":n.value):null);return y(()=>!t.value||!a.value||e.value.repoDisplay===!1?null:{type:n.value||"Source",label:a.value,link:t.value})};var nm=F({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(e){const l=ve(),t=At(e,"config"),n=y(()=>t.value.ariaLabel||t.value.text),a=Y(!1);pe(()=>l.value.path,()=>{a.value=!1});const i=(s,o)=>o[o.length-1]===s;return()=>[r("button",{type:"button",class:["nav-screen-dropdown-title",{active:a.value}],"aria-label":n.value,onClick:()=>{a.value=!a.value}},[r("span",{class:"title"},[r(Fe,{icon:t.value.icon}),e.config.text]),r("span",{class:["arrow",a.value?"down":"end"]})]),r("ul",{class:["nav-screen-dropdown",{hide:!a.value}]},t.value.children.map(s=>r("li",{class:"dropdown-item"},"children"in s?[r("h4",{class:"dropdown-subtitle"},s.link?r(Ge,{config:s,onFocusout:()=>{i(s,t.value.children)&&s.children.length===0&&(a.value=!1)}}):r("span",s.text)),r("ul",{class:"dropdown-subitem-wrapper"},s.children.map(o=>r("li",{class:"dropdown-subitem"},r(Ge,{config:o,onFocusout:()=>{i(o,s.children)&&i(s,t.value.children)&&(a.value=!1)}}))))]:r(Ge,{config:s,onFocusout:()=>{i(s,t.value.children)&&(a.value=!1)}}))))]}}),am=F({name:"NavScreenLinks",setup(){const e=qc();return()=>e.value.length?r("nav",{class:"nav-screen-links"},e.value.map(l=>r("div",{class:"navbar-links-item"},"children"in l?r(nm,{config:l}):r(Ge,{config:l})))):null}});const Dc=()=>r(ce,{name:"dark"},()=>r("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Dc.displayName="DarkIcon";const Rc=()=>r(ce,{name:"light"},()=>r("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Rc.displayName="LightIcon";const Cc=()=>r(ce,{name:"auto"},()=>r("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Cc.displayName="AutoIcon";const Oc=()=>r(ce,{name:"enter-fullscreen"},()=>r("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Oc.displayName="EnterFullScreenIcon";const Jc=()=>r(ce,{name:"cancel-fullscreen"},()=>r("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Jc.displayName="CancelFullScreenIcon";const Mc=()=>r(ce,{name:"outlook"},()=>[r("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Mc.displayName="OutlookIcon";var Fc=F({name:"AppearanceSwitch",setup(){const{config:e,isDarkmode:l,status:t}=yn(),n=ot(),a=()=>{e.value==="switch"?t.value={light:"dark",dark:"auto",auto:"light"}[t.value]:t.value=t.value==="light"?"dark":"light"},i=async s=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)||!s){a();return}const o=s.clientX,c=s.clientY,u=Math.hypot(Math.max(o,innerWidth-o),Math.max(c,innerHeight-c)),d=l.value;await document.startViewTransition(async()=>{a(),await st()}).ready,l.value!==d&&document.documentElement.animate({clipPath:l.value?[`circle(${u}px at ${o}px ${c}px)`,`circle(0px at ${o}px ${c}px)`]:[`circle(0px at ${o}px ${c}px)`,`circle(${u}px at ${o}px ${c}px)`]},{duration:400,pseudoElement:l.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>r("button",{type:"button",id:"appearance-switch",onClick:i},[r(Cc,{style:{display:t.value==="auto"?"block":"none"}}),r(Dc,{style:{display:t.value==="dark"?"block":"none"}}),r(Rc,{style:{display:t.value==="light"?"block":"none"}})])}}),im=F({name:"AppearanceMode",setup(){const e=se(),{canToggle:l}=yn(),t=y(()=>e.value.outlookLocales.darkmode);return()=>l.value?r("div",{class:"appearance-wrapper"},[r("label",{class:"appearance-title",for:"appearance-switch"},t.value),r(Fc)]):null}});const Oa=Lc.enableThemeColor==="true";var Bc=F({name:"ToggleFullScreenButton",setup(){const e=se(),{isSupported:l,isFullscreen:t,toggle:n}=Mi(),a=y(()=>e.value.outlookLocales.fullscreen);return()=>l?r("div",{class:"full-screen-wrapper"},[r("label",{class:"full-screen-title",for:"full-screen-switch"},a.value),r("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:t.value,onClick:()=>n()},t.value?r(Jc):r(Oc))]):null}}),Vc=F({name:"OutlookSettings",setup(){const e=Ql(),l=ot(),t=y(()=>!l.value&&e.value.fullscreen);return()=>r(pa,()=>[null,r(im),t.value?r(Bc):null])}}),sm=F({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(e,{emit:l,slots:t}){const n=ve(),{isMobile:a}=_n(),i=Ce(),s=Zo(i);return we(()=>{i.value=document.body,pe(a,o=>{!o&&e.show&&(s.value=!1,l("close"))}),pe(()=>n.value.path,()=>{s.value=!1,l("close")})}),un(()=>{s.value=!1}),()=>r(Nl,{name:"fade",onEnter:()=>{s.value=!0},onAfterLeave:()=>{s.value=!1}},()=>{var o,c;return e.show?r("div",{id:"nav-screen"},r("div",{class:"vp-nav-screen-container"},[(o=t.before)==null?void 0:o.call(t),r(am),r("div",{class:"vp-outlook-wrapper"},r(Vc)),(c=t.after)==null?void 0:c.call(t)])):null})}}),rm=F({name:"NavbarBrand",setup(){const e=fl(),l=vn(),t=se(),n=y(()=>t.value.home||e.value),a=y(()=>l.value.title),i=y(()=>t.value.navTitle??a.value),s=y(()=>t.value.logo?Ee(t.value.logo):null),o=y(()=>t.value.logoDark?Ee(t.value.logoDark):null);return()=>r(Ae,{to:n.value,class:"vp-brand"},()=>[s.value?r("img",{class:["vp-nav-logo",{light:!!o.value}],src:s.value,alt:""}):null,o.value?r("img",{class:["vp-nav-logo dark"],src:o.value,alt:""}):null,i.value?r("span",{class:["vp-site-name",{"hide-in-pad":s.value&&t.value.hideSiteNameOnMobile!==!1}]},i.value):null])}}),om=F({name:"NavbarLinks",setup(){const e=qc();return()=>e.value.length?r("nav",{class:"vp-nav-links"},e.value.map(l=>r("div",{class:"nav-item hide-in-mobile"},"children"in l?r(lm,{config:l}):r(Ge,{config:l})))):null}}),cm=F({name:"RepoLink",components:{BitbucketIcon:nc,GiteeIcon:tc,GitHubIcon:ec,GitLabIcon:lc,SourceIcon:ac},setup(){const e=tm();return()=>e.value?r("div",{class:"nav-item vp-repo"},r("a",{class:"vp-repo-link",href:e.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":e.value.label},r(tl(`${e.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const zc=({active:e=!1},{emit:l})=>r("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":e}],"aria-label":"Toggle Navbar","aria-expanded":e,"aria-controls":"nav-screen",onClick:()=>l("toggle")},r("span",[r("span",{class:"vp-top"}),r("span",{class:"vp-middle"}),r("span",{class:"vp-bottom"})]));zc.displayName="ToggleNavbarButton";var um=zc;const ni=(e,{emit:l})=>r("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>l("toggle")},r("span",{class:"icon"}));ni.displayName="ToggleSidebarButton",ni.emits=["toggle"];var pm=ni,dm=F({name:"OutlookButton",setup(){const{isSupported:e}=Mi(),l=Ql(),t=ot(),n=ve(),{canToggle:a}=yn(),i=Y(!1),s=y(()=>!t.value&&l.value.fullscreen&&e);return pe(()=>n.value.path,()=>{i.value=!1}),()=>a.value||s.value||Oa?r("div",{class:"nav-item hide-in-mobile"},a.value&&!s.value&&!Oa?r(Fc):s.value&&!a.value&&!Oa?r(Bc):r("button",{type:"button",class:["outlook-button",{open:i.value}],tabindex:"-1","aria-hidden":!0},[r(Mc),r("div",{class:"outlook-dropdown"},r(Vc))])):null}}),hm=F({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(e,{emit:l,slots:t}){const n=se(),{isMobile:a}=_n(),i=Y(!1),s=y(()=>{const{navbarAutoHide:d="mobile"}=n.value;return d!=="none"&&(d==="always"||a.value)}),o=y(()=>n.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),c={Brand:rm,Language:Ca,Links:om,Repo:cm,Outlook:dm,Search:cl("Docsearch")?tl("Docsearch"):cl("SearchBox")?tl("SearchBox"):Ca},u=d=>c[d]??(cl(d)?tl(d):Ca);return()=>{var d,h,g,v,f,E;return[r("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":s.value,"hide-icon":n.value.navbarIcon===!1}]},[r("div",{class:"vp-navbar-start"},[r(pm,{onToggle:()=>{i.value&&(i.value=!1),l("toggleSidebar")}}),(d=t.startBefore)==null?void 0:d.call(t),(o.value.start||[]).map(w=>r(u(w))),(h=t.startAfter)==null?void 0:h.call(t)]),r("div",{class:"vp-navbar-center"},[(g=t.centerBefore)==null?void 0:g.call(t),(o.value.center||[]).map(w=>r(u(w))),(v=t.centerAfter)==null?void 0:v.call(t)]),r("div",{class:"vp-navbar-end"},[(f=t.endBefore)==null?void 0:f.call(t),(o.value.end||[]).map(w=>r(u(w))),(E=t.endAfter)==null?void 0:E.call(t),r(um,{active:i.value,onToggle:()=>{i.value=!i.value}})])]),r(sm,{show:i.value,onClose:()=>{i.value=!1}},{before:()=>{var w;return(w=t.screenTop)==null?void 0:w.call(t)},after:()=>{var w;return(w=t.screenBottom)==null?void 0:w.call(t)}})]}}});const nn=(e,l,t=!1)=>"activeMatch"in l?new RegExp(l.activeMatch,"u").test(e.path):sc(e,l.link)?!0:"children"in l&&!t?l.children.some(n=>nn(e,n)):!1,Nc=(e,l)=>l.type==="group"?l.children.some(t=>t.type==="group"?Nc(e,t):t.type==="page"&&nn(e,t,!0))||"prefix"in l&&sc(e,l.prefix):!1;var gm=F({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(e){const l=Al();return()=>ye(e.config.link)?r(Ge,{class:["vp-sidebar-link","vp-sidebar-page",{active:nn(l,e.config,!0)}],exact:!0,config:e.config}):r("p",e,[r(Fe,{icon:e.config.icon}),e.config.text])}}),vm=F({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(e,{emit:l}){const t=Al(),n=y(()=>nn(t,e.config)),a=y(()=>nn(t,e.config,!0));return()=>{const{collapsible:i,children:s=[],icon:o,prefix:c,link:u,text:d}=e.config;return r("section",{class:"vp-sidebar-group"},[r(i?"button":"p",{class:["vp-sidebar-header",{clickable:i||u,exact:a.value,active:n.value}],...i?{type:"button",onClick:()=>l("toggle"),onKeydown:h=>{h.key==="Enter"&&l("toggle")}}:{}},[r(Fe,{icon:o}),u?r(Ge,{class:"vp-sidebar-title",config:{text:d,link:u},noExternalLinkIcon:!0}):r("span",{class:"vp-sidebar-title"},d),i?r("span",{class:["vp-arrow",e.open?"down":"end"]}):null]),e.open||!i?r(Hc,{key:c,config:s}):null])}}}),Hc=F({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(e){const l=Al(),t=Y(-1),n=a=>{t.value=a===t.value?-1:a};return pe(()=>l.path,()=>{const a=e.config.findIndex(i=>Nc(l,i));t.value=a},{immediate:!0,flush:"post"}),()=>r("ul",{class:"vp-sidebar-links"},e.config.map((a,i)=>r("li",a.type==="group"?r(vm,{config:a,open:i===t.value,onToggle:()=>n(i)}):r(gm,{config:a}))))}}),km=F({name:"SideBar",slots:Object,setup(e,{slots:l}){const t=Al(),n=se(),a=Vi(),i=Ce();return we(()=>{pe(()=>t.hash,s=>{const o=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${t.path}${s}"]`);if(!o)return;const{top:c,height:u}=i.value.getBoundingClientRect(),{top:d,height:h}=o.getBoundingClientRect();d<c?o.scrollIntoView(!0):d+h>c+u&&o.scrollIntoView(!1)},{immediate:!0})}),()=>{var s,o,c;return r("aside",{ref:i,id:"sidebar",class:["vp-sidebar",{"hide-icon":n.value.sidebarIcon===!1}],key:"sidebar"},[(s=l.top)==null?void 0:s.call(l),((o=l.default)==null?void 0:o.call(l))||r(Hc,{config:a.value}),(c=l.bottom)==null?void 0:c.call(l)])}}}),zi=F({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(e,{slots:l}){const t=jl(),n=ve(),a=ke(),i=se(),{isMobile:s,isPC:o}=_n(),[c,u]=Xa(!1),[d,h]=Xa(!1),g=Vi(),v=Y(!1),f=y(()=>e.noNavbar||a.value.navbar===!1||i.value.navbar===!1?!1:!!(n.value.title||i.value.logo||i.value.repo||i.value.navbar)),E=y(()=>e.noSidebar?!1:a.value.sidebar!==!1&&g.value.length!==0&&!a.value.home),w=y(()=>e.noToc||a.value.home?!1:a.value.toc||i.value.toc!==!1&&a.value.toc!==!1),b={x:0,y:0},L=j=>{b.x=j.changedTouches[0].clientX,b.y=j.changedTouches[0].clientY},_=j=>{const H=j.changedTouches[0].clientX-b.x,M=j.changedTouches[0].clientY-b.y;Math.abs(H)>Math.abs(M)*1.5&&Math.abs(H)>40&&(H>0&&b.x<=80?u(!0):u(!1))},A=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let O=0;return Re("scroll",Ng(()=>{const j=A();j<=58||j<O?v.value=!1:O+200<j&&!c.value&&(v.value=!0),O=j},300,!0)),pe(s,j=>{j||u(!1)}),we(()=>{const j=Zo(document.body);pe(c,M=>{j.value=M});const H=t.afterEach(()=>{u(!1)});un(()=>{j.value=!1,H()})}),()=>r(cl("GlobalEncrypt")?tl("GlobalEncrypt"):Xo,()=>r("div",{class:["theme-container",{"no-navbar":!f.value,"no-sidebar":!E.value&&!(l.sidebar||l.sidebarTop||l.sidebarBottom),"has-toc":w.value,"hide-navbar":v.value,"sidebar-collapsed":!s.value&&!o.value&&d.value,"sidebar-open":s.value&&c.value},e.containerClass,a.value.containerClass||""],onTouchStart:L,onTouchEnd:_},[f.value?r(hm,{onToggleSidebar:()=>u()},{startBefore:()=>{var j;return(j=l.navbarStartBefore)==null?void 0:j.call(l)},startAfter:()=>{var j;return(j=l.navbarStartAfter)==null?void 0:j.call(l)},centerBefore:()=>{var j;return(j=l.navbarCenterBefore)==null?void 0:j.call(l)},centerAfter:()=>{var j;return(j=l.navbarCenterAfter)==null?void 0:j.call(l)},endBefore:()=>{var j;return(j=l.navbarEndBefore)==null?void 0:j.call(l)},endAfter:()=>{var j;return(j=l.navbarEndAfter)==null?void 0:j.call(l)},screenTop:()=>{var j;return(j=l.navScreenTop)==null?void 0:j.call(l)},screenBottom:()=>{var j;return(j=l.navScreenBottom)==null?void 0:j.call(l)}}):null,r(Nl,{name:"fade"},()=>c.value?r("div",{class:"vp-sidebar-mask",onClick:()=>u(!1)}):null),r(Nl,{name:"fade"},()=>s.value?null:r("div",{class:"toggle-sidebar-wrapper",onClick:()=>h()},r("span",{class:["arrow",d.value?"end":"start"]}))),r(km,{},{...l.sidebar?{default:()=>l.sidebar()}:{},top:()=>{var j;return(j=l.sidebarTop)==null?void 0:j.call(l)},bottom:()=>{var j;return(j=l.sidebarBottom)==null?void 0:j.call(l)}}),l.default(),r(em)]))}}),ue=F({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(e,{slots:l}){const t=a=>{a.style.transition=`transform ${e.duration}s ease-in-out ${e.delay}s, opacity ${e.duration}s ease-in-out ${e.delay}s`,a.style.transform="translateY(-20px)",a.style.opacity="0"},n=a=>{a.style.transform="translateY(0)",a.style.opacity="1"};return()=>r(e.type==="single"?Nl:Lo,{name:"drop",appear:e.appear,onAppear:t,onAfterAppear:n,onEnter:t,onAfterEnter:n,onBeforeLeave:t},()=>l.default())}});const ai=({custom:e})=>r(zo,{class:["theme-hope-content",{custom:e}]});ai.displayName="MarkdownContent",ai.props={custom:Boolean};var Ni=ai;const Gc=()=>r(ce,{name:"author"},()=>r("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Gc.displayName="AuthorIcon";const Qc=()=>r(ce,{name:"calendar"},()=>r("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Qc.displayName="CalendarIcon";const $c=()=>r(ce,{name:"category"},()=>r("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));$c.displayName="CategoryIcon";const Kc=()=>r(ce,{name:"print"},()=>r("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Kc.displayName="PrintIcon";const Uc=()=>r(ce,{name:"tag"},()=>r("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Uc.displayName="TagIcon";const Wc=()=>r(ce,{name:"timer"},()=>r("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Wc.displayName="TimerIcon";const Zc=()=>r(ce,{name:"word"},()=>[r("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),r("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Zc.displayName="WordIcon";const $l=()=>{const e=se();return y(()=>e.value.metaLocales)};var mm=F({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(e){const l=$l();return()=>e.author.length?r("span",{class:"page-author-info","aria-label":`${l.value.author}${e.pure?"":"🖊"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r(Gc),r("span",e.author.map(t=>t.url?r("a",{class:"page-author-item",href:t.url,target:"_blank",rel:"noopener noreferrer"},t.name):r("span",{class:"page-author-item"},t.name))),r("span",{property:"author",content:e.author.map(t=>t.name).join(", ")})]):null}}),fm=F({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(e){const l=$l(),t=ct();return()=>e.category.length?r("span",{class:"page-category-info","aria-label":`${l.value.category}${e.pure?"":"🌈"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r($c),e.category.map(({name:n,path:a})=>r("span",{class:["page-category-item",{[`category${ha(n,9)}`]:!e.pure,clickable:a}],role:a?"navigation":"",onClick:()=>{a&&t(a)}},n)),r("meta",{property:"articleSection",content:e.category.map(({name:n})=>n).join(",")})]):null}}),bm=F({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(e){const l=Fo(),t=$l();return()=>e.date?r("span",{class:"page-date-info","aria-label":`${t.value.date}${e.pure?"":"📅"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r(Qc),r("span",r(pa,()=>e.localizedDate||e.date.toLocaleDateString(l.value))),r("meta",{property:"datePublished",content:e.date.toISOString()||""})]):null}}),_m=F({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(e){const l=$l();return()=>e.isOriginal?r("span",{class:"page-original-info"},l.value.origin):null}}),ym=F({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(e){const l=$l(),t=y(()=>{if(!e.readingTime)return null;const{minutes:n}=e.readingTime;return n<1?"PT1M":`PT${Math.round(n)}M`});return()=>{var n,a;return(n=e.readingTimeLocale)!=null&&n.time?r("span",{class:"page-reading-time-info","aria-label":`${l.value.readingTime}${e.pure?"":"⌛"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r(Wc),r("span",(a=e.readingTimeLocale)==null?void 0:a.time),r("meta",{property:"timeRequired",content:t.value})]):null}}}),wm=F({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(e){const l=$l(),t=ct();return()=>e.tag.length?r("span",{class:"page-tag-info","aria-label":`${l.value.tag}${e.pure?"":"🏷"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r(Uc),e.tag.map(({name:n,path:a})=>r("span",{class:["page-tag-item",{[`tag${ha(n,9)}`]:!e.pure,clickable:a}],role:a?"navigation":"",onClick:()=>{a&&t(a)}},n)),r("meta",{property:"keywords",content:e.tag.map(({name:n})=>n).join(",")})]):null}}),Em=F({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(e){const l=$l();return()=>{var t,n,a;return(t=e.readingTimeLocale)!=null&&t.words?r("span",{class:"page-word-info","aria-label":`${l.value.words}${e.pure?"":"🔠"}`,...e.pure?{}:{"data-balloon-pos":"up"}},[r(Zc),r("span",(n=e.readingTimeLocale)==null?void 0:n.words),r("meta",{property:"wordCount",content:(a=e.readingTime)==null?void 0:a.words})]):null}}}),Yc=F({name:"PageInfo",components:{AuthorInfo:mm,CategoryInfo:fm,DateInfo:bm,OriginalInfo:_m,PageViewInfo:()=>null,ReadingTimeInfo:ym,TagInfo:wm,WordInfo:Em},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(e){const l=ot();return()=>e.items?r("div",{class:"page-info"},e.items.map(t=>r(tl(`${t}Info`),{...e.info,pure:l.value}))):null}}),xm=F({name:"PrintButton",setup(){const e=Ql(),l=se();return()=>e.value.print===!1?null:r("button",{type:"button",class:"print-button",title:l.value.metaLocales.print,onClick:()=>{window.print()}},r(Kc))}}),Xc=F({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(e,{slots:l}){const t=Al(),n=ve(),a=$l(),[i,s]=Xa(),o=Ce(),c=Y("-1.7rem"),u=h=>{var g;(g=o.value)==null||g.scrollTo({top:h,behavior:"smooth"})},d=()=>{if(o.value){const h=document.querySelector(".vp-toc-item.active");h?c.value=`${h.getBoundingClientRect().top-o.value.getBoundingClientRect().top+o.value.scrollTop}px`:c.value="-1.7rem"}else c.value="-1.7rem"};return we(()=>{pe(()=>t.hash,h=>{if(o.value){const g=document.querySelector(`#toc a.toc-link[href$="${h}"]`);if(!g)return;const{top:v,height:f}=o.value.getBoundingClientRect(),{top:E,height:w}=g.getBoundingClientRect();E<v?u(o.value.scrollTop+E-v):E+w>v+f&&u(o.value.scrollTop+E+w-v-f)}}),pe(()=>t.fullPath,d,{flush:"post",immediate:!0})}),()=>{var f,E;const h=({title:w,level:b,slug:L})=>r(Ae,{to:`#${L}`,class:["vp-toc-link",`level${b}`],onClick:()=>{s()}},()=>w),g=(w,b)=>w.length&&b>0?r("ul",{class:"vp-toc-list"},w.map(L=>{const _=g(L.children,b-1);return[r("li",{class:["vp-toc-item",{active:t.hash===`#${L.slug}`}]},h(L)),_?r("li",_):null]})):null,v=e.items.length?g(e.items,e.headerDepth):n.value.headers?g(n.value.headers,e.headerDepth):null;return v?r("div",{class:"vp-toc-placeholder"},[r("aside",{id:"toc"},[(f=l.before)==null?void 0:f.call(l),r("div",{class:"vp-toc-header",onClick:()=>{s()}},[a.value.toc,r(xm),r("div",{class:["arrow",i.value?"down":"end"]})]),r("div",{class:["vp-toc-wrapper",i.value?"open":""],ref:o},[v,r("div",{class:"vp-toc-marker",style:{top:c.value}})]),(E=l.after)==null?void 0:E.call(l)])]):null}}}),Hi=F({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(e){const l=ve(),t=se(),n=Ce(),a=({target:i})=>{const s=document.querySelector(i.hash);if(s){const o=()=>{s.removeAttribute("tabindex"),s.removeEventListener("blur",o)};s.setAttribute("tabindex","-1"),s.addEventListener("blur",o),s.focus(),window.scrollTo(0,0)}};return we(()=>{pe(()=>l.value.path,()=>n.value.focus())}),()=>[r("span",{ref:n,tabindex:"-1"}),r("a",{href:`#${e.content}`,class:"vp-skip-link sr-only",onClick:a},t.value.routeLocales.skipToContent)]}});let Ja=null,Dt=null;const Lm={wait:()=>Ja,pending:()=>{Ja=new Promise(e=>{Dt=e})},resolve:()=>{Dt==null||Dt(),Ja=null,Dt=null}},eu=()=>Lm;var jm=F({name:"FadeSlideY",slots:Object,setup(e,{slots:l}){const{resolve:t,pending:n}=eu();return()=>r(Nl,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:t,onBeforeLeave:n},()=>{var a;return(a=l.default)==null?void 0:a.call(l)})}});const Am=(e,l)=>{const t=e.replace(l,"/").split("/"),n=[];let a=oa(l);return t.forEach((i,s)=>{s!==t.length-1?(a+=`${i}/`,n.push({link:a,name:i||"Home"})):i!==""&&(a+=i,n.push({link:a,name:i}))}),n},lu=(e,{slots:l})=>{var h,g;const{bgImage:t,bgImageDark:n,bgImageStyle:a,color:i,description:s,image:o,imageDark:c,header:u,features:d=[]}=e;return r("div",{class:"vp-feature-wrapper"},[t?r("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${t})`},a]}):null,n?r("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},a]}):null,r("div",{class:"vp-feature",style:i?{color:i}:{}},[((h=l.image)==null?void 0:h.call(l,e))||[o?r("img",{class:["vp-feature-image",{light:c}],src:Ee(o),alt:""}):null,c?r("img",{class:"vp-feature-image dark",src:Ee(c),alt:""}):null],((g=l.info)==null?void 0:g.call(l,e))||[u?r("h2",{class:"vp-feature-header"},u):null,s?r("p",{class:"vp-feature-description",innerHTML:s}):null],d.length?r("div",{class:"vp-features"},d.map(({icon:v,title:f,details:E,link:w})=>{const b=[r("h3",{class:"vp-feature-title"},[r(Fe,{icon:v}),r("span",{innerHTML:f})]),r("p",{class:"vp-feature-details",innerHTML:E})];return w?Zt(w)?r("a",{class:"vp-feature-item link",href:w,"aria-label":f,target:"_blank"},b):r(Ae,{class:"vp-feature-item link",to:w,"aria-label":f},()=>b):r("div",{class:"vp-feature-item"},b)})):null])])};lu.displayName="FeaturePanel";var br=lu,Sm=F({name:"HeroInfo",slots:Object,setup(e,{slots:l}){const t=ke(),n=vn(),a=y(()=>t.value.heroFullScreen??!1),i=y(()=>{const{heroText:u,tagline:d}=t.value;return{text:u??n.value.title??"Hello",tagline:d??n.value.description??"",isFullScreen:a.value}}),s=y(()=>{const{heroText:u,heroImage:d,heroImageDark:h,heroAlt:g,heroImageStyle:v}=t.value;return{image:d?Ee(d):null,imageDark:h?Ee(h):null,style:v,alt:g||u||"",isFullScreen:a.value}}),o=y(()=>{const{bgImage:u,bgImageDark:d,bgImageStyle:h}=t.value;return{image:ye(u)?Ee(u):null,imageDark:ye(d)?Ee(d):null,bgStyle:h,isFullScreen:a.value}}),c=y(()=>t.value.actions??[]);return()=>{var u,d,h;return r("header",{class:["vp-hero-info-wrapper",{fullscreen:a.value}]},[((u=l.heroBg)==null?void 0:u.call(l,o.value))||[o.value.image?r("div",{class:["vp-hero-mask",{light:o.value.imageDark}],style:[{"background-image":`url(${o.value.image})`},o.value.bgStyle]}):null,o.value.imageDark?r("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${o.value.imageDark})`},o.value.bgStyle]}):null],r("div",{class:"vp-hero-info"},[((d=l.heroImage)==null?void 0:d.call(l,s.value))||r(ue,{appear:!0,type:"group"},()=>[s.value.image?r("img",{key:"light",class:["vp-hero-image",{light:s.value.imageDark}],style:s.value.style,src:s.value.image,alt:s.value.alt}):null,s.value.imageDark?r("img",{key:"dark",class:"vp-hero-image dark",style:s.value.style,src:s.value.imageDark,alt:s.value.alt}):null]),((h=l.heroInfo)==null?void 0:h.call(l,i.value))??r("div",{class:"vp-hero-infos"},[i.value.text?r(ue,{appear:!0,delay:.04},()=>r("h1",{id:"main-title"},i.value.text)):null,i.value.tagline?r(ue,{appear:!0,delay:.08},()=>r("p",{id:"main-description",innerHTML:i.value.tagline})):null,c.value.length?r(ue,{appear:!0,delay:.12},()=>r("p",{class:"vp-hero-actions"},c.value.map(g=>r(Ge,{class:["vp-hero-action",g.type||"default"],config:g,noExternalLinkIcon:!0},g.icon?{before:()=>r(Fe,{icon:g.icon})}:{})))):null])])])}}});const tu=(e,{slots:l})=>{var g,v,f;const{bgImage:t,bgImageDark:n,bgImageStyle:a,color:i,description:s,image:o,imageDark:c,header:u,highlights:d=[],type:h="un-order"}=e;return r("div",{class:"vp-highlight-wrapper",style:i?{color:i}:{}},[t?r("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${t})`},a]}):null,n?r("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},a]}):null,r("div",{class:"vp-highlight"},[((g=l.image)==null?void 0:g.call(l,e))||[o?r("img",{class:["vp-highlight-image",{light:c}],src:Ee(o),alt:""}):null,c?r("img",{class:"vp-highlight-image dark",src:Ee(c),alt:""}):null],((v=l.info)==null?void 0:v.call(l,e))||[r("div",{class:"vp-highlight-info-wrapper"},r("div",{class:"vp-highlight-info"},[u?r("h2",{class:"vp-highlight-header",innerHTML:u}):null,s?r("p",{class:"vp-highlight-description",innerHTML:s}):null,((f=l.highlights)==null?void 0:f.call(l,d))||r(h==="order"?"ol":h==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:E,title:w,details:b,link:L})=>{const _=[r(h==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[E?r(Fe,{class:"vp-highlight-icon",icon:E}):null,r("span",{innerHTML:w})]),b?r(h==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:b}):null];return r(h==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:L}]},L?Zt(L)?r("a",{class:"vp-highlight-item link",href:L,"aria-label":w,target:"_blank"},_):r(Ae,{class:"vp-highlight-item link",to:L,"aria-label":w},()=>_):r("div",{class:"vp-highlight-item"},_))}))]))]])])};tu.displayName="HighlightPanel";var Pm=tu,Tm=F({name:"HomePage",slots:Object,setup(e,{slots:l}){const t=ot(),n=ke(),a=y(()=>{const{features:s}=n.value;return Ya(s)?s:null}),i=y(()=>{const{highlights:s}=n.value;return Ya(s)?s:null});return()=>{var s,o,c,u;return r("main",{id:"main-content",class:["vp-project-home ",{pure:t.value}],"aria-labelledby":n.value.heroText===null?"":"main-title"},[(s=l.top)==null?void 0:s.call(l),r(Sm),((o=i.value)==null?void 0:o.map(d=>"features"in d?r(br,d):r(Pm,d)))||(a.value?r(ue,{appear:!0,delay:.24},()=>r(br,{features:a.value})):null),(c=l.center)==null?void 0:c.call(l),r(ue,{appear:!0,delay:.32},()=>r(Ni)),(u=l.bottom)==null?void 0:u.call(l)])}}}),Im=F({name:"BreadCrumb",setup(){const e=ve(),l=fl(),t=ke(),n=se(),a=Ce([]),i=y(()=>(t.value.breadcrumb||t.value.breadcrumb!==!1&&n.value.breadcrumb!==!1)&&a.value.length>1),s=y(()=>t.value.breadcrumbIcon||t.value.breadcrumbIcon!==!1&&n.value.breadcrumbIcon!==!1),o=()=>{const c=Am(e.value.path,l.value).map(({link:u,name:d})=>{const{path:h,meta:g,notFound:v}=St(u);return v||g[Ne.breadcrumbExclude]?null:{title:g[Ne.shortTitle]||g[Ne.title]||d,icon:g[Ne.icon],path:h}}).filter(u=>u!==null);c.length>1&&(a.value=c)};return we(()=>{pe(()=>e.value.path,o,{immediate:!0})}),()=>r("nav",{class:["vp-breadcrumb",{disable:!i.value}]},i.value?r("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},a.value.map((c,u)=>r("li",{class:{"is-active":a.value.length-1===u},property:"itemListElement",typeof:"ListItem"},[r(Ae,{to:c.path,property:"item",typeof:"WebPage"},()=>[s.value?r(Fe,{icon:c.icon}):null,r("span",{property:"name"},c.title||"Unknown")]),r("meta",{property:"position",content:u+1})]))):[])}});const _r=e=>e===!1||gn(e)?e:ye(e)?bt(e,!0):null,ii=(e,l,t)=>{const n=e.findIndex(a=>a.link===l);if(n!==-1){const a=e[n+t];return a!=null&&a.link?a:null}for(const a of e)if("children"in a){const i=ii(a.children,l,t);if(i)return i}return null};var qm=F({name:"PageNav",setup(){const e=se(),l=ke(),t=Vi(),n=ve(),a=ct(),i=y(()=>{const o=_r(l.value.prev);return o===!1?null:o||(e.value.prevLink===!1?null:ii(t.value,n.value.path,-1))}),s=y(()=>{const o=_r(l.value.next);return o===!1?null:o||(e.value.nextLink===!1?null:ii(t.value,n.value.path,1))});return Re("keydown",o=>{o.altKey&&(o.key==="ArrowRight"?s.value&&(a(s.value.link),o.preventDefault()):o.key==="ArrowLeft"&&i.value&&(a(i.value.link),o.preventDefault()))}),()=>i.value||s.value?r("nav",{class:"vp-page-nav"},[i.value?r(Ge,{class:"prev",config:i.value},()=>{var o,c;return[r("div",{class:"hint"},[r("span",{class:"arrow start"}),e.value.metaLocales.prev]),r("div",{class:"link"},[r(Fe,{icon:(o=i.value)==null?void 0:o.icon}),(c=i.value)==null?void 0:c.text])]}):null,s.value?r(Ge,{class:"next",config:s.value},()=>{var o,c;return[r("div",{class:"hint"},[e.value.metaLocales.next,r("span",{class:"arrow end"})]),r("div",{class:"link"},[(o=s.value)==null?void 0:o.text,r(Fe,{icon:(c=s.value)==null?void 0:c.icon})])]}):null]):null}});const Dm={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Rm=({docsRepo:e,docsBranch:l,docsDir:t,filePathRelative:n,editLinkPattern:a})=>{if(!n)return null;const i=rc(e);let s;return a?s=a:i!==null&&(s=Dm[i]),s?s.replace(/:repo/u,kl(e)?e:`https://github.com/${e}`).replace(/:branch/u,l).replace(/:path/u,So(`${oa(t)}/${n}`)):null},Cm=()=>{const e=se(),l=ve(),t=ke();return y(()=>{const{repo:n,docsRepo:a=n,docsBranch:i="main",docsDir:s="",editLink:o,editLinkPattern:c=""}=e.value;if(!(t.value.editLink??o??!0)||!a)return null;const u=Rm({docsRepo:a,docsBranch:i,docsDir:s,editLinkPattern:c,filePathRelative:l.value.filePathRelative});return u?{text:e.value.metaLocales.editLink,link:u}:null})},Om=()=>{const e=vn(),l=se(),t=ve(),n=ke();return y(()=>{var a,i;return!(n.value.lastUpdated??l.value.lastUpdated??!0)||!((a=t.value.git)!=null&&a.updatedTime)?null:new Date((i=t.value.git)==null?void 0:i.updatedTime).toLocaleString(e.value.lang)})},Jm=()=>{const e=se(),l=ve(),t=ke();return y(()=>{var n;return t.value.contributors??e.value.contributors??!0?((n=l.value.git)==null?void 0:n.contributors)??null:null})};var Mm=F({name:"PageTitle",setup(){const e=ve(),l=ke(),t=se(),{info:n,items:a}=Qk();return()=>r("div",{class:"vp-page-title"},[r("h1",[t.value.titleIcon===!1?null:r(Fe,{icon:l.value.icon}),e.value.title]),r(Yc,{info:n.value,...a.value===null?{}:{items:a.value}}),r("hr")])}});const nu=()=>r(ce,{name:"edit"},()=>[r("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),r("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);nu.displayName="EditIcon";var Fm=F({name:"PageMeta",setup(){const e=se(),l=Cm(),t=Om(),n=Jm();return()=>{const{metaLocales:a}=e.value;return r("footer",{class:"page-meta"},[l.value?r("div",{class:"meta-item edit-link"},r(Ge,{class:"label",config:l.value},{before:()=>r(nu)})):null,r("div",{class:"meta-item git-info"},[t.value?r("div",{class:"update-time"},[r("span",{class:"label"},`${a.lastUpdated}: `),r(pa,()=>r("span",{class:"info"},t.value))]):null,n.value&&n.value.length?r("div",{class:"contributors"},[r("span",{class:"label"},`${a.contributors}: `),n.value.map(({email:i,name:s},o)=>[r("span",{class:"contributor",title:`email: ${i}`},s),o!==n.value.length-1?",":""])]):null])])}}}),Bm=F({name:"NormalPage",slots:Object,setup(e,{slots:l}){const t=ke(),{isDarkmode:n}=yn(),a=se(),i=y(()=>t.value.toc||t.value.toc!==!1&&a.value.toc!==!1);return()=>r("main",{id:"main-content",class:"vp-page"},r(cl("LocalEncrypt")?tl("LocalEncrypt"):Xo,()=>{var s,o,c,u;return[(s=l.top)==null?void 0:s.call(l),t.value.cover?r("div",{class:"page-cover"},r("img",{src:Ee(t.value.cover),alt:"","no-view":""})):null,r(Im),r(Mm),i.value?r(Xc,{headerDepth:t.value.headerDepth??a.value.headerDepth??2},{before:()=>{var d;return(d=l.tocBefore)==null?void 0:d.call(l)},after:()=>{var d;return(d=l.tocAfter)==null?void 0:d.call(l)}}):null,(o=l.contentBefore)==null?void 0:o.call(l),r(Ni),(c=l.contentAfter)==null?void 0:c.call(l),r(Fm),r(qm),cl("CommentService")?r(tl("CommentService"),{darkmode:n.value}):null,(u=l.bottom)==null?void 0:u.call(l)]}))}}),Vm=F({name:"Layout",slots:Object,setup(e,{slots:l}){const t=Ql(),n=se(),a=ve(),i=ke(),{isMobile:s}=_n(),o=y(()=>{var c,u;return((c=n.value.blog)==null?void 0:c.sidebarDisplay)||((u=t.value.blog)==null?void 0:u.sidebarDisplay)||"mobile"});return()=>[r(Hi),r(zi,{},{default:()=>{var c;return((c=l.default)==null?void 0:c.call(l))||(i.value.home?r(Tm):r(jm,()=>r(Bm,{key:a.value.path},{top:()=>{var u;return(u=l.top)==null?void 0:u.call(l)},bottom:()=>{var u;return(u=l.bottom)==null?void 0:u.call(l)},contentBefore:()=>{var u;return(u=l.contentBefore)==null?void 0:u.call(l)},contentAfter:()=>{var u;return(u=l.contentAfter)==null?void 0:u.call(l)},tocBefore:()=>{var u;return(u=l.tocBefore)==null?void 0:u.call(l)},tocAfter:()=>{var u;return(u=l.tocAfter)==null?void 0:u.call(l)}})))},...o.value==="none"?{}:{navScreenBottom:()=>r(tl("BloggerInfo"))},...!s.value&&o.value==="always"?{sidebar:()=>r(tl("BloggerInfo"))}:{}})]}}),zm=F({name:"NotFoundHint",setup(){const e=se(),l=()=>{const t=e.value.routeLocales.notFoundMsg;return t[Math.floor(Math.random()*t.length)]};return()=>r("div",{class:"not-found-hint"},[r("p",{class:"error-code"},"404"),r("h1",{class:"error-title"},e.value.routeLocales.notFoundTitle),r("p",{class:"error-hint"},l())])}}),Nm=F({name:"NotFound",slots:Object,setup(e,{slots:l}){const t=jl(),n=fl(),a=se();return()=>[r(Hi),r(zi,{noSidebar:!0},()=>{var i;return r("main",{id:"main-content",class:"vp-page not-found"},((i=l.default)==null?void 0:i.call(l))||[r(zm),r("div",{class:"actions"},[r("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},a.value.routeLocales.back),r("button",{type:"button",class:"action-button",onClick:()=>{t.push(a.value.home??n.value)}},a.value.routeLocales.home)])])})]}});const Hm={Zhihu:'<svg xmlns="http://www.w3.org/2000/svg" class="icon zhihu-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#006CE2"/><path fill="#fff" d="M513.65 491.261H411.551c1.615-16.154 5.815-60.095 5.815-84.973 0-24.88-.323-60.742-.323-60.742h102.744V329.39c0-21.647-9.37-31.34-17.124-31.34h-178.67s5.169-17.77 10.015-36.186c4.846-18.417 15.832-44.264 15.832-44.264-63.003 4.2-67.958 50.941-81.743 92.729-13.787 41.785-24.556 62.356-44.586 107.912 27.786 0 55.249-13.57 66.879-32.309 11.631-18.74 16.908-40.71 16.908-40.71h62.035v59.019c0 21.107-3.878 87.45-3.878 87.45H254.742c-19.386 0-29.724 48.894-29.724 48.894h133.76c-8.4 75.82-26.493 106.191-51.91 152.716-25.418 46.525-92.728 99.406-92.728 99.406 41.033 11.63 86.589-3.555 105.974-21.972 19.386-18.417 35.863-49.756 47.817-72.838 11.954-23.081 21.972-65.124 21.972-65.124L498.462 766.86s4.846-24.233 6.461-39.418c1.616-15.186-.755-26.385-4.63-35.433-3.878-9.046-15.509-21.54-31.018-39.634-15.507-18.094-48.034-52.879-48.034-52.879s-15.832 11.63-28.108 21.001c9.046-21.97 16.262-79.695 16.262-79.695h122.343v-20.249c.003-17.66-7.319-29.29-18.089-29.29zm287.337-200.747h-234.35a4.308 4.308 0 0 0-4.309 4.308v435.099a4.308 4.308 0 0 0 4.308 4.308h40.226l14.7 50.402 81.096-50.402h98.328a4.308 4.308 0 0 0 4.308-4.308v-435.1a4.308 4.308 0 0 0-4.308-4.308zM755.97 684.47h-52.343l-61.548 39.095-10.823-39.095h-18.738V338.116H755.97v346.355z"/></svg>',Github:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>',Gitee:'<svg xmlns="http://www.w3.org/2000/svg" class="icon gitee-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#C71D23"/><path fill="#fff" d="M772.953 454.723H480.17v.006a25.46 25.46 0 0 0-25.46 25.453l-.025 63.649a25.46 25.46 0 0 0 25.46 25.466l178.242-.007a25.46 25.46 0 0 1 25.459 25.46v12.73c0 42.18-34.198 76.378-76.378 76.378H365.583a25.46 25.46 0 0 1-25.46-25.46V416.533h-.006c0-42.18 34.192-76.378 76.378-76.378h356.388v-.013a25.46 25.46 0 0 0 25.46-25.446l.057-63.65h.013a25.46 25.46 0 0 0-25.46-25.471l-356.432.012c-105.453 0-190.946 85.493-190.946 190.946v356.433a25.46 25.46 0 0 0 25.46 25.46H626.56c94.913 0 171.852-76.94 171.852-171.852V480.182a25.46 25.46 0 0 0-25.46-25.46z"/></svg>'},Gm={category:{"/":{path:"/category/",map:{走近作者:{path:"/category/走近作者/",indexes:[0,1,2,3,4,5,6,7,8]},知识星球:{path:"/category/知识星球/",indexes:[9,10,11,12,13,14,15,16,17]},计算机书籍:{path:"/category/计算机书籍/",indexes:[18,19,20,21,22,23,24]},数据库:{path:"/category/数据库/",indexes:[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62]},分布式:{path:"/category/分布式/",indexes:[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80]},高可用:{path:"/category/高可用/",indexes:[81,82,83,84,85,86]},高性能:{path:"/category/高性能/",indexes:[87,88,89,90,91,92,93,94,95,96,97]},面试准备:{path:"/category/面试准备/",indexes:[98,99,100]},走近项目:{path:"/category/走近项目/",indexes:[101,102,103,104,105]},Linux:{path:"/category/linux/",indexes:[106,107,108,109]},linux:{path:"/category/linux/",indexes:[110,111]},神经网络:{path:"/category/神经网络/",indexes:[112]},论文:{path:"/category/论文/",indexes:[113]},"node.js":{path:"/category/node.js/",indexes:[114]},开源项目:{path:"/category/开源项目/",indexes:[115,116,117,118,119,120,121,122]},projects:{path:"/category/projects/",indexes:[123]},系统设计:{path:"/category/系统设计/",indexes:[124,125,126,127,128,129,130,131,132,133,134,135,136]},Java面试指北:{path:"/category/java面试指北/",indexes:[137]},vcs:{path:"/category/vcs/",indexes:[138]},web:{path:"/category/web/",indexes:[139,140,141,142]},计算机基础:{path:"/category/计算机基础/",indexes:[143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175]},技术文章精选集:{path:"/category/技术文章精选集/",indexes:[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199]},Java:{path:"/category/java/",indexes:[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263]},java:{path:"/category/java/",indexes:[264,265,266]},Transformer:{path:"/category/transformer/",indexes:[267,268]},markdown:{path:"/category/markdown/",indexes:[269]},代码质量:{path:"/category/代码质量/",indexes:[270,271,272,273]},框架:{path:"/category/框架/",indexes:[274,275,276,277,278,279,280,281,282,283]},开发工具:{path:"/category/开发工具/",indexes:[284,285,286,287,288,289,290,291]},genkins:{path:"/category/genkins/",indexes:[292]},"cs-basis":{path:"/category/cs-basis/",indexes:[293,294]},network:{path:"/category/network/",indexes:[295,296,297]},vue:{path:"/category/vue/",indexes:[298,299,300,301]}}}},tag:{"/":{path:"/tag/",map:{杂谈:{path:"/tag/杂谈/",indexes:[0,5,8]},个人经历:{path:"/tag/个人经历/",indexes:[1,2,3,4,6,191,192,193,194]},数据库基础:{path:"/tag/数据库基础/",indexes:[25,26,57,58,59,60,61,62]},NoSQL:{path:"/tag/nosql/",indexes:[27,28,29,30]},MongoDB:{path:"/tag/mongodb/",indexes:[27,29,30]},Redis:{path:"/tag/redis/",indexes:[27,44,45,47,48,49,50,51,52,53,54,55,56]},nginx:{path:"/tag/nginx/",indexes:[110]},算法:{path:"/tag/算法/",indexes:[143,144,145,146,147,148,149]},数据结构:{path:"/tag/数据结构/",indexes:[150,151,152,153,154,155]},计算机网络:{path:"/tag/计算机网络/",indexes:[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171]},操作系统:{path:"/tag/操作系统/",indexes:[172,173,174,175]},Linux:{path:"/tag/linux/",indexes:[172,175]},Elasticsearch:{path:"/tag/elasticsearch/",indexes:[28]},MySQL:{path:"/tag/mysql/",indexes:[31,32,33,34,35,36,37,38,39,40,41,42,43]},性能优化:{path:"/tag/性能优化/",indexes:[33]},大厂面试:{path:"/tag/大厂面试/",indexes:[35,41]},SQL:{path:"/tag/sql/",indexes:[57,58,59,60,61,62]},分布式理论:{path:"/tag/分布式理论/",indexes:[71]},"分布式协议&算法":{path:"/tag/分布式协议&算法/",indexes:[72,73,74]},共识算法:{path:"/tag/共识算法/",indexes:[72,73,74]},rpc:{path:"/tag/rpc/",indexes:[75,76,77]},消息队列:{path:"/tag/消息队列/",indexes:[93,94,95,96,97]},RocketMQ:{path:"/tag/rocketmq/",indexes:[97]},练级攻略:{path:"/tag/练级攻略/",indexes:[176,177,178,179,180,181,182]},面试:{path:"/tag/面试/",indexes:[183,184,185,186,187,188,189,190]},程序员:{path:"/tag/程序员/",indexes:[195,196]},工作:{path:"/tag/工作/",indexes:[197,198,199]},Java基础:{path:"/tag/java基础/",indexes:[200,201,202,203,204,205,206,207,208,209,210,211,239,240,241,242]},Java集合:{path:"/tag/java集合/",indexes:[212,213,214,215,216,217,218,219,220,221,222,223]},Java并发:{path:"/tag/java并发/",indexes:[224,225,226,227,228,229,230,232,233,234,235,236,237,238]},Java多线程:{path:"/tag/java多线程/",indexes:[231]},"Java IO":{path:"/tag/java-io/",indexes:[239,240,241,242]},JVM:{path:"/tag/jvm/",indexes:[243,244,245,246,247,248,249,250,251]},socket:{path:"/tag/socket/",indexes:[264,265]},tcp:{path:"/tag/tcp/",indexes:[264]},udp:{path:"/tag/udp/",indexes:[265]},Java新特性:{path:"/tag/java新特性/",indexes:[252,253,254,255,256,257,258,259,260,261,262,263]},servlet:{path:"/tag/servlet/",indexes:[266]},"further-math":{path:"/tag/further-math/",indexes:[302]},安全:{path:"/tag/安全/",indexes:[129,130,131,132,133,134,135,136]},Docker:{path:"/tag/docker/",indexes:[284,285]},Git:{path:"/tag/git/",indexes:[287,288]},javascript:{path:"/tag/javascript/",indexes:[142]},credential:{path:"/tag/credential/",indexes:[295]},authentication:{path:"/tag/authentication/",indexes:[296,297]},ZooKeeper:{path:"/tag/zookeeper/",indexes:[78,79,80]},MyBatis:{path:"/tag/mybatis/",indexes:[275]},Spring:{path:"/tag/spring/",indexes:[276,278,279,280,281,282,283]},SpringBoot:{path:"/tag/springboot/",indexes:[277,278]}}}}},au=["/about-the-author/dog-that-copies-other-people-essay.html","/about-the-author/feelings-after-one-month-of-induction-training.html","/about-the-author/feelings-of-half-a-year-from-graduation-to-entry.html","/about-the-author/internet-addiction-teenager.html","/about-the-author/javaguide-100k-star.html","/about-the-author/my-article-was-stolen-and-made-into-video-and-it-became-popular.html","/about-the-author/my-college-life.html","/about-the-author/","/about-the-author/writing-technology-blog-six-years.html","/about-the-author/zhishixingqiu-two-years.html","/interview-preparation/interview-experience.html","/interview-preparation/self-test-of-common-interview-questions.html","/interview-preparation/teach-you-how-to-prepare-for-the-interview-hand-in-hand.html","/zhuanlan/back-end-interview-high-frequency-system-design-and-scenario-questions.html","/zhuanlan/handwritten-rpc-framework.html","/zhuanlan/java-mian-shi-zhi-bei.html","/zhuanlan/","/zhuanlan/source-code-reading.html","/books/cs-basics.html","/books/database.html","/books/distributed-system.html","/books/java.html","/books/","/books/search-engine.html","/books/software-quality.html","/database/basis.html","/database/character-set.html","/database/nosql.html","/database/elasticsearch/elasticsearch-questions-01.html","/database/mongodb/mongodb-questions-01.html","/database/mongodb/mongodb-questions-02.html","/database/mysql/a-thousand-lines-of-mysql-study-notes.html","/database/mysql/how-sql-executed-in-mysql.html","/database/mysql/index-invalidation-caused-by-implicit-conversion.html","/database/mysql/innodb-implementation-of-mvcc.html","/database/mysql/mysql-auto-increment-primary-key-continuous.html","/database/mysql/mysql-high-performance-optimization-specification-recommendations.html","/database/mysql/mysql-index.html","/database/mysql/mysql-logs.html","/database/mysql/mysql-query-cache.html","/database/mysql/mysql-query-execution-plan.html","/database/mysql/mysql-questions-01.html","/database/mysql/some-thoughts-on-database-storage-time.html","/database/mysql/transaction-isolation-level.html","/database/redis/3-commonly-used-cache-read-and-write-strategies.html","/database/redis/cache-basics.html","/database/redis/redis-basis.html","/database/redis/redis-cluster.html","/database/redis/redis-common-blocking-problems-summary.html","/database/redis/redis-data-structures-01.html","/database/redis/redis-data-structures-02.html","/database/redis/redis-delayed-task.html","/database/redis/redis-memory-fragmentation.html","/database/redis/redis-persistence.html","/database/redis/redis-questions-01.html","/database/redis/redis-questions-02.html","/database/redis/redis-skiplist.html","/database/sql/sql-questions-01.html","/database/sql/sql-questions-02.html","/database/sql/sql-questions-03.html","/database/sql/sql-questions-04.html","/database/sql/sql-questions-05.html","/database/sql/sql-syntax-summary.html","/distributed-system/api-gateway.html","/distributed-system/distributed-configuration-center.html","/distributed-system/distributed-id-design.html","/distributed-system/distributed-id.html","/distributed-system/distributed-lock-implementations.html","/distributed-system/distributed-lock.html","/distributed-system/distributed-transaction.html","/distributed-system/spring-cloud-gateway-questions.html","/distributed-system/protocol/cap-and-base-theorem.html","/distributed-system/protocol/gossip-protocl.html","/distributed-system/protocol/paxos-algorithm.html","/distributed-system/protocol/raft-algorithm.html","/distributed-system/rpc/dubbo.html","/distributed-system/rpc/http_rpc.html","/distributed-system/rpc/rpc-intro.html","/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.html","/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.html","/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.html","/high-availability/fallback-and-circuit-breaker.html","/high-availability/high-availability-system-design.html","/high-availability/limit-request.html","/high-availability/performance-test.html","/high-availability/redundancy.html","/high-availability/timeout-and-retry.html","/high-performance/cdn.html","/high-performance/data-cold-hot-separation.html","/high-performance/deep-pagination-optimization.html","/high-performance/load-balancing.html","/high-performance/read-and-write-separation-and-library-subtable.html","/high-performance/sql-optimization.html","/high-performance/message-queue/disruptor-questions.html","/high-performance/message-queue/kafka-questions-01.html","/high-performance/message-queue/message-queue.html","/high-performance/message-queue/rabbitmq-questions.html","/high-performance/message-queue/rocketmq-questions.html","/interview-preparation/key-points-of-interview.html","/interview-preparation/project-experience-guide.html","/interview-preparation/resume-guide.html","/javaguide/contribution-guideline.html","/javaguide/faq.html","/javaguide/history.html","/javaguide/intro.html","/javaguide/use-suggestion.html","/linux/bash.html","/linux/basis.html","/linux/daemon.html","/linux/rpm.html","/linux/nginx.html","/linux/slurm/basis.html","/neural-network/basis.html","/neural-network/paper-related.html","/node/package-manager.html","/open-source-project/big-data.html","/open-source-project/machine-learning.html","/open-source-project/practical-project.html","/open-source-project/","/open-source-project/system-design.html","/open-source-project/tool-library.html","/open-source-project/tools.html","/open-source-project/tutorial.html","/projects/general-projects.html","/system-design/design-pattern.html","/system-design/schedule-task.html","/system-design/web-real-time-message-push.html","/system-design/basis/software-engineering.html","/system-design/designMode/reactorDesign.html","/system-design/security/advantages-and-disadvantages-of-jwt.html","/system-design/security/basis-of-authority-certification.html","/system-design/security/data-desensitization.html","/system-design/security/design-of-authority-system.html","/system-design/security/encryption-algorithms.html","/system-design/security/jwt-intro.html","/system-design/security/sentive-words-filter.html","/system-design/security/sso-intro.html","/system-design/system-design-questions.html","/vcs/git.html","/web/webrtc.html","/web/css/box-model.html","/web/javascript/javascript-basis.html","/web/javascript/javascript-extension.html","/cs-basics/algorithms/10-classical-sorting-algorithms.html","/cs-basics/algorithms/Practice.html","/cs-basics/algorithms/classical-algorithm-problems-recommendations.html","/cs-basics/algorithms/common-data-structures-leetcode-recommendations.html","/cs-basics/algorithms/linkedlist-algorithm-problems.html","/cs-basics/algorithms/string-algorithm-problems.html","/cs-basics/algorithms/the-sword-refers-to-offer.html","/cs-basics/data-structure/bloom-filter.html","/cs-basics/data-structure/graph.html","/cs-basics/data-structure/heap.html","/cs-basics/data-structure/linear-data-structure.html","/cs-basics/data-structure/red-black-tree.html","/cs-basics/data-structure/tree.html","/cs-basics/network/application-layer-protocol.html","/cs-basics/network/arp.html","/cs-basics/network/computer-network-xiexiren-summary.html","/cs-basics/network/dns.html","/cs-basics/network/http-status-codes.html","/cs-basics/network/http-vs-https.html","/cs-basics/network/http1.0-vs-http1.1.html","/cs-basics/network/nat.html","/cs-basics/network/network-attack-means.html","/cs-basics/network/osi-and-tcp-ip-model.html","/cs-basics/network/other-network-questions.html","/cs-basics/network/other-network-questions2.html","/cs-basics/network/tcp-basis.html","/cs-basics/network/tcp-connection-and-disconnection.html","/cs-basics/network/tcp-reliability-guarantee.html","/cs-basics/network/the-whole-process-of-accessing-web-pages.html","/cs-basics/operating-system/linux-intro.html","/cs-basics/operating-system/operating-system-basic-questions-01.html","/cs-basics/operating-system/operating-system-basic-questions-02.html","/cs-basics/operating-system/shell-intro.html","/high-quality-technical-articles/advanced-programmer/20-bad-habits-of-bad-programmers.html","/high-quality-technical-articles/advanced-programmer/meituan-three-year-summary-lesson-10.html","/high-quality-technical-articles/advanced-programmer/programmer-quickly-learn-new-technology.html","/high-quality-technical-articles/advanced-programmer/seven-tips-for-becoming-an-advanced-programmer.html","/high-quality-technical-articles/advanced-programmer/ten-years-of-dachang-growth-road.html","/high-quality-technical-articles/advanced-programmer/the-growth-strategy-of-the-technological-giant.html","/high-quality-technical-articles/advanced-programmer/thinking-about-technology-and-business-after-five-years-of-work.html","/high-quality-technical-articles/interview/how-to-examine-the-technical-ability-of-programmers-in-the-first-test-of-technology.html","/high-quality-technical-articles/interview/my-personal-experience-in-2021.html","/high-quality-technical-articles/interview/screen-candidates-for-packaging.html","/high-quality-technical-articles/interview/some-secrets-about-alibaba-interview.html","/high-quality-technical-articles/interview/summary-of-spring-recruitment.html","/high-quality-technical-articles/interview/technical-preliminary-preparation.html","/high-quality-technical-articles/interview/the-experience-and-thinking-of-an-interview-experienced-by-an-older-programmer.html","/high-quality-technical-articles/interview/the-experience-of-get-offer-from-over-20-big-companies.html","/high-quality-technical-articles/personal-experience/8-years-programmer-work-summary.html","/high-quality-technical-articles/personal-experience/four-year-work-in-tencent-summary.html","/high-quality-technical-articles/personal-experience/huawei-od-275-days.html","/high-quality-technical-articles/personal-experience/two-years-of-back-end-develop--experience-in-didi-and-toutiao.html","/high-quality-technical-articles/programmer/efficient-book-publishing-and-practice-guide.html","/high-quality-technical-articles/programmer/how-do-programmers-publish-a-technical-book.html","/high-quality-technical-articles/work/32-tips-improving-career.html","/high-quality-technical-articles/work/employee-performance.html","/high-quality-technical-articles/work/get-into-work-mode-quickly-when-you-join-a-company.html","/java/basis/bigdecimal.html","/java/basis/generics-and-wildcards.html","/java/basis/java-basic-questions-01.html","/java/basis/java-basic-questions-02.html","/java/basis/java-basic-questions-03.html","/java/basis/proxy.html","/java/basis/reflection.html","/java/basis/serialization.html","/java/basis/spi.html","/java/basis/syntactic-sugar.html","/java/basis/unsafe.html","/java/basis/why-there-only-value-passing-in-java.html","/java/collection/arrayblockingqueue-source-code.html","/java/collection/arraylist-source-code.html","/java/collection/concurrent-hash-map-source-code.html","/java/collection/copyonwritearraylist-source-code.html","/java/collection/delayqueue-source-code.html","/java/collection/hashmap-source-code.html","/java/collection/java-collection-precautions-for-use.html","/java/collection/java-collection-questions-01.html","/java/collection/java-collection-questions-02.html","/java/collection/linkedhashmap-source-code.html","/java/collection/linkedlist-source-code.html","/java/collection/priorityqueue-source-code.html","/java/concurrent/aqs.html","/java/concurrent/atomic-classes.html","/java/concurrent/completablefuture-intro.html","/java/concurrent/java-concurrent-collections.html","/java/concurrent/java-concurrent-questions-01.html","/java/concurrent/java-concurrent-questions-02.html","/java/concurrent/java-concurrent-questions-03.html","/java/concurrent/java-thread-point.html","/java/concurrent/java-thread-pool-best-practices.html","/java/concurrent/java-thread-pool-summary.html","/java/concurrent/jmm.html","/java/concurrent/optimistic-lock-and-pessimistic-lock.html","/java/concurrent/reentrantlock.html","/java/concurrent/threadlocal.html","/java/concurrent/virtual-thread.html","/java/io/io-basis.html","/java/io/io-design-patterns.html","/java/io/io-model.html","/java/io/nio-basis.html","/java/jvm/class-file-structure.html","/java/jvm/class-loading-process.html","/java/jvm/classloader.html","/java/jvm/jdk-monitoring-and-troubleshooting-tools.html","/java/jvm/jvm-garbage-collection.html","/java/jvm/jvm-in-action.html","/java/jvm/jvm-intro.html","/java/jvm/jvm-parameters-intro.html","/java/jvm/memory-area.html","/java/new-features/java10.html","/java/new-features/java11.html","/java/new-features/java12-13.html","/java/new-features/java14-15.html","/java/new-features/java16.html","/java/new-features/java17.html","/java/new-features/java18.html","/java/new-features/java19.html","/java/new-features/java20.html","/java/new-features/java21.html","/java/new-features/java8-common-new-features.html","/java/new-features/java9.html","/java/network/tcp.html","/java/network/udp.html","/java/servlet/basis.html","/neural-network/transformer/basis.html","/neural-network/transformer/encoder.html","/node/markdown/markdownit.html","/system-design/basis/RESTfulAPI.html","/system-design/basis/naming.html","/system-design/basis/refactoring.html","/system-design/basis/unit-test.html","/system-design/framework/netty.html","/system-design/framework/mybatis/mybatis-interview.html","/system-design/framework/spring/ioc-and-aop.html","/system-design/framework/spring/spring-boot-auto-assembly-principles.html","/system-design/framework/spring/spring-common-annotations.html","/system-design/framework/spring/spring-design-patterns-summary.html","/system-design/framework/spring/spring-knowledge-and-questions-summary.html","/system-design/framework/spring/spring-transaction.html","/system-design/framework/spring/springboot-knowledge-and-questions-summary.html","/system-design/framework/spring/springboot-source-code.html","/tools/docker/docker-in-action.html","/tools/docker/docker-intro.html","/tools/genkins/practice.html","/tools/git/git-intro.html","/tools/git/github-tips.html","/tools/gradle/gradle-core-concepts.html","/tools/maven/maven-best-practices.html","/tools/maven/maven-core-concepts.html","/tools/genkins/basis.html","/cs-basics/algorithms/model/graph.html","/cs-basics/algorithms/model/math.html","/cs-basics/network/authentication/credential.html","/cs-basics/network/authentication/federated-identity.html","/cs-basics/network/authentication/mobile-device-authentication.html","/system-design/framework/vue/Single-File-Components.html","/system-design/framework/vue/slot.html","/system-design/framework/vue/storage.html","/system-design/framework/vue/typescript.html","/knowledge/further-math/curve.html","/home.html","/AloT/basis.html","/c__/array.html","/c__/function.html","/c__/headFile.html","/c__/stream.html","/high-quality-technical-articles/","/knowledge/","/linux/usergroup.html","/net/basis.html","/projects/WebAPI.html","/projects/","/python/basis.html","/system-design/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","/AloT/IoT/MQTT.html","/cs-basics/algorithms/lanqiao.html","/java/basis/java-keyword-summary.html","/java/basis/syntax.html","/java/new-features/java8-tutorial-translate.html","/net/csharp/delegate.html","/net/csharp/task.html","/software-project/project-management/intro.html","/software-project/project-management/project-estimate.html","/software-project/project-management/project-process-and-cost-management.html","/cs-basics/algorithms/acwing/acwing.html","/cs-basics/algorithms/model/dp.html","/cs-basics/algorithms/model/greedy.html"],si=Ce(Gm);Gl(si);const iu=e=>{const l=ve(),t=ke(),n=fl();return y(()=>{var o;const a=e??((o=t.value.blog)==null?void 0:o.key)??"";if(!a)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!si.value[a])throw new Error(`useBlogCategory: key ${a} is invalid`);const i=si.value[a][n.value],s={path:i.path,map:{}};for(const c in i.map){const u=i.map[c];s.map[c]={path:u.path,items:[]};for(const d of u.indexes){const{path:h,meta:g}=St(au[d]);s.map[c].items.push({path:h,info:g})}l.value.path===u.path&&(s.currentItems=s.map[c].items)}return s})},Qm={article:{"/":{path:"/article/",indexes:[303,304,0,1,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,305,306,307,308,25,26,27,63,64,65,66,67,68,69,70,81,82,83,84,85,86,87,88,89,90,91,92,309,10,98,99,100,11,12,101,102,103,104,105,310,106,107,108,110,109,311,312,112,113,114,115,116,117,118,119,120,121,122,313,123,314,315,316,124,125,137,126,138,139,13,14,15,16,17,317,143,144,145,146,318,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,71,72,73,74,75,76,77,93,94,95,96,97,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,319,205,206,207,208,209,320,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,264,265,252,253,254,255,256,257,258,259,260,261,262,321,263,266,302,111,322,323,267,268,269,324,325,326,270,271,272,127,273,128,274,129,130,131,132,133,134,135,136,284,285,292,286,287,288,289,290,291,140,141,142,327,328,293,329,294,295,296,297,78,79,80,275,276,277,278,279,280,281,282,283,298,299,300,301]}},star:{"/":{path:"/star/",indexes:[15,9,6,17]}},timeline:{"/":{path:"/timeline/",indexes:[303,304,0,1,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,305,306,307,308,25,26,27,63,64,65,66,67,68,69,70,81,82,83,84,85,86,87,88,89,90,91,92,309,10,98,99,100,11,12,101,102,103,104,105,310,106,107,108,110,109,311,312,112,113,114,115,116,117,118,119,120,121,122,313,123,314,315,316,124,125,137,126,138,139,13,14,15,16,17,317,143,144,145,146,318,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,71,72,73,74,75,76,77,93,94,95,96,97,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,319,205,206,207,208,209,320,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,264,265,252,253,254,255,256,257,258,259,260,261,262,321,263,266,302,111,322,323,267,268,269,324,325,326,270,271,272,127,273,128,274,129,130,131,132,133,134,135,136,284,285,292,286,287,288,289,290,291,140,141,142,327,328,293,329,294,295,296,297,78,79,80,275,276,277,278,279,280,281,282,283,298,299,300,301]}}},ri=Ce(Qm);Gl(ri);const ga=e=>{const l=ke(),t=fl();return y(()=>{var s;const n=e??((s=l.value.blog)==null?void 0:s.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!ri.value[n])throw new Error(`useBlogType: key ${e} is invalid`);const a=ri.value[n][t.value],i={path:a.path,items:[]};for(const o of a.indexes){const{path:c,meta:u}=St(au[o]);i.items.push({path:c,info:u})}return i})},su=()=>r(ce,{name:"lock"},()=>r("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));su.displayName="LockIcon";var $m=[];const ru=Symbol.for("categoryMap"),wn=()=>{const e=_e(ru);if(!e)throw new Error("useCategoryMap() is called without provider.");return e},Km=()=>{const e=iu("category");ol(ru,e)},En=()=>{const e=Ql(),l=se();return y(()=>({...e.value.blog,...l.value.blog}))},ou=Symbol.for("tagMap"),xn=()=>{const e=_e(ou);if(!e)throw new Error("useTagMap() is called without provider.");return e},Um=()=>{const e=iu("tag");ol(ou,e)},Wm=e=>{const l=se();return y(()=>{const{[Me.author]:t}=e.value;return t?tn(t):t===!1?[]:tn(l.value.author,!1)})},Zm=e=>{const l=wn();return y(()=>uc(e.value[Me.category]).map(t=>({name:t,path:l.value.map[t].path})))},Ym=e=>{const l=xn();return y(()=>pc(e.value[Me.tag]).map(t=>({name:t,path:l.value.map[t].path})))},Xm=e=>y(()=>{const{[Me.date]:l}=e.value;return Oi(l)}),e2=e=>{const l=At(e,"info"),t=En(),n=Wm(l),a=Zm(l),i=Ym(l),s=Xm(l),o=xc(),c=y(()=>({author:n.value,category:a.value,date:s.value,localizedDate:l.value[Me.localizedDate]||"",tag:i.value,isOriginal:l.value[Me.isOriginal]||!1,readingTime:l.value[Me.readingTime]||null,readingTimeLocale:l.value[Me.readingTime]&&o.value?Ec(l.value[Me.readingTime],o.value):null,pageview:e.path})),u=y(()=>t.value.articleInfo);return{info:c,items:u}},cu=Symbol(""),Ln=()=>{const e=_e(cu);if(!e)throw new Error("useArticles() is called without provider.");return e},l2=()=>{const e=ga("article");ol(cu,e)},uu=Symbol(""),Gi=()=>{const e=_e(uu);if(!e)throw new Error("useStars() is called without provider.");return e},t2=()=>{const e=ga("star");ol(uu,e)},pu=Symbol(""),Qi=()=>{const e=_e(pu);if(!e)throw new Error("useTimelines() is called without provider.");return e},n2=()=>{const e=ga("timeline"),l=y(()=>{const t=[];return e.value.items.forEach(({info:n,path:a})=>{const i=Oi(n[Me.date]);if(i){const s=i.getFullYear(),o=i.getMonth()+1,c=i.getDate();(!t[0]||t[0].year!==s)&&t.unshift({year:s,items:[]}),t[0].items.push({date:`${o}/${c}`,info:n,path:a})}}),{...e.value,config:t.reverse()}});ol(pu,l)},a2=()=>{l2(),Km(),t2(),Um(),n2()};var i2=F({name:"SocialMedia",setup(){const e=En(),l=ot(),t=y(()=>{const n=e.value.medias;return n?kn(n).map(([a,i])=>({name:a,icon:Hm[a],url:i})):[]});return()=>t.value.length?r("div",{class:"vp-social-medias"},t.value.map(({name:n,icon:a,url:i})=>r("a",{class:"vp-social-media",href:i,rel:"noopener noreferrer",target:"_blank","aria-label":n,...l.value?{}:{"data-balloon-pos":"up"},innerHTML:a}))):null}}),$i=F({name:"BloggerInfo",setup(){const e=En(),l=vn(),t=se(),n=Ln(),a=wn(),i=xn(),s=Qi(),o=ct(),c=y(()=>{var g;return e.value.name||((g=tn(t.value.author)[0])==null?void 0:g.name)||l.value.title}),u=y(()=>e.value.avatar||t.value.logo),d=y(()=>t.value.blogLocales),h=y(()=>e.value.intro);return()=>{const{article:g,category:v,tag:f,timeline:E}=d.value,w=[[n.value.path,n.value.items.length,g],[a.value.path,xl(a.value.map).length,v],[i.value.path,xl(i.value.map).length,f],[s.value.path,s.value.items.length,E]];return r("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[r("div",{class:"vp-blogger",...h.value?{style:{cursor:"pointer"},"aria-label":d.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>o(h.value)}:{}},[u.value?r("img",{class:["vp-blogger-avatar",{round:e.value.roundAvatar}],src:Ee(u.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,c.value?r("div",{class:"vp-blogger-name",property:"name"},c.value):null,e.value.description?r("div",{class:"vp-blogger-description",innerHTML:e.value.description}):null,h.value?r("meta",{property:"url",content:Ee(h.value)}):null]),r("div",{class:"vp-blog-counts"},w.map(([b,L,_])=>r(Ae,{class:"vp-blog-count",to:b},()=>[r("div",{class:"count"},L),r("div",_)]))),r(i2)])}}});const Ki=()=>r(ce,{name:"category"},()=>r("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Ki.displayName="CategoryIcon";const Ui=()=>r(ce,{name:"tag"},()=>r("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Ui.displayName="TagIcon";const Wi=()=>r(ce,{name:"timeline"},()=>r("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Wi.displayName="TimelineIcon";const du=()=>r(ce,{name:"slides"},()=>r("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));du.displayName="SlideIcon";const hu=()=>r(ce,{name:"sticky"},()=>[r("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);hu.displayName="StickyIcon";const va=()=>r(ce,{name:"article"},()=>r("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));va.displayName="ArticleIcon";const gu=()=>r(ce,{name:"book"},()=>r("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));gu.displayName="BookIcon";const vu=()=>r(ce,{name:"link"},()=>r("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));vu.displayName="LinkIcon";const ku=()=>r(ce,{name:"project"},()=>r("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));ku.displayName="ProjectIcon";const mu=()=>r(ce,{name:"friend"},()=>r("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));mu.displayName="FriendIcon";const oi=()=>r(ce,{name:"slide-down"},()=>r("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));oi.displayName="SlideDownIcon";const fu=()=>r("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});fu.displayName="EmptyIcon";var s2=F({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(e,{slots:l}){const t=At(e,"info"),{info:n,items:a}=e2(e);return()=>{var g,v,f;const{[Ne.title]:i,[Me.type]:s,[Me.isEncrypted]:o=!1,[Me.cover]:c,[Me.excerpt]:u,[Me.sticky]:d}=t.value,h=n.value;return r("div",{class:"vp-article-wrapper"},r("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((g=l.cover)==null?void 0:g.call(l,{cover:c}))||(c?[r("img",{class:"vp-article-cover",src:Ee(c),alt:"",loading:"lazy"}),r("meta",{property:"image",content:Ee(c)})]:[]),d?r(hu):null,r(Ae,{to:e.path},()=>{var E;return((E=l.title)==null?void 0:E.call(l,{title:i,isEncrypted:o,type:s}))||r("header",{class:"vp-article-title"},[o?r(su):null,s===Pc.slide?r(du):null,r("span",{property:"headline"},i)])}),((v=l.excerpt)==null?void 0:v.call(l,{excerpt:u}))||(u?r("div",{class:"vp-article-excerpt",innerHTML:u}):null),r("hr",{class:"vp-article-hr"}),((f=l.info)==null?void 0:f.call(l,{info:h}))||r(Yc,{info:h,...a.value?{items:a.value}:{}})]))}}}),r2=F({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(e,{emit:l}){let t;const n=se(),a=Y(""),i=y(()=>n.value.paginationLocales),s=y(()=>Math.ceil(e.total/e.perPage)),o=y(()=>!!s.value&&s.value!==1),c=y(()=>s.value<7?!1:e.current>4),u=y(()=>s.value<7?!1:e.current<s.value-3),d=y(()=>{const{current:v}=e;let f=1,E=s.value;const w=[];s.value>=7&&(v<=4&&v<s.value-3?(f=1,E=5):v>4&&v>=s.value-3?(E=s.value,f=s.value-4):s.value>7&&(f=v-2,E=v+2));for(let b=f;b<=E;b++)w.push(b);return w}),h=v=>l("updateCurrentPage",v),g=v=>{const f=parseInt(v,10);f<=s.value&&f>0?h(f):t.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${i.value.errorText.replace(/\$page/gu,s.value.toString())}`)};return we(()=>{t=new ov}),()=>r("div",{class:"vp-pagination"},o.value?r("nav",{class:"vp-pagination-list"},[r("div",{class:"vp-pagination-number "},[e.current>1?r("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>h(e.current-1)},i.value.prev):null,c.value?[r("div",{role:"navigation",onClick:()=>h(1)},1),r("div",{class:"ellipsis"},"...")]:null,d.value.map(v=>r("div",{key:v,class:{active:e.current===v},role:"navigation",onClick:()=>h(v)},v)),u.value?[r("div",{class:"ellipsis"},"..."),r("div",{role:"navigation",onClick:()=>h(s.value)},s.value)]:null,e.current<s.value?r("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>h(e.current+1)},i.value.next):null]),r("div",{class:"vp-pagination-nav"},[r("label",{for:"navigation-text"},`${i.value.navigate}: `),r("input",{id:"navigation-text",value:a.value,onInput:({target:v})=>{a.value=v.value},onKeydown:v=>{v.key==="Enter"&&(v.preventDefault(),g(a.value))}}),r("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:i.value.action,onClick:()=>g(a.value)},i.value.action)])]):[])}}),Zi=F({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(e){const l=Al(),t=jl(),n=En(),a=Y(1),i=y(()=>n.value.articlePerPage||10),s=y(()=>e.items.slice((a.value-1)*i.value,a.value*i.value)),o=async c=>{a.value=c;const u={...l.query};!(u.page===c.toString()||c===1&&!u.page)&&(c===1?delete u.page:u.page=c.toString(),await t.push({path:l.path,query:u}))};return we(()=>{const{page:c}=l.query;o(c?Number(c):1),pe(a,()=>{const u=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,u)},100)})}),()=>r("div",{id:"article-list",class:"vp-article-list",role:"feed"},s.value.length?[...s.value.map(({info:c,path:u},d)=>r(ue,{appear:!0,delay:d*.04},()=>r(s2,{key:u,info:c,path:u}))),r(r2,{current:a.value,perPage:i.value,total:e.items.length,onUpdateCurrentPage:o})]:r(fu))}}),bu=F({name:"CategoryList",setup(){const e=ve(),l=wn();return()=>r("ul",{class:"vp-category-list"},kn(l.value.map).sort(([,t],[,n])=>n.items.length-t.items.length).map(([t,{path:n,items:a}])=>r("li",{class:["vp-category",`vp-category${ha(t,9)}`,{active:n===e.value.path}]},r(Ae,{to:n},()=>[t,r("span",{class:"count"},a.length)]))))}}),_u=F({name:"TagList",setup(){const e=ke(),l=xn(),t=n=>{var a;return n===((a=e.value.blog)==null?void 0:a.name)};return()=>r("ul",{class:"tag-list-wrapper"},kn(l.value.map).sort(([,n],[,a])=>a.items.length-n.items.length).map(([n,{path:a,items:i}])=>r("li",{class:["tag",`tag${ha(n,9)}`,{active:t(n)}]},r(Ae,{to:a},()=>[n,r("span",{class:"tag-num"},i.length)]))))}}),o2=F({name:"TimelineList",setup(){const e=se(),l=Qi(),t=ct(),n=y(()=>e.value.blogLocales.timeline);return()=>r("div",{class:"timeline-list-wrapper"},[r("div",{class:"timeline-list-title",onClick:()=>t(l.value.path)},[r(Wi),r("span",{class:"num"},l.value.items.length),n.value]),r("hr"),r("div",{class:"timeline-content"},r("ul",{class:"timeline-list"},l.value.config.map(({year:a,items:i},s)=>r(ue,{appear:!0,delay:.08*(s+1)},()=>r("li",[r("h3",{class:"timeline-year"},a),r("ul",{class:"timeline-year-wrapper"},i.map(({date:o,info:c,path:u})=>r("li",{class:"timeline-item"},[r("span",{class:"timeline-date"},o),r(Ae,{class:"timeline-title",to:u},()=>c[Ne.title])])))])))))])}});const c2={article:va,category:Ki,tag:Ui,timeline:Wi};var yu=F({name:"InfoList",setup(){const e=se(),l=Ln(),t=wn(),n=y(()=>xl(t.value.map).length),a=Gi(),i=xn(),s=y(()=>xl(i.value.map).length),o=ct(),c=Y("article"),u=y(()=>e.value.blogLocales);return()=>r("div",{class:"vp-blog-infos"},[r("div",{class:"vp-blog-type-switcher"},kn(c2).map(([d,h])=>r("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{c.value=d}},r("div",{class:["icon-wrapper",{active:c.value===d}],"aria-label":u.value[d],"data-balloon-pos":"up"},r(h))))),r(ue,()=>c.value==="article"?r("div",{class:"vp-star-article-wrapper"},[r("div",{class:"title",onClick:()=>o(l.value.path)},[r(va),r("span",{class:"num"},l.value.items.length),u.value.article]),r("hr"),a.value.items.length?r("ul",{class:"vp-star-articles"},a.value.items.map(({info:d,path:h},g)=>r(ue,{appear:!0,delay:.08*(g+1)},()=>r("li",{class:"vp-star-article"},r(Ae,{to:h},()=>d[Ne.title]))))):r("div",{class:"vp-star-article-empty"},u.value.empty.replace("$text",u.value.star))]):c.value==="category"?r("div",{class:"vp-category-wrapper"},[n.value?[r("div",{class:"title",onClick:()=>o(t.value.path)},[r(Ki),r("span",{class:"num"},n.value),u.value.category]),r("hr"),r(ue,{delay:.04},()=>r(bu))]:r("div",{class:"vp-category-empty"},u.value.empty.replace("$text",u.value.category))]):c.value==="tag"?r("div",{class:"vp-tag-wrapper"},[s.value?[r("div",{class:"title",onClick:()=>o(i.value.path)},[r(Ui),r("span",{class:"num"},s.value),u.value.tag]),r("hr"),r(ue,{delay:.04},()=>r(_u))]:r("div",{class:"vp-tag-empty"},u.value.empty.replace("$text",u.value.tag))]):r(ue,()=>r(o2)))])}}),ka=F({name:"BlogWrapper",slots:Object,setup(e,{slots:l}){const{isMobile:t}=_n();return()=>[r(Hi),r(zi,{noSidebar:!0,noToc:!0},{default:()=>l.default(),navScreenBottom:()=>r($i),...t.value?{sidebar:()=>r(yu)}:{}})]}});const wu=()=>r("aside",{class:"vp-blog-info-wrapper"},[r(ue,()=>r($i)),r(ue,{delay:.04},()=>r(yu))]);wu.displayName="InfoPanel";var ma=wu,u2=F({name:"BlogPage",setup(){const e=ve(),l=ke(),t=wn(),n=xn();return()=>{const{key:a="",name:i=""}=l.value.blog||{},s=i?a==="category"?t.value.map[i].items:a==="tag"?n.value.map[i].items:[]:[];return r(ka,()=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[r(ue,()=>a==="category"?r(bu):a==="tag"?r(_u):null),i?r(ue,{appear:!0,delay:.24},()=>r(Zi,{key:e.value.path,items:s})):null]),r(ue,{delay:.16},()=>r(ma,{key:"blog"}))])))}}});const p2="//theme-hope-assets.vuejs.press/hero/default.jpg";var d2=F({name:"BlogHero",slots:Object,setup(e,{slots:l}){const t=ke(),n=vn(),a=Ce(),i=y(()=>t.value.heroFullScreen??!1),s=y(()=>{const{heroText:c,heroImage:u,heroImageDark:d,heroAlt:h,heroImageStyle:g,tagline:v}=t.value;return{text:c??n.value.title??"Hello",tagline:v??"",image:u?Ee(u):null,imageDark:d?Ee(d):null,alt:h||c||"",style:g,isFullScreen:i.value}}),o=y(()=>{const{bgImage:c,bgImageDark:u,bgImageStyle:d}=t.value;return{image:ye(c)?Ee(c):c===!1?null:p2,imageDark:ye(u)?Ee(u):null,bgStyle:d,isFullScreen:i.value}});return()=>{var c,u;return t.value.hero===!1?null:r("div",{ref:a,class:["vp-blog-hero",{fullscreen:i.value,"no-bg":!o.value.image}]},[((c=l.heroBg)==null?void 0:c.call(l,o.value))||[o.value.image?r("div",{class:["vp-blog-mask",{light:o.value.imageDark}],style:[{background:`url(${o.value.image}) center/cover no-repeat`},o.value.bgStyle]}):null,o.value.imageDark?r("div",{class:"vp-blog-mask dark",style:[{background:`url(${o.value.imageDark}) center/cover no-repeat`},o.value.bgStyle]}):null],((u=l.heroInfo)==null?void 0:u.call(l,s.value))||[r(ue,{appear:!0,type:"group",delay:.04},()=>[s.value.image?r("img",{key:"light",class:["vp-blog-hero-image",{light:s.value.imageDark}],style:s.value.style,src:s.value.image,alt:s.value.alt}):null,s.value.imageDark?r("img",{key:"dark",class:"vp-blog-hero-image dark",style:s.value.style,src:s.value.imageDark,alt:s.value.alt}):null]),r(ue,{appear:!0,delay:.08},()=>s.value.text?r("h1",{class:"vp-blog-hero-title"},s.value.text):null),r(ue,{appear:!0,delay:.12},()=>s.value.tagline?r("p",{class:"vp-blog-hero-description",innerHTML:s.value.tagline}):null)],s.value.isFullScreen?r("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:a.value.clientHeight,behavior:"smooth"})}},[r(oi),r(oi)]):null])}}});const h2=["link","article","book","project","friend"];var g2=F({name:"ProjectPanel",components:{ArticleIcon:va,BookIcon:gu,FriendIcon:mu,LinkIcon:vu,ProjectIcon:ku},props:{items:{type:Array,required:!0}},setup(e){const l=ot(),t=ct(),n=(a="",i="icon")=>h2.includes(a)?r(tl(`${a}-icon`)):kl(a)?r("img",{class:"vp-project-image",src:a,alt:i}):mn(a)?r("img",{class:"vp-project-image",src:Ee(a),alt:i}):r(Fe,{icon:a});return()=>r("div",{class:"vp-project-panel"},e.items.map(({icon:a,link:i,name:s,desc:o},c)=>r("div",{class:["vp-project-card",{[`project${c%9}`]:!l.value}],onClick:()=>t(i)},[n(a,s),r("div",{class:"vp-project-name"},s),r("div",{class:"vp-project-desc"},o)])))}}),v2=F({name:"BlogHome",setup(){const e=Ln(),l=ke(),t=y(()=>l.value.projects??[]);return()=>r("div",{class:"vp-page vp-blog"},[r(d2),r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[t.value.length?r(ue,{appear:!0,delay:.16},()=>r(g2,{items:t.value})):null,r(ue,{appear:!0,delay:.24},()=>r(Zi,{items:e.value.items}))]),r(ue,{appear:!0,delay:.16},()=>r(ma,{key:"blog"}))]),r(ue,{appear:!0,delay:.28},()=>r(Ni))])}});const Eu=()=>r(ka,()=>r(v2));Eu.displayName="BlogHomeLayout";var k2=Eu,m2=F({name:"ArticleType",setup(){const e=ve(),l=fl(),t=se(),n=Ln(),a=Gi(),i=y(()=>{const s=t.value.blogLocales;return[{text:s.all,path:n.value.path},{text:s.star,path:a.value.path},...$m.map(({key:o,path:c})=>({text:s[o],path:c.replace(/^\//,l.value)}))]});return()=>r("ul",{class:"vp-article-type-wrapper"},i.value.map(s=>r("li",{class:["vp-article-type",{active:s.path===e.value.path}]},r(Ae,{to:s.path},()=>s.text))))}}),f2=F({name:"BlogPage",setup(){const e=ga(),l=ke(),t=ve(),n=Ln(),a=Gi(),i=y(()=>{const{key:s="",type:o}=l.value.blog||{};return s==="star"?a.value.items:o==="type"&&s?e.value.items:n.value.items});return()=>r(ka,()=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[r(ue,()=>r(m2)),r(ue,{appear:!0,delay:.24},()=>r(Zi,{key:t.value.path,items:i.value}))]),r(ue,{delay:.16},()=>r(ma,{key:"blog"}))])))}}),b2=F({name:"TimelineItems",setup(){const e=En(),l=se(),t=Qi(),n=y(()=>e.value.timeline||l.value.blogLocales.timelineTitle),a=y(()=>t.value.config.map(({year:i})=>({title:i.toString(),level:2,slug:i.toString(),children:[]})));return()=>r("div",{class:"timeline-wrapper"},r("ul",{class:"timeline-content"},[r(ue,()=>r("li",{class:"motto"},n.value)),r(Xc,{items:a.value}),t.value.config.map(({year:i,items:s},o)=>r(ue,{appear:!0,delay:.08*(o+1),type:"group"},()=>[r("h3",{key:"title",id:i,class:"timeline-year-title"},r("span",i)),r("li",{key:"content",class:"timeline-year-list"},[r("ul",{class:"timeline-year-wrapper"},s.map(({date:c,info:u,path:d})=>r("li",{class:"timeline-item"},[r("span",{class:"timeline-date"},c),r(Ae,{class:"timeline-title",to:d},()=>u[Ne.title])])))])]))]))}});const xu=()=>r(ka,()=>r("div",{class:"vp-page vp-blog"},r("div",{class:"blog-page-wrapper"},[r("main",{id:"main-content",class:"vp-blog-main"},[r(ue,{appear:!0,delay:.24},()=>r(b2))]),r(ue,{delay:.16},()=>r(ma,{key:"blog"}))])));xu.displayName="Timeline";var _2=xu;_v(e=>{const l=e.t,t=e.I!==!1,n=e.i;return t?{title:l,content:n?()=>[r(Fe,{icon:n}),l]:null,order:e.O,index:e.I}:null});const y2=We({enhance:({app:e,router:l})=>{const{scrollBehavior:t}=l.options;l.options.scrollBehavior=async(...n)=>(await eu().wait(),t(...n)),Uk(e),e.component("HopeIcon",Fe),e.component("BloggerInfo",$i)},setup:()=>{Wk(),Xk(),a2()},layouts:{Layout:Vm,NotFound:Nm,BlogCategory:u2,BlogHome:k2,BlogType:f2,Timeline:_2}}),zn=[Tg,hv,bv,Lv,Sv,qv,Ov,Vv,Yv,tk,sk,_k,Jk,y2],w2=JSON.parse(`{"base":"/learning/","lang":"zh-CN","title":"Mua'dib Guide ","description":"「Java学习指北 + Java面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，复习 Java 知识点，首选 Mua'dib Guide ！  ","head":[["meta",{"name":"referrer","content":"no-referrer"}],["meta",{"name":"robots","content":"all"}],["meta",{"name":"author","content":"Guide"}],["meta",{"http-equiv":"Cache-Control","content":"no-cache, no-store, must-revalidate"}],["meta",{"http-equiv":"Pragma","content":"no-cache"}],["meta",{"http-equiv":"Expires","content":"0"}],["meta",{"name":"keywords","content":"Java基础, 多线程, JVM, 虚拟机, 数据库, MySQL, Spring, Redis, MyBatis, 系统设计, 分布式, RPC, 高可用, 高并发"}],["meta",{"name":"description","content":"「Java学习 + 面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 Mua'dib Guide ！"}],["meta",{"name":"apple-mobile-web-app-capable","content":"yes"}],["script",{},"var _hmt = _hmt || [];\\n        (function() {\\n          var hm = document.createElement(\\"script\\");\\n          hm.src = \\"https://hm.baidu.com/hm.js?5dd2e8c97962d57b7b8fea1737c01743\\";\\n          var s = document.getElementsByTagName(\\"script\\")[0]; \\n          s.parentNode.insertBefore(hm, s);\\n        })();"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://javaguide.cn/learning/atom.xml","title":"Mua'dib Guide  Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://javaguide.cn/learning/feed.json","title":"Mua'dib Guide  JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://javaguide.cn/learning/rss.xml","title":"Mua'dib Guide  RSS Feed"}],["link",{"rel":"icon","href":"/learning/favicon.ico"}]],"locales":{}}`);var Ct=Ce(w2),E2=Uh,x2=()=>{const e=_g({history:E2(oa("/learning/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(l,t,n)=>n||(l.hash?{el:l.hash}:{top:0})});return e.beforeResolve(async(l,t)=>{if(l.path!==t.path||t===yl){const n=St(l.path);if(n.path!==l.path)return n.path;const a=await n.loader();l.meta={...n.meta,_pageChunk:a}}else l.path===t.path&&(l.meta=t.meta)}),e},L2=e=>{e.component("ClientOnly",pa),e.component("Content",zo),e.component("RouteLink",Ae)},j2=(e,l,t)=>{const n=y(()=>l.currentRoute.value.path),a=Ei((w,b)=>({get(){return w(),l.currentRoute.value.meta._pageChunk},set(L){l.currentRoute.value.meta._pageChunk=L,b()}})),i=y(()=>Wl.resolveLayouts(t)),s=y(()=>Wl.resolveRouteLocale(Ct.value.locales,n.value)),o=y(()=>Wl.resolveSiteLocaleData(Ct.value,s.value)),c=y(()=>a.value.comp),u=y(()=>a.value.data),d=y(()=>u.value.frontmatter),h=y(()=>Wl.resolvePageHeadTitle(u.value,o.value)),g=y(()=>Wl.resolvePageHead(h.value,d.value,o.value)),v=y(()=>Wl.resolvePageLang(u.value,o.value)),f=y(()=>Wl.resolvePageLayout(u.value,i.value)),E={layouts:i,pageData:u,pageComponent:c,pageFrontmatter:d,pageHead:g,pageHeadTitle:h,pageLang:v,pageLayout:f,redirects:Za,routeLocale:s,routePath:n,routes:en,siteData:Ct,siteLocaleData:o};return e.provide(Ci,E),Object.defineProperties(e.config.globalProperties,{$frontmatter:{get:()=>d.value},$head:{get:()=>g.value},$headTitle:{get:()=>h.value},$lang:{get:()=>v.value},$page:{get:()=>u.value},$routeLocale:{get:()=>s.value},$site:{get:()=>Ct.value},$siteLocale:{get:()=>o.value},$withBase:{get:()=>Ee}}),E},A2=()=>{const e=Eg(),l=Fo();let t=[];const n=()=>{e.value.forEach(s=>{const o=S2(s);o&&t.push(o)})},a=()=>{const s=[];return e.value.forEach(o=>{const c=P2(o);c&&s.push(c)}),s},i=()=>{document.documentElement.lang=l.value;const s=a();t.forEach((o,c)=>{const u=s.findIndex(d=>o.isEqualNode(d));u===-1?(o.remove(),delete t[c]):s.splice(u,1)}),s.forEach(o=>document.head.appendChild(o)),t=[...t.filter(o=>!!o),...s]};ol(jg,i),we(()=>{n(),pe(e,i,{immediate:!1})})},S2=([e,l,t=""])=>{const n=Object.entries(l).map(([o,c])=>ye(c)?`[${o}=${JSON.stringify(c)}]`:c===!0?`[${o}]`:"").join(""),a=`head > ${e}${n}`;return Array.from(document.querySelectorAll(a)).find(o=>o.innerText===t)||null},P2=([e,l,t])=>{if(!ye(e))return null;const n=document.createElement(e);return gn(l)&&Object.entries(l).forEach(([a,i])=>{ye(i)?n.setAttribute(a,i):i===!0&&n.setAttribute(a,"")}),ye(t)&&n.appendChild(document.createTextNode(t)),n},T2=ah,I2=async()=>{var t;const e=T2({name:"Vuepress",setup(){var i;A2();for(const s of zn)(i=s.setup)==null||i.call(s);const n=zn.flatMap(({rootComponents:s=[]})=>s.map(o=>r(o))),a=xg();return()=>[r(a.value),n]}}),l=x2();L2(e),j2(e,l,zn);for(const n of zn)await((t=n.enhance)==null?void 0:t.call(n,{app:e,router:l,siteData:Ct}));return e.use(l),{app:e,router:l}};I2().then(({app:e,router:l})=>{l.isReady().then(()=>{e.mount("#app")})});export{go as a,vo as b,D2 as c,I2 as createVueApp,Pe as d,R2 as e,q2 as o,tl as r,Ep as w};
