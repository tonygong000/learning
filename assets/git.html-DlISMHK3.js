import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,e as l}from"./app-Dl67cLp_.js";const a={},p=l('<h2 id="git基本操作" tabindex="-1"><a class="header-anchor" href="#git基本操作"><span>git基本操作</span></a></h2><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge"><span>merge</span></a></h3><p>在 Git 中，“合并”指的是将两个或多个不同的分支或线性提交历史中的更改集成到一起。</p><p>这通常发生在开发团队合作开发项目时，其中不同的开发者可能会在同一个代码库中编辑不同的文件或同一个文件的不同部分。</p><h3 id="pull" tabindex="-1"><a class="header-anchor" href="#pull"><span>pull</span></a></h3><p>在 Git 中，“拉取”（Pull）是指从远程仓库获取最新的更改并将其合并到本地仓库中。</p><p>当你和其他开发者协作工作时，他们可能会将他们的更改推送到共享的远程仓库中。</p><p>git pull命令实际上执行了两个操作：首先，它从远程仓库中获取最新的更改（使用 git fetch），然后将这些更改合并到当前分支中（使用 git merge）。</p><h3 id="fetch" tabindex="-1"><a class="header-anchor" href="#fetch"><span>fetch</span></a></h3><p>git fetch 是从远程仓库中获取最新的分支和提交，但它并不会自动将这些更改合并到你当前的分支中。</p><p>相比之下，git pull 命令执行 git fetch 的功能，并自动将获取的更改合并到当前分支。</p><h2 id="head" tabindex="-1"><a class="header-anchor" href="#head"><span>head</span></a></h2><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><p>&quot;HEAD&quot;是一个指针，它指向当前所在的本地分支的最新提交（commit）。</p><p>换句话说，&quot;HEAD&quot;表示你当前所处的工作目录所对应的提交。当你在工作目录中进行操作时，例如提交新的更改或创建新的分支，Git会更新&quot;HEAD&quot;指向最新的提交</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><ul><li>当你在一个分支上工作时，&quot;HEAD&quot;指向这个分支，表示你当前所处的工作上下文。</li><li>当你创建一个新的提交时，&quot;HEAD&quot;会随之移动到这个新的提交上。</li><li>当你切换分支或者检出一个特定的提交时，&quot;HEAD&quot;会随之更新为指向对应的分支或提交。</li></ul><h2 id="git分支操作" tabindex="-1"><a class="header-anchor" href="#git分支操作"><span>git分支操作</span></a></h2><h3 id="重置当前提交记录" tabindex="-1"><a class="header-anchor" href="#重置当前提交记录"><span>重置当前提交记录</span></a></h3><ul><li><p>重置类型</p><ul><li>软重置（soft reset）：在软重置模式下，HEAD 指针会移动到目标提交上，但工作目录和暂存区中的文件不会受到影响，也不会改变提交历史。这意味着你可以重新提交当前状态的文件，或者修改后重新提交。</li><li>混合重置（mixed reset）：在混合重置模式下，HEAD 指针会移动到目标提交上，工作目录中的文件会恢复到目标提交的状态，但是暂存区中的文件不会受到影响。这意味着你需要重新添加文件到暂存区，并重新提交这些文件。</li><li>硬重置（hard reset）：在硬重置模式下，HEAD 指针会移动到目标提交上，工作目录中的文件和暂存区中的文件都会恢复到目标提交的状态，提交历史也会被改变。这意味着你会丢失所有未提交的更改，因此需要谨慎使用。</li></ul></li><li><p>使用本地仓库记录重置</p><ul><li>硬重置会将当前分支的指针（通常是 HEAD 指针）直接移动到目标提交上，这意味着 Git 将会忽略（丢弃）当前分支之后的所有提交。</li><li>硬重置会同时更新工作目录和暂存区，使它们与目标提交的状态一致。因此，任何未提交的更改都会被删除。</li></ul></li><li><p>使用远程仓库记录重置</p><ul><li>不会导致当前分支之后的记录丢失</li><li>当你将本地重置后的提交推送到远程仓库时，Git 会尝试将本地仓库的提交历史与远程仓库的提交历史合并。由于远程仓库的提交历史不受本地重置操作的影响，因此推送操作可能会被拒绝</li></ul></li></ul><h3 id="解决远程和本地仓库不一致" tabindex="-1"><a class="header-anchor" href="#解决远程和本地仓库不一致"><span>解决远程和本地仓库不一致</span></a></h3><ul><li><p>使用 --force 选项进行强制推送：</p><p>如果你确定要覆盖远程仓库的提交历史，可以使用 git push --force 命令来强制推送。这会覆盖远程仓库的提交历史，并将本地仓库的提交历史应用到远程仓库中。但是请注意，强制推送可能会导致其他开发者的工作丢失，因此应该谨慎使用。</p></li><li><p>使用 --force-with-lease 选项进行安全的强制推送：</p><p>git push --force-with-lease 命令是一种相对安全的强制推送方式。它会先检查远程仓库的提交历史是否与本地仓库的提交历史匹配，只有在匹配的情况下才会执行推送操作。这可以避免在多人协作的情况下意外覆盖其他开发者的提交。</p></li><li><p>使用 git revert 撤销错误的提交：</p><p>如果推送操作被拒绝是因为你想要撤销错误的提交，可以使用 git revert 命令来创建新的提交以撤销之前的提交。这样可以保留提交历史，并且不会影响其他开发者的工作。</p></li><li><p>使用 git pull 对远程仓库的head记录进行抓取合并：</p><p>有时候需要自己手动进行合并</p><p>webstorm合并窗口：左边是本地分支内容，中间是合并后的内容，右边是远程分支内容，可以根据窗口之间的提示进行合并</p></li></ul><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><h3 id="未提交先推送" tabindex="-1"><a class="header-anchor" href="#未提交先推送"><span>未提交先推送</span></a></h3><p>Git会拒绝推送并显示一个错误消息，提示你先提交你的修改。这是因为Git要求在推送之前先将本地的修改提交到本地仓库。</p>',25),n=[p];function r(h,c){return t(),i("div",null,n)}const d=e(a,[["render",r],["__file","git.html.vue"]]),g=JSON.parse(`{"path":"/vcs/git.html","title":"git版本管理","lang":"zh-CN","frontmatter":{"title":"git版本管理","category":"vcs","description":"git基本操作 merge 在 Git 中，“合并”指的是将两个或多个不同的分支或线性提交历史中的更改集成到一起。 这通常发生在开发团队合作开发项目时，其中不同的开发者可能会在同一个代码库中编辑不同的文件或同一个文件的不同部分。 pull 在 Git 中，“拉取”（Pull）是指从远程仓库获取最新的更改并将其合并到本地仓库中。 当你和其他开发者协作工作...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/learning/vcs/git.html"}],["meta",{"property":"og:site_name","content":"Mua'dib Guide "}],["meta",{"property":"og:title","content":"git版本管理"}],["meta",{"property":"og:description","content":"git基本操作 merge 在 Git 中，“合并”指的是将两个或多个不同的分支或线性提交历史中的更改集成到一起。 这通常发生在开发团队合作开发项目时，其中不同的开发者可能会在同一个代码库中编辑不同的文件或同一个文件的不同部分。 pull 在 Git 中，“拉取”（Pull）是指从远程仓库获取最新的更改并将其合并到本地仓库中。 当你和其他开发者协作工作..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-05T10:43:53.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-05-05T10:43:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"git版本管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-05T10:43:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"git基本操作","slug":"git基本操作","link":"#git基本操作","children":[{"level":3,"title":"merge","slug":"merge","link":"#merge","children":[]},{"level":3,"title":"pull","slug":"pull","link":"#pull","children":[]},{"level":3,"title":"fetch","slug":"fetch","link":"#fetch","children":[]}]},{"level":2,"title":"head","slug":"head","link":"#head","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]},{"level":2,"title":"git分支操作","slug":"git分支操作","link":"#git分支操作","children":[{"level":3,"title":"重置当前提交记录","slug":"重置当前提交记录","link":"#重置当前提交记录","children":[]},{"level":3,"title":"解决远程和本地仓库不一致","slug":"解决远程和本地仓库不一致","link":"#解决远程和本地仓库不一致","children":[]}]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[{"level":3,"title":"未提交先推送","slug":"未提交先推送","link":"#未提交先推送","children":[]}]}],"git":{"createdTime":1714888306000,"updatedTime":1714905833000,"contributors":[{"name":"tonygong","email":"280880907@163.com","commits":10}]},"readingTime":{"minutes":4.67,"words":1400},"filePathRelative":"vcs/git.md","localizedDate":"2024年5月5日","excerpt":"<h2>git基本操作</h2>\\n<h3>merge</h3>\\n<p>在 Git 中，“合并”指的是将两个或多个不同的分支或线性提交历史中的更改集成到一起。</p>\\n<p>这通常发生在开发团队合作开发项目时，其中不同的开发者可能会在同一个代码库中编辑不同的文件或同一个文件的不同部分。</p>\\n<h3>pull</h3>\\n<p>在 Git 中，“拉取”（Pull）是指从远程仓库获取最新的更改并将其合并到本地仓库中。</p>\\n<p>当你和其他开发者协作工作时，他们可能会将他们的更改推送到共享的远程仓库中。</p>\\n<p>git pull命令实际上执行了两个操作：首先，它从远程仓库中获取最新的更改（使用 git fetch），然后将这些更改合并到当前分支中（使用 git merge）。</p>","autoDesc":true}`);export{d as comp,g as data};
