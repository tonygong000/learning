import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as i,e as n}from"./app-Dl67cLp_.js";const a="/learning/assets/webrtc-complete-diagram-HKlSbC7s.png",s="/learning/assets/webrtc-stun-DqDU42q8.png",r="/learning/assets/webrtc-turn-Db84y75V.png",l={},o=n('<h2 id="协议" tabindex="-1"><a class="header-anchor" href="#协议"><span>协议</span></a></h2><h3 id="ice-interactive-connectivity-establishment" tabindex="-1"><a class="header-anchor" href="#ice-interactive-connectivity-establishment"><span>ICE（Interactive Connectivity Establishment）</span></a></h3><figure><img src="'+a+'" alt="ICE信息交换整个过程" tabindex="0"><figcaption>ICE信息交换整个过程</figcaption></figure><p>一个框架用以建立点对点连接。</p><ul><li>帮助应用通过防火墙的阻隔</li><li>为应用设定一个公网IP</li><li>通过一个服务器转发数据如果router禁止应用间的直接连接</li></ul><h3 id="stun-session-traversal-utilities-for-nat" tabindex="-1"><a class="header-anchor" href="#stun-session-traversal-utilities-for-nat"><span>STUN（Session Traversal Utilities for NAT）</span></a></h3><p>一个协议来发现公网IP地址，并且确定在路由器中router的会妨碍连接的限制。该协议使用的是NAT协议</p><p>客户端会给STUN服务器发送请求，获得自己在公网的IP，并且获知自己是否能在router中通行<br><img src="'+s+'" alt=""></p><h3 id="turn-traversal-using-relays-around-nat" tabindex="-1"><a class="header-anchor" href="#turn-traversal-using-relays-around-nat"><span>TURN（Traversal Using Relays around NAT）</span></a></h3><p>一些router由于运行了路由限制————“Symmetric NAT”，只能和之前建立过的连接的应用连接</p><blockquote><ul><li>常规NAT：<br> 通过将内部地址和端口映射到唯一的外部地址和端口上来实现连接。<br> 对于相同的内部地址和端口，常规NAT总是将其映射到相同的外部地址和端口上。</li><li>对称型NAT：<br> 为每个传出的数据包分配不同的外部端口，并且只有在外部通信开始后才会将端口映射到内部地址上。<br> 对于相同的内部地址和端口，对称型NAT可能会将其映射到不同的外部地址和端口上，这取决于与不同目标的通信。</li></ul></blockquote><p>因此TURN通过打开一个TURN服务器的连接，并且将信息通过该服务器转发</p><p>由于会有额外的开销，能不用就不用<br><img src="'+r+'" alt=""></p><h3 id="nat-network-address-translation" tabindex="-1"><a class="header-anchor" href="#nat-network-address-translation"><span>NAT（Network Address Translation）</span></a></h3><p>运行在router的协议，将本网络中主机的IP转换为运行在某个特定端口的公网IP</p><h3 id="sdp-session-description-protocol" tabindex="-1"><a class="header-anchor" href="#sdp-session-description-protocol"><span>SDP（Session Description Protocol）</span></a></h3><p>文本协议</p><p>用来传输建立媒体传输所需要的参数：媒体类型、媒体流的传输地址和端口、媒体流的特性和限制等</p><h4 id="结构" tabindex="-1"><a class="header-anchor" href="#结构"><span>结构</span></a></h4><ul><li>SDP包含多行UTF-8编码格式的行</li><li>每行开始是一个类型字符，之后是“=”，之后是结构化的描述或者值</li><li>每行以单词开头的行，叫做“letter-lines”</li></ul><h2 id="signaling" tabindex="-1"><a class="header-anchor" href="#signaling"><span>Signaling</span></a></h2><p>交换的信息 <strong>Offer and Answer</strong> ，这包含了SDP内容</p><p>可以通过各种渠道：email、postcard、carrier pigeon</p><h3 id="session-description" tabindex="-1"><a class="header-anchor" href="#session-description"><span>session description</span></a></h3><p>每个应用都保存两个description————localDescription、remoteDescription</p><h3 id="ice-candidates" tabindex="-1"><a class="header-anchor" href="#ice-candidates"><span>ICE candidates</span></a></h3><p>和signaling交换的是媒体信息，而ICE candidate交换的是网络连接；并且也详细说明了两个应用之间所能进行交流的方法（直接交流或者通过TURN交流）</p><p>一般的，每个应用会从好到坏选择每一个candidate。</p><p>candidates一般是UDP，但同时也允许TCP</p><h3 id="udp-candidate-type" tabindex="-1"><a class="header-anchor" href="#udp-candidate-type"><span>UDP candidate type</span></a></h3><ul><li>host<br> 一个host candidate代表它的IP地址就是真实直接的远程IP地址</li><li>prflx<br> 对等反射候选地址，指的是在ICE过程中由对等方发现并提供的地址。它通常是在双方都位于对称型NAT（Symmetric NAT）之间时出现的。<br> 在Trickle ICE阶段作为额外的candidate<br> 对称型NAT会为每个传出的数据包分配不同的外部端口，并且只有在外部通信开始后才会将端口映射到内部地址上。<br> 这导致了两个对等方在通信时会发现彼此的外部地址，并将其作为候选地址交换</li></ul>',31),c=[o];function d(p,h){return t(),i("div",null,c)}const m=e(l,[["render",d],["__file","webrtc.html.vue"]]),b=JSON.parse(`{"path":"/web/webrtc.html","title":"WebRtc","lang":"zh-CN","frontmatter":{"title":"WebRtc","category":"web","description":"协议 ICE（Interactive Connectivity Establishment） ICE信息交换整个过程ICE信息交换整个过程 一个框架用以建立点对点连接。 帮助应用通过防火墙的阻隔 为应用设定一个公网IP 通过一个服务器转发数据如果router禁止应用间的直接连接 STUN（Session Traversal Utilities for ...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/learning/web/webrtc.html"}],["meta",{"property":"og:site_name","content":"Mua'dib Guide "}],["meta",{"property":"og:title","content":"WebRtc"}],["meta",{"property":"og:description","content":"协议 ICE（Interactive Connectivity Establishment） ICE信息交换整个过程ICE信息交换整个过程 一个框架用以建立点对点连接。 帮助应用通过防火墙的阻隔 为应用设定一个公网IP 通过一个服务器转发数据如果router禁止应用间的直接连接 STUN（Session Traversal Utilities for ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-15T06:29:08.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-05-15T06:29:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WebRtc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-15T06:29:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"协议","slug":"协议","link":"#协议","children":[{"level":3,"title":"ICE（Interactive Connectivity Establishment）","slug":"ice-interactive-connectivity-establishment","link":"#ice-interactive-connectivity-establishment","children":[]},{"level":3,"title":"STUN（Session Traversal Utilities for NAT）","slug":"stun-session-traversal-utilities-for-nat","link":"#stun-session-traversal-utilities-for-nat","children":[]},{"level":3,"title":"TURN（Traversal Using Relays around NAT）","slug":"turn-traversal-using-relays-around-nat","link":"#turn-traversal-using-relays-around-nat","children":[]},{"level":3,"title":"NAT（Network Address Translation）","slug":"nat-network-address-translation","link":"#nat-network-address-translation","children":[]},{"level":3,"title":"SDP（Session Description Protocol）","slug":"sdp-session-description-protocol","link":"#sdp-session-description-protocol","children":[]}]},{"level":2,"title":"Signaling","slug":"signaling","link":"#signaling","children":[{"level":3,"title":"session description","slug":"session-description","link":"#session-description","children":[]},{"level":3,"title":"ICE candidates","slug":"ice-candidates","link":"#ice-candidates","children":[]},{"level":3,"title":"UDP candidate type","slug":"udp-candidate-type","link":"#udp-candidate-type","children":[]}]}],"git":{"createdTime":1715751316000,"updatedTime":1715754548000,"contributors":[{"name":"Tony Gong","email":"a280880907@163.com","commits":2}]},"readingTime":{"minutes":2.82,"words":846},"filePathRelative":"web/webrtc.md","localizedDate":"2024年5月15日","excerpt":"<h2>协议</h2>\\n<h3>ICE（Interactive Connectivity Establishment）</h3>\\n<figure><figcaption>ICE信息交换整个过程</figcaption></figure>\\n<p>一个框架用以建立点对点连接。</p>\\n<ul>\\n<li>帮助应用通过防火墙的阻隔</li>\\n<li>为应用设定一个公网IP</li>\\n<li>通过一个服务器转发数据如果router禁止应用间的直接连接</li>\\n</ul>\\n<h3>STUN（Session Traversal Utilities for NAT）</h3>\\n<p>一个协议来发现公网IP地址，并且确定在路由器中router的会妨碍连接的限制。该协议使用的是NAT协议</p>","autoDesc":true}`);export{m as comp,b as data};
