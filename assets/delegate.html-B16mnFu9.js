import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,e as l}from"./app-BlHhf7HR.js";const n={},i=l(`<h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><ol><li>定义使用delegate</li></ol><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>public delegate int MyDelegate(int x);
MyDelegate myDelegate=new MyDelegate(method1);
MyDelegate myDelegate=method1;
// method1是方法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>多播</li></ol><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>myDelegate+=method2;
//method2是方法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="匿名方法" tabindex="-1"><a class="header-anchor" href="#匿名方法"><span>匿名方法</span></a></h2><p>使用delegate来确立匿名方法</p><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>delegate (int x){
    return x*x;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lambda表达式" tabindex="-1"><a class="header-anchor" href="#lambda表达式"><span>lambda表达式</span></a></h2><div class="language-c# line-numbers-mode" data-ext="c#" data-title="c#"><pre class="language-c#"><code>x=&gt;x*x;
//可以初始化Func&lt;&gt;
Func&lt;int,int&gt; square=x=&gt;x*x;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="委托类型" tabindex="-1"><a class="header-anchor" href="#委托类型"><span>委托类型</span></a></h2><ol><li>Func委托<br> Func委托必须要有一个返回值，可以有多个参数</li><li>Action委托<br> Action委托没有返回值，可以有多个参数</li></ol><p>两个都可以用直接赋值方法来初始化，还可以进行多播。</p><p>主要用法和Delegate没什么区别，只是简化了Delegate类型的创建。</p>`,14),d=[i];function c(r,s){return a(),t("div",null,d)}const g=e(n,[["render",c],["__file","delegate.html.vue"]]),p=JSON.parse(`{"path":"/net/csharp/delegate.html","title":"委托","lang":"zh-CN","frontmatter":{"title":"委托","description":"基础知识 定义使用delegate 多播 匿名方法 使用delegate来确立匿名方法 lambda表达式 委托类型 Func委托 Func委托必须要有一个返回值，可以有多个参数 Action委托 Action委托没有返回值，可以有多个参数 两个都可以用直接赋值方法来初始化，还可以进行多播。 主要用法和Delegate没什么区别，只是简化了Delega...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/learning/net/csharp/delegate.html"}],["meta",{"property":"og:site_name","content":"Mua'dib Guide "}],["meta",{"property":"og:title","content":"委托"}],["meta",{"property":"og:description","content":"基础知识 定义使用delegate 多播 匿名方法 使用delegate来确立匿名方法 lambda表达式 委托类型 Func委托 Func委托必须要有一个返回值，可以有多个参数 Action委托 Action委托没有返回值，可以有多个参数 两个都可以用直接赋值方法来初始化，还可以进行多播。 主要用法和Delegate没什么区别，只是简化了Delega..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-02T15:48:11.000Z"}],["meta",{"property":"article:author","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-09-02T15:48:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"委托\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-02T15:48:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[]},{"level":2,"title":"匿名方法","slug":"匿名方法","link":"#匿名方法","children":[]},{"level":2,"title":"lambda表达式","slug":"lambda表达式","link":"#lambda表达式","children":[]},{"level":2,"title":"委托类型","slug":"委托类型","link":"#委托类型","children":[]}],"git":{"createdTime":1725292091000,"updatedTime":1725292091000,"contributors":[{"name":"tonygong","email":"280880907@163.com","commits":1}]},"readingTime":{"minutes":0.6,"words":179},"filePathRelative":"net/csharp/delegate.md","localizedDate":"2024年9月2日","excerpt":"<h2>基础知识</h2>\\n<ol>\\n<li>定义使用delegate</li>\\n</ol>\\n<div class=\\"language-c#\\" data-ext=\\"c#\\" data-title=\\"c#\\"><pre class=\\"language-c#\\"><code>public delegate int MyDelegate(int x);\\nMyDelegate myDelegate=new MyDelegate(method1);\\nMyDelegate myDelegate=method1;\\n// method1是方法\\n</code></pre></div><ol start=\\"2\\">\\n<li>多播</li>\\n</ol>","autoDesc":true}`);export{g as comp,p as data};
